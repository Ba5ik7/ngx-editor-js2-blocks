{"version":3,"file":"9189.js","mappings":";;;;;;;;;;;;;;AAA6C;AAE7C,MAAMC,UAAU,CAAC;AAEjB;AACA,SAASC,YAAYA,CAACC,KAAK,EAAE;EACzB;EACA;EACA;EACA;EACA,OAAOA,KAAK,IAAI,OAAOA,KAAK,CAACC,OAAO,KAAK,UAAU,IAAI,EAAED,KAAK,YAAYH,uDAAqB,CAAC;AACpG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA,MAAMO,SAAS,GAAG,CAAC;AACnB,MAAMC,SAAS,GAAG,CAAC;AACnB,MAAMC,GAAG,GAAG,CAAC;AACb,MAAMC,UAAU,GAAG,EAAE;AACrB,MAAMC,KAAK,GAAG,EAAE;AAChB,MAAMC,KAAK,GAAG,EAAE;AAChB,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,GAAG,GAAG,EAAE;AACd,MAAMC,KAAK,GAAG,EAAE;AAChB,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,MAAM,GAAG,EAAE;AACjB,MAAMC,KAAK,GAAG,EAAE;AAChB,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,GAAG,GAAG,EAAE;AACd,MAAMC,IAAI,GAAG,EAAE;AACf,MAAMC,UAAU,GAAG,EAAE;AACrB,MAAMC,QAAQ,GAAG,EAAE;AACnB,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,UAAU,GAAG,EAAE;AACrB,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,YAAY,GAAG,EAAE;AACvB,MAAMC,MAAM,GAAG,EAAE;AACjB,MAAMC,MAAM,GAAG,EAAE;AACjB,MAAMC,IAAI,GAAG,EAAE;AACf,MAAMC,GAAG,GAAG,EAAE;AACd,MAAMC,GAAG,GAAG,EAAE;AACd,MAAMC,KAAK,GAAG,EAAE;AAChB,MAAMC,IAAI,GAAG,EAAE;AACf,MAAMC,IAAI,GAAG,EAAE;AACf,MAAMC,GAAG,GAAG,EAAE;AACd,MAAMC,KAAK,GAAG,EAAE;AAChB,MAAMC,KAAK,GAAG,EAAE;AAChB,MAAMC,IAAI,GAAG,EAAE;AACf,MAAMC,YAAY,GAAG,EAAE,CAAC,CAAC;AACzB,MAAMC,SAAS,GAAG,EAAE,CAAC,CAAC;AACtB,MAAMC,aAAa,GAAG,EAAE;AACxB,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAM1C,CAAC,GAAG,EAAE;AACZ,MAAM2C,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,CAAC,GAAG,EAAE;AACZ,MAAMC,IAAI,GAAG,EAAE,CAAC,CAAC;AACjB,MAAMC,eAAe,GAAG,EAAE;AAC1B,MAAMC,gBAAgB,GAAG,EAAE;AAC3B,MAAMC,YAAY,GAAG,EAAE;AACvB,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,UAAU,GAAG,EAAE;AACrB,MAAMC,UAAU,GAAG,EAAE;AACrB,MAAMC,YAAY,GAAG,EAAE;AACvB,MAAMC,WAAW,GAAG,GAAG;AACvB,MAAMC,WAAW,GAAG,GAAG;AACvB,MAAMC,UAAU,GAAG,GAAG;AACtB,MAAMC,YAAY,GAAG,GAAG;AACxB,MAAMC,YAAY,GAAG,GAAG;AACxB,MAAMC,WAAW,GAAG,GAAG;AACvB,MAAMC,eAAe,GAAG,GAAG;AAC3B,MAAMC,WAAW,GAAG,GAAG;AACvB,MAAMC,YAAY,GAAG,GAAG;AACxB,MAAMC,aAAa,GAAG,GAAG;AACzB,MAAMC,aAAa,GAAG,GAAG;AACzB,MAAMC,EAAE,GAAG,GAAG;AACd,MAAMC,EAAE,GAAG,GAAG;AACd,MAAMC,EAAE,GAAG,GAAG;AACd,MAAMC,EAAE,GAAG,GAAG;AACd,MAAMC,EAAE,GAAG,GAAG;AACd,MAAMC,EAAE,GAAG,GAAG;AACd,MAAMC,EAAE,GAAG,GAAG;AACd,MAAMC,EAAE,GAAG,GAAG;AACd,MAAMC,EAAE,GAAG,GAAG;AACd,MAAMC,GAAG,GAAG,GAAG;AACf,MAAMC,GAAG,GAAG,GAAG;AACf,MAAMC,GAAG,GAAG,GAAG;AACf,MAAMC,QAAQ,GAAG,GAAG;AACpB,MAAMC,WAAW,GAAG,GAAG;AACvB,MAAMC,WAAW,GAAG,GAAG;AACvB,MAAMC,QAAQ,GAAG,GAAG;AACpB,MAAMC,IAAI,GAAG,GAAG,CAAC,CAAC;AAClB,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;AACzB,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;AACvB,MAAMC,OAAO,GAAG,GAAG;AACnB,MAAMC,cAAc,GAAG,GAAG;AAC1B,MAAMC,UAAU,GAAG,GAAG;AACtB,MAAMC,YAAY,GAAG,GAAG;AACxB,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;AACvB,MAAMC,MAAM,GAAG,GAAG,CAAC,CAAC;AACpB,MAAMC,KAAK,GAAG,GAAG;AACjB,MAAMC,IAAI,GAAG,GAAG,CAAC,CAAC;AAClB,MAAMC,MAAM,GAAG,GAAG;AAClB,MAAMC,KAAK,GAAG,GAAG;AACjB,MAAMC,UAAU,GAAG,GAAG;AACtB,MAAMC,KAAK,GAAG,GAAG;AACjB,MAAMC,mBAAmB,GAAG,GAAG;AAC/B,MAAMC,SAAS,GAAG,GAAG;AACrB,MAAMC,oBAAoB,GAAG,GAAG;AAChC,MAAMC,YAAY,GAAG,GAAG;AACxB,MAAMC,QAAQ,GAAG,GAAG;;;;;;;;;;;;;;;;;ACtHgB;AAC4B;AACZ;;AAEpD;AACA;AACA,IAAIkG,kBAAkB;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI;EACAA,kBAAkB,GAAG,OAAOC,IAAI,KAAK,WAAW,IAAIA,IAAI,CAACC,eAAe;AAC5E,CAAC,CACD,MAAM;EACFF,kBAAkB,GAAG,KAAK;AAC9B;AACA;AACA;AACA;AACA;AAHA,IAIMG,QAAQ;EAAd,MAAMA,QAAQ,CAAC;IACXC,WAAW,GAAGR,qDAAM,CAACC,sDAAW,CAAC;IACjC;IACA;IACA;IACA;IACAQ,SAAS,GAAG,IAAI,CAACD,WAAW,GACtBL,kEAAiB,CAAC,IAAI,CAACK,WAAW,CAAC,GACnC,OAAOE,QAAQ,KAAK,QAAQ,IAAI,CAAC,CAACA,QAAQ;IAChD;IACAC,IAAI,GAAG,IAAI,CAACF,SAAS,IAAI,SAAS,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;IAC5D;IACAC,OAAO,GAAG,IAAI,CAACN,SAAS,IAAI,iBAAiB,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;IACvE;IACA;IACAE,KAAK,GAAG,IAAI,CAACP,SAAS,IAClB,CAAC,EAAEQ,MAAM,CAACC,MAAM,IAAId,kBAAkB,CAAC,IACvC,OAAOe,GAAG,KAAK,WAAW,IAC1B,CAAC,IAAI,CAACR,IAAI,IACV,CAAC,IAAI,CAACI,OAAO;IACjB;IACA;IACA;IACAK,MAAM,GAAG,IAAI,CAACX,SAAS,IACnB,cAAc,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IACxC,CAAC,IAAI,CAACE,KAAK,IACX,CAAC,IAAI,CAACL,IAAI,IACV,CAAC,IAAI,CAACI,OAAO;IACjB;IACAM,GAAG,GAAG,IAAI,CAACZ,SAAS,IAAI,kBAAkB,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IAAI,EAAE,UAAU,IAAIG,MAAM,CAAC;IAC/F;IACA;IACA;IACA;IACA;IACAK,OAAO,GAAG,IAAI,CAACb,SAAS,IAAI,sBAAsB,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;IAC5E;IACA;IACAS,OAAO,GAAG,IAAI,CAACd,SAAS,IAAI,UAAU,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IAAI,CAAC,IAAI,CAACC,OAAO;IACjF;IACA;IACA;IACA;IACAS,MAAM,GAAG,IAAI,CAACf,SAAS,IAAI,SAAS,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IAAI,IAAI,CAACM,MAAM;IAC7EK,WAAWA,CAAA,EAAG,CAAE;IAChB,OAAOC,IAAI,YAAAC,iBAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAwFrB,QAAQ;IAAA;IAC3G,OAAOsB,KAAK,kBAD6E9B,gEAAE;MAAAgC,KAAA,EACYxB,QAAQ;MAAAyB,OAAA,EAARzB,QAAQ,CAAAmB,IAAA;MAAAO,UAAA,EAAc;IAAM;EACvI;EAAC,OA/CK1B,QAAQ;AAAA;AAgDd;EAAA,QAAA2B,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEoC;AAC2U;AACpU;AACa;AACS;AACS;AACA;AAC7B;AAC6B;AAClB;AAC2B;AACN;AACN;AACpB;AACa;AACI;AACd;AACN;AACR;AAExC,MAAM4C,uBAAuB,gBAAGP,0DAAsB,CAAC,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA,SAASQ,yBAAyBA,CAACC,QAAQ,EAAE;EACzC,OAAO,IAAIC,mBAAmB,CAACD,QAAQ,CAACE,GAAG,CAACjB,yDAAa,CAAC,EAAEe,QAAQ,CAACE,GAAG,CAAC/C,mDAAQ,CAAC,CAAC;AACvF;AACA;AACA;AACA;AACA,MAAM8C,mBAAmB,CAAC;EACtBE,cAAc;EACdC,mBAAmB,GAAG;IAAEC,GAAG,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EAC3CC,uBAAuB;EACvBC,UAAU,GAAG,KAAK;EAClBC,SAAS;EACThE,WAAWA,CAAC0D,cAAc,EAAEzE,QAAQ,EAAE;IAClC,IAAI,CAACyE,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACM,SAAS,GAAG/E,QAAQ;EAC7B;EACA;EACAgF,MAAMA,CAAA,EAAG,CAAE;EACX;EACAC,MAAMA,CAAA,EAAG;IACL,IAAI,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE;MACtB,MAAMC,IAAI,GAAG,IAAI,CAACJ,SAAS,CAACK,eAAe;MAC3C,IAAI,CAACP,uBAAuB,GAAG,IAAI,CAACJ,cAAc,CAACY,yBAAyB,CAAC,CAAC;MAC9E;MACA,IAAI,CAACX,mBAAmB,CAACE,IAAI,GAAGO,IAAI,CAACG,KAAK,CAACV,IAAI,IAAI,EAAE;MACrD,IAAI,CAACF,mBAAmB,CAACC,GAAG,GAAGQ,IAAI,CAACG,KAAK,CAACX,GAAG,IAAI,EAAE;MACnD;MACA;MACAQ,IAAI,CAACG,KAAK,CAACV,IAAI,GAAGvB,gEAAmB,CAAC,CAAC,IAAI,CAACwB,uBAAuB,CAACD,IAAI,CAAC;MACzEO,IAAI,CAACG,KAAK,CAACX,GAAG,GAAGtB,gEAAmB,CAAC,CAAC,IAAI,CAACwB,uBAAuB,CAACF,GAAG,CAAC;MACvEQ,IAAI,CAACI,SAAS,CAACC,GAAG,CAAC,wBAAwB,CAAC;MAC5C,IAAI,CAACV,UAAU,GAAG,IAAI;IAC1B;EACJ;EACA;EACAW,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACX,UAAU,EAAE;MACjB,MAAMY,IAAI,GAAG,IAAI,CAACX,SAAS,CAACK,eAAe;MAC3C,MAAMO,IAAI,GAAG,IAAI,CAACZ,SAAS,CAACY,IAAI;MAChC,MAAMC,SAAS,GAAGF,IAAI,CAACJ,KAAK;MAC5B,MAAMO,SAAS,GAAGF,IAAI,CAACL,KAAK;MAC5B,MAAMQ,0BAA0B,GAAGF,SAAS,CAACG,cAAc,IAAI,EAAE;MACjE,MAAMC,0BAA0B,GAAGH,SAAS,CAACE,cAAc,IAAI,EAAE;MACjE,IAAI,CAACjB,UAAU,GAAG,KAAK;MACvBc,SAAS,CAAChB,IAAI,GAAG,IAAI,CAACF,mBAAmB,CAACE,IAAI;MAC9CgB,SAAS,CAACjB,GAAG,GAAG,IAAI,CAACD,mBAAmB,CAACC,GAAG;MAC5Ce,IAAI,CAACH,SAAS,CAACU,MAAM,CAAC,wBAAwB,CAAC;MAC/C;MACA;MACA;MACA;MACA;MACA,IAAI7B,uBAAuB,EAAE;QACzBwB,SAAS,CAACG,cAAc,GAAGF,SAAS,CAACE,cAAc,GAAG,MAAM;MAChE;MACAxF,MAAM,CAAC2F,MAAM,CAAC,IAAI,CAACrB,uBAAuB,CAACD,IAAI,EAAE,IAAI,CAACC,uBAAuB,CAACF,GAAG,CAAC;MAClF,IAAIP,uBAAuB,EAAE;QACzBwB,SAAS,CAACG,cAAc,GAAGD,0BAA0B;QACrDD,SAAS,CAACE,cAAc,GAAGC,0BAA0B;MACzD;IACJ;EACJ;EACAd,aAAaA,CAAA,EAAG;IACZ;IACA;IACA;IACA,MAAMQ,IAAI,GAAG,IAAI,CAACX,SAAS,CAACK,eAAe;IAC3C,IAAIM,IAAI,CAACH,SAAS,CAACY,QAAQ,CAAC,wBAAwB,CAAC,IAAI,IAAI,CAACrB,UAAU,EAAE;MACtE,OAAO,KAAK;IAChB;IACA,MAAMsB,WAAW,GAAG,IAAI,CAACrB,SAAS,CAACK,eAAe;IAClD,MAAMiB,QAAQ,GAAG,IAAI,CAAC5B,cAAc,CAAC6B,eAAe,CAAC,CAAC;IACtD,OAAOF,WAAW,CAACG,YAAY,GAAGF,QAAQ,CAACG,MAAM,IAAIJ,WAAW,CAACK,WAAW,GAAGJ,QAAQ,CAACK,KAAK;EACjG;AACJ;;AAEA;AACA;AACA;AACA,SAASC,wCAAwCA,CAAA,EAAG;EAChD,OAAOC,KAAK,CAAC,4CAA4C,CAAC;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,yBAAyBA,CAACvC,QAAQ,EAAEwC,MAAM,EAAE;EACjD,OAAO,IAAIC,mBAAmB,CAACzC,QAAQ,CAACE,GAAG,CAAChB,4DAAgB,CAAC,EAAEc,QAAQ,CAACE,GAAG,CAAC9C,iDAAM,CAAC,EAAE4C,QAAQ,CAACE,GAAG,CAACjB,yDAAa,CAAC,EAAEuD,MAAM,CAAC;AAC7H;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,CAAC;EACtBC,iBAAiB;EACjBC,OAAO;EACPxC,cAAc;EACdyC,OAAO;EACPC,mBAAmB,GAAG,IAAI;EAC1BC,WAAW;EACXC,sBAAsB;EACtBtG,WAAWA,CAACiG,iBAAiB,EAAEC,OAAO,EAAExC,cAAc,EAAEyC,OAAO,EAAE;IAC7D,IAAI,CAACF,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACxC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACyC,OAAO,GAAGA,OAAO;EAC1B;EACA;EACAlC,MAAMA,CAACsC,UAAU,EAAE;IACf,IAAI,IAAI,CAACF,WAAW,KAAK,OAAO5F,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MACrE,MAAMmF,wCAAwC,CAAC,CAAC;IACpD;IACA,IAAI,CAACS,WAAW,GAAGE,UAAU;EACjC;EACA;EACArC,MAAMA,CAAA,EAAG;IACL,IAAI,IAAI,CAACkC,mBAAmB,EAAE;MAC1B;IACJ;IACA,MAAMI,MAAM,GAAG,IAAI,CAACP,iBAAiB,CAACQ,QAAQ,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC3D,sDAAM,CAAC4D,UAAU,IAAI;MACxE,OAAQ,CAACA,UAAU,IACf,CAAC,IAAI,CAACN,WAAW,CAACO,cAAc,CAACxB,QAAQ,CAACuB,UAAU,CAACE,aAAa,CAAC,CAAC,CAACC,aAAa,CAAC;IAC3F,CAAC,CAAC,CAAC;IACH,IAAI,IAAI,CAACX,OAAO,IAAI,IAAI,CAACA,OAAO,CAACY,SAAS,IAAI,IAAI,CAACZ,OAAO,CAACY,SAAS,GAAG,CAAC,EAAE;MACtE,IAAI,CAACT,sBAAsB,GAAG,IAAI,CAAC5C,cAAc,CAACY,yBAAyB,CAAC,CAAC,CAACV,GAAG;MACjF,IAAI,CAACwC,mBAAmB,GAAGI,MAAM,CAACQ,SAAS,CAAC,MAAM;QAC9C,MAAMC,cAAc,GAAG,IAAI,CAACvD,cAAc,CAACY,yBAAyB,CAAC,CAAC,CAACV,GAAG;QAC1E,IAAIsD,IAAI,CAACC,GAAG,CAACF,cAAc,GAAG,IAAI,CAACX,sBAAsB,CAAC,GAAG,IAAI,CAACH,OAAO,CAACY,SAAS,EAAE;UACjF,IAAI,CAACK,OAAO,CAAC,CAAC;QAClB,CAAC,MACI;UACD,IAAI,CAACf,WAAW,CAACgB,cAAc,CAAC,CAAC;QACrC;MACJ,CAAC,CAAC;IACN,CAAC,MACI;MACD,IAAI,CAACjB,mBAAmB,GAAGI,MAAM,CAACQ,SAAS,CAAC,IAAI,CAACI,OAAO,CAAC;IAC7D;EACJ;EACA;EACA1C,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAAC0B,mBAAmB,EAAE;MAC1B,IAAI,CAACA,mBAAmB,CAACkB,WAAW,CAAC,CAAC;MACtC,IAAI,CAAClB,mBAAmB,GAAG,IAAI;IACnC;EACJ;EACAmB,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC7C,OAAO,CAAC,CAAC;IACd,IAAI,CAAC2B,WAAW,GAAG,IAAI;EAC3B;EACA;EACAe,OAAO,GAAGA,CAAA,KAAM;IACZ,IAAI,CAAC1C,OAAO,CAAC,CAAC;IACd,IAAI,IAAI,CAAC2B,WAAW,CAACmB,WAAW,CAAC,CAAC,EAAE;MAChC,IAAI,CAACtB,OAAO,CAACuB,GAAG,CAAC,MAAM,IAAI,CAACpB,WAAW,CAACkB,MAAM,CAAC,CAAC,CAAC;IACrD;EACJ,CAAC;AACL;;AAEA;AACA,SAASG,wBAAwBA,CAAA,EAAG;EAChC,OAAO,IAAIC,kBAAkB,CAAC,CAAC;AACnC;AACA;AACA,MAAMA,kBAAkB,CAAC;EACrB;EACAzD,MAAMA,CAAA,EAAG,CAAE;EACX;EACAQ,OAAOA,CAAA,EAAG,CAAE;EACZ;EACAT,MAAMA,CAAA,EAAG,CAAE;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2D,4BAA4BA,CAACC,OAAO,EAAEC,gBAAgB,EAAE;EAC7D,OAAOA,gBAAgB,CAACC,IAAI,CAACC,eAAe,IAAI;IAC5C,MAAMC,YAAY,GAAGJ,OAAO,CAACK,MAAM,GAAGF,eAAe,CAACpE,GAAG;IACzD,MAAMuE,YAAY,GAAGN,OAAO,CAACjE,GAAG,GAAGoE,eAAe,CAACE,MAAM;IACzD,MAAME,WAAW,GAAGP,OAAO,CAACQ,KAAK,GAAGL,eAAe,CAACnE,IAAI;IACxD,MAAMyE,YAAY,GAAGT,OAAO,CAAChE,IAAI,GAAGmE,eAAe,CAACK,KAAK;IACzD,OAAOJ,YAAY,IAAIE,YAAY,IAAIC,WAAW,IAAIE,YAAY;EACtE,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,2BAA2BA,CAACV,OAAO,EAAEC,gBAAgB,EAAE;EAC5D,OAAOA,gBAAgB,CAACC,IAAI,CAACS,mBAAmB,IAAI;IAChD,MAAMC,YAAY,GAAGZ,OAAO,CAACjE,GAAG,GAAG4E,mBAAmB,CAAC5E,GAAG;IAC1D,MAAM8E,YAAY,GAAGb,OAAO,CAACK,MAAM,GAAGM,mBAAmB,CAACN,MAAM;IAChE,MAAMS,WAAW,GAAGd,OAAO,CAAChE,IAAI,GAAG2E,mBAAmB,CAAC3E,IAAI;IAC3D,MAAM+E,YAAY,GAAGf,OAAO,CAACQ,KAAK,GAAGG,mBAAmB,CAACH,KAAK;IAC9D,OAAOI,YAAY,IAAIC,YAAY,IAAIC,WAAW,IAAIC,YAAY;EACtE,CAAC,CAAC;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,8BAA8BA,CAACtF,QAAQ,EAAEwC,MAAM,EAAE;EACtD,OAAO,IAAI+C,wBAAwB,CAACvF,QAAQ,CAACE,GAAG,CAAChB,4DAAgB,CAAC,EAAEc,QAAQ,CAACE,GAAG,CAACjB,yDAAa,CAAC,EAAEe,QAAQ,CAACE,GAAG,CAAC9C,iDAAM,CAAC,EAAEoF,MAAM,CAAC;AAClI;AACA;AACA;AACA;AACA,MAAM+C,wBAAwB,CAAC;EAC3B7C,iBAAiB;EACjBvC,cAAc;EACdwC,OAAO;EACPC,OAAO;EACPC,mBAAmB,GAAG,IAAI;EAC1BC,WAAW;EACXrG,WAAWA,CAACiG,iBAAiB,EAAEvC,cAAc,EAAEwC,OAAO,EAAEC,OAAO,EAAE;IAC7D,IAAI,CAACF,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACvC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACwC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;EACA;EACAlC,MAAMA,CAACsC,UAAU,EAAE;IACf,IAAI,IAAI,CAACF,WAAW,KAAK,OAAO5F,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MACrE,MAAMmF,wCAAwC,CAAC,CAAC;IACpD;IACA,IAAI,CAACS,WAAW,GAAGE,UAAU;EACjC;EACA;EACArC,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC,IAAI,CAACkC,mBAAmB,EAAE;MAC3B,MAAM2C,QAAQ,GAAG,IAAI,CAAC5C,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC6C,cAAc,GAAG,CAAC;MAC/D,IAAI,CAAC5C,mBAAmB,GAAG,IAAI,CAACH,iBAAiB,CAACQ,QAAQ,CAACsC,QAAQ,CAAC,CAAC/B,SAAS,CAAC,MAAM;QACjF,IAAI,CAACX,WAAW,CAACgB,cAAc,CAAC,CAAC;QACjC;QACA,IAAI,IAAI,CAAClB,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC8C,SAAS,EAAE;UACxC,MAAMC,WAAW,GAAG,IAAI,CAAC7C,WAAW,CAACO,cAAc,CAACuC,qBAAqB,CAAC,CAAC;UAC3E,MAAM;YAAExD,KAAK;YAAEF;UAAO,CAAC,GAAG,IAAI,CAAC/B,cAAc,CAAC6B,eAAe,CAAC,CAAC;UAC/D;UACA;UACA,MAAM6D,WAAW,GAAG,CAAC;YAAEzD,KAAK;YAAEF,MAAM;YAAEyC,MAAM,EAAEzC,MAAM;YAAE4C,KAAK,EAAE1C,KAAK;YAAE/B,GAAG,EAAE,CAAC;YAAEC,IAAI,EAAE;UAAE,CAAC,CAAC;UACtF,IAAI+D,4BAA4B,CAACsB,WAAW,EAAEE,WAAW,CAAC,EAAE;YACxD,IAAI,CAAC1E,OAAO,CAAC,CAAC;YACd,IAAI,CAACwB,OAAO,CAACuB,GAAG,CAAC,MAAM,IAAI,CAACpB,WAAW,CAACkB,MAAM,CAAC,CAAC,CAAC;UACrD;QACJ;MACJ,CAAC,CAAC;IACN;EACJ;EACA;EACA7C,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAAC0B,mBAAmB,EAAE;MAC1B,IAAI,CAACA,mBAAmB,CAACkB,WAAW,CAAC,CAAC;MACtC,IAAI,CAAClB,mBAAmB,GAAG,IAAI;IACnC;EACJ;EACAmB,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC7C,OAAO,CAAC,CAAC;IACd,IAAI,CAAC2B,WAAW,GAAG,IAAI;EAC3B;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMgD,qBAAqB;EAA3B,MAAMA,qBAAqB,CAAC;IACxBC,SAAS,GAAG/K,qDAAM,CAACqC,mDAAQ,CAAC;IAC5BZ,WAAWA,CAAA,EAAG,CAAE;IAChB;IACAuJ,IAAI,GAAGA,CAAA,KAAM,IAAI5B,kBAAkB,CAAC,CAAC;IACrC;AACJ;AACA;AACA;IACI6B,KAAK,GAAIzD,MAAM,IAAKD,yBAAyB,CAAC,IAAI,CAACwD,SAAS,EAAEvD,MAAM,CAAC;IACrE;IACA0D,KAAK,GAAGA,CAAA,KAAMnG,yBAAyB,CAAC,IAAI,CAACgG,SAAS,CAAC;IACvD;AACJ;AACA;AACA;AACA;IACII,UAAU,GAAI3D,MAAM,IAAK8C,8BAA8B,CAAC,IAAI,CAACS,SAAS,EAAEvD,MAAM,CAAC;IAC/E,OAAO9F,IAAI,YAAA0J,8BAAAxJ,iBAAA;MAAA,YAAAA,iBAAA,IAAwFkJ,qBAAqB;IAAA;IACxH,OAAOjJ,KAAK,kBAD6E9B,gEAAE;MAAAgC,KAAA,EACY+I,qBAAqB;MAAA9I,OAAA,EAArB8I,qBAAqB,CAAApJ,IAAA;MAAAO,UAAA,EAAc;IAAM;EACpJ;EAAC,OApBK6I,qBAAqB;AAAA;AAqB3B;EAAA,QAAA5I,SAAA,oBAAAA,SAAA;AAAA;;AAKA;AACA,MAAMmJ,aAAa,CAAC;EAChB;EACAC,gBAAgB;EAChB;EACAC,cAAc,gBAAG,IAAInC,kBAAkB,CAAC,CAAC;EACzC;EACAoC,UAAU,GAAG,EAAE;EACf;EACAC,WAAW,GAAG,KAAK;EACnB;EACAC,aAAa,GAAG,2BAA2B;EAC3C;EACAC,iBAAiB;EACjB;EACAvE,KAAK;EACL;EACAF,MAAM;EACN;EACA0E,QAAQ;EACR;EACAC,SAAS;EACT;EACAC,QAAQ;EACR;EACAC,SAAS;EACT;AACJ;AACA;AACA;EACIC,SAAS;EACT;AACJ;AACA;AACA;AACA;EACIC,mBAAmB,GAAG,KAAK;EAC3BxK,WAAWA,CAAC+F,MAAM,EAAE;IAChB,IAAIA,MAAM,EAAE;MACR;MACA;MACA;MACA,MAAM0E,UAAU,GAAGC,MAAM,CAACC,IAAI,CAAC5E,MAAM,CAAC;MACtC,KAAK,MAAM6E,GAAG,IAAIH,UAAU,EAAE;QAC1B,IAAI1E,MAAM,CAAC6E,GAAG,CAAC,KAAKC,SAAS,EAAE;UAC3B;UACA;UACA;UACA;UACA;UACA;UACA,IAAI,CAACD,GAAG,CAAC,GAAG7E,MAAM,CAAC6E,GAAG,CAAC;QAC3B;MACJ;IACJ;EACJ;AACJ;;AAEA;AACA,MAAME,sBAAsB,CAAC;EACzBC,OAAO;EACPC,OAAO;EACPjB,UAAU;EACV;EACAkB,OAAO;EACP;EACAC,OAAO;EACP;EACAC,QAAQ;EACR;EACAC,QAAQ;EACRpL,WAAWA,CAACqL,MAAM,EAAEC,OAAO,EAC3B;EACAP,OAAO,EACP;EACAC,OAAO,EACP;EACAjB,UAAU,EAAE;IACR,IAAI,CAACgB,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACjB,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACkB,OAAO,GAAGI,MAAM,CAACJ,OAAO;IAC7B,IAAI,CAACC,OAAO,GAAGG,MAAM,CAACH,OAAO;IAC7B,IAAI,CAACC,QAAQ,GAAGG,OAAO,CAACH,QAAQ;IAChC,IAAI,CAACC,QAAQ,GAAGE,OAAO,CAACF,QAAQ;EACpC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,mBAAmB,CAAC;EACtBC,eAAe;EACfC,mBAAmB;EACnBC,gBAAgB;EAChBC,oBAAoB;AACxB;AACA;AACA,MAAMC,8BAA8B,CAAC;EACjCC,cAAc;EACdC,wBAAwB;EACxB9L,WAAWA,CACX;EACA6L,cAAc,EACd;EACAC,wBAAwB,EAAE;IACtB,IAAI,CAACD,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,wBAAwB,GAAGA,wBAAwB;EAC5D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,wBAAwBA,CAACC,QAAQ,EAAEhb,KAAK,EAAE;EAC/C,IAAIA,KAAK,KAAK,KAAK,IAAIA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,QAAQ,EAAE;IAC7D,MAAM6U,KAAK,CAAC,8BAA8BmG,QAAQ,KAAKhb,KAAK,KAAK,GAC7D,uCAAuC,CAAC;EAChD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASib,0BAA0BA,CAACD,QAAQ,EAAEhb,KAAK,EAAE;EACjD,IAAIA,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,KAAK,IAAIA,KAAK,KAAK,QAAQ,EAAE;IAC5D,MAAM6U,KAAK,CAAC,8BAA8BmG,QAAQ,KAAKhb,KAAK,KAAK,GAC7D,sCAAsC,CAAC;EAC/C;AACJ;;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKMkb,qBAAqB;EAA3B,MAAMA,qBAAqB,CAAC;IACxB;IACAC,iBAAiB,GAAG,EAAE;IACtBnI,SAAS,GAAGzF,qDAAM,CAACmC,mDAAQ,CAAC;IAC5B0L,WAAW;IACXpM,WAAWA,CAAA,EAAG,CAAE;IAChBqM,WAAWA,CAAA,EAAG;MACV,IAAI,CAAC9E,MAAM,CAAC,CAAC;IACjB;IACA;IACA9C,GAAGA,CAAC8B,UAAU,EAAE;MACZ;MACA,IAAI,CAACrB,MAAM,CAACqB,UAAU,CAAC;MACvB,IAAI,CAAC4F,iBAAiB,CAACG,IAAI,CAAC/F,UAAU,CAAC;IAC3C;IACA;IACArB,MAAMA,CAACqB,UAAU,EAAE;MACf,MAAMgG,KAAK,GAAG,IAAI,CAACJ,iBAAiB,CAACK,OAAO,CAACjG,UAAU,CAAC;MACxD,IAAIgG,KAAK,GAAG,CAAC,CAAC,EAAE;QACZ,IAAI,CAACJ,iBAAiB,CAACM,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC3C;MACA;MACA,IAAI,IAAI,CAACJ,iBAAiB,CAACO,MAAM,KAAK,CAAC,EAAE;QACrC,IAAI,CAACnF,MAAM,CAAC,CAAC;MACjB;IACJ;IACA,OAAOtH,IAAI,YAAA0M,8BAAAxM,iBAAA;MAAA,YAAAA,iBAAA,IAAwF+L,qBAAqB;IAAA;IACxH,OAAO9L,KAAK,kBApM6E9B,gEAAE;MAAAgC,KAAA,EAoMY4L,qBAAqB;MAAA3L,OAAA,EAArB2L,qBAAqB,CAAAjM,IAAA;MAAAO,UAAA,EAAc;IAAM;EACpJ;EAAC,OA5BK0L,qBAAqB;AAAA;AA6B3B;EAAA,QAAAzL,SAAA,oBAAAA,SAAA;AAAA;;AAKA;AACA;AACA;AACA;AACA;AAJA,IAKMmM,yBAAyB;EAA/B,MAAMA,yBAAyB,SAASV,qBAAqB,CAAC;IAC1DhG,OAAO,GAAG3H,qDAAM,CAACoC,iDAAM,CAAC;IACxBkM,SAAS,GAAGtO,qDAAM,CAACsC,2DAAgB,CAAC,CAACiM,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;IAC/DC,eAAe;IACf;IACAtI,GAAGA,CAAC8B,UAAU,EAAE;MACZ,KAAK,CAAC9B,GAAG,CAAC8B,UAAU,CAAC;MACrB;MACA,IAAI,CAAC,IAAI,CAAC6F,WAAW,EAAE;QACnB,IAAI,CAAClG,OAAO,CAAC8G,iBAAiB,CAAC,MAAM;UACjC,IAAI,CAACD,eAAe,GAAG,IAAI,CAACF,SAAS,CAACI,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAACC,gBAAgB,CAAC;QAC1F,CAAC,CAAC;QACF,IAAI,CAACd,WAAW,GAAG,IAAI;MAC3B;IACJ;IACA;IACA7E,MAAMA,CAAA,EAAG;MACL,IAAI,IAAI,CAAC6E,WAAW,EAAE;QAClB,IAAI,CAACW,eAAe,GAAG,CAAC;QACxB,IAAI,CAACX,WAAW,GAAG,KAAK;MAC5B;IACJ;IACA;IACAc,gBAAgB,GAAIC,KAAK,IAAK;MAC1B,MAAMC,QAAQ,GAAG,IAAI,CAACjB,iBAAiB;MACvC,KAAK,IAAIhb,CAAC,GAAGic,QAAQ,CAACV,MAAM,GAAG,CAAC,EAAEvb,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3C;QACA;QACA;QACA;QACA;QACA;QACA,IAAIic,QAAQ,CAACjc,CAAC,CAAC,CAACkc,cAAc,CAACC,SAAS,CAACZ,MAAM,GAAG,CAAC,EAAE;UACjD,IAAI,CAACxG,OAAO,CAACuB,GAAG,CAAC,MAAM2F,QAAQ,CAACjc,CAAC,CAAC,CAACkc,cAAc,CAACE,IAAI,CAACJ,KAAK,CAAC,CAAC;UAC9D;QACJ;MACJ;IACJ,CAAC;IACD,OAAOlN,IAAI;MAAA,IAAAuN,sCAAA;MAAA,gBAAAC,kCAAAtN,iBAAA;QAAA,QAAAqN,sCAAA,KAAAA,sCAAA,GAtP8ElP,mEAAE,CAsPQsO,yBAAyB,IAAAzM,iBAAA,IAAzByM,yBAAyB;MAAA;IAAA;IAC5H,OAAOxM,KAAK,kBAvP6E9B,gEAAE;MAAAgC,KAAA,EAuPYsM,yBAAyB;MAAArM,OAAA,EAAzBqM,yBAAyB,CAAA3M,IAAA;MAAAO,UAAA,EAAc;IAAM;EACxJ;EAAC,OAxCKoM,yBAAyB;AAAA;AAyC/B;EAAA,QAAAnM,SAAA,oBAAAA,SAAA;AAAA;;AAKA;AACA;AACA;AACA;AACA;AAJA,IAKMkN,6BAA6B;EAAnC,MAAMA,6BAA6B,SAASzB,qBAAqB,CAAC;IAC9D0B,SAAS,GAAGrP,qDAAM,CAACO,qDAAQ,CAAC;IAC5BoH,OAAO,GAAG3H,qDAAM,CAACoC,iDAAM,CAAC;IACxBkM,SAAS,GAAGtO,qDAAM,CAACsC,2DAAgB,CAAC,CAACiM,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;IAC/De,oBAAoB;IACpBC,iBAAiB,GAAG,KAAK;IACzBC,uBAAuB;IACvBC,SAAS;IACT;IACAvJ,GAAGA,CAAC8B,UAAU,EAAE;MACZ,KAAK,CAAC9B,GAAG,CAAC8B,UAAU,CAAC;MACrB;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAAC,IAAI,CAAC6F,WAAW,EAAE;QACnB,MAAMxH,IAAI,GAAG,IAAI,CAACZ,SAAS,CAACY,IAAI;QAChC,MAAMqJ,YAAY,GAAG;UAAEC,OAAO,EAAE;QAAK,CAAC;QACtC,MAAMC,QAAQ,GAAG,IAAI,CAACtB,SAAS;QAC/B,IAAI,CAACmB,SAAS,GAAG,IAAI,CAAC9H,OAAO,CAAC8G,iBAAiB,CAAC,MAAM,CAClDmB,QAAQ,CAAClB,MAAM,CAACrI,IAAI,EAAE,aAAa,EAAE,IAAI,CAACwJ,oBAAoB,EAAEH,YAAY,CAAC,EAC7EE,QAAQ,CAAClB,MAAM,CAACrI,IAAI,EAAE,OAAO,EAAE,IAAI,CAACyJ,cAAc,EAAEJ,YAAY,CAAC,EACjEE,QAAQ,CAAClB,MAAM,CAACrI,IAAI,EAAE,UAAU,EAAE,IAAI,CAACyJ,cAAc,EAAEJ,YAAY,CAAC,EACpEE,QAAQ,CAAClB,MAAM,CAACrI,IAAI,EAAE,aAAa,EAAE,IAAI,CAACyJ,cAAc,EAAEJ,YAAY,CAAC,CAC1E,CAAC;QACF;QACA;QACA,IAAI,IAAI,CAACL,SAAS,CAAChO,GAAG,IAAI,CAAC,IAAI,CAACkO,iBAAiB,EAAE;UAC/C,IAAI,CAACD,oBAAoB,GAAGjJ,IAAI,CAACL,KAAK,CAAC+J,MAAM;UAC7C1J,IAAI,CAACL,KAAK,CAAC+J,MAAM,GAAG,SAAS;UAC7B,IAAI,CAACR,iBAAiB,GAAG,IAAI;QACjC;QACA,IAAI,CAAC1B,WAAW,GAAG,IAAI;MAC3B;IACJ;IACA;IACA7E,MAAMA,CAAA,EAAG;MACL,IAAI,IAAI,CAAC6E,WAAW,EAAE;QAClB,IAAI,CAAC4B,SAAS,EAAEO,OAAO,CAACC,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC;QAC7C,IAAI,CAACR,SAAS,GAAGnD,SAAS;QAC1B,IAAI,IAAI,CAAC+C,SAAS,CAAChO,GAAG,IAAI,IAAI,CAACkO,iBAAiB,EAAE;UAC9C,IAAI,CAAC9J,SAAS,CAACY,IAAI,CAACL,KAAK,CAAC+J,MAAM,GAAG,IAAI,CAACT,oBAAoB;UAC5D,IAAI,CAACC,iBAAiB,GAAG,KAAK;QAClC;QACA,IAAI,CAAC1B,WAAW,GAAG,KAAK;MAC5B;IACJ;IACA;IACAgC,oBAAoB,GAAIjB,KAAK,IAAK;MAC9B,IAAI,CAACY,uBAAuB,GAAG9L,2DAAe,CAACkL,KAAK,CAAC;IACzD,CAAC;IACD;IACAkB,cAAc,GAAIlB,KAAK,IAAK;MACxB,MAAMsB,MAAM,GAAGxM,2DAAe,CAACkL,KAAK,CAAC;MACrC;MACA;MACA;MACA;MACA;MACA;MACA,MAAM9B,MAAM,GAAG8B,KAAK,CAACuB,IAAI,KAAK,OAAO,IAAI,IAAI,CAACX,uBAAuB,GAC/D,IAAI,CAACA,uBAAuB,GAC5BU,MAAM;MACZ;MACA;MACA,IAAI,CAACV,uBAAuB,GAAG,IAAI;MACnC;MACA;MACA;MACA,MAAMX,QAAQ,GAAG,IAAI,CAACjB,iBAAiB,CAACwC,KAAK,CAAC,CAAC;MAC/C;MACA;MACA;MACA;MACA,KAAK,IAAIxd,CAAC,GAAGic,QAAQ,CAACV,MAAM,GAAG,CAAC,EAAEvb,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3C,MAAMoV,UAAU,GAAG6G,QAAQ,CAACjc,CAAC,CAAC;QAC9B,IAAIoV,UAAU,CAACqI,qBAAqB,CAACtB,SAAS,CAACZ,MAAM,GAAG,CAAC,IAAI,CAACnG,UAAU,CAACiB,WAAW,CAAC,CAAC,EAAE;UACpF;QACJ;QACA;QACA;QACA;QACA,IAAIqH,uBAAuB,CAACtI,UAAU,CAACK,cAAc,EAAE6H,MAAM,CAAC,IAC1DI,uBAAuB,CAACtI,UAAU,CAACK,cAAc,EAAEyE,MAAM,CAAC,EAAE;UAC5D;QACJ;QACA,MAAMyD,oBAAoB,GAAGvI,UAAU,CAACqI,qBAAqB;QAC7D;QACA,IAAI,IAAI,CAAC1I,OAAO,EAAE;UACd,IAAI,CAACA,OAAO,CAACuB,GAAG,CAAC,MAAMqH,oBAAoB,CAACvB,IAAI,CAACJ,KAAK,CAAC,CAAC;QAC5D,CAAC,MACI;UACD2B,oBAAoB,CAACvB,IAAI,CAACJ,KAAK,CAAC;QACpC;MACJ;IACJ,CAAC;IACD,OAAOlN,IAAI;MAAA,IAAA8O,0CAAA;MAAA,gBAAAC,sCAAA7O,iBAAA;QAAA,QAAA4O,0CAAA,KAAAA,0CAAA,GArW8EzQ,mEAAE,CAqWQqP,6BAA6B,IAAAxN,iBAAA,IAA7BwN,6BAA6B;MAAA;IAAA;IAChI,OAAOvN,KAAK,kBAtW6E9B,gEAAE;MAAAgC,KAAA,EAsWYqN,6BAA6B;MAAApN,OAAA,EAA7BoN,6BAA6B,CAAA1N,IAAA;MAAAO,UAAA,EAAc;IAAM;EAC5J;EAAC,OApGKmN,6BAA6B;AAAA;AAqGnC;EAAA,QAAAlN,SAAA,oBAAAA,SAAA;AAAA;AAIA;AACA,SAASoO,uBAAuBA,CAACI,MAAM,EAAEC,KAAK,EAAE;EAC5C,MAAMC,kBAAkB,GAAG,OAAOC,UAAU,KAAK,WAAW,IAAIA,UAAU;EAC1E,IAAIC,OAAO,GAAGH,KAAK;EACnB,OAAOG,OAAO,EAAE;IACZ,IAAIA,OAAO,KAAKJ,MAAM,EAAE;MACpB,OAAO,IAAI;IACf;IACAI,OAAO,GACHF,kBAAkB,IAAIE,OAAO,YAAYD,UAAU,GAAGC,OAAO,CAACC,IAAI,GAAGD,OAAO,CAACE,UAAU;EAC/F;EACA,OAAO,KAAK;AAChB;AAAC,IAEKC,sBAAsB;EAA5B,MAAMA,sBAAsB,CAAC;IACzB,OAAOvP,IAAI,YAAAwP,+BAAAtP,iBAAA;MAAA,YAAAA,iBAAA,IAAwFqP,sBAAsB;IAAA;IACzH,OAAOE,IAAI,kBA5X8EpR,+DAAE;MAAAoQ,IAAA,EA4XJc,sBAAsB;MAAAI,SAAA;MAAAC,SAAA,+BAAkG,EAAE;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAAC,MAAA;MAAAC,aAAA;MAAAC,eAAA;IAAA;EACrN;EAAC,OAHKd,sBAAsB;AAAA;AAI5B;EAAA,QAAA/O,SAAA,oBAAAA,SAAA;AAAA;AAIA;AAAA,IACM8P,gBAAgB;EAAtB,MAAMA,gBAAgB,CAAC;IACnB3C,SAAS,GAAGrP,qDAAM,CAACO,qDAAQ,CAAC;IAC5B0R,iBAAiB;IACjBxM,SAAS,GAAGzF,qDAAM,CAACmC,mDAAQ,CAAC;IAC5B+P,YAAY,GAAGlS,qDAAM,CAAC4D,yDAAsB,CAAC;IAC7CnC,WAAWA,CAAA,EAAG,CAAE;IAChBqM,WAAWA,CAAA,EAAG;MACV,IAAI,CAACmE,iBAAiB,EAAEtL,MAAM,CAAC,CAAC;IACpC;IACA;AACJ;AACA;AACA;AACA;AACA;IACIwL,mBAAmBA,CAAA,EAAG;MAClB,IAAI,CAACC,WAAW,CAAC,CAAC;MAClB,IAAI,CAAC,IAAI,CAACH,iBAAiB,EAAE;QACzB,IAAI,CAACI,gBAAgB,CAAC,CAAC;MAC3B;MACA,OAAO,IAAI,CAACJ,iBAAiB;IACjC;IACA;AACJ;AACA;AACA;IACII,gBAAgBA,CAAA,EAAG;MACf,MAAMC,cAAc,GAAG,uBAAuB;MAC9C;MACA;MACA;MACA,IAAI,IAAI,CAACjD,SAAS,CAAC5O,SAAS,IAAIkD,kEAAkB,CAAC,CAAC,EAAE;QAClD,MAAM4O,0BAA0B,GAAG,IAAI,CAAC9M,SAAS,CAAC+M,gBAAgB,CAAC,IAAIF,cAAc,uBAAuB,GAAG,IAAIA,cAAc,mBAAmB,CAAC;QACrJ;QACA;QACA,KAAK,IAAI1f,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2f,0BAA0B,CAACpE,MAAM,EAAEvb,CAAC,EAAE,EAAE;UACxD2f,0BAA0B,CAAC3f,CAAC,CAAC,CAAC+T,MAAM,CAAC,CAAC;QAC1C;MACJ;MACA,MAAM8L,SAAS,GAAG,IAAI,CAAChN,SAAS,CAACiN,aAAa,CAAC,KAAK,CAAC;MACrDD,SAAS,CAACxM,SAAS,CAACC,GAAG,CAACoM,cAAc,CAAC;MACvC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI3O,kEAAkB,CAAC,CAAC,EAAE;QACtB8O,SAAS,CAACE,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC;MAC9C,CAAC,MACI,IAAI,CAAC,IAAI,CAACtD,SAAS,CAAC5O,SAAS,EAAE;QAChCgS,SAAS,CAACE,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC;MAChD;MACA,IAAI,CAAClN,SAAS,CAACY,IAAI,CAACuM,WAAW,CAACH,SAAS,CAAC;MAC1C,IAAI,CAACR,iBAAiB,GAAGQ,SAAS;IACtC;IACA;IACAL,WAAWA,CAAA,EAAG;MACV,IAAI,CAACF,YAAY,CAACW,IAAI,CAAC5B,sBAAsB,CAAC;IAClD;IACA,OAAOvP,IAAI,YAAAoR,yBAAAlR,iBAAA;MAAA,YAAAA,iBAAA,IAAwFoQ,gBAAgB;IAAA;IACnH,OAAOnQ,KAAK,kBAnc6E9B,gEAAE;MAAAgC,KAAA,EAmcYiQ,gBAAgB;MAAAhQ,OAAA,EAAhBgQ,gBAAgB,CAAAtQ,IAAA;MAAAO,UAAA,EAAc;IAAM;EAC/I;EAAC,OAjEK+P,gBAAgB;AAAA;AAkEtB;EAAA,QAAA9P,SAAA,oBAAAA,SAAA;AAAA;;AAKA;AACA,MAAM6Q,WAAW,CAAC;EACdzE,SAAS;EACT3G,OAAO;EACP2B,OAAO;EACP0J,aAAa;EACbC,qBAAqB;EACrBC,gBAAgB;EAChBzR,WAAWA,CAACf,QAAQ,EAAE4N,SAAS,EAAE3G,OAAO,EAAEwL,OAAO,EAAE;IAC/C,IAAI,CAAC7E,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAAC3G,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC2B,OAAO,GAAG5I,QAAQ,CAACgS,aAAa,CAAC,KAAK,CAAC;IAC5C,IAAI,CAACpJ,OAAO,CAACrD,SAAS,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAClD,IAAI,CAAC8M,aAAa,GAAG1E,SAAS,CAACI,MAAM,CAAC,IAAI,CAACpF,OAAO,EAAE,OAAO,EAAE6J,OAAO,CAAC;EACzE;EACAnK,MAAMA,CAAA,EAAG;IACL,IAAI,CAACrB,OAAO,CAAC8G,iBAAiB,CAAC,MAAM;MACjC,MAAMnF,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B8J,YAAY,CAAC,IAAI,CAACF,gBAAgB,CAAC;MACnC,IAAI,CAACD,qBAAqB,GAAG,CAAC;MAC9B,IAAI,CAACA,qBAAqB,GAAG,IAAI,CAAC3E,SAAS,CAACI,MAAM,CAACpF,OAAO,EAAE,eAAe,EAAE,IAAI,CAAC+J,OAAO,CAAC;MAC1F,IAAI,CAACH,gBAAgB,GAAGI,UAAU,CAAC,IAAI,CAACD,OAAO,EAAE,GAAG,CAAC;MACrD;MACA;MACA/J,OAAO,CAACtD,KAAK,CAACuN,aAAa,GAAG,MAAM;MACpCjK,OAAO,CAACrD,SAAS,CAACU,MAAM,CAAC,8BAA8B,CAAC;IAC5D,CAAC,CAAC;EACN;EACA0M,OAAO,GAAGA,CAAA,KAAM;IACZD,YAAY,CAAC,IAAI,CAACF,gBAAgB,CAAC;IACnC,IAAI,CAACF,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,qBAAqB,GAAG,CAAC;IAC9B,IAAI,CAACD,aAAa,GAAG,IAAI,CAACC,qBAAqB,GAAG,IAAI,CAACC,gBAAgB,GAAG5G,SAAS;IACnF,IAAI,CAAChD,OAAO,CAAC3C,MAAM,CAAC,CAAC;EACzB,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAM6M,UAAU,CAAC;EACbC,aAAa;EACbC,KAAK;EACLC,KAAK;EACL/L,OAAO;EACPD,OAAO;EACPiM,mBAAmB;EACnBnO,SAAS;EACToO,SAAS;EACTC,uBAAuB;EACvBC,mBAAmB;EACnBhJ,SAAS;EACTuD,SAAS;EACT0F,cAAc,gBAAG,IAAInQ,yCAAO,CAAC,CAAC;EAC9BoQ,YAAY,gBAAG,IAAIpQ,yCAAO,CAAC,CAAC;EAC5BqQ,YAAY,gBAAG,IAAIrQ,yCAAO,CAAC,CAAC;EAC5BsQ,iBAAiB;EACjBC,eAAe;EACfC,gBAAgB,GAAGvQ,8CAAY,CAACwQ,KAAK;EACrCC,YAAY,GAAG,IAAI;EACnBC,8BAA8B;EAC9BC,4BAA4B;EAC5B;AACJ;AACA;AACA;EACIC,mBAAmB;EACnB;EACA5F,cAAc,gBAAG,IAAIjL,yCAAO,CAAC,CAAC;EAC9B;EACAwM,qBAAqB,gBAAG,IAAIxM,yCAAO,CAAC,CAAC;EACrC;EACA8Q,mBAAmB;EACnBlT,WAAWA,CAACgS,aAAa,EAAEC,KAAK,EAAEC,KAAK,EAAE/L,OAAO,EAAED,OAAO,EAAEiM,mBAAmB,EAAEnO,SAAS,EAAEoO,SAAS,EAAEC,uBAAuB,EAAEC,mBAAmB,GAAG,KAAK,EAAEhJ,SAAS,EAAEuD,SAAS,EAAE;IAC9K,IAAI,CAACmF,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC/L,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACiM,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACnO,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACoO,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,uBAAuB,GAAGA,uBAAuB;IACtD,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAAChJ,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACuD,SAAS,GAAGA,SAAS;IAC1B,IAAI1G,OAAO,CAAC2D,cAAc,EAAE;MACxB,IAAI,CAAC6I,eAAe,GAAGxM,OAAO,CAAC2D,cAAc;MAC7C,IAAI,CAAC6I,eAAe,CAAC1O,MAAM,CAAC,IAAI,CAAC;IACrC;IACA,IAAI,CAACyO,iBAAiB,GAAGvM,OAAO,CAAC0D,gBAAgB;EACrD;EACA;EACA,IAAIjD,cAAcA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACsL,KAAK;EACrB;EACA;EACA,IAAIiB,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACL,YAAY,EAAEjL,OAAO,IAAI,IAAI;EAC7C;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIuL,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACnB,KAAK;EACrB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIhO,MAAMA,CAACoP,MAAM,EAAE;IACX;IACA;IACA,IAAI,CAAC,IAAI,CAACpB,KAAK,CAACqB,aAAa,IAAI,IAAI,CAACL,mBAAmB,EAAE;MACvD,IAAI,CAACA,mBAAmB,CAAC9B,WAAW,CAAC,IAAI,CAACc,KAAK,CAAC;IACpD;IACA,MAAMsB,YAAY,GAAG,IAAI,CAACvB,aAAa,CAAC/N,MAAM,CAACoP,MAAM,CAAC;IACtD,IAAI,IAAI,CAACX,iBAAiB,EAAE;MACxB,IAAI,CAACA,iBAAiB,CAACzO,MAAM,CAAC,IAAI,CAAC;IACvC;IACA,IAAI,CAACuP,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,uBAAuB,CAAC,CAAC;IAC9B,IAAI,IAAI,CAACf,eAAe,EAAE;MACtB,IAAI,CAACA,eAAe,CAACzO,MAAM,CAAC,CAAC;IACjC;IACA;IACA;IACA;IACA,IAAI,CAACgP,mBAAmB,EAAES,OAAO,CAAC,CAAC;IACnC;IACA;IACA,IAAI,CAACT,mBAAmB,GAAGjS,8DAAe,CAAC,MAAM;MAC7C;MACA,IAAI,IAAI,CAACuG,WAAW,CAAC,CAAC,EAAE;QACpB,IAAI,CAACH,cAAc,CAAC,CAAC;MACzB;IACJ,CAAC,EAAE;MAAE9D,QAAQ,EAAE,IAAI,CAAC+F;IAAU,CAAC,CAAC;IAChC;IACA,IAAI,CAACsK,oBAAoB,CAAC,IAAI,CAAC;IAC/B,IAAI,IAAI,CAACzN,OAAO,CAAC6D,WAAW,EAAE;MAC1B,IAAI,CAAC6J,eAAe,CAAC,CAAC;IAC1B;IACA,IAAI,IAAI,CAAC1N,OAAO,CAAC4D,UAAU,EAAE;MACzB,IAAI,CAAC+J,cAAc,CAAC,IAAI,CAAC5B,KAAK,EAAE,IAAI,CAAC/L,OAAO,CAAC4D,UAAU,EAAE,IAAI,CAAC;IAClE;IACA;IACA,IAAI,CAACyI,YAAY,CAACjF,IAAI,CAAC,CAAC;IACxB,IAAI,CAACwG,sBAAsB,CAAC,CAAC;IAC7B;IACA,IAAI,CAAC5B,mBAAmB,CAAC1N,GAAG,CAAC,IAAI,CAAC;IAClC,IAAI,IAAI,CAAC0B,OAAO,CAACqE,mBAAmB,EAAE;MAClC,IAAI,CAACoI,gBAAgB,GAAG,IAAI,CAACR,SAAS,CAACpL,SAAS,CAAC,MAAM,IAAI,CAAC4K,OAAO,CAAC,CAAC,CAAC;IAC1E;IACA,IAAI,CAACS,uBAAuB,CAAC5N,GAAG,CAAC,IAAI,CAAC;IACtC;IACA;IACA;IACA,IAAI,OAAO8O,YAAY,EAAES,SAAS,KAAK,UAAU,EAAE;MAC/C;MACA;MACA;MACA;MACA;MACAT,YAAY,CAACS,SAAS,CAAC,MAAM;QACzB,IAAI,IAAI,CAACxM,WAAW,CAAC,CAAC,EAAE;UACpB;UACA;UACA;UACA,IAAI,CAACtB,OAAO,CAAC8G,iBAAiB,CAAC,MAAMiH,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM,IAAI,CAAC5M,MAAM,CAAC,CAAC,CAAC,CAAC;QACrF;MACJ,CAAC,CAAC;IACN;IACA,OAAOgM,YAAY;EACvB;EACA;AACJ;AACA;AACA;EACIhM,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE;MACrB;IACJ;IACA,IAAI,CAAC4M,cAAc,CAAC,CAAC;IACrB;IACA;IACA;IACA,IAAI,CAACR,oBAAoB,CAAC,KAAK,CAAC;IAChC,IAAI,IAAI,CAAClB,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,CAACnL,MAAM,EAAE;MACzD,IAAI,CAACmL,iBAAiB,CAACnL,MAAM,CAAC,CAAC;IACnC;IACA,IAAI,IAAI,CAACoL,eAAe,EAAE;MACtB,IAAI,CAACA,eAAe,CAACjO,OAAO,CAAC,CAAC;IAClC;IACA,MAAM2P,gBAAgB,GAAG,IAAI,CAACrC,aAAa,CAACzK,MAAM,CAAC,CAAC;IACpD;IACA,IAAI,CAACkL,YAAY,CAAClF,IAAI,CAAC,CAAC;IACxB,IAAI,CAACwG,sBAAsB,CAAC,CAAC;IAC7B;IACA,IAAI,CAAC5B,mBAAmB,CAACjN,MAAM,CAAC,IAAI,CAAC;IACrC;IACA;IACA,IAAI,CAACoP,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAAC1B,gBAAgB,CAACtL,WAAW,CAAC,CAAC;IACnC,IAAI,CAAC+K,uBAAuB,CAACnN,MAAM,CAAC,IAAI,CAAC;IACzC,OAAOmP,gBAAgB;EAC3B;EACA;EACAzC,OAAOA,CAAA,EAAG;IACN,MAAM2C,UAAU,GAAG,IAAI,CAAC/M,WAAW,CAAC,CAAC;IACrC,IAAI,IAAI,CAACkL,iBAAiB,EAAE;MACxB,IAAI,CAACA,iBAAiB,CAACd,OAAO,CAAC,CAAC;IACpC;IACA,IAAI,CAAC4C,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAAC1B,YAAY,EAAElB,OAAO,CAAC,CAAC;IAC5B,IAAI,CAACgB,gBAAgB,CAACtL,WAAW,CAAC,CAAC;IACnC,IAAI,CAAC6K,mBAAmB,CAACjN,MAAM,CAAC,IAAI,CAAC;IACrC,IAAI,CAAC8M,aAAa,CAACJ,OAAO,CAAC,CAAC;IAC5B,IAAI,CAACY,YAAY,CAACiC,QAAQ,CAAC,CAAC;IAC5B,IAAI,CAAClC,cAAc,CAACkC,QAAQ,CAAC,CAAC;IAC9B,IAAI,CAACpH,cAAc,CAACoH,QAAQ,CAAC,CAAC;IAC9B,IAAI,CAAC7F,qBAAqB,CAAC6F,QAAQ,CAAC,CAAC;IACrC,IAAI,CAACpC,uBAAuB,CAACnN,MAAM,CAAC,IAAI,CAAC;IACzC,IAAI,CAAC+M,KAAK,EAAE/M,MAAM,CAAC,CAAC;IACpB,IAAI,CAACgO,mBAAmB,EAAES,OAAO,CAAC,CAAC;IACnC,IAAI,CAACV,mBAAmB,GAAG,IAAI,CAACf,KAAK,GAAG,IAAI,CAACD,KAAK,GAAG,IAAI,CAACa,YAAY,GAAG,IAAI;IAC7E,IAAIyB,UAAU,EAAE;MACZ,IAAI,CAAC9B,YAAY,CAAClF,IAAI,CAAC,CAAC;IAC5B;IACA,IAAI,CAACkF,YAAY,CAACgC,QAAQ,CAAC,CAAC;IAC5B,IAAI,CAACV,sBAAsB,CAAC,CAAC;EACjC;EACA;EACAvM,WAAWA,CAAA,EAAG;IACV,OAAO,IAAI,CAACwK,aAAa,CAACxK,WAAW,CAAC,CAAC;EAC3C;EACA;EACAkN,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACnC,cAAc;EAC9B;EACA;EACAoC,WAAWA,CAAA,EAAG;IACV,OAAO,IAAI,CAACnC,YAAY;EAC5B;EACA;EACAoC,WAAWA,CAAA,EAAG;IACV,OAAO,IAAI,CAACnC,YAAY;EAC5B;EACA;EACAoC,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACxH,cAAc;EAC9B;EACA;EACAyB,oBAAoBA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACF,qBAAqB;EACrC;EACA;EACAkG,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAAC3O,OAAO;EACvB;EACA;EACAkB,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACqL,iBAAiB,EAAE;MACxB,IAAI,CAACA,iBAAiB,CAACqC,KAAK,CAAC,CAAC;IAClC;EACJ;EACA;EACAC,sBAAsBA,CAACC,QAAQ,EAAE;IAC7B,IAAIA,QAAQ,KAAK,IAAI,CAACvC,iBAAiB,EAAE;MACrC;IACJ;IACA,IAAI,IAAI,CAACA,iBAAiB,EAAE;MACxB,IAAI,CAACA,iBAAiB,CAACd,OAAO,CAAC,CAAC;IACpC;IACA,IAAI,CAACc,iBAAiB,GAAGuC,QAAQ;IACjC,IAAI,IAAI,CAACzN,WAAW,CAAC,CAAC,EAAE;MACpByN,QAAQ,CAAChR,MAAM,CAAC,IAAI,CAAC;MACrB,IAAI,CAACoD,cAAc,CAAC,CAAC;IACzB;EACJ;EACA;EACA6N,UAAUA,CAACC,UAAU,EAAE;IACnB,IAAI,CAAChP,OAAO,GAAG;MAAE,GAAG,IAAI,CAACA,OAAO;MAAE,GAAGgP;IAAW,CAAC;IACjD,IAAI,CAAC1B,kBAAkB,CAAC,CAAC;EAC7B;EACA;EACA2B,YAAYA,CAACC,GAAG,EAAE;IACd,IAAI,CAAClP,OAAO,GAAG;MAAE,GAAG,IAAI,CAACA,OAAO;MAAEoE,SAAS,EAAE8K;IAAI,CAAC;IAClD,IAAI,CAAC3B,uBAAuB,CAAC,CAAC;EAClC;EACA;EACA4B,aAAaA,CAACC,OAAO,EAAE;IACnB,IAAI,IAAI,CAACrD,KAAK,EAAE;MACZ,IAAI,CAAC4B,cAAc,CAAC,IAAI,CAAC5B,KAAK,EAAEqD,OAAO,EAAE,IAAI,CAAC;IAClD;EACJ;EACA;EACAC,gBAAgBA,CAACD,OAAO,EAAE;IACtB,IAAI,IAAI,CAACrD,KAAK,EAAE;MACZ,IAAI,CAAC4B,cAAc,CAAC,IAAI,CAAC5B,KAAK,EAAEqD,OAAO,EAAE,KAAK,CAAC;IACnD;EACJ;EACA;AACJ;AACA;EACIE,YAAYA,CAAA,EAAG;IACX,MAAMlL,SAAS,GAAG,IAAI,CAACpE,OAAO,CAACoE,SAAS;IACxC,IAAI,CAACA,SAAS,EAAE;MACZ,OAAO,KAAK;IAChB;IACA,OAAO,OAAOA,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAGA,SAAS,CAACvZ,KAAK;EACtE;EACA;EACA0kB,oBAAoBA,CAACT,QAAQ,EAAE;IAC3B,IAAIA,QAAQ,KAAK,IAAI,CAACtC,eAAe,EAAE;MACnC;IACJ;IACA,IAAI,CAAC6B,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAAC7B,eAAe,GAAGsC,QAAQ;IAC/B,IAAI,IAAI,CAACzN,WAAW,CAAC,CAAC,EAAE;MACpByN,QAAQ,CAAChR,MAAM,CAAC,IAAI,CAAC;MACrBgR,QAAQ,CAAC/Q,MAAM,CAAC,CAAC;IACrB;EACJ;EACA;EACAwP,uBAAuBA,CAAA,EAAG;IACtB,IAAI,CAACzB,KAAK,CAACf,YAAY,CAAC,KAAK,EAAE,IAAI,CAACuE,YAAY,CAAC,CAAC,CAAC;EACvD;EACA;EACAhC,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAAC,IAAI,CAACvB,KAAK,EAAE;MACb;IACJ;IACA,MAAM3N,KAAK,GAAG,IAAI,CAAC2N,KAAK,CAAC3N,KAAK;IAC9BA,KAAK,CAACoB,KAAK,GAAGrD,gEAAmB,CAAC,IAAI,CAAC6D,OAAO,CAACR,KAAK,CAAC;IACrDpB,KAAK,CAACkB,MAAM,GAAGnD,gEAAmB,CAAC,IAAI,CAAC6D,OAAO,CAACV,MAAM,CAAC;IACvDlB,KAAK,CAAC4F,QAAQ,GAAG7H,gEAAmB,CAAC,IAAI,CAAC6D,OAAO,CAACgE,QAAQ,CAAC;IAC3D5F,KAAK,CAAC6F,SAAS,GAAG9H,gEAAmB,CAAC,IAAI,CAAC6D,OAAO,CAACiE,SAAS,CAAC;IAC7D7F,KAAK,CAAC8F,QAAQ,GAAG/H,gEAAmB,CAAC,IAAI,CAAC6D,OAAO,CAACkE,QAAQ,CAAC;IAC3D9F,KAAK,CAAC+F,SAAS,GAAGhI,gEAAmB,CAAC,IAAI,CAAC6D,OAAO,CAACmE,SAAS,CAAC;EACjE;EACA;EACAsJ,oBAAoBA,CAAC+B,aAAa,EAAE;IAChC,IAAI,CAACzD,KAAK,CAAC3N,KAAK,CAACuN,aAAa,GAAG6D,aAAa,GAAG,EAAE,GAAG,MAAM;EAChE;EACA;EACA9B,eAAeA,CAAA,EAAG;IACd,MAAM+B,YAAY,GAAG,8BAA8B;IACnD,IAAI,CAAC9C,YAAY,EAAElB,OAAO,CAAC,CAAC;IAC5B,IAAI,CAACkB,YAAY,GAAG,IAAIxB,WAAW,CAAC,IAAI,CAACtN,SAAS,EAAE,IAAI,CAAC6I,SAAS,EAAE,IAAI,CAAC3G,OAAO,EAAEiH,KAAK,IAAI;MACvF,IAAI,CAACoF,cAAc,CAAChF,IAAI,CAACJ,KAAK,CAAC;IACnC,CAAC,CAAC;IACF,IAAI,IAAI,CAACmF,mBAAmB,EAAE;MAC1B,IAAI,CAACQ,YAAY,CAACjL,OAAO,CAACrD,SAAS,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClF;IACA,IAAI,IAAI,CAAC0B,OAAO,CAAC8D,aAAa,EAAE;MAC5B,IAAI,CAAC6J,cAAc,CAAC,IAAI,CAAChB,YAAY,CAACjL,OAAO,EAAE,IAAI,CAAC1B,OAAO,CAAC8D,aAAa,EAAE,IAAI,CAAC;IACpF;IACA;IACA;IACA,IAAI,CAACgI,KAAK,CAACqB,aAAa,CAACuC,YAAY,CAAC,IAAI,CAAC/C,YAAY,CAACjL,OAAO,EAAE,IAAI,CAACoK,KAAK,CAAC;IAC5E;IACA,IAAI,CAAC,IAAI,CAACK,mBAAmB,IAAI,OAAOwD,qBAAqB,KAAK,WAAW,EAAE;MAC3E,IAAI,CAAC5P,OAAO,CAAC8G,iBAAiB,CAAC,MAAM;QACjC8I,qBAAqB,CAAC,MAAM,IAAI,CAAChD,YAAY,EAAEjL,OAAO,CAACrD,SAAS,CAACC,GAAG,CAACmR,YAAY,CAAC,CAAC;MACvF,CAAC,CAAC;IACN,CAAC,MACI;MACD,IAAI,CAAC9C,YAAY,CAACjL,OAAO,CAACrD,SAAS,CAACC,GAAG,CAACmR,YAAY,CAAC;IACzD;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIpC,oBAAoBA,CAAA,EAAG;IACnB,IAAI,IAAI,CAACvB,KAAK,CAAC8D,WAAW,EAAE;MACxB,IAAI,CAAC9D,KAAK,CAAC1C,UAAU,CAAC4B,WAAW,CAAC,IAAI,CAACc,KAAK,CAAC;IACjD;EACJ;EACA;EACAmC,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAAC9B,mBAAmB,EAAE;MAC1B,IAAI,CAACQ,YAAY,EAAElB,OAAO,CAAC,CAAC;MAC5B,IAAI,CAACkB,YAAY,GAAG,IAAI;IAC5B,CAAC,MACI;MACD,IAAI,CAACA,YAAY,EAAEvL,MAAM,CAAC,CAAC;IAC/B;EACJ;EACA;EACAuM,cAAcA,CAACjM,OAAO,EAAEmO,UAAU,EAAEC,KAAK,EAAE;IACvC,MAAMV,OAAO,GAAGhT,uDAAW,CAACyT,UAAU,IAAI,EAAE,CAAC,CAACjT,MAAM,CAAChG,CAAC,IAAI,CAAC,CAACA,CAAC,CAAC;IAC9D,IAAIwY,OAAO,CAAC7I,MAAM,EAAE;MAChBuJ,KAAK,GAAGpO,OAAO,CAACrD,SAAS,CAACC,GAAG,CAAC,GAAG8Q,OAAO,CAAC,GAAG1N,OAAO,CAACrD,SAAS,CAACU,MAAM,CAAC,GAAGqQ,OAAO,CAAC;IACpF;EACJ;EACA;EACAjB,uBAAuBA,CAAA,EAAG;IACtB,IAAI4B,OAAO,GAAG,KAAK;IACnB;IACA,IAAI;MACA,IAAI,CAAClD,4BAA4B,GAAG/R,8DAAe,CAAC,MAAM;QACtD;QACAiV,OAAO,GAAG,IAAI;QACd,IAAI,CAACC,cAAc,CAAC,CAAC;MACzB,CAAC,EAAE;QACC5S,QAAQ,EAAE,IAAI,CAAC+F;MACnB,CAAC,CAAC;IACN,CAAC,CACD,OAAOrM,CAAC,EAAE;MACN,IAAIiZ,OAAO,EAAE;QACT,MAAMjZ,CAAC;MACX;MACA;MACA;MACA;MACA,IAAI,CAACkZ,cAAc,CAAC,CAAC;IACzB;IACA;IACA,IAAIC,UAAU,CAACC,gBAAgB,IAAI,IAAI,CAACnE,KAAK,EAAE;MAC3C,IAAI,CAACa,8BAA8B,KAAK,IAAIqD,UAAU,CAACC,gBAAgB,CAAC,MAAM;QAC1E,IAAI,CAACF,cAAc,CAAC,CAAC;MACzB,CAAC,CAAC;MACF,IAAI,CAACpD,8BAA8B,CAACuD,OAAO,CAAC,IAAI,CAACpE,KAAK,EAAE;QAAEqE,SAAS,EAAE;MAAK,CAAC,CAAC;IAChF;EACJ;EACAJ,cAAcA,CAAA,EAAG;IACb;IACA;IACA,IAAI,CAAC,IAAI,CAACjE,KAAK,IAAI,CAAC,IAAI,CAACD,KAAK,IAAI,IAAI,CAACC,KAAK,CAACsE,QAAQ,CAAC9J,MAAM,KAAK,CAAC,EAAE;MAChE,IAAI,IAAI,CAACwF,KAAK,IAAI,IAAI,CAAC/L,OAAO,CAAC4D,UAAU,EAAE;QACvC,IAAI,CAAC+J,cAAc,CAAC,IAAI,CAAC5B,KAAK,EAAE,IAAI,CAAC/L,OAAO,CAAC4D,UAAU,EAAE,KAAK,CAAC;MACnE;MACA,IAAI,IAAI,CAACkI,KAAK,IAAI,IAAI,CAACA,KAAK,CAACqB,aAAa,EAAE;QACxC,IAAI,CAACL,mBAAmB,GAAG,IAAI,CAAChB,KAAK,CAACqB,aAAa;QACnD,IAAI,CAACrB,KAAK,CAAC/M,MAAM,CAAC,CAAC;MACvB;MACA,IAAI,CAAC6O,sBAAsB,CAAC,CAAC;IACjC;EACJ;EACAA,sBAAsBA,CAAA,EAAG;IACrB,IAAI,CAACf,4BAA4B,EAAEW,OAAO,CAAC,CAAC;IAC5C,IAAI,CAACX,4BAA4B,GAAGnI,SAAS;IAC7C,IAAI,CAACkI,8BAA8B,EAAE0D,UAAU,CAAC,CAAC;EACrD;EACA;EACAjC,sBAAsBA,CAAA,EAAG;IACrB,MAAM1K,cAAc,GAAG,IAAI,CAAC6I,eAAe;IAC3C7I,cAAc,EAAEpF,OAAO,CAAC,CAAC;IACzBoF,cAAc,EAAEvC,MAAM,GAAG,CAAC;EAC9B;AACJ;;AAEA;AACA;AACA;AACA,MAAMmP,gBAAgB,GAAG,6CAA6C;AACtE;AACA,MAAMC,cAAc,GAAG,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA,SAASC,uCAAuCA,CAACrT,QAAQ,EAAE8H,MAAM,EAAE;EAC/D,OAAO,IAAIwL,iCAAiC,CAACxL,MAAM,EAAE9H,QAAQ,CAACE,GAAG,CAACjB,yDAAa,CAAC,EAAEe,QAAQ,CAACE,GAAG,CAAC/C,mDAAQ,CAAC,EAAE6C,QAAQ,CAACE,GAAG,CAAC3E,qDAAQ,CAAC,EAAEyE,QAAQ,CAACE,GAAG,CAAC8M,gBAAgB,CAAC,CAAC;AACrK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMsG,iCAAiC,CAAC;EACpCnT,cAAc;EACdM,SAAS;EACT4J,SAAS;EACTkJ,iBAAiB;EACjB;EACAzQ,WAAW;EACX;EACA0Q,gBAAgB;EAChB;EACAC,oBAAoB,GAAG;IAAErR,KAAK,EAAE,CAAC;IAAEF,MAAM,EAAE;EAAE,CAAC;EAC9C;EACAwR,SAAS,GAAG,KAAK;EACjB;EACAC,QAAQ,GAAG,IAAI;EACf;EACAC,cAAc,GAAG,KAAK;EACtB;EACAC,sBAAsB,GAAG,IAAI;EAC7B;EACAC,eAAe,GAAG,KAAK;EACvB;EACAC,WAAW;EACX;EACAC,YAAY;EACZ;EACAC,aAAa;EACb;EACAC,cAAc;EACd;EACAC,eAAe,GAAG,CAAC;EACnB;EACAC,YAAY,GAAG,EAAE;EACjB;EACAC,mBAAmB,GAAG,EAAE;EACxB;EACAC,OAAO;EACP;EACA3F,KAAK;EACL;EACA4F,WAAW;EACX;AACJ;AACA;AACA;EACIC,YAAY;EACZ;EACAC,aAAa;EACb;EACAC,qBAAqB;EACrB;EACAC,gBAAgB,gBAAG,IAAI9V,yCAAO,CAAC,CAAC;EAChC;EACA+V,mBAAmB,GAAG9V,8CAAY,CAACwQ,KAAK;EACxC;EACAuF,QAAQ,GAAG,CAAC;EACZ;EACAC,QAAQ,GAAG,CAAC;EACZ;EACAC,wBAAwB;EACxB;EACAC,oBAAoB,GAAG,EAAE;EACzB;EACAC,mBAAmB;EACnB;EACAC,eAAe,GAAG,IAAI,CAACP,gBAAgB;EACvC;EACA,IAAIQ,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACd,mBAAmB;EACnC;EACA5X,WAAWA,CAAC2Y,WAAW,EAAEjV,cAAc,EAAEM,SAAS,EAAE4J,SAAS,EAAEkJ,iBAAiB,EAAE;IAC9E,IAAI,CAACpT,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACM,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAAC4J,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACkJ,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAAC8B,SAAS,CAACD,WAAW,CAAC;EAC/B;EACA;EACA1U,MAAMA,CAACsC,UAAU,EAAE;IACf,IAAI,IAAI,CAACF,WAAW,IAChBE,UAAU,KAAK,IAAI,CAACF,WAAW,KAC9B,OAAO5F,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MACjD,MAAMoF,KAAK,CAAC,0DAA0D,CAAC;IAC3E;IACA,IAAI,CAACgT,kBAAkB,CAAC,CAAC;IACzBtS,UAAU,CAAC6M,WAAW,CAAC5O,SAAS,CAACC,GAAG,CAACiS,gBAAgB,CAAC;IACtD,IAAI,CAACrQ,WAAW,GAAGE,UAAU;IAC7B,IAAI,CAACwR,YAAY,GAAGxR,UAAU,CAAC6M,WAAW;IAC1C,IAAI,CAAClB,KAAK,GAAG3L,UAAU,CAACK,cAAc;IACtC,IAAI,CAACkR,WAAW,GAAG,KAAK;IACxB,IAAI,CAACf,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACiB,aAAa,GAAG,IAAI;IACzB,IAAI,CAACG,mBAAmB,CAAC7Q,WAAW,CAAC,CAAC;IACtC,IAAI,CAAC6Q,mBAAmB,GAAG,IAAI,CAACzU,cAAc,CAACoV,MAAM,CAAC,CAAC,CAAC9R,SAAS,CAAC,MAAM;MACpE;MACA;MACA;MACA,IAAI,CAAC+P,gBAAgB,GAAG,IAAI;MAC5B,IAAI,CAAChC,KAAK,CAAC,CAAC;IAChB,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIA,KAAKA,CAAA,EAAG;IACJ;IACA,IAAI,IAAI,CAAC+C,WAAW,IAAI,CAAC,IAAI,CAAClK,SAAS,CAAC5O,SAAS,EAAE;MAC/C;IACJ;IACA;IACA;IACA;IACA,IAAI,CAAC,IAAI,CAAC+X,gBAAgB,IAAI,IAAI,CAACM,eAAe,IAAI,IAAI,CAACW,aAAa,EAAE;MACtE,IAAI,CAACe,mBAAmB,CAAC,CAAC;MAC1B;IACJ;IACA,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,0BAA0B,CAAC,CAAC;IACjC,IAAI,CAACC,uBAAuB,CAAC,CAAC;IAC9B;IACA;IACA;IACA,IAAI,CAAC1B,aAAa,GAAG,IAAI,CAAC2B,wBAAwB,CAAC,CAAC;IACpD,IAAI,CAAC7B,WAAW,GAAG,IAAI,CAAC8B,cAAc,CAAC,CAAC;IACxC,IAAI,CAAC7B,YAAY,GAAG,IAAI,CAACrF,KAAK,CAAC/I,qBAAqB,CAAC,CAAC;IACtD,IAAI,CAACsO,cAAc,GAAG,IAAI,CAACX,iBAAiB,CAACpG,mBAAmB,CAAC,CAAC,CAACvH,qBAAqB,CAAC,CAAC;IAC1F,MAAMkQ,UAAU,GAAG,IAAI,CAAC/B,WAAW;IACnC,MAAMpO,WAAW,GAAG,IAAI,CAACqO,YAAY;IACrC,MAAM+B,YAAY,GAAG,IAAI,CAAC9B,aAAa;IACvC,MAAM+B,aAAa,GAAG,IAAI,CAAC9B,cAAc;IACzC;IACA,MAAM+B,YAAY,GAAG,EAAE;IACvB;IACA,IAAIC,QAAQ;IACZ;IACA;IACA,KAAK,IAAIC,GAAG,IAAI,IAAI,CAAC9B,mBAAmB,EAAE;MACtC;MACA,IAAI+B,WAAW,GAAG,IAAI,CAACC,eAAe,CAACP,UAAU,EAAEE,aAAa,EAAEG,GAAG,CAAC;MACtE;MACA;MACA;MACA,IAAIG,YAAY,GAAG,IAAI,CAACC,gBAAgB,CAACH,WAAW,EAAEzQ,WAAW,EAAEwQ,GAAG,CAAC;MACvE;MACA,IAAIK,UAAU,GAAG,IAAI,CAACC,cAAc,CAACH,YAAY,EAAE3Q,WAAW,EAAEoQ,YAAY,EAAEI,GAAG,CAAC;MAClF;MACA,IAAIK,UAAU,CAACE,0BAA0B,EAAE;QACvC,IAAI,CAAChD,SAAS,GAAG,KAAK;QACtB,IAAI,CAACiD,cAAc,CAACR,GAAG,EAAEC,WAAW,CAAC;QACrC;MACJ;MACA;MACA;MACA,IAAI,IAAI,CAACQ,6BAA6B,CAACJ,UAAU,EAAEF,YAAY,EAAEP,YAAY,CAAC,EAAE;QAC5E;QACA;QACAE,YAAY,CAAClN,IAAI,CAAC;UACd8N,QAAQ,EAAEV,GAAG;UACbrO,MAAM,EAAEsO,WAAW;UACnBzQ,WAAW;UACXmR,eAAe,EAAE,IAAI,CAACC,yBAAyB,CAACX,WAAW,EAAED,GAAG;QACpE,CAAC,CAAC;QACF;MACJ;MACA;MACA;MACA;MACA,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CAACM,UAAU,CAACQ,WAAW,GAAGR,UAAU,CAACQ,WAAW,EAAE;QACvEd,QAAQ,GAAG;UAAEM,UAAU;UAAEF,YAAY;UAAEF,WAAW;UAAES,QAAQ,EAAEV,GAAG;UAAExQ;QAAY,CAAC;MACpF;IACJ;IACA;IACA;IACA,IAAIsQ,YAAY,CAAC9M,MAAM,EAAE;MACrB,IAAI8N,OAAO,GAAG,IAAI;MAClB,IAAIC,SAAS,GAAG,CAAC,CAAC;MAClB,KAAK,MAAMC,GAAG,IAAIlB,YAAY,EAAE;QAC5B,MAAMmB,KAAK,GAAGD,GAAG,CAACL,eAAe,CAAC1U,KAAK,GAAG+U,GAAG,CAACL,eAAe,CAAC5U,MAAM,IAAIiV,GAAG,CAACN,QAAQ,CAACQ,MAAM,IAAI,CAAC,CAAC;QACjG,IAAID,KAAK,GAAGF,SAAS,EAAE;UACnBA,SAAS,GAAGE,KAAK;UACjBH,OAAO,GAAGE,GAAG;QACjB;MACJ;MACA,IAAI,CAACzD,SAAS,GAAG,KAAK;MACtB,IAAI,CAACiD,cAAc,CAACM,OAAO,CAACJ,QAAQ,EAAEI,OAAO,CAACnP,MAAM,CAAC;MACrD;IACJ;IACA;IACA;IACA,IAAI,IAAI,CAAC6L,QAAQ,EAAE;MACf;MACA,IAAI,CAACD,SAAS,GAAG,IAAI;MACrB,IAAI,CAACiD,cAAc,CAACT,QAAQ,CAACW,QAAQ,EAAEX,QAAQ,CAACE,WAAW,CAAC;MAC5D;IACJ;IACA;IACA;IACA,IAAI,CAACO,cAAc,CAACT,QAAQ,CAACW,QAAQ,EAAEX,QAAQ,CAACE,WAAW,CAAC;EAChE;EACApS,MAAMA,CAAA,EAAG;IACL,IAAI,CAACyR,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAAChB,aAAa,GAAG,IAAI;IACzB,IAAI,CAACQ,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACL,mBAAmB,CAAC7Q,WAAW,CAAC,CAAC;EAC1C;EACA;EACAsK,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACkG,WAAW,EAAE;MAClB;IACJ;IACA;IACA;IACA,IAAI,IAAI,CAACC,YAAY,EAAE;MACnB8C,YAAY,CAAC,IAAI,CAAC9C,YAAY,CAACxT,KAAK,EAAE;QAClCX,GAAG,EAAE,EAAE;QACPC,IAAI,EAAE,EAAE;QACRwE,KAAK,EAAE,EAAE;QACTH,MAAM,EAAE,EAAE;QACVzC,MAAM,EAAE,EAAE;QACVE,KAAK,EAAE,EAAE;QACTmV,UAAU,EAAE,EAAE;QACdC,cAAc,EAAE;MACpB,CAAC,CAAC;IACN;IACA,IAAI,IAAI,CAAC7I,KAAK,EAAE;MACZ,IAAI,CAAC+G,0BAA0B,CAAC,CAAC;IACrC;IACA,IAAI,IAAI,CAAC5S,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAAC+M,WAAW,CAAC5O,SAAS,CAACU,MAAM,CAACwR,gBAAgB,CAAC;IACnE;IACA,IAAI,CAACnP,MAAM,CAAC,CAAC;IACb,IAAI,CAAC2Q,gBAAgB,CAACzD,QAAQ,CAAC,CAAC;IAChC,IAAI,CAACpO,WAAW,GAAG,IAAI,CAAC0R,YAAY,GAAG,IAAI;IAC3C,IAAI,CAACD,WAAW,GAAG,IAAI;EAC3B;EACA;AACJ;AACA;AACA;AACA;EACIiB,mBAAmBA,CAAA,EAAG;IAClB,IAAI,IAAI,CAACjB,WAAW,IAAI,CAAC,IAAI,CAAClK,SAAS,CAAC5O,SAAS,EAAE;MAC/C;IACJ;IACA,MAAMgc,YAAY,GAAG,IAAI,CAAChD,aAAa;IACvC,IAAIgD,YAAY,EAAE;MACd,IAAI,CAAC1D,WAAW,GAAG,IAAI,CAAC8B,cAAc,CAAC,CAAC;MACxC,IAAI,CAAC7B,YAAY,GAAG,IAAI,CAACrF,KAAK,CAAC/I,qBAAqB,CAAC,CAAC;MACtD,IAAI,CAACqO,aAAa,GAAG,IAAI,CAAC2B,wBAAwB,CAAC,CAAC;MACpD,IAAI,CAAC1B,cAAc,GAAG,IAAI,CAACX,iBAAiB,CAACpG,mBAAmB,CAAC,CAAC,CAACvH,qBAAqB,CAAC,CAAC;MAC1F,MAAMwQ,WAAW,GAAG,IAAI,CAACC,eAAe,CAAC,IAAI,CAACtC,WAAW,EAAE,IAAI,CAACG,cAAc,EAAEuD,YAAY,CAAC;MAC7F,IAAI,CAACd,cAAc,CAACc,YAAY,EAAErB,WAAW,CAAC;IAClD,CAAC,MACI;MACD,IAAI,CAAC5E,KAAK,CAAC,CAAC;IAChB;EACJ;EACA;AACJ;AACA;AACA;AACA;EACIkG,wBAAwBA,CAACC,WAAW,EAAE;IAClC,IAAI,CAACvD,YAAY,GAAGuD,WAAW;IAC/B,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIC,aAAaA,CAACzC,SAAS,EAAE;IACrB,IAAI,CAACd,mBAAmB,GAAGc,SAAS;IACpC;IACA;IACA,IAAIA,SAAS,CAAClM,OAAO,CAAC,IAAI,CAACwL,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE;MAC9C,IAAI,CAACA,aAAa,GAAG,IAAI;IAC7B;IACA,IAAI,CAACa,kBAAkB,CAAC,CAAC;IACzB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIuC,kBAAkBA,CAACC,MAAM,EAAE;IACvB,IAAI,CAAC3D,eAAe,GAAG2D,MAAM;IAC7B,OAAO,IAAI;EACf;EACA;EACAC,sBAAsBA,CAACC,kBAAkB,GAAG,IAAI,EAAE;IAC9C,IAAI,CAACnE,sBAAsB,GAAGmE,kBAAkB;IAChD,OAAO,IAAI;EACf;EACA;EACAC,iBAAiBA,CAACC,aAAa,GAAG,IAAI,EAAE;IACpC,IAAI,CAACtE,cAAc,GAAGsE,aAAa;IACnC,OAAO,IAAI;EACf;EACA;EACAC,QAAQA,CAACC,OAAO,GAAG,IAAI,EAAE;IACrB,IAAI,CAACzE,QAAQ,GAAGyE,OAAO;IACvB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;EACIC,kBAAkBA,CAACC,QAAQ,GAAG,IAAI,EAAE;IAChC,IAAI,CAACxE,eAAe,GAAGwE,QAAQ;IAC/B,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIjD,SAASA,CAACvN,MAAM,EAAE;IACd,IAAI,CAACwM,OAAO,GAAGxM,MAAM;IACrB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIyQ,kBAAkBA,CAACC,MAAM,EAAE;IACvB,IAAI,CAAC3D,QAAQ,GAAG2D,MAAM;IACtB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIC,kBAAkBA,CAACD,MAAM,EAAE;IACvB,IAAI,CAAC1D,QAAQ,GAAG0D,MAAM;IACtB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,qBAAqBA,CAACC,QAAQ,EAAE;IAC5B,IAAI,CAAC5D,wBAAwB,GAAG4D,QAAQ;IACxC,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACItC,eAAeA,CAACP,UAAU,EAAEE,aAAa,EAAEG,GAAG,EAAE;IAC5C,IAAIvb,CAAC;IACL,IAAIub,GAAG,CAACzO,OAAO,IAAI,QAAQ,EAAE;MACzB;MACA;MACA9M,CAAC,GAAGkb,UAAU,CAACxV,IAAI,GAAGwV,UAAU,CAAC1T,KAAK,GAAG,CAAC;IAC9C,CAAC,MACI;MACD,MAAMwW,MAAM,GAAG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG/C,UAAU,CAAChR,KAAK,GAAGgR,UAAU,CAACxV,IAAI;MACjE,MAAMwY,IAAI,GAAG,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG/C,UAAU,CAACxV,IAAI,GAAGwV,UAAU,CAAChR,KAAK;MAC/DlK,CAAC,GAAGub,GAAG,CAACzO,OAAO,IAAI,OAAO,GAAGkR,MAAM,GAAGE,IAAI;IAC9C;IACA;IACA;IACA,IAAI9C,aAAa,CAAC1V,IAAI,GAAG,CAAC,EAAE;MACxB1F,CAAC,IAAIob,aAAa,CAAC1V,IAAI;IAC3B;IACA,IAAIzF,CAAC;IACL,IAAIsb,GAAG,CAACxO,OAAO,IAAI,QAAQ,EAAE;MACzB9M,CAAC,GAAGib,UAAU,CAACzV,GAAG,GAAGyV,UAAU,CAAC5T,MAAM,GAAG,CAAC;IAC9C,CAAC,MACI;MACDrH,CAAC,GAAGsb,GAAG,CAACxO,OAAO,IAAI,KAAK,GAAGmO,UAAU,CAACzV,GAAG,GAAGyV,UAAU,CAACnR,MAAM;IACjE;IACA;IACA;IACA;IACA;IACA;IACA,IAAIqR,aAAa,CAAC3V,GAAG,GAAG,CAAC,EAAE;MACvBxF,CAAC,IAAImb,aAAa,CAAC3V,GAAG;IAC1B;IACA,OAAO;MAAEzF,CAAC;MAAEC;IAAE,CAAC;EACnB;EACA;AACJ;AACA;AACA;EACI0b,gBAAgBA,CAACH,WAAW,EAAEzQ,WAAW,EAAEwQ,GAAG,EAAE;IAC5C;IACA;IACA,IAAI4C,aAAa;IACjB,IAAI5C,GAAG,CAACvO,QAAQ,IAAI,QAAQ,EAAE;MAC1BmR,aAAa,GAAG,CAACpT,WAAW,CAACvD,KAAK,GAAG,CAAC;IAC1C,CAAC,MACI,IAAI+T,GAAG,CAACvO,QAAQ,KAAK,OAAO,EAAE;MAC/BmR,aAAa,GAAG,IAAI,CAACF,MAAM,CAAC,CAAC,GAAG,CAAClT,WAAW,CAACvD,KAAK,GAAG,CAAC;IAC1D,CAAC,MACI;MACD2W,aAAa,GAAG,IAAI,CAACF,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAClT,WAAW,CAACvD,KAAK;IAC1D;IACA,IAAI4W,aAAa;IACjB,IAAI7C,GAAG,CAACtO,QAAQ,IAAI,QAAQ,EAAE;MAC1BmR,aAAa,GAAG,CAACrT,WAAW,CAACzD,MAAM,GAAG,CAAC;IAC3C,CAAC,MACI;MACD8W,aAAa,GAAG7C,GAAG,CAACtO,QAAQ,IAAI,KAAK,GAAG,CAAC,GAAG,CAAClC,WAAW,CAACzD,MAAM;IACnE;IACA;IACA,OAAO;MACHtH,CAAC,EAAEwb,WAAW,CAACxb,CAAC,GAAGme,aAAa;MAChCle,CAAC,EAAEub,WAAW,CAACvb,CAAC,GAAGme;IACvB,CAAC;EACL;EACA;EACAvC,cAAcA,CAACwC,KAAK,EAAEC,cAAc,EAAEnX,QAAQ,EAAE8U,QAAQ,EAAE;IACtD;IACA;IACA,MAAM9O,OAAO,GAAGoR,4BAA4B,CAACD,cAAc,CAAC;IAC5D,IAAI;MAAEte,CAAC;MAAEC;IAAE,CAAC,GAAGoe,KAAK;IACpB,IAAIzR,OAAO,GAAG,IAAI,CAAC4R,UAAU,CAACvC,QAAQ,EAAE,GAAG,CAAC;IAC5C,IAAIpP,OAAO,GAAG,IAAI,CAAC2R,UAAU,CAACvC,QAAQ,EAAE,GAAG,CAAC;IAC5C;IACA,IAAIrP,OAAO,EAAE;MACT5M,CAAC,IAAI4M,OAAO;IAChB;IACA,IAAIC,OAAO,EAAE;MACT5M,CAAC,IAAI4M,OAAO;IAChB;IACA;IACA,IAAI4R,YAAY,GAAG,CAAC,GAAGze,CAAC;IACxB,IAAI0e,aAAa,GAAG1e,CAAC,GAAGmN,OAAO,CAAC3F,KAAK,GAAGL,QAAQ,CAACK,KAAK;IACtD,IAAImX,WAAW,GAAG,CAAC,GAAG1e,CAAC;IACvB,IAAI2e,cAAc,GAAG3e,CAAC,GAAGkN,OAAO,CAAC7F,MAAM,GAAGH,QAAQ,CAACG,MAAM;IACzD;IACA,IAAIuX,YAAY,GAAG,IAAI,CAACC,kBAAkB,CAAC3R,OAAO,CAAC3F,KAAK,EAAEiX,YAAY,EAAEC,aAAa,CAAC;IACtF,IAAIK,aAAa,GAAG,IAAI,CAACD,kBAAkB,CAAC3R,OAAO,CAAC7F,MAAM,EAAEqX,WAAW,EAAEC,cAAc,CAAC;IACxF,IAAIxC,WAAW,GAAGyC,YAAY,GAAGE,aAAa;IAC9C,OAAO;MACH3C,WAAW;MACXN,0BAA0B,EAAE3O,OAAO,CAAC3F,KAAK,GAAG2F,OAAO,CAAC7F,MAAM,KAAK8U,WAAW;MAC1E4C,wBAAwB,EAAED,aAAa,KAAK5R,OAAO,CAAC7F,MAAM;MAC1D2X,0BAA0B,EAAEJ,YAAY,IAAI1R,OAAO,CAAC3F;IACxD,CAAC;EACL;EACA;AACJ;AACA;AACA;AACA;AACA;EACIwU,6BAA6BA,CAACO,GAAG,EAAE8B,KAAK,EAAElX,QAAQ,EAAE;IAChD,IAAI,IAAI,CAAC8R,sBAAsB,EAAE;MAC7B,MAAMiG,eAAe,GAAG/X,QAAQ,CAAC4C,MAAM,GAAGsU,KAAK,CAACpe,CAAC;MACjD,MAAMkf,cAAc,GAAGhY,QAAQ,CAAC+C,KAAK,GAAGmU,KAAK,CAACre,CAAC;MAC/C,MAAMiM,SAAS,GAAGmT,aAAa,CAAC,IAAI,CAAClX,WAAW,CAACyO,SAAS,CAAC,CAAC,CAAC1K,SAAS,CAAC;MACvE,MAAMD,QAAQ,GAAGoT,aAAa,CAAC,IAAI,CAAClX,WAAW,CAACyO,SAAS,CAAC,CAAC,CAAC3K,QAAQ,CAAC;MACrE,MAAMqT,WAAW,GAAG9C,GAAG,CAACyC,wBAAwB,IAAK/S,SAAS,IAAI,IAAI,IAAIA,SAAS,IAAIiT,eAAgB;MACvG,MAAMI,aAAa,GAAG/C,GAAG,CAAC0C,0BAA0B,IAAKjT,QAAQ,IAAI,IAAI,IAAIA,QAAQ,IAAImT,cAAe;MACxG,OAAOE,WAAW,IAAIC,aAAa;IACvC;IACA,OAAO,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,oBAAoBA,CAACC,KAAK,EAAElB,cAAc,EAAExV,cAAc,EAAE;IACxD;IACA;IACA;IACA,IAAI,IAAI,CAACuR,mBAAmB,IAAI,IAAI,CAACnB,eAAe,EAAE;MAClD,OAAO;QACHlZ,CAAC,EAAEwf,KAAK,CAACxf,CAAC,GAAG,IAAI,CAACqa,mBAAmB,CAACra,CAAC;QACvCC,CAAC,EAAEuf,KAAK,CAACvf,CAAC,GAAG,IAAI,CAACoa,mBAAmB,CAACpa;MAC1C,CAAC;IACL;IACA;IACA;IACA,MAAMkN,OAAO,GAAGoR,4BAA4B,CAACD,cAAc,CAAC;IAC5D,MAAMnX,QAAQ,GAAG,IAAI,CAACkS,aAAa;IACnC;IACA;IACA,MAAMoG,aAAa,GAAG1W,IAAI,CAAC2W,GAAG,CAACF,KAAK,CAACxf,CAAC,GAAGmN,OAAO,CAAC3F,KAAK,GAAGL,QAAQ,CAACK,KAAK,EAAE,CAAC,CAAC;IAC3E,MAAMmY,cAAc,GAAG5W,IAAI,CAAC2W,GAAG,CAACF,KAAK,CAACvf,CAAC,GAAGkN,OAAO,CAAC7F,MAAM,GAAGH,QAAQ,CAACG,MAAM,EAAE,CAAC,CAAC;IAC9E,MAAMsY,WAAW,GAAG7W,IAAI,CAAC2W,GAAG,CAACvY,QAAQ,CAAC1B,GAAG,GAAGqD,cAAc,CAACrD,GAAG,GAAG+Z,KAAK,CAACvf,CAAC,EAAE,CAAC,CAAC;IAC5E,MAAM4f,YAAY,GAAG9W,IAAI,CAAC2W,GAAG,CAACvY,QAAQ,CAACzB,IAAI,GAAGoD,cAAc,CAACpD,IAAI,GAAG8Z,KAAK,CAACxf,CAAC,EAAE,CAAC,CAAC;IAC/E;IACA,IAAI8f,KAAK,GAAG,CAAC;IACb,IAAIC,KAAK,GAAG,CAAC;IACb;IACA;IACA;IACA,IAAI5S,OAAO,CAAC3F,KAAK,IAAIL,QAAQ,CAACK,KAAK,EAAE;MACjCsY,KAAK,GAAGD,YAAY,IAAI,CAACJ,aAAa;IAC1C,CAAC,MACI;MACDK,KAAK,GAAGN,KAAK,CAACxf,CAAC,GAAG,IAAI,CAACuZ,eAAe,GAAGpS,QAAQ,CAACzB,IAAI,GAAGoD,cAAc,CAACpD,IAAI,GAAG8Z,KAAK,CAACxf,CAAC,GAAG,CAAC;IAC9F;IACA,IAAImN,OAAO,CAAC7F,MAAM,IAAIH,QAAQ,CAACG,MAAM,EAAE;MACnCyY,KAAK,GAAGH,WAAW,IAAI,CAACD,cAAc;IAC1C,CAAC,MACI;MACDI,KAAK,GAAGP,KAAK,CAACvf,CAAC,GAAG,IAAI,CAACsZ,eAAe,GAAGpS,QAAQ,CAAC1B,GAAG,GAAGqD,cAAc,CAACrD,GAAG,GAAG+Z,KAAK,CAACvf,CAAC,GAAG,CAAC;IAC5F;IACA,IAAI,CAACoa,mBAAmB,GAAG;MAAEra,CAAC,EAAE8f,KAAK;MAAE7f,CAAC,EAAE8f;IAAM,CAAC;IACjD,OAAO;MACH/f,CAAC,EAAEwf,KAAK,CAACxf,CAAC,GAAG8f,KAAK;MAClB7f,CAAC,EAAEuf,KAAK,CAACvf,CAAC,GAAG8f;IACjB,CAAC;EACL;EACA;AACJ;AACA;AACA;AACA;EACIhE,cAAcA,CAACE,QAAQ,EAAET,WAAW,EAAE;IAClC,IAAI,CAACwE,mBAAmB,CAAC/D,QAAQ,CAAC;IAClC,IAAI,CAACgE,wBAAwB,CAACzE,WAAW,EAAES,QAAQ,CAAC;IACpD,IAAI,CAACiE,qBAAqB,CAAC1E,WAAW,EAAES,QAAQ,CAAC;IACjD,IAAIA,QAAQ,CAACrQ,UAAU,EAAE;MACrB,IAAI,CAACuU,gBAAgB,CAAClE,QAAQ,CAACrQ,UAAU,CAAC;IAC9C;IACA;IACA;IACA;IACA,IAAI,IAAI,CAACmO,gBAAgB,CAAC5K,SAAS,CAACZ,MAAM,EAAE;MACxC,MAAM6R,gBAAgB,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;MACpD;MACA;MACA,IAAIpE,QAAQ,KAAK,IAAI,CAACpC,aAAa,IAC/B,CAAC,IAAI,CAACC,qBAAqB,IAC3B,CAACwG,uBAAuB,CAAC,IAAI,CAACxG,qBAAqB,EAAEsG,gBAAgB,CAAC,EAAE;QACxE,MAAMG,WAAW,GAAG,IAAI9S,8BAA8B,CAACwO,QAAQ,EAAEmE,gBAAgB,CAAC;QAClF,IAAI,CAACrG,gBAAgB,CAAC3K,IAAI,CAACmR,WAAW,CAAC;MAC3C;MACA,IAAI,CAACzG,qBAAqB,GAAGsG,gBAAgB;IACjD;IACA;IACA,IAAI,CAACvG,aAAa,GAAGoC,QAAQ;IAC7B,IAAI,CAACrD,gBAAgB,GAAG,KAAK;EACjC;EACA;EACAoH,mBAAmBA,CAAC/D,QAAQ,EAAE;IAC1B,IAAI,CAAC,IAAI,CAAC9B,wBAAwB,EAAE;MAChC;IACJ;IACA,MAAMqG,QAAQ,GAAG,IAAI,CAAC5G,YAAY,CAAChH,gBAAgB,CAAC,IAAI,CAACuH,wBAAwB,CAAC;IAClF,IAAIsG,OAAO;IACX,IAAIC,OAAO,GAAGzE,QAAQ,CAAChP,QAAQ;IAC/B,IAAIgP,QAAQ,CAACjP,QAAQ,KAAK,QAAQ,EAAE;MAChCyT,OAAO,GAAG,QAAQ;IACtB,CAAC,MACI,IAAI,IAAI,CAACxC,MAAM,CAAC,CAAC,EAAE;MACpBwC,OAAO,GAAGxE,QAAQ,CAACjP,QAAQ,KAAK,OAAO,GAAG,OAAO,GAAG,MAAM;IAC9D,CAAC,MACI;MACDyT,OAAO,GAAGxE,QAAQ,CAACjP,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAC9D;IACA,KAAK,IAAIha,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwtB,QAAQ,CAACjS,MAAM,EAAEvb,CAAC,EAAE,EAAE;MACtCwtB,QAAQ,CAACxtB,CAAC,CAAC,CAACoT,KAAK,CAACua,eAAe,GAAG,GAAGF,OAAO,IAAIC,OAAO,EAAE;IAC/D;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;EACIvE,yBAAyBA,CAACjP,MAAM,EAAE+O,QAAQ,EAAE;IACxC,MAAM9U,QAAQ,GAAG,IAAI,CAACkS,aAAa;IACnC,MAAMuH,KAAK,GAAG,IAAI,CAAC3C,MAAM,CAAC,CAAC;IAC3B,IAAI3W,MAAM,EAAE7B,GAAG,EAAEsE,MAAM;IACvB,IAAIkS,QAAQ,CAAChP,QAAQ,KAAK,KAAK,EAAE;MAC7B;MACAxH,GAAG,GAAGyH,MAAM,CAACjN,CAAC;MACdqH,MAAM,GAAGH,QAAQ,CAACG,MAAM,GAAG7B,GAAG,GAAG,IAAI,CAAC8T,eAAe;IACzD,CAAC,MACI,IAAI0C,QAAQ,CAAChP,QAAQ,KAAK,QAAQ,EAAE;MACrC;MACA;MACA;MACAlD,MAAM,GAAG5C,QAAQ,CAACG,MAAM,GAAG4F,MAAM,CAACjN,CAAC,GAAG,IAAI,CAACsZ,eAAe,GAAG,CAAC;MAC9DjS,MAAM,GAAGH,QAAQ,CAACG,MAAM,GAAGyC,MAAM,GAAG,IAAI,CAACwP,eAAe;IAC5D,CAAC,MACI;MACD;MACA;MACA;MACA;MACA,MAAMsH,8BAA8B,GAAG9X,IAAI,CAAC+X,GAAG,CAAC3Z,QAAQ,CAAC4C,MAAM,GAAGmD,MAAM,CAACjN,CAAC,GAAGkH,QAAQ,CAAC1B,GAAG,EAAEyH,MAAM,CAACjN,CAAC,CAAC;MACpG,MAAM8gB,cAAc,GAAG,IAAI,CAAClI,oBAAoB,CAACvR,MAAM;MACvDA,MAAM,GAAGuZ,8BAA8B,GAAG,CAAC;MAC3Cpb,GAAG,GAAGyH,MAAM,CAACjN,CAAC,GAAG4gB,8BAA8B;MAC/C,IAAIvZ,MAAM,GAAGyZ,cAAc,IAAI,CAAC,IAAI,CAACnI,gBAAgB,IAAI,CAAC,IAAI,CAACI,cAAc,EAAE;QAC3EvT,GAAG,GAAGyH,MAAM,CAACjN,CAAC,GAAG8gB,cAAc,GAAG,CAAC;MACvC;IACJ;IACA;IACA,MAAMC,4BAA4B,GAAI/E,QAAQ,CAACjP,QAAQ,KAAK,OAAO,IAAI,CAAC4T,KAAK,IAAM3E,QAAQ,CAACjP,QAAQ,KAAK,KAAK,IAAI4T,KAAM;IACxH;IACA,MAAMK,2BAA2B,GAAIhF,QAAQ,CAACjP,QAAQ,KAAK,KAAK,IAAI,CAAC4T,KAAK,IAAM3E,QAAQ,CAACjP,QAAQ,KAAK,OAAO,IAAI4T,KAAM;IACvH,IAAIpZ,KAAK,EAAE9B,IAAI,EAAEwE,KAAK;IACtB,IAAI+W,2BAA2B,EAAE;MAC7B/W,KAAK,GAAG/C,QAAQ,CAACK,KAAK,GAAG0F,MAAM,CAAClN,CAAC,GAAG,IAAI,CAACuZ,eAAe,GAAG,CAAC;MAC5D/R,KAAK,GAAG0F,MAAM,CAAClN,CAAC,GAAG,IAAI,CAACuZ,eAAe;IAC3C,CAAC,MACI,IAAIyH,4BAA4B,EAAE;MACnCtb,IAAI,GAAGwH,MAAM,CAAClN,CAAC;MACfwH,KAAK,GAAGL,QAAQ,CAAC+C,KAAK,GAAGgD,MAAM,CAAClN,CAAC;IACrC,CAAC,MACI;MACD;MACA;MACA;MACA;MACA,MAAM6gB,8BAA8B,GAAG9X,IAAI,CAAC+X,GAAG,CAAC3Z,QAAQ,CAAC+C,KAAK,GAAGgD,MAAM,CAAClN,CAAC,GAAGmH,QAAQ,CAACzB,IAAI,EAAEwH,MAAM,CAAClN,CAAC,CAAC;MACpG,MAAMkhB,aAAa,GAAG,IAAI,CAACrI,oBAAoB,CAACrR,KAAK;MACrDA,KAAK,GAAGqZ,8BAA8B,GAAG,CAAC;MAC1Cnb,IAAI,GAAGwH,MAAM,CAAClN,CAAC,GAAG6gB,8BAA8B;MAChD,IAAIrZ,KAAK,GAAG0Z,aAAa,IAAI,CAAC,IAAI,CAACtI,gBAAgB,IAAI,CAAC,IAAI,CAACI,cAAc,EAAE;QACzEtT,IAAI,GAAGwH,MAAM,CAAClN,CAAC,GAAGkhB,aAAa,GAAG,CAAC;MACvC;IACJ;IACA,OAAO;MAAEzb,GAAG,EAAEA,GAAG;MAAEC,IAAI,EAAEA,IAAI;MAAEqE,MAAM,EAAEA,MAAM;MAAEG,KAAK,EAAEA,KAAK;MAAE1C,KAAK;MAAEF;IAAO,CAAC;EAChF;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI4Y,qBAAqBA,CAAChT,MAAM,EAAE+O,QAAQ,EAAE;IACpC,MAAMC,eAAe,GAAG,IAAI,CAACC,yBAAyB,CAACjP,MAAM,EAAE+O,QAAQ,CAAC;IACxE;IACA;IACA,IAAI,CAAC,IAAI,CAACrD,gBAAgB,IAAI,CAAC,IAAI,CAACI,cAAc,EAAE;MAChDkD,eAAe,CAAC5U,MAAM,GAAGyB,IAAI,CAAC+X,GAAG,CAAC5E,eAAe,CAAC5U,MAAM,EAAE,IAAI,CAACuR,oBAAoB,CAACvR,MAAM,CAAC;MAC3F4U,eAAe,CAAC1U,KAAK,GAAGuB,IAAI,CAAC+X,GAAG,CAAC5E,eAAe,CAAC1U,KAAK,EAAE,IAAI,CAACqR,oBAAoB,CAACrR,KAAK,CAAC;IAC5F;IACA,MAAMyK,MAAM,GAAG,CAAC,CAAC;IACjB,IAAI,IAAI,CAACkP,iBAAiB,CAAC,CAAC,EAAE;MAC1BlP,MAAM,CAACxM,GAAG,GAAGwM,MAAM,CAACvM,IAAI,GAAG,GAAG;MAC9BuM,MAAM,CAAClI,MAAM,GAAGkI,MAAM,CAAC/H,KAAK,GAAG+H,MAAM,CAAC9F,SAAS,GAAG8F,MAAM,CAAC/F,QAAQ,GAAG,EAAE;MACtE+F,MAAM,CAACzK,KAAK,GAAGyK,MAAM,CAAC3K,MAAM,GAAG,MAAM;IACzC,CAAC,MACI;MACD,MAAM6E,SAAS,GAAG,IAAI,CAACjE,WAAW,CAACyO,SAAS,CAAC,CAAC,CAACxK,SAAS;MACxD,MAAMD,QAAQ,GAAG,IAAI,CAAChE,WAAW,CAACyO,SAAS,CAAC,CAAC,CAACzK,QAAQ;MACtD+F,MAAM,CAAC3K,MAAM,GAAGnD,gEAAmB,CAAC+X,eAAe,CAAC5U,MAAM,CAAC;MAC3D2K,MAAM,CAACxM,GAAG,GAAGtB,gEAAmB,CAAC+X,eAAe,CAACzW,GAAG,CAAC;MACrDwM,MAAM,CAAClI,MAAM,GAAG5F,gEAAmB,CAAC+X,eAAe,CAACnS,MAAM,CAAC;MAC3DkI,MAAM,CAACzK,KAAK,GAAGrD,gEAAmB,CAAC+X,eAAe,CAAC1U,KAAK,CAAC;MACzDyK,MAAM,CAACvM,IAAI,GAAGvB,gEAAmB,CAAC+X,eAAe,CAACxW,IAAI,CAAC;MACvDuM,MAAM,CAAC/H,KAAK,GAAG/F,gEAAmB,CAAC+X,eAAe,CAAChS,KAAK,CAAC;MACzD;MACA,IAAI+R,QAAQ,CAACjP,QAAQ,KAAK,QAAQ,EAAE;QAChCiF,MAAM,CAAC0K,UAAU,GAAG,QAAQ;MAChC,CAAC,MACI;QACD1K,MAAM,CAAC0K,UAAU,GAAGV,QAAQ,CAACjP,QAAQ,KAAK,KAAK,GAAG,UAAU,GAAG,YAAY;MAC/E;MACA,IAAIiP,QAAQ,CAAChP,QAAQ,KAAK,QAAQ,EAAE;QAChCgF,MAAM,CAAC2K,cAAc,GAAG,QAAQ;MACpC,CAAC,MACI;QACD3K,MAAM,CAAC2K,cAAc,GAAGX,QAAQ,CAAChP,QAAQ,KAAK,QAAQ,GAAG,UAAU,GAAG,YAAY;MACtF;MACA,IAAId,SAAS,EAAE;QACX8F,MAAM,CAAC9F,SAAS,GAAGhI,gEAAmB,CAACgI,SAAS,CAAC;MACrD;MACA,IAAID,QAAQ,EAAE;QACV+F,MAAM,CAAC/F,QAAQ,GAAG/H,gEAAmB,CAAC+H,QAAQ,CAAC;MACnD;IACJ;IACA,IAAI,CAAC2M,oBAAoB,GAAGqD,eAAe;IAC3CQ,YAAY,CAAC,IAAI,CAAC9C,YAAY,CAACxT,KAAK,EAAE6L,MAAM,CAAC;EACjD;EACA;EACA8I,uBAAuBA,CAAA,EAAG;IACtB2B,YAAY,CAAC,IAAI,CAAC9C,YAAY,CAACxT,KAAK,EAAE;MAClCX,GAAG,EAAE,GAAG;MACRC,IAAI,EAAE,GAAG;MACTwE,KAAK,EAAE,GAAG;MACVH,MAAM,EAAE,GAAG;MACXzC,MAAM,EAAE,EAAE;MACVE,KAAK,EAAE,EAAE;MACTmV,UAAU,EAAE,EAAE;MACdC,cAAc,EAAE;IACpB,CAAC,CAAC;EACN;EACA;EACA9B,0BAA0BA,CAAA,EAAG;IACzB4B,YAAY,CAAC,IAAI,CAAC3I,KAAK,CAAC3N,KAAK,EAAE;MAC3BX,GAAG,EAAE,EAAE;MACPC,IAAI,EAAE,EAAE;MACRqE,MAAM,EAAE,EAAE;MACVG,KAAK,EAAE,EAAE;MACT+R,QAAQ,EAAE,EAAE;MACZmF,SAAS,EAAE;IACf,CAAC,CAAC;EACN;EACA;EACAnB,wBAAwBA,CAACzE,WAAW,EAAES,QAAQ,EAAE;IAC5C,MAAMhK,MAAM,GAAG,CAAC,CAAC;IACjB,MAAMoP,gBAAgB,GAAG,IAAI,CAACF,iBAAiB,CAAC,CAAC;IACjD,MAAMG,qBAAqB,GAAG,IAAI,CAACrI,sBAAsB;IACzD,MAAMrR,MAAM,GAAG,IAAI,CAACM,WAAW,CAACyO,SAAS,CAAC,CAAC;IAC3C,IAAI0K,gBAAgB,EAAE;MAClB,MAAMvY,cAAc,GAAG,IAAI,CAACvD,cAAc,CAACY,yBAAyB,CAAC,CAAC;MACtEuW,YAAY,CAACzK,MAAM,EAAE,IAAI,CAACsP,iBAAiB,CAACtF,QAAQ,EAAET,WAAW,EAAE1S,cAAc,CAAC,CAAC;MACnF4T,YAAY,CAACzK,MAAM,EAAE,IAAI,CAACuP,iBAAiB,CAACvF,QAAQ,EAAET,WAAW,EAAE1S,cAAc,CAAC,CAAC;IACvF,CAAC,MACI;MACDmJ,MAAM,CAACgK,QAAQ,GAAG,QAAQ;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA,IAAIwF,eAAe,GAAG,EAAE;IACxB,IAAI7U,OAAO,GAAG,IAAI,CAAC4R,UAAU,CAACvC,QAAQ,EAAE,GAAG,CAAC;IAC5C,IAAIpP,OAAO,GAAG,IAAI,CAAC2R,UAAU,CAACvC,QAAQ,EAAE,GAAG,CAAC;IAC5C,IAAIrP,OAAO,EAAE;MACT6U,eAAe,IAAI,cAAc7U,OAAO,MAAM;IAClD;IACA,IAAIC,OAAO,EAAE;MACT4U,eAAe,IAAI,cAAc5U,OAAO,KAAK;IACjD;IACAoF,MAAM,CAACmP,SAAS,GAAGK,eAAe,CAACC,IAAI,CAAC,CAAC;IACzC;IACA;IACA;IACA;IACA;IACA,IAAI9Z,MAAM,CAACuE,SAAS,EAAE;MAClB,IAAIkV,gBAAgB,EAAE;QAClBpP,MAAM,CAAC9F,SAAS,GAAGhI,gEAAmB,CAACyD,MAAM,CAACuE,SAAS,CAAC;MAC5D,CAAC,MACI,IAAImV,qBAAqB,EAAE;QAC5BrP,MAAM,CAAC9F,SAAS,GAAG,EAAE;MACzB;IACJ;IACA,IAAIvE,MAAM,CAACsE,QAAQ,EAAE;MACjB,IAAImV,gBAAgB,EAAE;QAClBpP,MAAM,CAAC/F,QAAQ,GAAG/H,gEAAmB,CAACyD,MAAM,CAACsE,QAAQ,CAAC;MAC1D,CAAC,MACI,IAAIoV,qBAAqB,EAAE;QAC5BrP,MAAM,CAAC/F,QAAQ,GAAG,EAAE;MACxB;IACJ;IACAwQ,YAAY,CAAC,IAAI,CAAC3I,KAAK,CAAC3N,KAAK,EAAE6L,MAAM,CAAC;EAC1C;EACA;EACAsP,iBAAiBA,CAACtF,QAAQ,EAAET,WAAW,EAAE1S,cAAc,EAAE;IACrD;IACA;IACA,IAAImJ,MAAM,GAAG;MAAExM,GAAG,EAAE,EAAE;MAAEsE,MAAM,EAAE;IAAG,CAAC;IACpC,IAAI2R,YAAY,GAAG,IAAI,CAACC,gBAAgB,CAACH,WAAW,EAAE,IAAI,CAACpC,YAAY,EAAE6C,QAAQ,CAAC;IAClF,IAAI,IAAI,CAACnD,SAAS,EAAE;MAChB4C,YAAY,GAAG,IAAI,CAAC6D,oBAAoB,CAAC7D,YAAY,EAAE,IAAI,CAACtC,YAAY,EAAEtQ,cAAc,CAAC;IAC7F;IACA;IACA;IACA,IAAImT,QAAQ,CAAChP,QAAQ,KAAK,QAAQ,EAAE;MAChC;MACA;MACA,MAAM0U,cAAc,GAAG,IAAI,CAAC9b,SAAS,CAACK,eAAe,CAAC0b,YAAY;MAClE3P,MAAM,CAAClI,MAAM,GAAG,GAAG4X,cAAc,IAAIjG,YAAY,CAACzb,CAAC,GAAG,IAAI,CAACmZ,YAAY,CAAC9R,MAAM,CAAC,IAAI;IACvF,CAAC,MACI;MACD2K,MAAM,CAACxM,GAAG,GAAGtB,gEAAmB,CAACuX,YAAY,CAACzb,CAAC,CAAC;IACpD;IACA,OAAOgS,MAAM;EACjB;EACA;EACAuP,iBAAiBA,CAACvF,QAAQ,EAAET,WAAW,EAAE1S,cAAc,EAAE;IACrD;IACA;IACA,IAAImJ,MAAM,GAAG;MAAEvM,IAAI,EAAE,EAAE;MAAEwE,KAAK,EAAE;IAAG,CAAC;IACpC,IAAIwR,YAAY,GAAG,IAAI,CAACC,gBAAgB,CAACH,WAAW,EAAE,IAAI,CAACpC,YAAY,EAAE6C,QAAQ,CAAC;IAClF,IAAI,IAAI,CAACnD,SAAS,EAAE;MAChB4C,YAAY,GAAG,IAAI,CAAC6D,oBAAoB,CAAC7D,YAAY,EAAE,IAAI,CAACtC,YAAY,EAAEtQ,cAAc,CAAC;IAC7F;IACA;IACA;IACA;IACA;IACA,IAAI+Y,uBAAuB;IAC3B,IAAI,IAAI,CAAC5D,MAAM,CAAC,CAAC,EAAE;MACf4D,uBAAuB,GAAG5F,QAAQ,CAACjP,QAAQ,KAAK,KAAK,GAAG,MAAM,GAAG,OAAO;IAC5E,CAAC,MACI;MACD6U,uBAAuB,GAAG5F,QAAQ,CAACjP,QAAQ,KAAK,KAAK,GAAG,OAAO,GAAG,MAAM;IAC5E;IACA;IACA;IACA,IAAI6U,uBAAuB,KAAK,OAAO,EAAE;MACrC,MAAMC,aAAa,GAAG,IAAI,CAACjc,SAAS,CAACK,eAAe,CAAC6b,WAAW;MAChE9P,MAAM,CAAC/H,KAAK,GAAG,GAAG4X,aAAa,IAAIpG,YAAY,CAAC1b,CAAC,GAAG,IAAI,CAACoZ,YAAY,CAAC5R,KAAK,CAAC,IAAI;IACpF,CAAC,MACI;MACDyK,MAAM,CAACvM,IAAI,GAAGvB,gEAAmB,CAACuX,YAAY,CAAC1b,CAAC,CAAC;IACrD;IACA,OAAOiS,MAAM;EACjB;EACA;AACJ;AACA;AACA;EACIoO,oBAAoBA,CAAA,EAAG;IACnB;IACA,MAAM2B,YAAY,GAAG,IAAI,CAAC/G,cAAc,CAAC,CAAC;IAC1C,MAAMgH,aAAa,GAAG,IAAI,CAAClO,KAAK,CAAC/I,qBAAqB,CAAC,CAAC;IACxD;IACA;IACA;IACA,MAAMkX,qBAAqB,GAAG,IAAI,CAAC1I,YAAY,CAAC2I,GAAG,CAAC3Z,UAAU,IAAI;MAC9D,OAAOA,UAAU,CAACE,aAAa,CAAC,CAAC,CAACC,aAAa,CAACqC,qBAAqB,CAAC,CAAC;IAC3E,CAAC,CAAC;IACF,OAAO;MACHqC,eAAe,EAAEjD,2BAA2B,CAAC4X,YAAY,EAAEE,qBAAqB,CAAC;MACjF5U,mBAAmB,EAAE7D,4BAA4B,CAACuY,YAAY,EAAEE,qBAAqB,CAAC;MACtF3U,gBAAgB,EAAEnD,2BAA2B,CAAC6X,aAAa,EAAEC,qBAAqB,CAAC;MACnF1U,oBAAoB,EAAE/D,4BAA4B,CAACwY,aAAa,EAAEC,qBAAqB;IAC3F,CAAC;EACL;EACA;EACApD,kBAAkBA,CAACvQ,MAAM,EAAE,GAAG6T,SAAS,EAAE;IACrC,OAAOA,SAAS,CAACC,MAAM,CAAC,CAACC,YAAY,EAAEC,eAAe,KAAK;MACvD,OAAOD,YAAY,GAAGvZ,IAAI,CAAC2W,GAAG,CAAC6C,eAAe,EAAE,CAAC,CAAC;IACtD,CAAC,EAAEhU,MAAM,CAAC;EACd;EACA;EACAyM,wBAAwBA,CAAA,EAAG;IACvB;IACA;IACA;IACA;IACA;IACA,MAAMxT,KAAK,GAAG,IAAI,CAAC3B,SAAS,CAACK,eAAe,CAAC6b,WAAW;IACxD,MAAMza,MAAM,GAAG,IAAI,CAACzB,SAAS,CAACK,eAAe,CAAC0b,YAAY;IAC1D,MAAM9Y,cAAc,GAAG,IAAI,CAACvD,cAAc,CAACY,yBAAyB,CAAC,CAAC;IACtE,OAAO;MACHV,GAAG,EAAEqD,cAAc,CAACrD,GAAG,GAAG,IAAI,CAAC8T,eAAe;MAC9C7T,IAAI,EAAEoD,cAAc,CAACpD,IAAI,GAAG,IAAI,CAAC6T,eAAe;MAChDrP,KAAK,EAAEpB,cAAc,CAACpD,IAAI,GAAG8B,KAAK,GAAG,IAAI,CAAC+R,eAAe;MACzDxP,MAAM,EAAEjB,cAAc,CAACrD,GAAG,GAAG6B,MAAM,GAAG,IAAI,CAACiS,eAAe;MAC1D/R,KAAK,EAAEA,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC+R,eAAe;MACvCjS,MAAM,EAAEA,MAAM,GAAG,CAAC,GAAG,IAAI,CAACiS;IAC9B,CAAC;EACL;EACA;EACA0E,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI,CAAC/V,WAAW,CAACoP,YAAY,CAAC,CAAC,KAAK,KAAK;EACpD;EACA;EACA6J,iBAAiBA,CAAA,EAAG;IAChB,OAAO,CAAC,IAAI,CAAClI,sBAAsB,IAAI,IAAI,CAACH,SAAS;EACzD;EACA;EACA0F,UAAUA,CAACvC,QAAQ,EAAEuG,IAAI,EAAE;IACvB,IAAIA,IAAI,KAAK,GAAG,EAAE;MACd;MACA;MACA,OAAOvG,QAAQ,CAACrP,OAAO,IAAI,IAAI,GAAG,IAAI,CAACqN,QAAQ,GAAGgC,QAAQ,CAACrP,OAAO;IACtE;IACA,OAAOqP,QAAQ,CAACpP,OAAO,IAAI,IAAI,GAAG,IAAI,CAACqN,QAAQ,GAAG+B,QAAQ,CAACpP,OAAO;EACtE;EACA;EACA6N,kBAAkBA,CAAA,EAAG;IACjB,IAAI,OAAOpY,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/C,IAAI,CAAC,IAAI,CAACmX,mBAAmB,CAAClL,MAAM,EAAE;QAClC,MAAM7G,KAAK,CAAC,uEAAuE,CAAC;MACxF;MACA;MACA;MACA,IAAI,CAAC+R,mBAAmB,CAACrJ,OAAO,CAACqS,IAAI,IAAI;QACrC3U,0BAA0B,CAAC,SAAS,EAAE2U,IAAI,CAAC3V,OAAO,CAAC;QACnDc,wBAAwB,CAAC,SAAS,EAAE6U,IAAI,CAAC1V,OAAO,CAAC;QACjDe,0BAA0B,CAAC,UAAU,EAAE2U,IAAI,CAACzV,QAAQ,CAAC;QACrDY,wBAAwB,CAAC,UAAU,EAAE6U,IAAI,CAACxV,QAAQ,CAAC;MACvD,CAAC,CAAC;IACN;EACJ;EACA;EACAkT,gBAAgBA,CAACtI,UAAU,EAAE;IACzB,IAAI,IAAI,CAAC9D,KAAK,EAAE;MACZ3P,uDAAW,CAACyT,UAAU,CAAC,CAACzH,OAAO,CAACsS,QAAQ,IAAI;QACxC,IAAIA,QAAQ,KAAK,EAAE,IAAI,IAAI,CAACtI,oBAAoB,CAAC/L,OAAO,CAACqU,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;UACvE,IAAI,CAACtI,oBAAoB,CAACjM,IAAI,CAACuU,QAAQ,CAAC;UACxC,IAAI,CAAC3O,KAAK,CAAC1N,SAAS,CAACC,GAAG,CAACoc,QAAQ,CAAC;QACtC;MACJ,CAAC,CAAC;IACN;EACJ;EACA;EACA7H,kBAAkBA,CAAA,EAAG;IACjB,IAAI,IAAI,CAAC9G,KAAK,EAAE;MACZ,IAAI,CAACqG,oBAAoB,CAAChK,OAAO,CAACsS,QAAQ,IAAI;QAC1C,IAAI,CAAC3O,KAAK,CAAC1N,SAAS,CAACU,MAAM,CAAC2b,QAAQ,CAAC;MACzC,CAAC,CAAC;MACF,IAAI,CAACtI,oBAAoB,GAAG,EAAE;IAClC;EACJ;EACA;EACAa,cAAcA,CAAA,EAAG;IACb,MAAM/N,MAAM,GAAG,IAAI,CAACwM,OAAO;IAC3B,IAAIxM,MAAM,YAAYnK,qDAAU,EAAE;MAC9B,OAAOmK,MAAM,CAACvE,aAAa,CAACqC,qBAAqB,CAAC,CAAC;IACvD;IACA;IACA,IAAIkC,MAAM,YAAYyV,OAAO,EAAE;MAC3B,OAAOzV,MAAM,CAAClC,qBAAqB,CAAC,CAAC;IACzC;IACA,MAAMxD,KAAK,GAAG0F,MAAM,CAAC1F,KAAK,IAAI,CAAC;IAC/B,MAAMF,MAAM,GAAG4F,MAAM,CAAC5F,MAAM,IAAI,CAAC;IACjC;IACA,OAAO;MACH7B,GAAG,EAAEyH,MAAM,CAACjN,CAAC;MACb8J,MAAM,EAAEmD,MAAM,CAACjN,CAAC,GAAGqH,MAAM;MACzB5B,IAAI,EAAEwH,MAAM,CAAClN,CAAC;MACdkK,KAAK,EAAEgD,MAAM,CAAClN,CAAC,GAAGwH,KAAK;MACvBF,MAAM;MACNE;IACJ,CAAC;EACL;AACJ;AACA;AACA,SAASkV,YAAYA,CAACkG,WAAW,EAAEC,MAAM,EAAE;EACvC,KAAK,IAAIpW,GAAG,IAAIoW,MAAM,EAAE;IACpB,IAAIA,MAAM,CAACC,cAAc,CAACrW,GAAG,CAAC,EAAE;MAC5BmW,WAAW,CAACnW,GAAG,CAAC,GAAGoW,MAAM,CAACpW,GAAG,CAAC;IAClC;EACJ;EACA,OAAOmW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA,SAASxD,aAAaA,CAAC2D,KAAK,EAAE;EAC1B,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,IAAI,IAAI,EAAE;IAC5C,MAAM,CAAClwB,KAAK,EAAEmwB,KAAK,CAAC,GAAGD,KAAK,CAACE,KAAK,CAACzK,cAAc,CAAC;IAClD,OAAO,CAACwK,KAAK,IAAIA,KAAK,KAAK,IAAI,GAAGE,UAAU,CAACrwB,KAAK,CAAC,GAAG,IAAI;EAC9D;EACA,OAAOkwB,KAAK,IAAI,IAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASxE,4BAA4BA,CAAC4E,UAAU,EAAE;EAC9C,OAAO;IACH1d,GAAG,EAAEsD,IAAI,CAACqa,KAAK,CAACD,UAAU,CAAC1d,GAAG,CAAC;IAC/ByE,KAAK,EAAEnB,IAAI,CAACqa,KAAK,CAACD,UAAU,CAACjZ,KAAK,CAAC;IACnCH,MAAM,EAAEhB,IAAI,CAACqa,KAAK,CAACD,UAAU,CAACpZ,MAAM,CAAC;IACrCrE,IAAI,EAAEqD,IAAI,CAACqa,KAAK,CAACD,UAAU,CAACzd,IAAI,CAAC;IACjC8B,KAAK,EAAEuB,IAAI,CAACqa,KAAK,CAACD,UAAU,CAAC3b,KAAK,CAAC;IACnCF,MAAM,EAAEyB,IAAI,CAACqa,KAAK,CAACD,UAAU,CAAC7b,MAAM;EACxC,CAAC;AACL;AACA;AACA,SAASgZ,uBAAuBA,CAAC7lB,CAAC,EAAEiE,CAAC,EAAE;EACnC,IAAIjE,CAAC,KAAKiE,CAAC,EAAE;IACT,OAAO,IAAI;EACf;EACA,OAAQjE,CAAC,CAAC4S,eAAe,KAAK3O,CAAC,CAAC2O,eAAe,IAC3C5S,CAAC,CAAC6S,mBAAmB,KAAK5O,CAAC,CAAC4O,mBAAmB,IAC/C7S,CAAC,CAAC8S,gBAAgB,KAAK7O,CAAC,CAAC6O,gBAAgB,IACzC9S,CAAC,CAAC+S,oBAAoB,KAAK9O,CAAC,CAAC8O,oBAAoB;AACzD;AACA,MAAM6V,iCAAiC,GAAG,CACtC;EAAEvW,OAAO,EAAE,OAAO;EAAEC,OAAO,EAAE,QAAQ;EAAEC,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAM,CAAC,EAC3E;EAAEH,OAAO,EAAE,OAAO;EAAEC,OAAO,EAAE,KAAK;EAAEC,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAS,CAAC,EAC3E;EAAEH,OAAO,EAAE,KAAK;EAAEC,OAAO,EAAE,QAAQ;EAAEC,QAAQ,EAAE,KAAK;EAAEC,QAAQ,EAAE;AAAM,CAAC,EACvE;EAAEH,OAAO,EAAE,KAAK;EAAEC,OAAO,EAAE,KAAK;EAAEC,QAAQ,EAAE,KAAK;EAAEC,QAAQ,EAAE;AAAS,CAAC,CAC1E;AACD,MAAMqW,oCAAoC,GAAG,CACzC;EAAExW,OAAO,EAAE,KAAK;EAAEC,OAAO,EAAE,KAAK;EAAEC,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAM,CAAC,EACtE;EAAEH,OAAO,EAAE,KAAK;EAAEC,OAAO,EAAE,QAAQ;EAAEC,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAS,CAAC,EAC5E;EAAEH,OAAO,EAAE,OAAO;EAAEC,OAAO,EAAE,KAAK;EAAEC,QAAQ,EAAE,KAAK;EAAEC,QAAQ,EAAE;AAAM,CAAC,EACtE;EAAEH,OAAO,EAAE,OAAO;EAAEC,OAAO,EAAE,QAAQ;EAAEC,QAAQ,EAAE,KAAK;EAAEC,QAAQ,EAAE;AAAS,CAAC,CAC/E;;AAED;AACA,MAAMsW,YAAY,GAAG,4BAA4B;AACjD;AACA;AACA;AACA;AACA,SAASC,4BAA4BA,CAACrY,SAAS,EAAE;EAC7C;EACA;EACA,OAAO,IAAIsY,sBAAsB,CAAC,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,sBAAsB,CAAC;EACzB;EACAvb,WAAW;EACXwb,YAAY,GAAG,QAAQ;EACvBC,UAAU,GAAG,EAAE;EACfC,aAAa,GAAG,EAAE;EAClBC,WAAW,GAAG,EAAE;EAChBC,UAAU,GAAG,EAAE;EACfC,QAAQ,GAAG,EAAE;EACbC,MAAM,GAAG,EAAE;EACXC,OAAO,GAAG,EAAE;EACZtK,WAAW,GAAG,KAAK;EACnB7T,MAAMA,CAACsC,UAAU,EAAE;IACf,MAAMR,MAAM,GAAGQ,UAAU,CAACuO,SAAS,CAAC,CAAC;IACrC,IAAI,CAACzO,WAAW,GAAGE,UAAU;IAC7B,IAAI,IAAI,CAAC4b,MAAM,IAAI,CAACpc,MAAM,CAACJ,KAAK,EAAE;MAC9BY,UAAU,CAAC2O,UAAU,CAAC;QAAEvP,KAAK,EAAE,IAAI,CAACwc;MAAO,CAAC,CAAC;IACjD;IACA,IAAI,IAAI,CAACC,OAAO,IAAI,CAACrc,MAAM,CAACN,MAAM,EAAE;MAChCc,UAAU,CAAC2O,UAAU,CAAC;QAAEzP,MAAM,EAAE,IAAI,CAAC2c;MAAQ,CAAC,CAAC;IACnD;IACA7b,UAAU,CAAC6M,WAAW,CAAC5O,SAAS,CAACC,GAAG,CAACid,YAAY,CAAC;IAClD,IAAI,CAAC5J,WAAW,GAAG,KAAK;EAC5B;EACA;AACJ;AACA;AACA;EACIlU,GAAGA,CAAC5S,KAAK,GAAG,EAAE,EAAE;IACZ,IAAI,CAAC+wB,aAAa,GAAG,EAAE;IACvB,IAAI,CAACD,UAAU,GAAG9wB,KAAK;IACvB,IAAI,CAACgxB,WAAW,GAAG,YAAY;IAC/B,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIne,IAAIA,CAAC7S,KAAK,GAAG,EAAE,EAAE;IACb,IAAI,CAACkxB,QAAQ,GAAGlxB,KAAK;IACrB,IAAI,CAACixB,UAAU,GAAG,MAAM;IACxB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACI/Z,MAAMA,CAAClX,KAAK,GAAG,EAAE,EAAE;IACf,IAAI,CAAC8wB,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,aAAa,GAAG/wB,KAAK;IAC1B,IAAI,CAACgxB,WAAW,GAAG,UAAU;IAC7B,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACI3Z,KAAKA,CAACrX,KAAK,GAAG,EAAE,EAAE;IACd,IAAI,CAACkxB,QAAQ,GAAGlxB,KAAK;IACrB,IAAI,CAACixB,UAAU,GAAG,OAAO;IACzB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACItE,KAAKA,CAAC3sB,KAAK,GAAG,EAAE,EAAE;IACd,IAAI,CAACkxB,QAAQ,GAAGlxB,KAAK;IACrB,IAAI,CAACixB,UAAU,GAAG,OAAO;IACzB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACII,GAAGA,CAACrxB,KAAK,GAAG,EAAE,EAAE;IACZ,IAAI,CAACkxB,QAAQ,GAAGlxB,KAAK;IACrB,IAAI,CAACixB,UAAU,GAAG,KAAK;IACvB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;EACItc,KAAKA,CAAC3U,KAAK,GAAG,EAAE,EAAE;IACd,IAAI,IAAI,CAACqV,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAAC6O,UAAU,CAAC;QAAEvP,KAAK,EAAE3U;MAAM,CAAC,CAAC;IACjD,CAAC,MACI;MACD,IAAI,CAACmxB,MAAM,GAAGnxB,KAAK;IACvB;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;EACIyU,MAAMA,CAACzU,KAAK,GAAG,EAAE,EAAE;IACf,IAAI,IAAI,CAACqV,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAAC6O,UAAU,CAAC;QAAEzP,MAAM,EAAEzU;MAAM,CAAC,CAAC;IAClD,CAAC,MACI;MACD,IAAI,CAACoxB,OAAO,GAAGpxB,KAAK;IACxB;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;EACIsxB,kBAAkBA,CAACvG,MAAM,GAAG,EAAE,EAAE;IAC5B,IAAI,CAAClY,IAAI,CAACkY,MAAM,CAAC;IACjB,IAAI,CAACkG,UAAU,GAAG,QAAQ;IAC1B,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;EACIM,gBAAgBA,CAACxG,MAAM,GAAG,EAAE,EAAE;IAC1B,IAAI,CAACnY,GAAG,CAACmY,MAAM,CAAC;IAChB,IAAI,CAACiG,WAAW,GAAG,QAAQ;IAC3B,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIjN,KAAKA,CAAA,EAAG;IACJ;IACA;IACA;IACA,IAAI,CAAC,IAAI,CAAC1O,WAAW,IAAI,CAAC,IAAI,CAACA,WAAW,CAACmB,WAAW,CAAC,CAAC,EAAE;MACtD;IACJ;IACA,MAAM4I,MAAM,GAAG,IAAI,CAAC/J,WAAW,CAACO,cAAc,CAACrC,KAAK;IACpD,MAAMie,YAAY,GAAG,IAAI,CAACnc,WAAW,CAAC+M,WAAW,CAAC7O,KAAK;IACvD,MAAMwB,MAAM,GAAG,IAAI,CAACM,WAAW,CAACyO,SAAS,CAAC,CAAC;IAC3C,MAAM;MAAEnP,KAAK;MAAEF,MAAM;MAAE4E,QAAQ;MAAEC;IAAU,CAAC,GAAGvE,MAAM;IACrD,MAAM0c,yBAAyB,GAAG,CAAC9c,KAAK,KAAK,MAAM,IAAIA,KAAK,KAAK,OAAO,MACnE,CAAC0E,QAAQ,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,CAAC;IAC9D,MAAMqY,uBAAuB,GAAG,CAACjd,MAAM,KAAK,MAAM,IAAIA,MAAM,KAAK,OAAO,MACnE,CAAC6E,SAAS,IAAIA,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK,OAAO,CAAC;IACjE,MAAMqY,SAAS,GAAG,IAAI,CAACV,UAAU;IACjC,MAAMW,OAAO,GAAG,IAAI,CAACV,QAAQ;IAC7B,MAAMnD,KAAK,GAAG,IAAI,CAAC1Y,WAAW,CAACyO,SAAS,CAAC,CAAC,CAACvK,SAAS,KAAK,KAAK;IAC9D,IAAIsY,UAAU,GAAG,EAAE;IACnB,IAAIC,WAAW,GAAG,EAAE;IACpB,IAAI/H,cAAc,GAAG,EAAE;IACvB,IAAI0H,yBAAyB,EAAE;MAC3B1H,cAAc,GAAG,YAAY;IACjC,CAAC,MACI,IAAI4H,SAAS,KAAK,QAAQ,EAAE;MAC7B5H,cAAc,GAAG,QAAQ;MACzB,IAAIgE,KAAK,EAAE;QACP+D,WAAW,GAAGF,OAAO;MACzB,CAAC,MACI;QACDC,UAAU,GAAGD,OAAO;MACxB;IACJ,CAAC,MACI,IAAI7D,KAAK,EAAE;MACZ,IAAI4D,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK,KAAK,EAAE;QAC7C5H,cAAc,GAAG,UAAU;QAC3B8H,UAAU,GAAGD,OAAO;MACxB,CAAC,MACI,IAAID,SAAS,KAAK,OAAO,IAAIA,SAAS,KAAK,OAAO,EAAE;QACrD5H,cAAc,GAAG,YAAY;QAC7B+H,WAAW,GAAGF,OAAO;MACzB;IACJ,CAAC,MACI,IAAID,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK,OAAO,EAAE;MACpD5H,cAAc,GAAG,YAAY;MAC7B8H,UAAU,GAAGD,OAAO;IACxB,CAAC,MACI,IAAID,SAAS,KAAK,OAAO,IAAIA,SAAS,KAAK,KAAK,EAAE;MACnD5H,cAAc,GAAG,UAAU;MAC3B+H,WAAW,GAAGF,OAAO;IACzB;IACAxS,MAAM,CAACgK,QAAQ,GAAG,IAAI,CAACyH,YAAY;IACnCzR,MAAM,CAACyS,UAAU,GAAGJ,yBAAyB,GAAG,GAAG,GAAGI,UAAU;IAChEzS,MAAM,CAAC2S,SAAS,GAAGL,uBAAuB,GAAG,GAAG,GAAG,IAAI,CAACZ,UAAU;IAClE1R,MAAM,CAAC4S,YAAY,GAAG,IAAI,CAACjB,aAAa;IACxC3R,MAAM,CAAC0S,WAAW,GAAGL,yBAAyB,GAAG,GAAG,GAAGK,WAAW;IAClEN,YAAY,CAACzH,cAAc,GAAGA,cAAc;IAC5CyH,YAAY,CAAC1H,UAAU,GAAG4H,uBAAuB,GAAG,YAAY,GAAG,IAAI,CAACV,WAAW;EACvF;EACA;AACJ;AACA;AACA;EACIpQ,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACkG,WAAW,IAAI,CAAC,IAAI,CAACzR,WAAW,EAAE;MACvC;IACJ;IACA,MAAM+J,MAAM,GAAG,IAAI,CAAC/J,WAAW,CAACO,cAAc,CAACrC,KAAK;IACpD,MAAM0K,MAAM,GAAG,IAAI,CAAC5I,WAAW,CAAC+M,WAAW;IAC3C,MAAMoP,YAAY,GAAGvT,MAAM,CAAC1K,KAAK;IACjC0K,MAAM,CAACzK,SAAS,CAACU,MAAM,CAACwc,YAAY,CAAC;IACrCc,YAAY,CAACzH,cAAc,GACvByH,YAAY,CAAC1H,UAAU,GACnB1K,MAAM,CAAC2S,SAAS,GACZ3S,MAAM,CAAC4S,YAAY,GACf5S,MAAM,CAACyS,UAAU,GACbzS,MAAM,CAAC0S,WAAW,GACd1S,MAAM,CAACgK,QAAQ,GACX,EAAE;IAC9B,IAAI,CAAC/T,WAAW,GAAG,IAAI;IACvB,IAAI,CAACyR,WAAW,GAAG,IAAI;EAC3B;AACJ;;AAEA;AAAA,IACMmL,sBAAsB;EAA5B,MAAMA,sBAAsB,CAAC;IACzB3Z,SAAS,GAAG/K,qDAAM,CAACqC,mDAAQ,CAAC;IAC5BZ,WAAWA,CAAA,EAAG,CAAE;IAChB;AACJ;AACA;IACIkjB,MAAMA,CAAA,EAAG;MACL,OAAOvB,4BAA4B,CAAC,CAAC;IACzC;IACA;AACJ;AACA;AACA;IACIwB,mBAAmBA,CAAC9X,MAAM,EAAE;MACxB,OAAOuL,uCAAuC,CAAC,IAAI,CAACtN,SAAS,EAAE+B,MAAM,CAAC;IAC1E;IACA,OAAOpL,IAAI,YAAAmjB,+BAAAjjB,iBAAA;MAAA,YAAAA,iBAAA,IAAwF8iB,sBAAsB;IAAA;IACzH,OAAO7iB,KAAK,kBAnqE6E9B,gEAAE;MAAAgC,KAAA,EAmqEY2iB,sBAAsB;MAAA1iB,OAAA,EAAtB0iB,sBAAsB,CAAAhjB,IAAA;MAAAO,UAAA,EAAc;IAAM;EACrJ;EAAC,OAlBKyiB,sBAAsB;AAAA;AAmB5B;EAAA,QAAAxiB,SAAA,oBAAAA,SAAA;AAAA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS4iB,gBAAgBA,CAAC9f,QAAQ,EAAEwC,MAAM,EAAE;EACxC;EACA;EACAxC,QAAQ,CAACE,GAAG,CAACtB,yDAAsB,CAAC,CAACiP,IAAI,CAAC5B,sBAAsB,CAAC;EACjE,MAAM8T,gBAAgB,GAAG/f,QAAQ,CAACE,GAAG,CAAC8M,gBAAgB,CAAC;EACvD,MAAMgT,GAAG,GAAGhgB,QAAQ,CAACE,GAAG,CAAC/C,mDAAQ,CAAC;EAClC,MAAM8iB,WAAW,GAAGjgB,QAAQ,CAACE,GAAG,CAACR,0DAAY,CAAC;EAC9C,MAAMwgB,MAAM,GAAGlgB,QAAQ,CAACE,GAAG,CAACtC,yDAAc,CAAC;EAC3C,MAAMuiB,cAAc,GAAGngB,QAAQ,CAACE,GAAG,CAACP,4DAAc,CAAC;EACnD,MAAMoM,IAAI,GAAGiU,GAAG,CAACtS,aAAa,CAAC,KAAK,CAAC;EACrC,MAAM0S,IAAI,GAAGJ,GAAG,CAACtS,aAAa,CAAC,KAAK,CAAC;EACrC0S,IAAI,CAACC,EAAE,GAAGJ,WAAW,CAACK,KAAK,CAAC,cAAc,CAAC;EAC3CF,IAAI,CAACnf,SAAS,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACtC6K,IAAI,CAAC6B,WAAW,CAACwS,IAAI,CAAC;EACtBL,gBAAgB,CAAC5S,mBAAmB,CAAC,CAAC,CAACS,WAAW,CAAC7B,IAAI,CAAC;EACxD,MAAMwU,YAAY,GAAG,IAAInhB,yDAAe,CAACghB,IAAI,EAAEF,MAAM,EAAElgB,QAAQ,CAAC;EAChE,MAAMwgB,aAAa,GAAG,IAAIna,aAAa,CAAC7D,MAAM,CAAC;EAC/C,MAAMoI,QAAQ,GAAG5K,QAAQ,CAACE,GAAG,CAACrC,oDAAS,EAAE,IAAI,EAAE;IAAE4iB,QAAQ,EAAE;EAAK,CAAC,CAAC,IAC9DzgB,QAAQ,CAACE,GAAG,CAAC5C,2DAAgB,CAAC,CAACiM,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;EAC7DiX,aAAa,CAACxZ,SAAS,GAAGwZ,aAAa,CAACxZ,SAAS,IAAImZ,cAAc,CAAC1yB,KAAK;EACzE,OAAO,IAAI+gB,UAAU,CAAC+R,YAAY,EAAExU,IAAI,EAAEqU,IAAI,EAAEI,aAAa,EAAExgB,QAAQ,CAACE,GAAG,CAAC9C,iDAAM,CAAC,EAAE4C,QAAQ,CAACE,GAAG,CAACmJ,yBAAyB,CAAC,EAAE2W,GAAG,EAAEhgB,QAAQ,CAACE,GAAG,CAACzB,qDAAQ,CAAC,EAAEuB,QAAQ,CAACE,GAAG,CAACkK,6BAA6B,CAAC,EAAE5H,MAAM,EAAEmE,iBAAiB,IAC7N3G,QAAQ,CAACE,GAAG,CAACpC,gEAAqB,EAAE,IAAI,EAAE;IAAE2iB,QAAQ,EAAE;EAAK,CAAC,CAAC,KAAK,gBAAgB,EAAEzgB,QAAQ,CAACE,GAAG,CAACnC,8DAAmB,CAAC,EAAE6M,QAAQ,CAAC;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQM8V,OAAO;EAAb,MAAMA,OAAO,CAAC;IACVC,gBAAgB,GAAG3lB,qDAAM,CAAC8K,qBAAqB,CAAC;IAChD8a,gBAAgB,GAAG5lB,qDAAM,CAAC0kB,sBAAsB,CAAC;IACjD3Z,SAAS,GAAG/K,qDAAM,CAACqC,mDAAQ,CAAC;IAC5BZ,WAAWA,CAAA,EAAG,CAAE;IAChB;AACJ;AACA;AACA;AACA;IACIokB,MAAMA,CAACre,MAAM,EAAE;MACX,OAAOsd,gBAAgB,CAAC,IAAI,CAAC/Z,SAAS,EAAEvD,MAAM,CAAC;IACnD;IACA;AACJ;AACA;AACA;AACA;IACIqU,QAAQA,CAAA,EAAG;MACP,OAAO,IAAI,CAAC+J,gBAAgB;IAChC;IACA,OAAOlkB,IAAI,YAAAokB,gBAAAlkB,iBAAA;MAAA,YAAAA,iBAAA,IAAwF8jB,OAAO;IAAA;IAC1G,OAAO7jB,KAAK,kBAruE6E9B,gEAAE;MAAAgC,KAAA,EAquEY2jB,OAAO;MAAA1jB,OAAA,EAAP0jB,OAAO,CAAAhkB,IAAA;MAAAO,UAAA,EAAc;IAAM;EACtI;EAAC,OAvBKyjB,OAAO;AAAA;AAwBb;EAAA,QAAAxjB,SAAA,oBAAAA,SAAA;AAAA;;AAKA;AACA,MAAM6jB,mBAAmB,GAAG,CACxB;EACIrZ,OAAO,EAAE,OAAO;EAChBC,OAAO,EAAE,QAAQ;EACjBC,QAAQ,EAAE,OAAO;EACjBC,QAAQ,EAAE;AACd,CAAC,EACD;EACIH,OAAO,EAAE,OAAO;EAChBC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE,OAAO;EACjBC,QAAQ,EAAE;AACd,CAAC,EACD;EACIH,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE,KAAK;EACfC,QAAQ,EAAE;AACd,CAAC,EACD;EACIH,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE,QAAQ;EACjBC,QAAQ,EAAE,KAAK;EACfC,QAAQ,EAAE;AACd,CAAC,CACJ;AACD;AACA,MAAMmZ,qCAAqC,gBAAG,IAAIhjB,yDAAc,CAAC,uCAAuC,EAAE;EACtGf,UAAU,EAAE,MAAM;EAClBD,OAAO,EAAEA,CAAA,KAAM;IACX,MAAMgD,QAAQ,GAAGhF,qDAAM,CAACqC,mDAAQ,CAAC;IACjC,OAAO,MAAMiI,8BAA8B,CAACtF,QAAQ,CAAC;EACzD;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA;AAHA,IAIMihB,gBAAgB;EAAtB,MAAMA,gBAAgB,CAAC;IACnBC,UAAU,GAAGlmB,qDAAM,CAAC2C,qDAAU,CAAC;IAC/BlB,WAAWA,CAAA,EAAG,CAAE;IAChB,OAAOC,IAAI,YAAAykB,yBAAAvkB,iBAAA;MAAA,YAAAA,iBAAA,IAAwFqkB,gBAAgB;IAAA;IACnH,OAAOG,IAAI,kBAvxE8ErmB,+DAAE;MAAAoQ,IAAA,EAuxEJ8V,gBAAgB;MAAA5U,SAAA;MAAAiV,QAAA;IAAA;EAC3G;EAAC,OALKL,gBAAgB;AAAA;AAMtB;EAAA,QAAA/jB,SAAA,oBAAAA,SAAA;AAAA;AAOA;AACA;AACA;AACA;AAHA,IAIMqkB,mBAAmB;EAAzB,MAAMA,mBAAmB,CAAC;IACtBC,IAAI,GAAGxmB,qDAAM,CAAC2E,4DAAc,EAAE;MAAE8gB,QAAQ,EAAE;IAAK,CAAC,CAAC;IACjD1a,SAAS,GAAG/K,qDAAM,CAACqC,mDAAQ,CAAC;IAC5ByF,WAAW;IACX2e,eAAe;IACfC,qBAAqB,GAAG5iB,8CAAY,CAACwQ,KAAK;IAC1CqS,mBAAmB,GAAG7iB,8CAAY,CAACwQ,KAAK;IACxCsS,mBAAmB,GAAG9iB,8CAAY,CAACwQ,KAAK;IACxCuS,qBAAqB,GAAG/iB,8CAAY,CAACwQ,KAAK;IAC1CuF,QAAQ;IACRC,QAAQ;IACRgN,SAAS;IACTC,sBAAsB,GAAG/mB,qDAAM,CAACgmB,qCAAqC,CAAC;IACtEgB,oBAAoB,GAAG,KAAK;IAC5Brf,OAAO,GAAG3H,qDAAM,CAACoC,iDAAM,CAAC;IACxB;IACA0K,MAAM;IACN;IACAqN,SAAS;IACT;AACJ;AACA;AACA;IACI7O,gBAAgB;IAChB;IACA,IAAIkB,OAAOA,CAAA,EAAG;MACV,OAAO,IAAI,CAACqN,QAAQ;IACxB;IACA,IAAIrN,OAAOA,CAACA,OAAO,EAAE;MACjB,IAAI,CAACqN,QAAQ,GAAGrN,OAAO;MACvB,IAAI,IAAI,CAACsa,SAAS,EAAE;QAChB,IAAI,CAACG,uBAAuB,CAAC,IAAI,CAACH,SAAS,CAAC;MAChD;IACJ;IACA;IACA,IAAIra,OAAOA,CAAA,EAAG;MACV,OAAO,IAAI,CAACqN,QAAQ;IACxB;IACA,IAAIrN,OAAOA,CAACA,OAAO,EAAE;MACjB,IAAI,CAACqN,QAAQ,GAAGrN,OAAO;MACvB,IAAI,IAAI,CAACqa,SAAS,EAAE;QAChB,IAAI,CAACG,uBAAuB,CAAC,IAAI,CAACH,SAAS,CAAC;MAChD;IACJ;IACA;IACA1f,KAAK;IACL;IACAF,MAAM;IACN;IACA0E,QAAQ;IACR;IACAC,SAAS;IACT;IACAH,aAAa;IACb;IACAF,UAAU;IACV;IACA0b,cAAc,GAAG,CAAC;IAClB;IACA3b,cAAc;IACd;IACA4b,IAAI,GAAG,KAAK;IACZ;IACAC,YAAY,GAAG,KAAK;IACpB;IACAC,uBAAuB;IACvB;IACA5b,WAAW,GAAG,KAAK;IACnB;IACA6b,YAAY,GAAG,KAAK;IACpB;IACAtK,kBAAkB,GAAG,KAAK;IAC1B;IACAE,aAAa,GAAG,KAAK;IACrB;IACAnP,IAAI,GAAG,KAAK;IACZ;IACA,IAAI9B,mBAAmBA,CAAA,EAAG;MACtB,OAAO,IAAI,CAAC+a,oBAAoB;IACpC;IACA,IAAI/a,mBAAmBA,CAACxZ,KAAK,EAAE;MAC3B,IAAI,CAACu0B,oBAAoB,GAAGv0B,KAAK;IACrC;IACA;IACA0jB,aAAa,GAAG,IAAIjT,uDAAY,CAAC,CAAC;IAClC;IACAqkB,cAAc,GAAG,IAAIrkB,uDAAY,CAAC,CAAC;IACnC;IACAwC,MAAM,GAAG,IAAIxC,uDAAY,CAAC,CAAC;IAC3B;IACA8F,MAAM,GAAG,IAAI9F,uDAAY,CAAC,CAAC;IAC3B;IACAskB,cAAc,GAAG,IAAItkB,uDAAY,CAAC,CAAC;IACnC;IACAukB,mBAAmB,GAAG,IAAIvkB,uDAAY,CAAC,CAAC;IACxC;IACAzB,WAAWA,CAAA,EAAG;MACV,MAAMimB,WAAW,GAAG1nB,qDAAM,CAACmD,sDAAW,CAAC;MACvC,MAAMwkB,gBAAgB,GAAG3nB,qDAAM,CAACoD,2DAAgB,CAAC;MACjD,IAAI,CAACqjB,eAAe,GAAG,IAAIpiB,wDAAc,CAACqjB,WAAW,EAAEC,gBAAgB,CAAC;MACxE,IAAI,CAACpc,cAAc,GAAG,IAAI,CAACwb,sBAAsB,CAAC,CAAC;IACvD;IACA;IACA,IAAI/e,UAAUA,CAAA,EAAG;MACb,OAAO,IAAI,CAACF,WAAW;IAC3B;IACA;IACA,IAAIgP,GAAGA,CAAA,EAAG;MACN,OAAO,IAAI,CAAC0P,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC/zB,KAAK,GAAG,KAAK;IAC9C;IACAqb,WAAWA,CAAA,EAAG;MACV,IAAI,CAAC6Y,mBAAmB,CAAC5d,WAAW,CAAC,CAAC;MACtC,IAAI,CAAC6d,mBAAmB,CAAC7d,WAAW,CAAC,CAAC;MACtC,IAAI,CAAC2d,qBAAqB,CAAC3d,WAAW,CAAC,CAAC;MACxC,IAAI,CAAC8d,qBAAqB,CAAC9d,WAAW,CAAC,CAAC;MACxC,IAAI,CAACjB,WAAW,EAAEuL,OAAO,CAAC,CAAC;IAC/B;IACAuU,WAAWA,CAACC,OAAO,EAAE;MACjB,IAAI,IAAI,CAACf,SAAS,EAAE;QAChB,IAAI,CAACG,uBAAuB,CAAC,IAAI,CAACH,SAAS,CAAC;QAC5C,IAAI,CAAChf,WAAW,EAAE6O,UAAU,CAAC;UACzBvP,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBwE,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvB1E,MAAM,EAAE,IAAI,CAACA,MAAM;UACnB2E,SAAS,EAAE,IAAI,CAACA;QACpB,CAAC,CAAC;QACF,IAAIgc,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAACV,IAAI,EAAE;UAChC,IAAI,CAACL,SAAS,CAACtQ,KAAK,CAAC,CAAC;QAC1B;MACJ;MACA,IAAIqR,OAAO,CAAC,MAAM,CAAC,EAAE;QACjB,IAAI,CAACV,IAAI,GAAG,IAAI,CAACW,aAAa,CAAC,CAAC,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MAC3D;IACJ;IACA;IACAC,cAAcA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAAC7N,SAAS,IAAI,CAAC,IAAI,CAACA,SAAS,CAAChM,MAAM,EAAE;QAC3C,IAAI,CAACgM,SAAS,GAAG4L,mBAAmB;MACxC;MACA,MAAM/d,UAAU,GAAI,IAAI,CAACF,WAAW,GAAGgd,gBAAgB,CAAC,IAAI,CAAC/Z,SAAS,EAAE,IAAI,CAACkd,YAAY,CAAC,CAAC,CAAE;MAC7F,IAAI,CAACtB,mBAAmB,GAAG3e,UAAU,CAACoO,WAAW,CAAC,CAAC,CAAC3N,SAAS,CAAC,MAAM,IAAI,CAAC/C,MAAM,CAACwiB,IAAI,CAAC,CAAC,CAAC;MACvF,IAAI,CAACtB,mBAAmB,GAAG5e,UAAU,CAACqO,WAAW,CAAC,CAAC,CAAC5N,SAAS,CAAC,MAAM,IAAI,CAACO,MAAM,CAACkf,IAAI,CAAC,CAAC,CAAC;MACvFlgB,UAAU,CAACsO,aAAa,CAAC,CAAC,CAAC7N,SAAS,CAAEmG,KAAK,IAAK;QAC5C,IAAI,CAAC4Y,cAAc,CAACxY,IAAI,CAACJ,KAAK,CAAC;QAC/B,IAAIA,KAAK,CAACuZ,OAAO,KAAK50B,sDAAM,IAAI,CAAC,IAAI,CAAC6zB,YAAY,IAAI,CAACxiB,8DAAc,CAACgK,KAAK,CAAC,EAAE;UAC1EA,KAAK,CAACwZ,cAAc,CAAC,CAAC;UACtB,IAAI,CAACL,aAAa,CAAC,CAAC;QACxB;MACJ,CAAC,CAAC;MACF,IAAI,CAACjgB,WAAW,CAACyI,oBAAoB,CAAC,CAAC,CAAC9H,SAAS,CAAEmG,KAAK,IAAK;QACzD,MAAM9B,MAAM,GAAG,IAAI,CAACub,iBAAiB,CAAC,CAAC;QACvC,MAAMnY,MAAM,GAAGxM,2DAAe,CAACkL,KAAK,CAAC;QACrC,IAAI,CAAC9B,MAAM,IAAKA,MAAM,KAAKoD,MAAM,IAAI,CAACpD,MAAM,CAACjG,QAAQ,CAACqJ,MAAM,CAAE,EAAE;UAC5D,IAAI,CAACuX,mBAAmB,CAACzY,IAAI,CAACJ,KAAK,CAAC;QACxC;MACJ,CAAC,CAAC;IACN;IACA;IACAqZ,YAAYA,CAAA,EAAG;MACX,MAAM3c,gBAAgB,GAAI,IAAI,CAACwb,SAAS,GACpC,IAAI,CAACxb,gBAAgB,IAAI,IAAI,CAACgd,uBAAuB,CAAC,CAAE;MAC5D,MAAM9C,aAAa,GAAG,IAAIna,aAAa,CAAC;QACpCW,SAAS,EAAE,IAAI,CAACwa,IAAI,IAAI,KAAK;QAC7Blb,gBAAgB;QAChBC,cAAc,EAAE,IAAI,CAACA,cAAc;QACnCE,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BQ,mBAAmB,EAAE,IAAI,CAACA;MAC9B,CAAC,CAAC;MACF,IAAI,IAAI,CAAC7E,KAAK,IAAI,IAAI,CAACA,KAAK,KAAK,CAAC,EAAE;QAChCoe,aAAa,CAACpe,KAAK,GAAG,IAAI,CAACA,KAAK;MACpC;MACA,IAAI,IAAI,CAACF,MAAM,IAAI,IAAI,CAACA,MAAM,KAAK,CAAC,EAAE;QAClCse,aAAa,CAACte,MAAM,GAAG,IAAI,CAACA,MAAM;MACtC;MACA,IAAI,IAAI,CAAC0E,QAAQ,IAAI,IAAI,CAACA,QAAQ,KAAK,CAAC,EAAE;QACtC4Z,aAAa,CAAC5Z,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC1C;MACA,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACA,SAAS,KAAK,CAAC,EAAE;QACxC2Z,aAAa,CAAC3Z,SAAS,GAAG,IAAI,CAACA,SAAS;MAC5C;MACA,IAAI,IAAI,CAACH,aAAa,EAAE;QACpB8Z,aAAa,CAAC9Z,aAAa,GAAG,IAAI,CAACA,aAAa;MACpD;MACA,IAAI,IAAI,CAACF,UAAU,EAAE;QACjBga,aAAa,CAACha,UAAU,GAAG,IAAI,CAACA,UAAU;MAC9C;MACA,OAAOga,aAAa;IACxB;IACA;IACAyB,uBAAuBA,CAAC3b,gBAAgB,EAAE;MACtC,MAAM6O,SAAS,GAAG,IAAI,CAACA,SAAS,CAAC4H,GAAG,CAACwG,eAAe,KAAK;QACrD7b,OAAO,EAAE6b,eAAe,CAAC7b,OAAO;QAChCC,OAAO,EAAE4b,eAAe,CAAC5b,OAAO;QAChCC,QAAQ,EAAE2b,eAAe,CAAC3b,QAAQ;QAClCC,QAAQ,EAAE0b,eAAe,CAAC1b,QAAQ;QAClCL,OAAO,EAAE+b,eAAe,CAAC/b,OAAO,IAAI,IAAI,CAACA,OAAO;QAChDC,OAAO,EAAE8b,eAAe,CAAC9b,OAAO,IAAI,IAAI,CAACA,OAAO;QAChDjB,UAAU,EAAE+c,eAAe,CAAC/c,UAAU,IAAIc;MAC9C,CAAC,CAAC,CAAC;MACH,OAAOhB,gBAAgB,CAClB+O,SAAS,CAAC,IAAI,CAACmO,UAAU,CAAC,CAAC,CAAC,CAC5B5L,aAAa,CAACzC,SAAS,CAAC,CACxB4C,sBAAsB,CAAC,IAAI,CAACC,kBAAkB,CAAC,CAC/CG,QAAQ,CAAC,IAAI,CAACpP,IAAI,CAAC,CACnBkP,iBAAiB,CAAC,IAAI,CAACC,aAAa,CAAC,CACrCL,kBAAkB,CAAC,IAAI,CAACqK,cAAc,CAAC,CACvC7J,kBAAkB,CAAC,IAAI,CAACiK,YAAY,CAAC,CACrC5J,qBAAqB,CAAC,IAAI,CAAC2J,uBAAuB,CAAC;IAC5D;IACA;IACAiB,uBAAuBA,CAAA,EAAG;MACtB,MAAM5R,QAAQ,GAAG2B,uCAAuC,CAAC,IAAI,CAACtN,SAAS,EAAE,IAAI,CAACyd,UAAU,CAAC,CAAC,CAAC;MAC3F,IAAI,CAACvB,uBAAuB,CAACvQ,QAAQ,CAAC;MACtC,OAAOA,QAAQ;IACnB;IACA8R,UAAUA,CAAA,EAAG;MACT,IAAI,IAAI,CAAC1b,MAAM,YAAYmZ,gBAAgB,EAAE;QACzC,OAAO,IAAI,CAACnZ,MAAM,CAACoZ,UAAU;MACjC,CAAC,MACI;QACD,OAAO,IAAI,CAACpZ,MAAM;MACtB;IACJ;IACAub,iBAAiBA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACvb,MAAM,YAAYmZ,gBAAgB,EAAE;QACzC,OAAO,IAAI,CAACnZ,MAAM,CAACoZ,UAAU,CAAC3d,aAAa;MAC/C;MACA,IAAI,IAAI,CAACuE,MAAM,YAAYnK,qDAAU,EAAE;QACnC,OAAO,IAAI,CAACmK,MAAM,CAACvE,aAAa;MACpC;MACA,IAAI,OAAOga,OAAO,KAAK,WAAW,IAAI,IAAI,CAACzV,MAAM,YAAYyV,OAAO,EAAE;QAClE,OAAO,IAAI,CAACzV,MAAM;MACtB;MACA,OAAO,IAAI;IACf;IACA;IACAgb,aAAaA,CAAA,EAAG;MACZ,IAAI,CAAC,IAAI,CAAChgB,WAAW,EAAE;QACnB,IAAI,CAACkgB,cAAc,CAAC,CAAC;MACzB,CAAC,MACI;QACD;QACA,IAAI,CAAClgB,WAAW,CAACyO,SAAS,CAAC,CAAC,CAAC9K,WAAW,GAAG,IAAI,CAACA,WAAW;MAC/D;MACA,IAAI,CAAC,IAAI,CAAC3D,WAAW,CAACmB,WAAW,CAAC,CAAC,EAAE;QACjC,IAAI,CAACnB,WAAW,CAACpC,MAAM,CAAC,IAAI,CAAC+gB,eAAe,CAAC;MACjD;MACA,IAAI,IAAI,CAAChb,WAAW,EAAE;QAClB,IAAI,CAACib,qBAAqB,GAAG,IAAI,CAAC5e,WAAW,CAACqO,aAAa,CAAC,CAAC,CAAC1N,SAAS,CAACmG,KAAK,IAAI;UAC7E,IAAI,CAACuH,aAAa,CAAC+R,IAAI,CAACtZ,KAAK,CAAC;QAClC,CAAC,CAAC;MACN,CAAC,MACI;QACD,IAAI,CAAC8X,qBAAqB,CAAC3d,WAAW,CAAC,CAAC;MAC5C;MACA,IAAI,CAAC8d,qBAAqB,CAAC9d,WAAW,CAAC,CAAC;MACxC;MACA;MACA,IAAI,IAAI,CAACwe,cAAc,CAACxY,SAAS,CAACZ,MAAM,GAAG,CAAC,EAAE;QAC1C,IAAI,CAAC0Y,qBAAqB,GAAG,IAAI,CAACC,SAAS,CAAC5M,eAAe,CACtD/R,IAAI,CAAC1D,yDAAS,CAAC,MAAM,IAAI,CAAC8iB,cAAc,CAACxY,SAAS,CAACZ,MAAM,GAAG,CAAC,CAAC,CAAC,CAC/D1F,SAAS,CAACoT,QAAQ,IAAI;UACvB,IAAI,CAAClU,OAAO,CAACuB,GAAG,CAAC,MAAM,IAAI,CAACqe,cAAc,CAACW,IAAI,CAACrM,QAAQ,CAAC,CAAC;UAC1D,IAAI,IAAI,CAAC0L,cAAc,CAACxY,SAAS,CAACZ,MAAM,KAAK,CAAC,EAAE;YAC5C,IAAI,CAAC0Y,qBAAqB,CAAC9d,WAAW,CAAC,CAAC;UAC5C;QACJ,CAAC,CAAC;MACN;MACA,IAAI,CAACoe,IAAI,GAAG,IAAI;IACpB;IACA;IACAY,aAAaA,CAAA,EAAG;MACZ,IAAI,CAACjgB,WAAW,EAAEkB,MAAM,CAAC,CAAC;MAC1B,IAAI,CAAC0d,qBAAqB,CAAC3d,WAAW,CAAC,CAAC;MACxC,IAAI,CAAC8d,qBAAqB,CAAC9d,WAAW,CAAC,CAAC;MACxC,IAAI,CAACoe,IAAI,GAAG,KAAK;IACrB;IACA,OAAOzlB,IAAI,YAAA+mB,4BAAA7mB,iBAAA;MAAA,YAAAA,iBAAA,IAAwF2kB,mBAAmB;IAAA;IACtH,OAAOH,IAAI,kBA1jF8ErmB,+DAAE;MAAAoQ,IAAA,EA0jFJoW,mBAAmB;MAAAlV,SAAA;MAAAqX,MAAA;QAAA5b,MAAA;QAAAqN,SAAA;QAAA7O,gBAAA;QAAAkB,OAAA;QAAAC,OAAA;QAAArF,KAAA;QAAAF,MAAA;QAAA0E,QAAA;QAAAC,SAAA;QAAAH,aAAA;QAAAF,UAAA;QAAA0b,cAAA;QAAA3b,cAAA;QAAA4b,IAAA;QAAAC,YAAA;QAAAC,uBAAA;QAAA5b,WAAA,uDAAmoCpI,2DAAgB;QAAAikB,YAAA,yDAAqEjkB,2DAAgB;QAAA2Z,kBAAA,qEAAuF3Z,2DAAgB;QAAA6Z,aAAA,2DAAwE7Z,2DAAgB;QAAA0K,IAAA,yCAA6C1K,2DAAgB;QAAA4I,mBAAA,uEAA0F5I,2DAAgB;MAAA;MAAAslB,OAAA;QAAAxS,aAAA;QAAAoR,cAAA;QAAA7hB,MAAA;QAAAsD,MAAA;QAAAwe,cAAA;QAAAC,mBAAA;MAAA;MAAAnB,QAAA;MAAAsC,QAAA,GA1jF/lD7oB,kEAAE;IAAA;EA2jF/F;EAAC,OAvRKwmB,mBAAmB;AAAA;AAwRzB;EAAA,QAAArkB,SAAA,oBAAAA,SAAA;AAAA;AAqFA;AACA;AACA;AACA;AACA;AACA,SAAS4mB,sDAAsDA,CAAC/b,OAAO,EAAE;EACrE,MAAM/H,QAAQ,GAAGhF,qDAAM,CAACqC,mDAAQ,CAAC;EACjC,OAAO,MAAMiI,8BAA8B,CAACtF,QAAQ,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM+jB,8CAA8C,GAAG;EACnDC,OAAO,EAAEhD,qCAAqC;EAC9CiD,UAAU,EAAEH;AAChB,CAAC;AAAC,IAEII,aAAa;EAAnB,MAAMA,aAAa,CAAC;IAChB,OAAOxnB,IAAI,YAAAynB,sBAAAvnB,iBAAA;MAAA,YAAAA,iBAAA,IAAwFsnB,aAAa;IAAA;IAChH,OAAOE,IAAI,kBAtqF8ErpB,8DAAE;MAAAoQ,IAAA,EAsqFS+Y;IAAa;IACjH,OAAOI,IAAI,kBAvqF8EvpB,8DAAE;MAAAypB,SAAA,EAuqFmC,CAAC9D,OAAO,EAAEqD,8CAA8C,CAAC;MAAAU,OAAA,GAAY5kB,kDAAU,EAAEP,sDAAY,EAAEH,2DAAe,EAAEA,2DAAe;IAAA;EACjQ;EAAC,OAJK+kB,aAAa;AAAA;AAKnB;EAAA,QAAAhnB,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AC3+FoC;AACuK;;AAE3M;AACA;AACA;AACA;AACA,SAAS0nB,oBAAoBA,CAAA,EAAG;EAC5B,MAAMtiB,KAAK,CAAC,iCAAiC,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA,SAASuiB,+BAA+BA,CAAA,EAAG;EACvC,MAAMviB,KAAK,CAAC,oCAAoC,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA,SAASwiB,qCAAqCA,CAAA,EAAG;EAC7C,MAAMxiB,KAAK,CAAC,6CAA6C,CAAC;AAC9D;AACA;AACA;AACA;AACA;AACA,SAASyiB,2BAA2BA,CAAA,EAAG;EACnC,MAAMziB,KAAK,CAAC,+EAA+E,GACvF,wCAAwC,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA,SAAS0iB,0BAA0BA,CAAA,EAAG;EAClC,MAAM1iB,KAAK,CAAC,sDAAsD,CAAC;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS2iB,0BAA0BA,CAAA,EAAG;EAClC,MAAM3iB,KAAK,CAAC,8DAA8D,CAAC;AAC/E;;AAEA;AACA;AACA;AACA;AACA,MAAM4iB,MAAM,CAAC;EACTC,aAAa;EACb;EACAzkB,MAAMA,CAACqL,IAAI,EAAE;IACT,IAAI,OAAO7O,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/C,IAAI6O,IAAI,IAAI,IAAI,EAAE;QACdiZ,0BAA0B,CAAC,CAAC;MAChC;MACA,IAAIjZ,IAAI,CAAC9H,WAAW,CAAC,CAAC,EAAE;QACpB4gB,+BAA+B,CAAC,CAAC;MACrC;IACJ;IACA,IAAI,CAACM,aAAa,GAAGpZ,IAAI;IACzB,OAAOA,IAAI,CAACrL,MAAM,CAAC,IAAI,CAAC;EAC5B;EACA;EACAsD,MAAMA,CAAA,EAAG;IACL,IAAI+H,IAAI,GAAG,IAAI,CAACoZ,aAAa;IAC7B,IAAIpZ,IAAI,IAAI,IAAI,EAAE;MACd,IAAI,CAACoZ,aAAa,GAAG,IAAI;MACzBpZ,IAAI,CAAC/H,MAAM,CAAC,CAAC;IACjB,CAAC,MACI,IAAI,OAAO9G,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MACpD+nB,0BAA0B,CAAC,CAAC;IAChC;EACJ;EACA;EACA,IAAIjU,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACmU,aAAa,IAAI,IAAI;EACrC;EACA;AACJ;AACA;AACA;EACIC,eAAeA,CAACrZ,IAAI,EAAE;IAClB,IAAI,CAACoZ,aAAa,GAAGpZ,IAAI;EAC7B;AACJ;AACA;AACA;AACA;AACA,MAAMsZ,eAAe,SAASH,MAAM,CAAC;EACjC;EACAI,SAAS;EACT;AACJ;AACA;AACA;AACA;EACI3C,gBAAgB;EAChB;EACA3iB,QAAQ;EACR;AACJ;AACA;EACIulB,gBAAgB;EAChB9oB,WAAWA,CAAC6oB,SAAS,EAAE3C,gBAAgB,EAAE3iB,QAAQ,EAAEulB,gBAAgB,EAAE;IACjE,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAAC3C,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAAC3iB,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACulB,gBAAgB,GAAGA,gBAAgB;EAC5C;AACJ;AACA;AACA;AACA;AACA,MAAMlmB,cAAc,SAAS6lB,MAAM,CAAC;EAChCxC,WAAW;EACXC,gBAAgB;EAChB6C,OAAO;EACPxlB,QAAQ;EACRvD,WAAWA,CACX;EACAimB,WAAW,EACX;EACAC,gBAAgB,EAChB;EACA6C,OAAO,EACP;EACAxlB,QAAQ,EAAE;IACN,KAAK,CAAC,CAAC;IACP,IAAI,CAAC0iB,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAAC6C,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACxlB,QAAQ,GAAGA,QAAQ;EAC5B;EACA,IAAI8H,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAAC4a,WAAW,CAACxB,UAAU;EACtC;EACA;AACJ;AACA;AACA;AACA;EACIxgB,MAAMA,CAACqL,IAAI,EAAEyZ,OAAO,GAAG,IAAI,CAACA,OAAO,EAAE;IACjC,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,OAAO,KAAK,CAAC9kB,MAAM,CAACqL,IAAI,CAAC;EAC7B;EACA/H,MAAMA,CAAA,EAAG;IACL,IAAI,CAACwhB,OAAO,GAAGle,SAAS;IACxB,OAAO,KAAK,CAACtD,MAAM,CAAC,CAAC;EACzB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAMyhB,SAAS,SAASP,MAAM,CAAC;EAC3B;EACA5gB,OAAO;EACP7H,WAAWA,CAAC6H,OAAO,EAAE;IACjB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,OAAO,GAAGA,OAAO,YAAY3G,qDAAU,GAAG2G,OAAO,CAACf,aAAa,GAAGe,OAAO;EAClF;AACJ;AACA;AACA;AACA;AACA;AACA,MAAMohB,gBAAgB,CAAC;EACnB;EACAC,eAAe;EACf;EACAC,UAAU;EACV;EACArR,WAAW,GAAG,KAAK;EACnB;EACAtQ,WAAWA,CAAA,EAAG;IACV,OAAO,CAAC,CAAC,IAAI,CAAC0hB,eAAe;EACjC;EACA;EACAjlB,MAAMA,CAACoP,MAAM,EAAE;IACX,IAAI,OAAO5S,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/C,IAAI,CAAC4S,MAAM,EAAE;QACT8U,oBAAoB,CAAC,CAAC;MAC1B;MACA,IAAI,IAAI,CAAC3gB,WAAW,CAAC,CAAC,EAAE;QACpB4gB,+BAA+B,CAAC,CAAC;MACrC;MACA,IAAI,IAAI,CAACtQ,WAAW,EAAE;QAClBuQ,qCAAqC,CAAC,CAAC;MAC3C;IACJ;IACA,IAAIhV,MAAM,YAAYuV,eAAe,EAAE;MACnC,IAAI,CAACM,eAAe,GAAG7V,MAAM;MAC7B,OAAO,IAAI,CAAC+V,qBAAqB,CAAC/V,MAAM,CAAC;IAC7C,CAAC,MACI,IAAIA,MAAM,YAAYzQ,cAAc,EAAE;MACvC,IAAI,CAACsmB,eAAe,GAAG7V,MAAM;MAC7B,OAAO,IAAI,CAACgW,oBAAoB,CAAChW,MAAM,CAAC;MACxC;IACJ,CAAC,MACI,IAAI,IAAI,CAACiW,eAAe,IAAIjW,MAAM,YAAY2V,SAAS,EAAE;MAC1D,IAAI,CAACE,eAAe,GAAG7V,MAAM;MAC7B,OAAO,IAAI,CAACiW,eAAe,CAACjW,MAAM,CAAC;IACvC;IACA,IAAI,OAAO5S,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/C6nB,2BAA2B,CAAC,CAAC;IACjC;EACJ;EACA;EACAgB,eAAe,GAAG,IAAI;EACtB;EACA/hB,MAAMA,CAAA,EAAG;IACL,IAAI,IAAI,CAAC2hB,eAAe,EAAE;MACtB,IAAI,CAACA,eAAe,CAACP,eAAe,CAAC,IAAI,CAAC;MAC1C,IAAI,CAACO,eAAe,GAAG,IAAI;IAC/B;IACA,IAAI,CAACK,gBAAgB,CAAC,CAAC;EAC3B;EACA;EACA3X,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACpK,WAAW,CAAC,CAAC,EAAE;MACpB,IAAI,CAACD,MAAM,CAAC,CAAC;IACjB;IACA,IAAI,CAACgiB,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACzR,WAAW,GAAG,IAAI;EAC3B;EACA;EACA0R,YAAYA,CAACC,EAAE,EAAE;IACb,IAAI,CAACN,UAAU,GAAGM,EAAE;EACxB;EACAF,gBAAgBA,CAAA,EAAG;IACf,IAAI,IAAI,CAACJ,UAAU,EAAE;MACjB,IAAI,CAACA,UAAU,CAAC,CAAC;MACjB,IAAI,CAACA,UAAU,GAAG,IAAI;IAC1B;EACJ;AACJ;;AAEA;AACA;AACA;AACA;AACA,MAAMxmB,eAAe,SAASsmB,gBAAgB,CAAC;EAC3CS,aAAa;EACbC,OAAO;EACPC,gBAAgB;EAChB;AACJ;AACA;AACA;AACA;AACA;AACA;EACI5pB,WAAWA,CACX;EACA0pB,aAAa,EAAEC,OAAO,EAAEC,gBAAgB,EAAE;IACtC,KAAK,CAAC,CAAC;IACP,IAAI,CAACF,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;EAC5C;EACA;AACJ;AACA;AACA;AACA;EACIR,qBAAqBA,CAAC/V,MAAM,EAAE;IAC1B,IAAIwW,YAAY;IAChB;IACA;IACA;IACA;IACA,IAAIxW,MAAM,CAAC6S,gBAAgB,EAAE;MACzB,MAAM3iB,QAAQ,GAAG8P,MAAM,CAAC9P,QAAQ,IAAI8P,MAAM,CAAC6S,gBAAgB,CAAC3iB,QAAQ;MACpE,MAAMumB,WAAW,GAAGvmB,QAAQ,CAACE,GAAG,CAACwkB,sDAAW,EAAE,IAAI,EAAE;QAAEjE,QAAQ,EAAE;MAAK,CAAC,CAAC,IAAInZ,SAAS;MACpFgf,YAAY,GAAGxW,MAAM,CAAC6S,gBAAgB,CAACgC,eAAe,CAAC7U,MAAM,CAACwV,SAAS,EAAE;QACrEtc,KAAK,EAAE8G,MAAM,CAAC6S,gBAAgB,CAACxZ,MAAM;QACrCnJ,QAAQ;QACRumB,WAAW;QACXhB,gBAAgB,EAAEzV,MAAM,CAACyV,gBAAgB,IAAIje;MACjD,CAAC,CAAC;MACF,IAAI,CAAC2e,YAAY,CAAC,MAAMK,YAAY,CAAClW,OAAO,CAAC,CAAC,CAAC;IACnD,CAAC,MACI;MACD,IAAI,CAAC,OAAOlT,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK,CAAC,IAAI,CAACkpB,OAAO,EAAE;QAClE,MAAM9jB,KAAK,CAAC,qEAAqE,CAAC;MACtF;MACA,MAAM4d,MAAM,GAAG,IAAI,CAACkG,OAAO;MAC3B,MAAMI,eAAe,GAAG1W,MAAM,CAAC9P,QAAQ,IAAI,IAAI,CAACqmB,gBAAgB,IAAIhpB,mDAAQ,CAACopB,IAAI;MACjF,MAAMC,mBAAmB,GAAGF,eAAe,CAACtmB,GAAG,CAACnC,8DAAmB,EAAEmiB,MAAM,CAAClgB,QAAQ,CAAC;MACrFsmB,YAAY,GAAG3B,8DAAe,CAAC7U,MAAM,CAACwV,SAAS,EAAE;QAC7CkB,eAAe;QACfE,mBAAmB;QACnBnB,gBAAgB,EAAEzV,MAAM,CAACyV,gBAAgB,IAAIje;MACjD,CAAC,CAAC;MACF4Y,MAAM,CAACyG,UAAU,CAACL,YAAY,CAACM,QAAQ,CAAC;MACxC,IAAI,CAACX,YAAY,CAAC,MAAM;QACpB;QACA;QACA,IAAI/F,MAAM,CAAC2G,SAAS,GAAG,CAAC,EAAE;UACtB3G,MAAM,CAAC4G,UAAU,CAACR,YAAY,CAACM,QAAQ,CAAC;QAC5C;QACAN,YAAY,CAAClW,OAAO,CAAC,CAAC;MAC1B,CAAC,CAAC;IACN;IACA;IACA;IACA,IAAI,CAAC+V,aAAa,CAACvY,WAAW,CAAC,IAAI,CAACmZ,qBAAqB,CAACT,YAAY,CAAC,CAAC;IACxE,IAAI,CAACX,eAAe,GAAG7V,MAAM;IAC7B,OAAOwW,YAAY;EACvB;EACA;AACJ;AACA;AACA;AACA;EACIR,oBAAoBA,CAAChW,MAAM,EAAE;IACzB,IAAIkX,aAAa,GAAGlX,MAAM,CAAC6S,gBAAgB;IAC3C,IAAIsE,OAAO,GAAGD,aAAa,CAACE,kBAAkB,CAACpX,MAAM,CAAC4S,WAAW,EAAE5S,MAAM,CAAC0V,OAAO,EAAE;MAC/ExlB,QAAQ,EAAE8P,MAAM,CAAC9P;IACrB,CAAC,CAAC;IACF;IACA;IACA;IACA;IACAinB,OAAO,CAACE,SAAS,CAACnc,OAAO,CAACoc,QAAQ,IAAI,IAAI,CAACjB,aAAa,CAACvY,WAAW,CAACwZ,QAAQ,CAAC,CAAC;IAC/E;IACA;IACA;IACAH,OAAO,CAACI,aAAa,CAAC,CAAC;IACvB,IAAI,CAACpB,YAAY,CAAC,MAAM;MACpB,IAAIjd,KAAK,GAAGge,aAAa,CAAC/d,OAAO,CAACge,OAAO,CAAC;MAC1C,IAAIje,KAAK,KAAK,CAAC,CAAC,EAAE;QACdge,aAAa,CAACrlB,MAAM,CAACqH,KAAK,CAAC;MAC/B;IACJ,CAAC,CAAC;IACF,IAAI,CAAC2c,eAAe,GAAG7V,MAAM;IAC7B;IACA,OAAOmX,OAAO;EAClB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIlB,eAAe,GAAIjW,MAAM,IAAK;IAC1B,MAAMxL,OAAO,GAAGwL,MAAM,CAACxL,OAAO;IAC9B,IAAI,CAACA,OAAO,CAAC0H,UAAU,KAAK,OAAO9O,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MACxE,MAAMoF,KAAK,CAAC,uDAAuD,CAAC;IACxE;IACA;IACA;IACA,MAAMglB,UAAU,GAAG,IAAI,CAACnB,aAAa,CAACoB,aAAa,CAACC,aAAa,CAAC,YAAY,CAAC;IAC/EljB,OAAO,CAAC0H,UAAU,CAACsG,YAAY,CAACgV,UAAU,EAAEhjB,OAAO,CAAC;IACpD,IAAI,CAAC6hB,aAAa,CAACvY,WAAW,CAACtJ,OAAO,CAAC;IACvC,IAAI,CAACqhB,eAAe,GAAG7V,MAAM;IAC7B,KAAK,CAACmW,YAAY,CAAC,MAAM;MACrB;MACA,IAAIqB,UAAU,CAACtb,UAAU,EAAE;QACvBsb,UAAU,CAACtb,UAAU,CAACyb,YAAY,CAACnjB,OAAO,EAAEgjB,UAAU,CAAC;MAC3D;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;EACIjZ,OAAOA,CAAA,EAAG;IACN,KAAK,CAACA,OAAO,CAAC,CAAC;IACf,IAAI,CAAC8X,aAAa,CAACxkB,MAAM,CAAC,CAAC;EAC/B;EACA;EACAolB,qBAAqBA,CAACT,YAAY,EAAE;IAChC,OAAOA,YAAY,CAACM,QAAQ,CAACO,SAAS,CAAC,CAAC,CAAC;EAC7C;AACJ;;AAEA;AACA;AACA;AACA;AAHA,IAIMO,SAAS;EAAf,MAAMA,SAAS,SAASroB,cAAc,CAAC;IACnC5C,WAAWA,CAAA,EAAG;MACV,MAAMimB,WAAW,GAAG1nB,qDAAM,CAACmD,sDAAW,CAAC;MACvC,MAAMwkB,gBAAgB,GAAG3nB,qDAAM,CAACoD,2DAAgB,CAAC;MACjD,KAAK,CAACskB,WAAW,EAAEC,gBAAgB,CAAC;IACxC;IACA,OAAOjmB,IAAI,YAAAirB,kBAAA/qB,iBAAA;MAAA,YAAAA,iBAAA,IAAwF8qB,SAAS;IAAA;IAC5G,OAAOtG,IAAI,kBAD8ErmB,+DAAE;MAAAoQ,IAAA,EACJuc,SAAS;MAAArb,SAAA;MAAAiV,QAAA;MAAAsC,QAAA,GADP7oB,wEAAE;IAAA;EAE/F;EAAC,OARK2sB,SAAS;AAAA;AASf;EAAA,QAAAxqB,SAAA,oBAAAA,SAAA;AAAA;AAOA;AACA;AACA;AACA;AAHA,IAIM2qB,uBAAuB;EAA7B,MAAMA,uBAAuB,SAASH,SAAS,CAAC;IAC5C,OAAOhrB,IAAI;MAAA,IAAAorB,oCAAA;MAAA,gBAAAC,gCAAAnrB,iBAAA;QAAA,QAAAkrB,oCAAA,KAAAA,oCAAA,GAf8E/sB,mEAAE,CAeQ8sB,uBAAuB,IAAAjrB,iBAAA,IAAvBirB,uBAAuB;MAAA;IAAA;IAC1H,OAAOzG,IAAI,kBAhB8ErmB,+DAAE;MAAAoQ,IAAA,EAgBJ0c,uBAAuB;MAAAxb,SAAA;MAAAiV,QAAA;MAAAsC,QAAA,GAhBrB7oB,gEAAE,CAgBwF,CAC3K;QACIipB,OAAO,EAAE0D,SAAS;QAClBO,WAAW,EAAEJ;MACjB,CAAC,CACJ,GArBoF9sB,wEAAE;IAAA;EAsB/F;EAAC,OARK8sB,uBAAuB;AAAA;AAS7B;EAAA,QAAA3qB,SAAA,oBAAAA,SAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOMgrB,eAAe;EAArB,MAAMA,eAAe,SAASxC,gBAAgB,CAAC;IAC3CyC,UAAU,GAAGntB,qDAAM,CAAC0pB,sDAAW,EAAE;MAAEjE,QAAQ,EAAE;IAAK,CAAC,CAAC;IACpDhgB,SAAS,GAAGzF,qDAAM,CAACmC,mDAAQ,CAAC;IAC5BirB,iBAAiB,GAAGptB,qDAAM,CAACoD,2DAAgB,CAAC;IAC5C;IACAiqB,cAAc,GAAG,KAAK;IACtB;IACAC,YAAY;IACZ7rB,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;IACX;IACA;IACA,IAAIqT,MAAMA,CAAA,EAAG;MACT,OAAO,IAAI,CAAC6V,eAAe;IAC/B;IACA,IAAI7V,MAAMA,CAACA,MAAM,EAAE;MACf;MACA;MACA;MACA;MACA,IAAI,IAAI,CAAC7L,WAAW,CAAC,CAAC,IAAI,CAAC6L,MAAM,IAAI,CAAC,IAAI,CAACuY,cAAc,EAAE;QACvD;MACJ;MACA,IAAI,IAAI,CAACpkB,WAAW,CAAC,CAAC,EAAE;QACpB,KAAK,CAACD,MAAM,CAAC,CAAC;MAClB;MACA,IAAI8L,MAAM,EAAE;QACR,KAAK,CAACpP,MAAM,CAACoP,MAAM,CAAC;MACxB;MACA,IAAI,CAAC6V,eAAe,GAAG7V,MAAM,IAAI,IAAI;IACzC;IACA;IACAyY,QAAQ,GAAG,IAAIrqB,uDAAY,CAAC,CAAC;IAC7B;IACA,IAAIsqB,WAAWA,CAAA,EAAG;MACd,OAAO,IAAI,CAACF,YAAY;IAC5B;IACAG,QAAQA,CAAA,EAAG;MACP,IAAI,CAACJ,cAAc,GAAG,IAAI;IAC9B;IACAvf,WAAWA,CAAA,EAAG;MACV,KAAK,CAACuF,OAAO,CAAC,CAAC;MACf,IAAI,CAACia,YAAY,GAAG,IAAI,CAAC3C,eAAe,GAAG,IAAI;IACnD;IACA;AACJ;AACA;AACA;AACA;AACA;IACIE,qBAAqBA,CAAC/V,MAAM,EAAE;MAC1BA,MAAM,CAACsV,eAAe,CAAC,IAAI,CAAC;MAC5B;MACA;MACA,MAAMzC,gBAAgB,GAAG7S,MAAM,CAAC6S,gBAAgB,IAAI,IAAI,GAAG7S,MAAM,CAAC6S,gBAAgB,GAAG,IAAI,CAACyF,iBAAiB;MAC3G,MAAMM,GAAG,GAAG/F,gBAAgB,CAACgC,eAAe,CAAC7U,MAAM,CAACwV,SAAS,EAAE;QAC3Dtc,KAAK,EAAE2Z,gBAAgB,CAACxZ,MAAM;QAC9BnJ,QAAQ,EAAE8P,MAAM,CAAC9P,QAAQ,IAAI2iB,gBAAgB,CAAC3iB,QAAQ;QACtDulB,gBAAgB,EAAEzV,MAAM,CAACyV,gBAAgB,IAAIje,SAAS;QACtDif,WAAW,EAAE,IAAI,CAAC4B,UAAU,IAAI7gB;MACpC,CAAC,CAAC;MACF;MACA;MACA;MACA,IAAIqb,gBAAgB,KAAK,IAAI,CAACyF,iBAAiB,EAAE;QAC7C,IAAI,CAACO,YAAY,CAAC,CAAC,CAAC/a,WAAW,CAAC8a,GAAG,CAAC9B,QAAQ,CAACO,SAAS,CAAC,CAAC,CAAC,CAAC;MAC9D;MACA,KAAK,CAAClB,YAAY,CAAC,MAAMyC,GAAG,CAACtY,OAAO,CAAC,CAAC,CAAC;MACvC,IAAI,CAACuV,eAAe,GAAG7V,MAAM;MAC7B,IAAI,CAACwY,YAAY,GAAGI,GAAG;MACvB,IAAI,CAACH,QAAQ,CAACrF,IAAI,CAACwF,GAAG,CAAC;MACvB,OAAOA,GAAG;IACd;IACA;AACJ;AACA;AACA;AACA;IACI5C,oBAAoBA,CAAChW,MAAM,EAAE;MACzBA,MAAM,CAACsV,eAAe,CAAC,IAAI,CAAC;MAC5B,MAAM6B,OAAO,GAAG,IAAI,CAACmB,iBAAiB,CAAClB,kBAAkB,CAACpX,MAAM,CAAC4S,WAAW,EAAE5S,MAAM,CAAC0V,OAAO,EAAE;QAC1FxlB,QAAQ,EAAE8P,MAAM,CAAC9P;MACrB,CAAC,CAAC;MACF,KAAK,CAACimB,YAAY,CAAC,MAAM,IAAI,CAACmC,iBAAiB,CAACQ,KAAK,CAAC,CAAC,CAAC;MACxD,IAAI,CAACjD,eAAe,GAAG7V,MAAM;MAC7B,IAAI,CAACwY,YAAY,GAAGrB,OAAO;MAC3B,IAAI,CAACsB,QAAQ,CAACrF,IAAI,CAAC+D,OAAO,CAAC;MAC3B,OAAOA,OAAO;IAClB;IACA;AACJ;AACA;AACA;AACA;AACA;IACIlB,eAAe,GAAIjW,MAAM,IAAK;MAC1B,MAAMxL,OAAO,GAAGwL,MAAM,CAACxL,OAAO;MAC9B,IAAI,CAACA,OAAO,CAAC0H,UAAU,KAAK,OAAO9O,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;QACxE,MAAMoF,KAAK,CAAC,uDAAuD,CAAC;MACxE;MACA;MACA;MACA,MAAMglB,UAAU,GAAG,IAAI,CAAC7mB,SAAS,CAAC+mB,aAAa,CAAC,YAAY,CAAC;MAC7D1X,MAAM,CAACsV,eAAe,CAAC,IAAI,CAAC;MAC5B9gB,OAAO,CAAC0H,UAAU,CAACsG,YAAY,CAACgV,UAAU,EAAEhjB,OAAO,CAAC;MACpD,IAAI,CAACqkB,YAAY,CAAC,CAAC,CAAC/a,WAAW,CAACtJ,OAAO,CAAC;MACxC,IAAI,CAACqhB,eAAe,GAAG7V,MAAM;MAC7B,KAAK,CAACmW,YAAY,CAAC,MAAM;QACrB,IAAIqB,UAAU,CAACtb,UAAU,EAAE;UACvBsb,UAAU,CAACtb,UAAU,CAACyb,YAAY,CAACnjB,OAAO,EAAEgjB,UAAU,CAAC;QAC3D;MACJ,CAAC,CAAC;IACN,CAAC;IACD;IACAqB,YAAYA,CAAA,EAAG;MACX,MAAMplB,aAAa,GAAG,IAAI,CAAC6kB,iBAAiB,CAAC9jB,OAAO,CAACf,aAAa;MAClE;MACA;MACA,OAAQA,aAAa,CAACslB,QAAQ,KAAKtlB,aAAa,CAACulB,YAAY,GACvDvlB,aAAa,GACbA,aAAa,CAACyI,UAAU;IAClC;IACA,OAAOtP,IAAI,YAAAqsB,wBAAAnsB,iBAAA;MAAA,YAAAA,iBAAA,IAAwFsrB,eAAe;IAAA;IAClH,OAAO9G,IAAI,kBAtK8ErmB,+DAAE;MAAAoQ,IAAA,EAsKJ+c,eAAe;MAAA7b,SAAA;MAAAqX,MAAA;QAAA5T,MAAA;MAAA;MAAA6T,OAAA;QAAA4E,QAAA;MAAA;MAAAjH,QAAA;MAAAsC,QAAA,GAtKb7oB,wEAAE;IAAA;EAuK/F;EAAC,OA5HKmtB,eAAe;AAAA;AA6HrB;EAAA,QAAAhrB,SAAA,oBAAAA,SAAA;AAAA;AAYA;AACA;AACA;AACA;AAHA,IAIM8rB,mBAAmB;EAAzB,MAAMA,mBAAmB,SAASd,eAAe,CAAC;IAC9C,OAAOxrB,IAAI;MAAA,IAAAusB,gCAAA;MAAA,gBAAAC,4BAAAtsB,iBAAA;QAAA,QAAAqsB,gCAAA,KAAAA,gCAAA,GAzL8EluB,mEAAE,CAyLQiuB,mBAAmB,IAAApsB,iBAAA,IAAnBosB,mBAAmB;MAAA;IAAA;IACtH,OAAO5H,IAAI,kBA1L8ErmB,+DAAE;MAAAoQ,IAAA,EA0LJ6d,mBAAmB;MAAA3c,SAAA;MAAAqX,MAAA;QAAA5T,MAAA;MAAA;MAAAwR,QAAA;MAAAsC,QAAA,GA1LjB7oB,gEAAE,CA0L4I,CAC/N;QACIipB,OAAO,EAAEkE,eAAe;QACxBD,WAAW,EAAEe;MACjB,CAAC,CACJ,GA/LoFjuB,wEAAE;IAAA;EAgM/F;EAAC,OARKiuB,mBAAmB;AAAA;AASzB;EAAA,QAAA9rB,SAAA,oBAAAA,SAAA;AAAA;AAac,IACRoC,YAAY;EAAlB,MAAMA,YAAY,CAAC;IACf,OAAO5C,IAAI,YAAAysB,qBAAAvsB,iBAAA;MAAA,YAAAA,iBAAA,IAAwF0C,YAAY;IAAA;IAC/G,OAAO8kB,IAAI,kBAjN8ErpB,8DAAE;MAAAoQ,IAAA,EAiNS7L;IAAY;IAChH,OAAOglB,IAAI,kBAlN8EvpB,8DAAE;EAmN/F;EAAC,OAJKuE,YAAY;AAAA;AAKlB;EAAA,QAAApC,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;;AC5lBoC;AAC+D;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMmsB,YAAY,gBAAG,IAAIrrB,yDAAc,CAAC,aAAa,EAAE;EACnDf,UAAU,EAAE,MAAM;EAClBD,OAAO,EAAEssB;AACb,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoBA,CAAA,EAAG;EAC5B,OAAOtuB,qDAAM,CAACmC,mDAAQ,CAAC;AAC3B;;AAEA;AACA,MAAMosB,kBAAkB,GAAG,oHAAoH;AAC/I;AACA,SAASC,sBAAsBA,CAACC,QAAQ,EAAE;EACtC,MAAMh8B,KAAK,GAAGg8B,QAAQ,EAAEC,WAAW,CAAC,CAAC,IAAI,EAAE;EAC3C,IAAIj8B,KAAK,KAAK,MAAM,IAAI,OAAOoO,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE8tB,QAAQ,EAAE;IAC7E,OAAOJ,kBAAkB,CAAC3tB,IAAI,CAACC,SAAS,CAAC8tB,QAAQ,CAAC,GAAG,KAAK,GAAG,KAAK;EACtE;EACA,OAAOl8B,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK;AAC1C;AACA;AACA;AACA;AACA;AAHA,IAIMkS,cAAc;EAApB,MAAMA,cAAc,CAAC;IACjB;IACA,IAAIlS,KAAKA,CAAA,EAAG;MACR,OAAO,IAAI,CAACm8B,WAAW,CAAC,CAAC;IAC7B;IACA;AACJ;AACA;IACIA,WAAW,GAAGR,qDAAM,CAAC,KAAK,CAAC;IAC3B;IACA7T,MAAM,GAAG,IAAIrX,uDAAY,CAAC,CAAC;IAC3BzB,WAAWA,CAAA,EAAG;MACV,MAAMgE,SAAS,GAAGzF,qDAAM,CAACquB,YAAY,EAAE;QAAE5I,QAAQ,EAAE;MAAK,CAAC,CAAC;MAC1D,IAAIhgB,SAAS,EAAE;QACX,MAAMopB,OAAO,GAAGppB,SAAS,CAACY,IAAI,GAAGZ,SAAS,CAACY,IAAI,CAACyQ,GAAG,GAAG,IAAI;QAC1D,MAAMgY,OAAO,GAAGrpB,SAAS,CAACK,eAAe,GAAGL,SAAS,CAACK,eAAe,CAACgR,GAAG,GAAG,IAAI;QAChF,IAAI,CAAC8X,WAAW,CAACG,GAAG,CAACP,sBAAsB,CAACK,OAAO,IAAIC,OAAO,IAAI,KAAK,CAAC,CAAC;MAC7E;IACJ;IACAhhB,WAAWA,CAAA,EAAG;MACV,IAAI,CAACyM,MAAM,CAACrE,QAAQ,CAAC,CAAC;IAC1B;IACA,OAAOxU,IAAI,YAAAstB,uBAAAptB,iBAAA;MAAA,YAAAA,iBAAA,IAAwF+C,cAAc;IAAA;IACjH,OAAO9C,KAAK,kBAD6E9B,gEAAE;MAAAgC,KAAA,EACY4C,cAAc;MAAA3C,OAAA,EAAd2C,cAAc,CAAAjD,IAAA;MAAAO,UAAA,EAAc;IAAM;EAC7I;EAAC,OAxBK0C,cAAc;AAAA;AAyBpB;EAAA,QAAAzC,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;ACtEoC;AACuB;;AAE3D;AACA;AACA;AACA;AACA;AACA,MAAMgtB,QAAQ,GAAG,CAAC,CAAC;AACnB;AAAA,IACMxqB,YAAY;EAAlB,MAAMA,YAAY,CAAC;IACfyqB,MAAM,GAAGnvB,qDAAM,CAACivB,iDAAM,CAAC;IACvB;AACJ;AACA;AACA;IACI3J,KAAKA,CAAC8J,MAAM,EAAE;MACV;MACA;MACA,IAAI,IAAI,CAACD,MAAM,KAAK,IAAI,EAAE;QACtBC,MAAM,IAAI,IAAI,CAACD,MAAM;MACzB;MACA,IAAI,CAACD,QAAQ,CAACxM,cAAc,CAAC0M,MAAM,CAAC,EAAE;QAClCF,QAAQ,CAACE,MAAM,CAAC,GAAG,CAAC;MACxB;MACA,OAAO,GAAGA,MAAM,GAAGF,QAAQ,CAACE,MAAM,CAAC,EAAE,EAAE;IAC3C;IACA,OAAO1tB,IAAI,YAAA2tB,qBAAAztB,iBAAA;MAAA,YAAAA,iBAAA,IAAwF8C,YAAY;IAAA;IAC/G,OAAO7C,KAAK,kBAD6E9B,gEAAE;MAAAgC,KAAA,EACY2C,YAAY;MAAA1C,OAAA,EAAZ0C,YAAY,CAAAhD,IAAA;MAAAO,UAAA,EAAc;IAAM;EAC3I;EAAC,OAnBKyC,YAAY;AAAA;AAoBlB;EAAA,QAAAxC,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;AC9BA;AACA,IAAIotB,iBAAiB,gBACpB,UAAUA,iBAAiB,EAAE;EAC1B;AACJ;AACA;AACA;EACIA,iBAAiB,CAACA,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EAC7D;AACJ;AACA;AACA;EACIA,iBAAiB,CAACA,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EAC/D;AACJ;AACA;AACA;EACIA,iBAAiB,CAACA,iBAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EAAC,OAf3DA,iBAAiB;AAgB5B,CAAC,CAAEA,iBAAiB,IAAyB,CAAC,CAAE,CAjB3B;AAkBrB;AACA,IAAIC,iBAAiB;AACrB;AACA,IAAIzqB,uBAAuB;AAC3B;AACA,SAASP,sBAAsBA,CAAA,EAAG;EAC9B,IAAIO,uBAAuB,IAAI,IAAI,EAAE;IACjC;IACA;IACA,IAAI,OAAOpE,QAAQ,KAAK,QAAQ,IAAI,CAACA,QAAQ,IAAI,OAAO6hB,OAAO,KAAK,UAAU,IAAI,CAACA,OAAO,EAAE;MACxFzd,uBAAuB,GAAG,KAAK;MAC/B,OAAOA,uBAAuB;IAClC;IACA;IACA,IAAI,gBAAgB,IAAIpE,QAAQ,CAACoF,eAAe,CAACE,KAAK,EAAE;MACpDlB,uBAAuB,GAAG,IAAI;IAClC,CAAC,MACI;MACD;MACA;MACA,MAAM0qB,gBAAgB,GAAGjN,OAAO,CAACkN,SAAS,CAACC,QAAQ;MACnD,IAAIF,gBAAgB,EAAE;QAClB;QACA;QACA;QACA;QACA1qB,uBAAuB,GAAG,CAAC,2BAA2B,CAAClE,IAAI,CAAC4uB,gBAAgB,CAACG,QAAQ,CAAC,CAAC,CAAC;MAC5F,CAAC,MACI;QACD7qB,uBAAuB,GAAG,KAAK;MACnC;IACJ;EACJ;EACA,OAAOA,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA,SAAS8qB,oBAAoBA,CAAA,EAAG;EAC5B;EACA,IAAI,OAAOlvB,QAAQ,KAAK,QAAQ,IAAI,CAACA,QAAQ,EAAE;IAC3C,OAAO4uB,iBAAiB,CAACO,MAAM;EACnC;EACA,IAAIN,iBAAiB,IAAI,IAAI,EAAE;IAC3B;IACA,MAAMO,eAAe,GAAGpvB,QAAQ,CAACgS,aAAa,CAAC,KAAK,CAAC;IACrD,MAAMqd,cAAc,GAAGD,eAAe,CAAC9pB,KAAK;IAC5C8pB,eAAe,CAAChZ,GAAG,GAAG,KAAK;IAC3BiZ,cAAc,CAAC3oB,KAAK,GAAG,KAAK;IAC5B2oB,cAAc,CAACC,QAAQ,GAAG,MAAM;IAChCD,cAAc,CAACE,UAAU,GAAG,QAAQ;IACpCF,cAAc,CAACxc,aAAa,GAAG,MAAM;IACrCwc,cAAc,CAAClU,QAAQ,GAAG,UAAU;IACpC,MAAMqU,OAAO,GAAGxvB,QAAQ,CAACgS,aAAa,CAAC,KAAK,CAAC;IAC7C,MAAMyd,YAAY,GAAGD,OAAO,CAAClqB,KAAK;IAClCmqB,YAAY,CAAC/oB,KAAK,GAAG,KAAK;IAC1B+oB,YAAY,CAACjpB,MAAM,GAAG,KAAK;IAC3B4oB,eAAe,CAACld,WAAW,CAACsd,OAAO,CAAC;IACpCxvB,QAAQ,CAAC2F,IAAI,CAACuM,WAAW,CAACkd,eAAe,CAAC;IAC1CP,iBAAiB,GAAGD,iBAAiB,CAACO,MAAM;IAC5C;IACA;IACA;IACA,IAAIC,eAAe,CAACM,UAAU,KAAK,CAAC,EAAE;MAClC;MACA;MACA;MACA;MACAN,eAAe,CAACM,UAAU,GAAG,CAAC;MAC9Bb,iBAAiB,GACbO,eAAe,CAACM,UAAU,KAAK,CAAC,GAAGd,iBAAiB,CAACe,OAAO,GAAGf,iBAAiB,CAACgB,QAAQ;IACjG;IACAR,eAAe,CAACnpB,MAAM,CAAC,CAAC;EAC5B;EACA,OAAO4oB,iBAAiB;AAC5B;;;;;;;;;;;;;;;;;;;;AC/FiG;AAC/B;AAC9B;AACqD;;AAEzF;AACA;AACA;AACA;AACA;AACA;AALA,IAMMgB,GAAG;EAAT,MAAMA,GAAG,CAAC;IACN;IACAlD,cAAc,GAAG,KAAK;IACtB;IACAmD,OAAO;IACP;IACAjW,MAAM,GAAG,IAAIrX,uDAAY,CAAC,CAAC;IAC3B;IACA,IAAI4T,GAAGA,CAAA,EAAG;MACN,OAAO,IAAI,CAAC8X,WAAW,CAAC,CAAC;IAC7B;IACA,IAAI9X,GAAGA,CAACrkB,KAAK,EAAE;MACX,MAAMg+B,aAAa,GAAG,IAAI,CAAC7B,WAAW,CAAC,CAAC;MACxC;MACA;MACA;MACA,IAAI,CAACA,WAAW,CAACG,GAAG,CAACP,+DAAsB,CAAC/7B,KAAK,CAAC,CAAC;MACnD,IAAI,CAAC+9B,OAAO,GAAG/9B,KAAK;MACpB,IAAIg+B,aAAa,KAAK,IAAI,CAAC7B,WAAW,CAAC,CAAC,IAAI,IAAI,CAACvB,cAAc,EAAE;QAC7D,IAAI,CAAC9S,MAAM,CAAC2N,IAAI,CAAC,IAAI,CAAC0G,WAAW,CAAC,CAAC,CAAC;MACxC;IACJ;IACA;IACA,IAAIn8B,KAAKA,CAAA,EAAG;MACR,OAAO,IAAI,CAACqkB,GAAG;IACnB;IACA8X,WAAW,GAAGR,qDAAM,CAAC,KAAK,CAAC;IAC3B;IACAsC,kBAAkBA,CAAA,EAAG;MACjB,IAAI,CAACrD,cAAc,GAAG,IAAI;IAC9B;IACAvf,WAAWA,CAAA,EAAG;MACV,IAAI,CAACyM,MAAM,CAACrE,QAAQ,CAAC,CAAC;IAC1B;IACA,OAAOxU,IAAI,YAAAivB,YAAA/uB,iBAAA;MAAA,YAAAA,iBAAA,IAAwF2uB,GAAG;IAAA;IACtG,OAAOnK,IAAI,kBAD8ErmB,+DAAE;MAAAoQ,IAAA,EACJogB,GAAG;MAAAlf,SAAA;MAAAuf,QAAA;MAAAC,YAAA,WAAAC,iBAAAnf,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UADD5R,yDAAE,QAAA6R,GAAA,CAAA4e,OAAA;QAAA;MAAA;MAAA9H,MAAA;QAAA5R,GAAA;MAAA;MAAA6R,OAAA;QAAApO,MAAA;MAAA;MAAA+L,QAAA;MAAAsC,QAAA,GAAF7oB,gEAAE,CAC8J,CAAC;QAAEipB,OAAO,EAAErkB,2DAAc;QAAEsoB,WAAW,EAAEsD;MAAI,CAAC,CAAC;IAAA;EAC5S;EAAC,OApCKA,GAAG;AAAA;AAqCT;EAAA,QAAAruB,SAAA,oBAAAA,SAAA;AAAA;AAaoB,IAEd2C,UAAU;EAAhB,MAAMA,UAAU,CAAC;IACb,OAAOnD,IAAI,YAAAsvB,mBAAApvB,iBAAA;MAAA,YAAAA,iBAAA,IAAwFiD,UAAU;IAAA;IAC7G,OAAOukB,IAAI,kBApB8ErpB,8DAAE;MAAAoQ,IAAA,EAoBStL;IAAU;IAC9G,OAAOykB,IAAI,kBArB8EvpB,8DAAE;EAsB/F;EAAC,OAJK8E,UAAU;AAAA;AAKhB;EAAA,QAAA3C,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;ACpEA;AACA,SAASyB,kBAAkBA,CAAA,EAAG;EAC1B;EACA;EACA;EACA;EACA;IACA;IACC,OAAOstB,SAAS,KAAK,WAAW,IAAI,CAAC,CAACA,SAAS;IAC5C;IACC,OAAOC,OAAO,KAAK,WAAW,IAAI,CAAC,CAACA,OAAQ;IAC7C;IACC,OAAOC,IAAI,KAAK,WAAW,IAAI,CAAC,CAACA,IAAK;IACvC;IACC,OAAOC,KAAK,KAAK,WAAW,IAAI,CAAC,CAACA;EAAM;AACjD;;;;;;;;;;;;;;;;;;ACfA,IAAIC,oBAAoB;AACxB;AACA,SAASC,kBAAkBA,CAAA,EAAG;EAC1B,IAAID,oBAAoB,IAAI,IAAI,EAAE;IAC9B,MAAME,IAAI,GAAG,OAAO7wB,QAAQ,KAAK,WAAW,GAAGA,QAAQ,CAAC6wB,IAAI,GAAG,IAAI;IACnEF,oBAAoB,GAAG,CAAC,EAAEE,IAAI,KAAKA,IAAI,CAACC,gBAAgB,IAAID,IAAI,CAACE,YAAY,CAAC,CAAC;EACnF;EACA,OAAOJ,oBAAoB;AAC/B;AACA;AACA,SAASK,cAAcA,CAACpoB,OAAO,EAAE;EAC7B,IAAIgoB,kBAAkB,CAAC,CAAC,EAAE;IACtB,MAAMlF,QAAQ,GAAG9iB,OAAO,CAACqoB,WAAW,GAAGroB,OAAO,CAACqoB,WAAW,CAAC,CAAC,GAAG,IAAI;IACnE;IACA;IACA,IAAI,OAAO9gB,UAAU,KAAK,WAAW,IAAIA,UAAU,IAAIub,QAAQ,YAAYvb,UAAU,EAAE;MACnF,OAAOub,QAAQ;IACnB;EACJ;EACA,OAAO,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,SAASwF,iCAAiCA,CAAA,EAAG;EACzC,IAAIC,aAAa,GAAG,OAAOnxB,QAAQ,KAAK,WAAW,IAAIA,QAAQ,GACzDA,QAAQ,CAACmxB,aAAa,GACtB,IAAI;EACV,OAAOA,aAAa,IAAIA,aAAa,CAACC,UAAU,EAAE;IAC9C,MAAMC,gBAAgB,GAAGF,aAAa,CAACC,UAAU,CAACD,aAAa;IAC/D,IAAIE,gBAAgB,KAAKF,aAAa,EAAE;MACpC;IACJ,CAAC,MACI;MACDA,aAAa,GAAGE,gBAAgB;IACpC;EACJ;EACA,OAAOF,aAAa;AACxB;AACA;AACA,SAASnuB,eAAeA,CAACkL,KAAK,EAAE;EAC5B;EACA;EACA,OAAQA,KAAK,CAACojB,YAAY,GAAGpjB,KAAK,CAACojB,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGpjB,KAAK,CAACsB,MAAM;AACvE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7C8oD;;AAE9oD;AACA;AACA;AACA;AACA,SAAStL,cAAcA,CAACgK,KAAK,EAAE,GAAGqjB,SAAS,EAAE;EACzC,IAAIA,SAAS,CAAC9jB,MAAM,EAAE;IAClB,OAAO8jB,SAAS,CAACzoB,IAAI,CAAC0oB,QAAQ,IAAItjB,KAAK,CAACsjB,QAAQ,CAAC,CAAC;EACtD;EACA,OAAOtjB,KAAK,CAACujB,MAAM,IAAIvjB,KAAK,CAACwjB,QAAQ,IAAIxjB,KAAK,CAACyjB,OAAO,IAAIzjB,KAAK,CAAC0jB,OAAO;AAC3E;;;;;;;;;;;;;;;;;;;;;ACXwC;AACqB;AACd;;AAE/C;AACA,MAAMG,eAAe,SAASlgC,wDAAU,CAAC;EACrCmgC,KAAK;EACLjxB,WAAWA,CAACixB,KAAK,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EACAhgC,OAAOA,CAAA,EAAG;IACN,OAAO6/B,kDAAY,CAAC,IAAI,CAACG,KAAK,CAAC,GAAG,IAAI,CAACA,KAAK,GAAGF,wCAAE,CAAC,IAAI,CAACE,KAAK,CAAC;EACjE;EACAxa,UAAUA,CAAA,EAAG,CAAE;AACnB;;AAEA;AACA,IAAIya,sBAAsB,gBACzB,UAAUA,sBAAsB,EAAE;EAC/B;EACAA,sBAAsB,CAACA,sBAAsB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EAC3E;EACAA,sBAAsB,CAACA,sBAAsB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EAC3E;EACAA,sBAAsB,CAACA,sBAAsB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACrE;EACAA,sBAAsB,CAACA,sBAAsB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EAAC,OARnEA,sBAAsB;AASjC,CAAC,CAAEA,sBAAsB,IAA8B,CAAC,CAAE,CAVhC;AAW1B;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,gBAAG,IAAI5vB,yDAAc,CAAC,eAAe,CAAC;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM6vB,4BAA4B,CAAC;EAC/B;AACJ;AACA;AACA;EACIC,aAAa,GAAG,EAAE;EAClB;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,GAAG,EAAE;EACf;EACAC,YAAYA,CAACnL,OAAO,EAAEF,gBAAgB,EAAEsL,kBAAkB,EAAEC,iBAAiB,EAAEC,eAAe,EAAE;IAC5F;IACAtL,OAAO,CAACuL,gBAAgB,CAAC,CAACC,MAAM,EAAEC,qBAAqB,EAAEC,YAAY,KAAK;MACtE,IAAIC,IAAI;MACR,IAAIC,SAAS;MACb,IAAIJ,MAAM,CAACK,aAAa,IAAI,IAAI,EAAE;QAC9B;QACA,MAAMC,eAAe,GAAGA,CAAA,KAAMV,kBAAkB,CAACI,MAAM,EAAEC,qBAAqB,EAAEC,YAAY,CAAC;QAC7FC,IAAI,GAAG,IAAI,CAACI,WAAW,CAACD,eAAe,EAAEJ,YAAY,EAAE5L,gBAAgB,EAAEuL,iBAAiB,CAACG,MAAM,CAAC,CAAC;QACnGI,SAAS,GAAGD,IAAI,GAAGb,sBAAsB,CAACkB,QAAQ,GAAGlB,sBAAsB,CAACmB,QAAQ;MACxF,CAAC,MACI,IAAIP,YAAY,IAAI,IAAI,EAAE;QAC3B;QACA,IAAI,CAACQ,mBAAmB,CAACT,qBAAqB,EAAE3L,gBAAgB,CAAC;QACjE8L,SAAS,GAAGd,sBAAsB,CAACqB,OAAO;MAC9C,CAAC,MACI;QACD;QACAR,IAAI,GAAG,IAAI,CAACS,SAAS,CAACX,qBAAqB,EAAEC,YAAY,EAAE5L,gBAAgB,EAAEuL,iBAAiB,CAACG,MAAM,CAAC,CAAC;QACvGI,SAAS,GAAGd,sBAAsB,CAACuB,KAAK;MAC5C;MACA,IAAIf,eAAe,EAAE;QACjBA,eAAe,CAAC;UACZ3I,OAAO,EAAEgJ,IAAI,EAAEhJ,OAAO;UACtBiJ,SAAS;UACTJ;QACJ,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;EACArqB,MAAMA,CAAA,EAAG;IACL,KAAK,MAAMwqB,IAAI,IAAI,IAAI,CAACT,UAAU,EAAE;MAChCS,IAAI,CAACpe,OAAO,CAAC,CAAC;IAClB;IACA,IAAI,CAAC2d,UAAU,GAAG,EAAE;EACxB;EACA;AACJ;AACA;AACA;EACIa,WAAWA,CAACD,eAAe,EAAEJ,YAAY,EAAE5L,gBAAgB,EAAEl1B,KAAK,EAAE;IAChE,MAAM0hC,UAAU,GAAG,IAAI,CAACC,oBAAoB,CAACb,YAAY,EAAE5L,gBAAgB,CAAC;IAC5E,IAAIwM,UAAU,EAAE;MACZA,UAAU,CAAC3J,OAAO,CAAC6J,SAAS,GAAG5hC,KAAK;MACpC,OAAO6Z,SAAS;IACpB;IACA,MAAMgoB,QAAQ,GAAGX,eAAe,CAAC,CAAC;IAClC,OAAOhM,gBAAgB,CAACuE,kBAAkB,CAACoI,QAAQ,CAAC5M,WAAW,EAAE4M,QAAQ,CAAC9J,OAAO,EAAE8J,QAAQ,CAACtmB,KAAK,CAAC;EACtG;EACA;EACA+lB,mBAAmBA,CAAC/lB,KAAK,EAAE2Z,gBAAgB,EAAE;IACzC,MAAM4M,YAAY,GAAG5M,gBAAgB,CAAC3e,MAAM,CAACgF,KAAK,CAAC;IACnD,IAAI,CAACwmB,eAAe,CAACD,YAAY,EAAE5M,gBAAgB,CAAC;EACxD;EACA;EACAsM,SAASA,CAACX,qBAAqB,EAAEC,YAAY,EAAE5L,gBAAgB,EAAEl1B,KAAK,EAAE;IACpE,MAAM+gC,IAAI,GAAG7L,gBAAgB,CAACziB,GAAG,CAACouB,qBAAqB,CAAC;IACxD3L,gBAAgB,CAAC8M,IAAI,CAACjB,IAAI,EAAED,YAAY,CAAC;IACzCC,IAAI,CAAChJ,OAAO,CAAC6J,SAAS,GAAG5hC,KAAK;IAC9B,OAAO+gC,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIgB,eAAeA,CAAChB,IAAI,EAAE7L,gBAAgB,EAAE;IACpC,IAAI,IAAI,CAACoL,UAAU,CAAC5kB,MAAM,GAAG,IAAI,CAAC2kB,aAAa,EAAE;MAC7C,IAAI,CAACC,UAAU,CAAChlB,IAAI,CAACylB,IAAI,CAAC;IAC9B,CAAC,MACI;MACD,MAAMxlB,KAAK,GAAG2Z,gBAAgB,CAAC1Z,OAAO,CAACulB,IAAI,CAAC;MAC5C;MACA;MACA;MACA;MACA,IAAIxlB,KAAK,KAAK,CAAC,CAAC,EAAE;QACdwlB,IAAI,CAACpe,OAAO,CAAC,CAAC;MAClB,CAAC,MACI;QACDuS,gBAAgB,CAAChhB,MAAM,CAACqH,KAAK,CAAC;MAClC;IACJ;EACJ;EACA;EACAomB,oBAAoBA,CAACpmB,KAAK,EAAE2Z,gBAAgB,EAAE;IAC1C,MAAMwM,UAAU,GAAG,IAAI,CAACpB,UAAU,CAAC2B,GAAG,CAAC,CAAC;IACxC,IAAIP,UAAU,EAAE;MACZxM,gBAAgB,CAACgN,MAAM,CAACR,UAAU,EAAEnmB,KAAK,CAAC;IAC9C;IACA,OAAOmmB,UAAU,IAAI,IAAI;EAC7B;AACJ;;;;;;;;;;;;;;;ACxJA;AACA,SAASpwB,mBAAmBA,CAACtR,KAAK,EAAE;EAChC,IAAIA,KAAK,IAAI,IAAI,EAAE;IACf,OAAO,EAAE;EACb;EACA,OAAO,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,GAAGA,KAAK,IAAI;AAC3D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNoC;AACsV;AACvQ;AACc;AAC1C;AAC/B;AACY;AACsD;AAClF;AAAA,MAAAqjC,GAAA;AAAA,MAAAC,GAAA;AACE;AAC4G;AACvF;AACtC;;AAEzB;AACA,MAAME,uBAAuB,gBAAG,IAAIjzB,yDAAc,CAAC,yBAAyB,CAAC;;AAE7E;AACA,MAAMkzB,8BAA8B,CAAC;EACjCC,oBAAoB,gBAAG,IAAItyB,yCAAO,CAAC,CAAC;EACpC;EACAuyB,mBAAmB,gBAAG,IAAI,CAACD,oBAAoB,CAAChuB,IAAI,cAACktB,oEAAoB,CAAC,CAAC,CAAC;EAC5E;EACAgB,SAAS,GAAG,IAAI;EAChB;EACAC,SAAS;EACT;EACAC,YAAY;EACZ;EACAC,YAAY;EACZ;AACJ;AACA;AACA;AACA;EACI/0B,WAAWA,CAACg1B,QAAQ,EAAEC,WAAW,EAAEC,WAAW,EAAE;IAC5C,IAAI,CAACL,SAAS,GAAGG,QAAQ;IACzB,IAAI,CAACF,YAAY,GAAGG,WAAW;IAC/B,IAAI,CAACF,YAAY,GAAGG,WAAW;EACnC;EACA;AACJ;AACA;AACA;EACIjxB,MAAMA,CAACqB,QAAQ,EAAE;IACb,IAAI,CAACsvB,SAAS,GAAGtvB,QAAQ;IACzB,IAAI,CAAC6vB,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC/B;EACA;EACA7tB,MAAMA,CAAA,EAAG;IACL,IAAI,CAACmtB,oBAAoB,CAACjgB,QAAQ,CAAC,CAAC;IACpC,IAAI,CAACmgB,SAAS,GAAG,IAAI;EACzB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIS,uBAAuBA,CAACL,QAAQ,EAAEC,WAAW,EAAEC,WAAW,EAAE;IACxD,IAAIA,WAAW,GAAGD,WAAW,KAAK,OAAOx0B,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MAC9E,MAAMoF,KAAK,CAAC,8EAA8E,CAAC;IAC/F;IACA,IAAI,CAACgvB,SAAS,GAAGG,QAAQ;IACzB,IAAI,CAACF,YAAY,GAAGG,WAAW;IAC/B,IAAI,CAACF,YAAY,GAAGG,WAAW;IAC/B,IAAI,CAACC,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC/B;EACA;EACAE,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACF,oBAAoB,CAAC,CAAC;EAC/B;EACA;EACAG,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACJ,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC/B;EACA;EACAI,iBAAiBA,CAAA,EAAG;IAChB;EAAA;EAEJ;EACAC,uBAAuBA,CAAA,EAAG;IACtB;EAAA;EAEJ;AACJ;AACA;AACA;AACA;EACIC,aAAaA,CAACnpB,KAAK,EAAEopB,QAAQ,EAAE;IAC3B,IAAI,IAAI,CAACf,SAAS,EAAE;MAChB,IAAI,CAACA,SAAS,CAACgB,cAAc,CAACrpB,KAAK,GAAG,IAAI,CAACsoB,SAAS,EAAEc,QAAQ,CAAC;IACnE;EACJ;EACA;EACAR,uBAAuBA,CAAA,EAAG;IACtB,IAAI,CAAC,IAAI,CAACP,SAAS,EAAE;MACjB;IACJ;IACA,IAAI,CAACA,SAAS,CAACiB,mBAAmB,CAAC,IAAI,CAACjB,SAAS,CAACkB,aAAa,CAAC,CAAC,GAAG,IAAI,CAACjB,SAAS,CAAC;EACvF;EACA;EACAO,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAAC,IAAI,CAACR,SAAS,EAAE;MACjB;IACJ;IACA,MAAMmB,aAAa,GAAG,IAAI,CAACnB,SAAS,CAACoB,gBAAgB,CAAC,CAAC;IACvD,MAAMC,QAAQ,GAAG;MAAEtY,KAAK,EAAEoY,aAAa,CAACpY,KAAK;MAAE0E,GAAG,EAAE0T,aAAa,CAAC1T;IAAI,CAAC;IACvE,MAAM6T,YAAY,GAAG,IAAI,CAACtB,SAAS,CAACrvB,eAAe,CAAC,CAAC;IACrD,MAAM4wB,UAAU,GAAG,IAAI,CAACvB,SAAS,CAACkB,aAAa,CAAC,CAAC;IACjD,IAAIM,YAAY,GAAG,IAAI,CAACxB,SAAS,CAACyB,mBAAmB,CAAC,CAAC;IACvD;IACA,IAAIC,iBAAiB,GAAG,IAAI,CAACzB,SAAS,GAAG,CAAC,GAAGuB,YAAY,GAAG,IAAI,CAACvB,SAAS,GAAG,CAAC;IAC9E;IACA,IAAIoB,QAAQ,CAAC5T,GAAG,GAAG8T,UAAU,EAAE;MAC3B;MACA,MAAMI,eAAe,GAAGrvB,IAAI,CAACsvB,IAAI,CAACN,YAAY,GAAG,IAAI,CAACrB,SAAS,CAAC;MAChE,MAAM4B,eAAe,GAAGvvB,IAAI,CAAC2W,GAAG,CAAC,CAAC,EAAE3W,IAAI,CAAC+X,GAAG,CAACqX,iBAAiB,EAAEH,UAAU,GAAGI,eAAe,CAAC,CAAC;MAC9F;MACA;MACA,IAAID,iBAAiB,IAAIG,eAAe,EAAE;QACtCH,iBAAiB,GAAGG,eAAe;QACnCL,YAAY,GAAGK,eAAe,GAAG,IAAI,CAAC5B,SAAS;QAC/CoB,QAAQ,CAACtY,KAAK,GAAGzW,IAAI,CAACqa,KAAK,CAAC+U,iBAAiB,CAAC;MAClD;MACAL,QAAQ,CAAC5T,GAAG,GAAGnb,IAAI,CAAC2W,GAAG,CAAC,CAAC,EAAE3W,IAAI,CAAC+X,GAAG,CAACkX,UAAU,EAAEF,QAAQ,CAACtY,KAAK,GAAG4Y,eAAe,CAAC,CAAC;IACtF;IACA,MAAMG,WAAW,GAAGN,YAAY,GAAGH,QAAQ,CAACtY,KAAK,GAAG,IAAI,CAACkX,SAAS;IAClE,IAAI6B,WAAW,GAAG,IAAI,CAAC5B,YAAY,IAAImB,QAAQ,CAACtY,KAAK,IAAI,CAAC,EAAE;MACxD,MAAMgZ,WAAW,GAAGzvB,IAAI,CAACsvB,IAAI,CAAC,CAAC,IAAI,CAACzB,YAAY,GAAG2B,WAAW,IAAI,IAAI,CAAC7B,SAAS,CAAC;MACjFoB,QAAQ,CAACtY,KAAK,GAAGzW,IAAI,CAAC2W,GAAG,CAAC,CAAC,EAAEoY,QAAQ,CAACtY,KAAK,GAAGgZ,WAAW,CAAC;MAC1DV,QAAQ,CAAC5T,GAAG,GAAGnb,IAAI,CAAC+X,GAAG,CAACkX,UAAU,EAAEjvB,IAAI,CAACsvB,IAAI,CAACF,iBAAiB,GAAG,CAACJ,YAAY,GAAG,IAAI,CAACpB,YAAY,IAAI,IAAI,CAACD,SAAS,CAAC,CAAC;IAC3H,CAAC,MACI;MACD,MAAM+B,SAAS,GAAGX,QAAQ,CAAC5T,GAAG,GAAG,IAAI,CAACwS,SAAS,IAAIuB,YAAY,GAAGF,YAAY,CAAC;MAC/E,IAAIU,SAAS,GAAG,IAAI,CAAC9B,YAAY,IAAImB,QAAQ,CAAC5T,GAAG,IAAI8T,UAAU,EAAE;QAC7D,MAAMU,SAAS,GAAG3vB,IAAI,CAACsvB,IAAI,CAAC,CAAC,IAAI,CAACzB,YAAY,GAAG6B,SAAS,IAAI,IAAI,CAAC/B,SAAS,CAAC;QAC7E,IAAIgC,SAAS,GAAG,CAAC,EAAE;UACfZ,QAAQ,CAAC5T,GAAG,GAAGnb,IAAI,CAAC+X,GAAG,CAACkX,UAAU,EAAEF,QAAQ,CAAC5T,GAAG,GAAGwU,SAAS,CAAC;UAC7DZ,QAAQ,CAACtY,KAAK,GAAGzW,IAAI,CAAC2W,GAAG,CAAC,CAAC,EAAE3W,IAAI,CAACqa,KAAK,CAAC+U,iBAAiB,GAAG,IAAI,CAACxB,YAAY,GAAG,IAAI,CAACD,SAAS,CAAC,CAAC;QACpG;MACJ;IACJ;IACA,IAAI,CAACD,SAAS,CAACkC,gBAAgB,CAACb,QAAQ,CAAC;IACzC,IAAI,CAACrB,SAAS,CAACmC,wBAAwB,CAAC,IAAI,CAAClC,SAAS,GAAGoB,QAAQ,CAACtY,KAAK,CAAC;IACxE,IAAI,CAAC+W,oBAAoB,CAACnnB,IAAI,CAACrG,IAAI,CAACqa,KAAK,CAAC+U,iBAAiB,CAAC,CAAC;EACjE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASU,sCAAsCA,CAACC,YAAY,EAAE;EAC1D,OAAOA,YAAY,CAACtkB,eAAe;AACvC;AACA;AAAA,IACMukB,yBAAyB;EAA/B,MAAMA,yBAAyB,CAAC;IAC5B;IACA,IAAIlC,QAAQA,CAAA,EAAG;MACX,OAAO,IAAI,CAACH,SAAS;IACzB;IACA,IAAIG,QAAQA,CAAChkC,KAAK,EAAE;MAChB,IAAI,CAAC6jC,SAAS,GAAGV,wDAAoB,CAACnjC,KAAK,CAAC;IAChD;IACA6jC,SAAS,GAAG,EAAE;IACd;AACJ;AACA;AACA;IACI,IAAII,WAAWA,CAAA,EAAG;MACd,OAAO,IAAI,CAACH,YAAY;IAC5B;IACA,IAAIG,WAAWA,CAACjkC,KAAK,EAAE;MACnB,IAAI,CAAC8jC,YAAY,GAAGX,wDAAoB,CAACnjC,KAAK,CAAC;IACnD;IACA8jC,YAAY,GAAG,GAAG;IAClB;AACJ;AACA;IACI,IAAII,WAAWA,CAAA,EAAG;MACd,OAAO,IAAI,CAACH,YAAY;IAC5B;IACA,IAAIG,WAAWA,CAAClkC,KAAK,EAAE;MACnB,IAAI,CAAC+jC,YAAY,GAAGZ,wDAAoB,CAACnjC,KAAK,CAAC;IACnD;IACA+jC,YAAY,GAAG,GAAG;IAClB;IACApiB,eAAe,GAAG,IAAI8hB,8BAA8B,CAAC,IAAI,CAACO,QAAQ,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,WAAW,CAAC;IACvG/O,WAAWA,CAAA,EAAG;MACV,IAAI,CAACxT,eAAe,CAAC0iB,uBAAuB,CAAC,IAAI,CAACL,QAAQ,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,WAAW,CAAC;IACnG;IACA,OAAOj1B,IAAI,YAAAk3B,kCAAAh3B,iBAAA;MAAA,YAAAA,iBAAA,IAAwF+2B,yBAAyB;IAAA;IAC5H,OAAOvS,IAAI,kBAD8ErmB,+DAAE;MAAAoQ,IAAA,EACJwoB,yBAAyB;MAAAtnB,SAAA;MAAAqX,MAAA;QAAA+N,QAAA;QAAAC,WAAA;QAAAC,WAAA;MAAA;MAAA/N,QAAA,GADvB7oB,gEAAE,CACmM,CACtR;QACIipB,OAAO,EAAEiN,uBAAuB;QAChChN,UAAU,EAAEwP,sCAAsC;QAClDI,IAAI,EAAE,CAACjE,yDAAU,CAAC,MAAM+D,yBAAyB,CAAC;MACtD,CAAC,CACJ,GAPoF54B,kEAAE;IAAA;EAQ/F;EAAC,OA3CK44B,yBAAyB;AAAA;AA4C/B;EAAA,QAAAz2B,SAAA,oBAAAA,SAAA;AAAA;;AAoBA;AACA,MAAM42B,mBAAmB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AAHA,IAIM50B,gBAAgB;EAAtB,MAAMA,gBAAgB,CAAC;IACnByD,OAAO,GAAG3H,qDAAM,CAACoC,iDAAM,CAAC;IACxBiN,SAAS,GAAGrP,qDAAM,CAACO,qDAAQ,CAAC;IAC5B+N,SAAS,GAAGtO,qDAAM,CAACsC,2DAAgB,CAAC,CAACiM,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;IAC/DwqB,sBAAsB;IACtBt3B,WAAWA,CAAA,EAAG,CAAE;IAChB;IACAu3B,SAAS,GAAG,IAAIn1B,yCAAO,CAAC,CAAC;IACzB;IACAo1B,cAAc,GAAG,CAAC;IAClB;AACJ;AACA;AACA;IACI1vB,gBAAgB,GAAG,IAAI2vB,GAAG,CAAC,CAAC;IAC5B;AACJ;AACA;AACA;AACA;IACIC,QAAQA,CAAC/wB,UAAU,EAAE;MACjB,IAAI,CAAC,IAAI,CAACmB,gBAAgB,CAAC6vB,GAAG,CAAChxB,UAAU,CAAC,EAAE;QACxC,IAAI,CAACmB,gBAAgB,CAACwlB,GAAG,CAAC3mB,UAAU,EAAEA,UAAU,CAACixB,eAAe,CAAC,CAAC,CAAC5wB,SAAS,CAAC,MAAM,IAAI,CAACuwB,SAAS,CAAChqB,IAAI,CAAC5G,UAAU,CAAC,CAAC,CAAC;MACxH;IACJ;IACA;AACJ;AACA;AACA;IACIkxB,UAAUA,CAAClxB,UAAU,EAAE;MACnB,MAAMmxB,mBAAmB,GAAG,IAAI,CAAChwB,gBAAgB,CAACrE,GAAG,CAACkD,UAAU,CAAC;MACjE,IAAImxB,mBAAmB,EAAE;QACrBA,mBAAmB,CAACxwB,WAAW,CAAC,CAAC;QACjC,IAAI,CAACQ,gBAAgB,CAACiwB,MAAM,CAACpxB,UAAU,CAAC;MAC5C;IACJ;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIF,QAAQA,CAACuxB,aAAa,GAAGX,mBAAmB,EAAE;MAC1C,IAAI,CAAC,IAAI,CAACzpB,SAAS,CAAC5O,SAAS,EAAE;QAC3B,OAAO+xB,wCAAE,CAAC,CAAC;MACf;MACA,OAAO,IAAI0C,4CAAU,CAAEwE,QAAQ,IAAK;QAChC,IAAI,CAAC,IAAI,CAACX,sBAAsB,EAAE;UAC9B,IAAI,CAACA,sBAAsB,GAAG,IAAI,CAACpxB,OAAO,CAAC8G,iBAAiB,CAAC,MAAM,IAAI,CAACH,SAAS,CAACI,MAAM,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,IAAI,CAACsqB,SAAS,CAAChqB,IAAI,CAAC,CAAC,CAAC,CAAC;QAChJ;QACA;QACA;QACA,MAAM2qB,YAAY,GAAGF,aAAa,GAAG,CAAC,GAChC,IAAI,CAACT,SAAS,CAAC7wB,IAAI,CAACmtB,yDAAS,CAACmE,aAAa,CAAC,CAAC,CAAChxB,SAAS,CAACixB,QAAQ,CAAC,GACjE,IAAI,CAACV,SAAS,CAACvwB,SAAS,CAACixB,QAAQ,CAAC;QACxC,IAAI,CAACT,cAAc,EAAE;QACrB,OAAO,MAAM;UACTU,YAAY,CAAC5wB,WAAW,CAAC,CAAC;UAC1B,IAAI,CAACkwB,cAAc,EAAE;UACrB,IAAI,CAAC,IAAI,CAACA,cAAc,EAAE;YACtB,IAAI,CAACF,sBAAsB,GAAG,CAAC;YAC/B,IAAI,CAACA,sBAAsB,GAAGzsB,SAAS;UAC3C;QACJ,CAAC;MACL,CAAC,CAAC;IACN;IACAwB,WAAWA,CAAA,EAAG;MACV,IAAI,CAACirB,sBAAsB,GAAG,CAAC;MAC/B,IAAI,CAACA,sBAAsB,GAAGzsB,SAAS;MACvC,IAAI,CAAC/C,gBAAgB,CAACyG,OAAO,CAAC,CAAC5V,CAAC,EAAEqY,SAAS,KAAK,IAAI,CAAC6mB,UAAU,CAAC7mB,SAAS,CAAC,CAAC;MAC3E,IAAI,CAACumB,SAAS,CAAC9iB,QAAQ,CAAC,CAAC;IAC7B;IACA;AACJ;AACA;AACA;AACA;AACA;IACI0jB,gBAAgBA,CAACC,mBAAmB,EAAEJ,aAAa,EAAE;MACjD,MAAMK,SAAS,GAAG,IAAI,CAACC,2BAA2B,CAACF,mBAAmB,CAAC;MACvE,OAAO,IAAI,CAAC3xB,QAAQ,CAACuxB,aAAa,CAAC,CAACtxB,IAAI,CAAC3D,sDAAM,CAAC0L,MAAM,IAAI,CAACA,MAAM,IAAI4pB,SAAS,CAAC7rB,OAAO,CAACiC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzG;IACA;IACA6pB,2BAA2BA,CAACF,mBAAmB,EAAE;MAC7C,MAAMG,mBAAmB,GAAG,EAAE;MAC9B,IAAI,CAACzwB,gBAAgB,CAACyG,OAAO,CAAC,CAACiqB,aAAa,EAAE7xB,UAAU,KAAK;QACzD,IAAI,IAAI,CAAC8xB,0BAA0B,CAAC9xB,UAAU,EAAEyxB,mBAAmB,CAAC,EAAE;UAClEG,mBAAmB,CAACjsB,IAAI,CAAC3F,UAAU,CAAC;QACxC;MACJ,CAAC,CAAC;MACF,OAAO4xB,mBAAmB;IAC9B;IACA;IACAE,0BAA0BA,CAAC9xB,UAAU,EAAEyxB,mBAAmB,EAAE;MACxD,IAAIvwB,OAAO,GAAGusB,wDAAa,CAACgE,mBAAmB,CAAC;MAChD,IAAIM,iBAAiB,GAAG/xB,UAAU,CAACE,aAAa,CAAC,CAAC,CAACC,aAAa;MAChE;MACA;MACA,GAAG;QACC,IAAIe,OAAO,IAAI6wB,iBAAiB,EAAE;UAC9B,OAAO,IAAI;QACf;MACJ,CAAC,QAAS7wB,OAAO,GAAGA,OAAO,CAACyL,aAAa;MACzC,OAAO,KAAK;IAChB;IACA,OAAOrT,IAAI,YAAA04B,yBAAAx4B,iBAAA;MAAA,YAAAA,iBAAA,IAAwFsC,gBAAgB;IAAA;IACnH,OAAOrC,KAAK,kBAjJ6E9B,gEAAE;MAAAgC,KAAA,EAiJYmC,gBAAgB;MAAAlC,OAAA,EAAhBkC,gBAAgB,CAAAxC,IAAA;MAAAO,UAAA,EAAc;IAAM;EAC/I;EAAC,OA/GKiC,gBAAgB;AAAA;AAgHtB;EAAA,QAAAhC,SAAA,oBAAAA,SAAA;AAAA;;AAKA;AACA;AACA;AACA;AACA;AAJA,IAKMm4B,aAAa;EAAnB,MAAMA,aAAa,CAAC;IAChBnU,UAAU,GAAGlmB,qDAAM,CAAC2C,qDAAU,CAAC;IAC/B23B,gBAAgB,GAAGt6B,qDAAM,CAACkE,gBAAgB,CAAC;IAC3Cq2B,MAAM,GAAGv6B,qDAAM,CAACoC,iDAAM,CAAC;IACvB0U,GAAG,GAAG9W,qDAAM,CAAC2E,2DAAc,EAAE;MAAE8gB,QAAQ,EAAE;IAAK,CAAC,CAAC;IAChD+U,cAAc,GAAG,IAAI,CAACtU,UAAU,CAAC3d,aAAa;IAC9CkyB,UAAU,GAAG,IAAI52B,yCAAO,CAAC,CAAC;IAC1ByK,SAAS,GAAGtO,qDAAM,CAAC6C,oDAAS,CAAC;IAC7B63B,cAAc;IACdC,gBAAgB,GAAG,IAAI92B,yCAAO,CAAC,CAAC;IAChCpC,WAAWA,CAAA,EAAG,CAAE;IAChBgsB,QAAQA,CAAA,EAAG;MACP,IAAI,CAACiN,cAAc,GAAG,IAAI,CAACH,MAAM,CAAC9rB,iBAAiB,CAAC,MAAM,IAAI,CAACH,SAAS,CAACI,MAAM,CAAC,IAAI,CAAC8rB,cAAc,EAAE,QAAQ,EAAE5rB,KAAK,IAAI,IAAI,CAAC+rB,gBAAgB,CAAC3rB,IAAI,CAACJ,KAAK,CAAC,CAAC,CAAC;MAC3J,IAAI,CAAC0rB,gBAAgB,CAACnB,QAAQ,CAAC,IAAI,CAAC;IACxC;IACArrB,WAAWA,CAAA,EAAG;MACV,IAAI,CAAC4sB,cAAc,GAAG,CAAC;MACvB,IAAI,CAACC,gBAAgB,CAACzkB,QAAQ,CAAC,CAAC;MAChC,IAAI,CAACokB,gBAAgB,CAAChB,UAAU,CAAC,IAAI,CAAC;MACtC,IAAI,CAACmB,UAAU,CAACzrB,IAAI,CAAC,CAAC;MACtB,IAAI,CAACyrB,UAAU,CAACvkB,QAAQ,CAAC,CAAC;IAC9B;IACA;IACAmjB,eAAeA,CAAA,EAAG;MACd,OAAO,IAAI,CAACsB,gBAAgB;IAChC;IACA;IACAryB,aAAaA,CAAA,EAAG;MACZ,OAAO,IAAI,CAAC4d,UAAU;IAC1B;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACIwJ,QAAQA,CAACkL,OAAO,EAAE;MACd,MAAMC,EAAE,GAAG,IAAI,CAAC3U,UAAU,CAAC3d,aAAa;MACxC,MAAMiY,KAAK,GAAG,IAAI,CAAC1J,GAAG,IAAI,IAAI,CAACA,GAAG,CAACrkB,KAAK,IAAI,KAAK;MACjD;MACA,IAAImoC,OAAO,CAACt1B,IAAI,IAAI,IAAI,EAAE;QACtBs1B,OAAO,CAACt1B,IAAI,GAAGkb,KAAK,GAAGoa,OAAO,CAAC9W,GAAG,GAAG8W,OAAO,CAACxb,KAAK;MACtD;MACA,IAAIwb,OAAO,CAAC9wB,KAAK,IAAI,IAAI,EAAE;QACvB8wB,OAAO,CAAC9wB,KAAK,GAAG0W,KAAK,GAAGoa,OAAO,CAACxb,KAAK,GAAGwb,OAAO,CAAC9W,GAAG;MACvD;MACA;MACA,IAAI8W,OAAO,CAACjxB,MAAM,IAAI,IAAI,EAAE;QACxBixB,OAAO,CAACv1B,GAAG,GACPw1B,EAAE,CAAC5zB,YAAY,GAAG4zB,EAAE,CAACrZ,YAAY,GAAGoZ,OAAO,CAACjxB,MAAM;MAC1D;MACA;MACA,IAAI6W,KAAK,IAAIoP,0DAAoB,CAAC,CAAC,IAAIN,sDAAiB,CAACO,MAAM,EAAE;QAC7D,IAAI+K,OAAO,CAACt1B,IAAI,IAAI,IAAI,EAAE;UACtBs1B,OAAO,CAAC9wB,KAAK,GACT+wB,EAAE,CAAC1zB,WAAW,GAAG0zB,EAAE,CAAClZ,WAAW,GAAGiZ,OAAO,CAACt1B,IAAI;QACtD;QACA,IAAIsqB,0DAAoB,CAAC,CAAC,IAAIN,sDAAiB,CAACgB,QAAQ,EAAE;UACtDsK,OAAO,CAACt1B,IAAI,GAAGs1B,OAAO,CAAC9wB,KAAK;QAChC,CAAC,MACI,IAAI8lB,0DAAoB,CAAC,CAAC,IAAIN,sDAAiB,CAACe,OAAO,EAAE;UAC1DuK,OAAO,CAACt1B,IAAI,GAAGs1B,OAAO,CAAC9wB,KAAK,GAAG,CAAC8wB,OAAO,CAAC9wB,KAAK,GAAG8wB,OAAO,CAAC9wB,KAAK;QACjE;MACJ,CAAC,MACI;QACD,IAAI8wB,OAAO,CAAC9wB,KAAK,IAAI,IAAI,EAAE;UACvB8wB,OAAO,CAACt1B,IAAI,GACRu1B,EAAE,CAAC1zB,WAAW,GAAG0zB,EAAE,CAAClZ,WAAW,GAAGiZ,OAAO,CAAC9wB,KAAK;QACvD;MACJ;MACA,IAAI,CAACgxB,qBAAqB,CAACF,OAAO,CAAC;IACvC;IACAE,qBAAqBA,CAACF,OAAO,EAAE;MAC3B,MAAMC,EAAE,GAAG,IAAI,CAAC3U,UAAU,CAAC3d,aAAa;MACxC,IAAIhE,0DAAsB,CAAC,CAAC,EAAE;QAC1Bs2B,EAAE,CAACnL,QAAQ,CAACkL,OAAO,CAAC;MACxB,CAAC,MACI;QACD,IAAIA,OAAO,CAACv1B,GAAG,IAAI,IAAI,EAAE;UACrBw1B,EAAE,CAACE,SAAS,GAAGH,OAAO,CAACv1B,GAAG;QAC9B;QACA,IAAIu1B,OAAO,CAACt1B,IAAI,IAAI,IAAI,EAAE;UACtBu1B,EAAE,CAACzK,UAAU,GAAGwK,OAAO,CAACt1B,IAAI;QAChC;MACJ;IACJ;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIwyB,mBAAmBA,CAACkD,IAAI,EAAE;MACtB,MAAMC,IAAI,GAAG,MAAM;MACnB,MAAMC,KAAK,GAAG,OAAO;MACrB,MAAML,EAAE,GAAG,IAAI,CAAC3U,UAAU,CAAC3d,aAAa;MACxC,IAAIyyB,IAAI,IAAI,KAAK,EAAE;QACf,OAAOH,EAAE,CAACE,SAAS;MACvB;MACA,IAAIC,IAAI,IAAI,QAAQ,EAAE;QAClB,OAAOH,EAAE,CAAC5zB,YAAY,GAAG4zB,EAAE,CAACrZ,YAAY,GAAGqZ,EAAE,CAACE,SAAS;MAC3D;MACA;MACA,MAAMva,KAAK,GAAG,IAAI,CAAC1J,GAAG,IAAI,IAAI,CAACA,GAAG,CAACrkB,KAAK,IAAI,KAAK;MACjD,IAAIuoC,IAAI,IAAI,OAAO,EAAE;QACjBA,IAAI,GAAGxa,KAAK,GAAG0a,KAAK,GAAGD,IAAI;MAC/B,CAAC,MACI,IAAID,IAAI,IAAI,KAAK,EAAE;QACpBA,IAAI,GAAGxa,KAAK,GAAGya,IAAI,GAAGC,KAAK;MAC/B;MACA,IAAI1a,KAAK,IAAIoP,0DAAoB,CAAC,CAAC,IAAIN,sDAAiB,CAACgB,QAAQ,EAAE;QAC/D;QACA;QACA,IAAI0K,IAAI,IAAIC,IAAI,EAAE;UACd,OAAOJ,EAAE,CAAC1zB,WAAW,GAAG0zB,EAAE,CAAClZ,WAAW,GAAGkZ,EAAE,CAACzK,UAAU;QAC1D,CAAC,MACI;UACD,OAAOyK,EAAE,CAACzK,UAAU;QACxB;MACJ,CAAC,MACI,IAAI5P,KAAK,IAAIoP,0DAAoB,CAAC,CAAC,IAAIN,sDAAiB,CAACe,OAAO,EAAE;QACnE;QACA;QACA,IAAI2K,IAAI,IAAIC,IAAI,EAAE;UACd,OAAOJ,EAAE,CAACzK,UAAU,GAAGyK,EAAE,CAAC1zB,WAAW,GAAG0zB,EAAE,CAAClZ,WAAW;QAC1D,CAAC,MACI;UACD,OAAO,CAACkZ,EAAE,CAACzK,UAAU;QACzB;MACJ,CAAC,MACI;QACD;QACA;QACA,IAAI4K,IAAI,IAAIC,IAAI,EAAE;UACd,OAAOJ,EAAE,CAACzK,UAAU;QACxB,CAAC,MACI;UACD,OAAOyK,EAAE,CAAC1zB,WAAW,GAAG0zB,EAAE,CAAClZ,WAAW,GAAGkZ,EAAE,CAACzK,UAAU;QAC1D;MACJ;IACJ;IACA,OAAO1uB,IAAI,YAAAy5B,sBAAAv5B,iBAAA;MAAA,YAAAA,iBAAA,IAAwFy4B,aAAa;IAAA;IAChH,OAAOjU,IAAI,kBAhT8ErmB,+DAAE;MAAAoQ,IAAA,EAgTJkqB,aAAa;MAAAhpB,SAAA;IAAA;EACxG;EAAC,OApJKgpB,aAAa;AAAA;AAqJnB;EAAA,QAAAn4B,SAAA,oBAAAA,SAAA;AAAA;;AAOA;AACA,MAAMk5B,mBAAmB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AAHA,IAIMn3B,aAAa;EAAnB,MAAMA,aAAa,CAAC;IAChBoL,SAAS,GAAGrP,qDAAM,CAACO,qDAAQ,CAAC;IAC5B86B,UAAU;IACV;IACAC,aAAa;IACb;IACAC,OAAO,GAAG,IAAI13B,yCAAO,CAAC,CAAC;IACvB;IACA4B,SAAS,GAAGzF,qDAAM,CAACmC,mDAAQ,CAAC;IAC5BV,WAAWA,CAAA,EAAG;MACV,MAAM84B,MAAM,GAAGv6B,qDAAM,CAACoC,iDAAM,CAAC;MAC7B,MAAMwN,QAAQ,GAAG5P,qDAAM,CAACsC,2DAAgB,CAAC,CAACiM,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;MACpEgsB,MAAM,CAAC9rB,iBAAiB,CAAC,MAAM;QAC3B,IAAI,IAAI,CAACY,SAAS,CAAC5O,SAAS,EAAE;UAC1B,MAAM+6B,cAAc,GAAI5sB,KAAK,IAAK,IAAI,CAAC2sB,OAAO,CAACvsB,IAAI,CAACJ,KAAK,CAAC;UAC1D,IAAI,CAACysB,UAAU,GAAG,CACdzrB,QAAQ,CAAClB,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE8sB,cAAc,CAAC,EACnD5rB,QAAQ,CAAClB,MAAM,CAAC,QAAQ,EAAE,mBAAmB,EAAE8sB,cAAc,CAAC,CACjE;QACL;QACA;QACA;QACA,IAAI,CAACjhB,MAAM,CAAC,CAAC,CAAC9R,SAAS,CAAC,MAAO,IAAI,CAAC6yB,aAAa,GAAG,IAAK,CAAC;MAC9D,CAAC,CAAC;IACN;IACAxtB,WAAWA,CAAA,EAAG;MACV,IAAI,CAACutB,UAAU,EAAErrB,OAAO,CAACC,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC;MAC9C,IAAI,CAACsrB,OAAO,CAACrlB,QAAQ,CAAC,CAAC;IAC3B;IACA;IACAlP,eAAeA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACs0B,aAAa,EAAE;QACrB,IAAI,CAACG,mBAAmB,CAAC,CAAC;MAC9B;MACA,MAAMC,MAAM,GAAG;QAAEt0B,KAAK,EAAE,IAAI,CAACk0B,aAAa,CAACl0B,KAAK;QAAEF,MAAM,EAAE,IAAI,CAACo0B,aAAa,CAACp0B;MAAO,CAAC;MACrF;MACA,IAAI,CAAC,IAAI,CAACmI,SAAS,CAAC5O,SAAS,EAAE;QAC3B,IAAI,CAAC66B,aAAa,GAAG,IAAI;MAC7B;MACA,OAAOI,MAAM;IACjB;IACA;IACAC,eAAeA,CAAA,EAAG;MACd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAMjzB,cAAc,GAAG,IAAI,CAAC3C,yBAAyB,CAAC,CAAC;MACvD,MAAM;QAAEqB,KAAK;QAAEF;MAAO,CAAC,GAAG,IAAI,CAACF,eAAe,CAAC,CAAC;MAChD,OAAO;QACH3B,GAAG,EAAEqD,cAAc,CAACrD,GAAG;QACvBC,IAAI,EAAEoD,cAAc,CAACpD,IAAI;QACzBqE,MAAM,EAAEjB,cAAc,CAACrD,GAAG,GAAG6B,MAAM;QACnC4C,KAAK,EAAEpB,cAAc,CAACpD,IAAI,GAAG8B,KAAK;QAClCF,MAAM;QACNE;MACJ,CAAC;IACL;IACA;IACArB,yBAAyBA,CAAA,EAAG;MACxB;MACA;MACA,IAAI,CAAC,IAAI,CAACsJ,SAAS,CAAC5O,SAAS,EAAE;QAC3B,OAAO;UAAE4E,GAAG,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAE,CAAC;MAC9B;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAM5E,QAAQ,GAAG,IAAI,CAAC+E,SAAS;MAC/B,MAAMxE,MAAM,GAAG,IAAI,CAAC26B,UAAU,CAAC,CAAC;MAChC,MAAM91B,eAAe,GAAGpF,QAAQ,CAACoF,eAAe;MAChD,MAAM+1B,YAAY,GAAG/1B,eAAe,CAAC8E,qBAAqB,CAAC,CAAC;MAC5D,MAAMvF,GAAG,GAAG,CAACw2B,YAAY,CAACx2B,GAAG,IACzB3E,QAAQ,CAAC2F,IAAI,CAAC00B,SAAS,IACvB95B,MAAM,CAAC66B,OAAO,IACdh2B,eAAe,CAACi1B,SAAS,IACzB,CAAC;MACL,MAAMz1B,IAAI,GAAG,CAACu2B,YAAY,CAACv2B,IAAI,IAC3B5E,QAAQ,CAAC2F,IAAI,CAAC+pB,UAAU,IACxBnvB,MAAM,CAAC86B,OAAO,IACdj2B,eAAe,CAACsqB,UAAU,IAC1B,CAAC;MACL,OAAO;QAAE/qB,GAAG;QAAEC;MAAK,CAAC;IACxB;IACA;AACJ;AACA;AACA;AACA;IACIiV,MAAMA,CAACyhB,YAAY,GAAGZ,mBAAmB,EAAE;MACvC,OAAOY,YAAY,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,CAACpzB,IAAI,CAACmtB,yDAAS,CAAC0G,YAAY,CAAC,CAAC,GAAG,IAAI,CAACT,OAAO;IACvF;IACA;IACAK,UAAUA,CAAA,EAAG;MACT,OAAO,IAAI,CAACn2B,SAAS,CAACw2B,WAAW,IAAIh7B,MAAM;IAC/C;IACA;IACAw6B,mBAAmBA,CAAA,EAAG;MAClB,MAAMx6B,MAAM,GAAG,IAAI,CAAC26B,UAAU,CAAC,CAAC;MAChC,IAAI,CAACN,aAAa,GAAG,IAAI,CAACjsB,SAAS,CAAC5O,SAAS,GACvC;QAAE2G,KAAK,EAAEnG,MAAM,CAACi7B,UAAU;QAAEh1B,MAAM,EAAEjG,MAAM,CAACk7B;MAAY,CAAC,GACxD;QAAE/0B,KAAK,EAAE,CAAC;QAAEF,MAAM,EAAE;MAAE,CAAC;IACjC;IACA,OAAOxF,IAAI,YAAA06B,sBAAAx6B,iBAAA;MAAA,YAAAA,iBAAA,IAAwFqC,aAAa;IAAA;IAChH,OAAOpC,KAAK,kBA/a6E9B,gEAAE;MAAAgC,KAAA,EA+aYkC,aAAa;MAAAjC,OAAA,EAAbiC,aAAa,CAAAvC,IAAA;MAAAO,UAAA,EAAc;IAAM;EAC5I;EAAC,OAjHKgC,aAAa;AAAA;AAkHnB;EAAA,QAAA/B,SAAA,oBAAAA,SAAA;AAAA;AAKA,MAAMm6B,kBAAkB,gBAAG,IAAIr5B,yDAAc,CAAC,oBAAoB,CAAC;AACnE;AACA;AACA;AAFA,IAGMs5B,oBAAoB;EAA1B,MAAMA,oBAAoB,SAASjC,aAAa,CAAC;IAC7C54B,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;IACX;IACA;AACJ;AACA;AACA;AACA;IACI86B,mBAAmBA,CAACC,WAAW,EAAE;MAC7B,MAAMC,UAAU,GAAG,IAAI,CAACvW,UAAU,CAAC3d,aAAa;MAChD,OAAOi0B,WAAW,KAAK,YAAY,GAAGC,UAAU,CAAC9a,WAAW,GAAG8a,UAAU,CAACjb,YAAY;IAC1F;IACA,OAAO9f,IAAI,YAAAg7B,6BAAA96B,iBAAA;MAAA,YAAAA,iBAAA,IAAwF06B,oBAAoB;IAAA;IACvH,OAAOlW,IAAI,kBAxc8ErmB,+DAAE;MAAAoQ,IAAA,EAwcJmsB,oBAAoB;MAAA1T,QAAA,GAxclB7oB,wEAAE;IAAA;EAyc/F;EAAC,OAfKu8B,oBAAoB;AAAA;AAgB1B;EAAA,QAAAp6B,SAAA,oBAAAA,SAAA;AAAA;;AAIA;AACA,SAASy6B,WAAWA,CAACC,EAAE,EAAEC,EAAE,EAAE;EACzB,OAAOD,EAAE,CAACxd,KAAK,IAAIyd,EAAE,CAACzd,KAAK,IAAIwd,EAAE,CAAC9Y,GAAG,IAAI+Y,EAAE,CAAC/Y,GAAG;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMgZ,gBAAgB,GAAG,OAAOvlB,qBAAqB,KAAK,WAAW,GAAG4d,yDAAuB,GAAGC,+CAAa;AAC/G;AAAA,IACM2H,wBAAwB;EAA9B,MAAMA,wBAAwB,SAAST,oBAAoB,CAAC;IACxDpW,UAAU,GAAGlmB,qDAAM,CAAC2C,qDAAU,CAAC;IAC/Bq6B,kBAAkB,GAAGh9B,qDAAM,CAAC60B,4DAAiB,CAAC;IAC9CzgB,eAAe,GAAGpU,qDAAM,CAACi2B,uBAAuB,EAAE;MAC9CxQ,QAAQ,EAAE;IACd,CAAC,CAAC;IACFrd,UAAU,GAAGpI,qDAAM,CAACq8B,kBAAkB,EAAE;MAAE5W,QAAQ,EAAE;IAAK,CAAC,CAAC;IAC3DpW,SAAS,GAAGrP,qDAAM,CAACO,qDAAQ,CAAC;IAC5B;IACA08B,gBAAgB,GAAG,IAAIp5B,yCAAO,CAAC,CAAC;IAChC;IACAq5B,qBAAqB,GAAG,IAAIr5B,yCAAO,CAAC,CAAC;IACrC;IACA,IAAI24B,WAAWA,CAAA,EAAG;MACd,OAAO,IAAI,CAACW,YAAY;IAC5B;IACA,IAAIX,WAAWA,CAACA,WAAW,EAAE;MACzB,IAAI,IAAI,CAACW,YAAY,KAAKX,WAAW,EAAE;QACnC,IAAI,CAACW,YAAY,GAAGX,WAAW;QAC/B,IAAI,CAACY,oBAAoB,CAAC,CAAC;MAC/B;IACJ;IACAD,YAAY,GAAG,UAAU;IACzB;AACJ;AACA;AACA;IACIE,UAAU,GAAG,KAAK;IAClB;IACA;IACA;IACA;IACA;IACAjH,mBAAmB,GAAG,IAAIlB,4CAAU,CAAEwE,QAAQ,IAAK,IAAI,CAACtlB,eAAe,CAACgiB,mBAAmB,CAAC3tB,SAAS,CAACuF,KAAK,IAAI0H,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM,IAAI,CAAC2kB,MAAM,CAACrxB,GAAG,CAAC,MAAMwwB,QAAQ,CAAC1qB,IAAI,CAAChB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1L;IACAsvB,eAAe;IACf;IACAC,mBAAmB,GAAG,IAAI,CAACL,qBAAqB;IAChD;AACJ;AACA;IACIM,iBAAiB,GAAG,CAAC;IACrB;IACAC,kBAAkB,GAAGrP,qDAAM,CAAC,EAAE,CAAC;IAC/B;IACAsP,mBAAmB,GAAGtP,qDAAM,CAAC,EAAE,CAAC;IAChC;AACJ;AACA;AACA;IACIuP,yBAAyB;IACzB;IACAC,cAAc,GAAG;MAAExe,KAAK,EAAE,CAAC;MAAE0E,GAAG,EAAE;IAAE,CAAC;IACrC;IACA+Z,WAAW,GAAG,CAAC;IACf;IACAvC,aAAa,GAAG,CAAC;IACjB;IACAwC,MAAM;IACN;IACAC,sBAAsB,GAAG,CAAC;IAC1B;AACJ;AACA;AACA;IACIC,kCAAkC,GAAG,KAAK;IAC1C;IACAC,yBAAyB,GAAG,KAAK;IACjC;IACAC,wBAAwB,GAAG,EAAE;IAC7B;IACAC,gBAAgB,GAAGr6B,8CAAY,CAACwQ,KAAK;IACrCvJ,SAAS,GAAG/K,qDAAM,CAACqC,mDAAQ,CAAC;IAC5B+7B,YAAY,GAAG,KAAK;IACpB38B,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;MACP,MAAM48B,aAAa,GAAGr+B,qDAAM,CAACiE,aAAa,CAAC;MAC3C,IAAI,CAAC,IAAI,CAACmQ,eAAe,KAAK,OAAOlS,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;QAC1E,MAAMoF,KAAK,CAAC,gFAAgF,CAAC;MACjG;MACA,IAAI,CAAC62B,gBAAgB,GAAGE,aAAa,CAAC9jB,MAAM,CAAC,CAAC,CAAC9R,SAAS,CAAC,MAAM;QAC3D,IAAI,CAAC61B,iBAAiB,CAAC,CAAC;MAC5B,CAAC,CAAC;MACF,IAAI,CAAC,IAAI,CAACl2B,UAAU,EAAE;QAClB;QACA,IAAI,CAAC8d,UAAU,CAAC3d,aAAa,CAACtC,SAAS,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrE,IAAI,CAACkC,UAAU,GAAG,IAAI;MAC1B;IACJ;IACAqlB,QAAQA,CAAA,EAAG;MACP;MACA,IAAI,CAAC,IAAI,CAACpe,SAAS,CAAC5O,SAAS,EAAE;QAC3B;MACJ;MACA,IAAI,IAAI,CAAC2H,UAAU,KAAK,IAAI,EAAE;QAC1B,KAAK,CAACqlB,QAAQ,CAAC,CAAC;MACpB;MACA;MACA;MACA;MACA;MACA,IAAI,CAAC8M,MAAM,CAAC9rB,iBAAiB,CAAC,MAAMiH,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QAC7D,IAAI,CAAC2oB,oBAAoB,CAAC,CAAC;QAC3B,IAAI,CAACnqB,eAAe,CAAC1O,MAAM,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC0C,UAAU,CACVixB,eAAe,CAAC,CAAC,CACjBlxB,IAAI;QACT;QACAotB,yDAAS,CAAC,IAAI,CAAC;QACf;QACA;QACA;QACAD,yDAAS,CAAC,CAAC,EAAEwH,gBAAgB,CAAC;QAC9B;QACA;QACA;QACAtH,yDAAS,CAAC,IAAI,CAACiF,UAAU,CAAC,CAAC,CACtBhyB,SAAS,CAAC,MAAM,IAAI,CAAC2L,eAAe,CAAC2iB,iBAAiB,CAAC,CAAC,CAAC;QAC9D,IAAI,CAACyH,0BAA0B,CAAC,CAAC;MACrC,CAAC,CAAC,CAAC;IACP;IACA1wB,WAAWA,CAAA,EAAG;MACV,IAAI,CAAC9E,MAAM,CAAC,CAAC;MACb,IAAI,CAACoL,eAAe,CAACpL,MAAM,CAAC,CAAC;MAC7B;MACA,IAAI,CAACk0B,qBAAqB,CAAChnB,QAAQ,CAAC,CAAC;MACrC,IAAI,CAAC+mB,gBAAgB,CAAC/mB,QAAQ,CAAC,CAAC;MAChC,IAAI,CAACioB,gBAAgB,CAACp1B,WAAW,CAAC,CAAC;MACnC,IAAI,CAACq1B,YAAY,GAAG,IAAI;MACxB,KAAK,CAACtwB,WAAW,CAAC,CAAC;IACvB;IACA;IACApI,MAAMA,CAAC+4B,KAAK,EAAE;MACV,IAAI,IAAI,CAACX,MAAM,KAAK,OAAO57B,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;QAChE,MAAMoF,KAAK,CAAC,+CAA+C,CAAC;MAChE;MACA;MACA;MACA;MACA,IAAI,CAACizB,MAAM,CAAC9rB,iBAAiB,CAAC,MAAM;QAChC,IAAI,CAACqvB,MAAM,GAAGW,KAAK;QACnB,IAAI,CAACX,MAAM,CAACY,UAAU,CAACv2B,IAAI,CAACqtB,yDAAS,CAAC,IAAI,CAACyH,gBAAgB,CAAC,CAAC,CAACx0B,SAAS,CAACk2B,IAAI,IAAI;UAC5E,MAAMC,SAAS,GAAGD,IAAI,CAACxwB,MAAM;UAC7B,IAAIywB,SAAS,KAAK,IAAI,CAACf,WAAW,EAAE;YAChC,IAAI,CAACA,WAAW,GAAGe,SAAS;YAC5B,IAAI,CAACxqB,eAAe,CAAC4iB,mBAAmB,CAAC,CAAC;UAC9C;UACA,IAAI,CAAC6H,kBAAkB,CAAC,CAAC;QAC7B,CAAC,CAAC;MACN,CAAC,CAAC;IACN;IACA;IACA71B,MAAMA,CAAA,EAAG;MACL,IAAI,CAAC80B,MAAM,GAAG,IAAI;MAClB,IAAI,CAACb,gBAAgB,CAACjuB,IAAI,CAAC,CAAC;IAChC;IACA;IACAuoB,aAAaA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACsG,WAAW;IAC3B;IACA;IACA72B,eAAeA,CAAA,EAAG;MACd,OAAO,IAAI,CAACs0B,aAAa;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA7D,gBAAgBA,CAAA,EAAG;MACf,OAAO,IAAI,CAACmG,cAAc;IAC9B;IACAkB,yCAAyCA,CAAC9D,IAAI,EAAE;MAC5C,OAAO,IAAI,CAAC1yB,aAAa,CAAC,CAAC,CAACC,aAAa,CAACqC,qBAAqB,CAAC,CAAC,CAACowB,IAAI,CAAC;IAC3E;IACA;AACJ;AACA;AACA;IACI1D,mBAAmBA,CAACyH,IAAI,EAAE;MACtB,IAAI,IAAI,CAACvB,iBAAiB,KAAKuB,IAAI,EAAE;QACjC,IAAI,CAACvB,iBAAiB,GAAGuB,IAAI;QAC7B,IAAI,CAAC3B,oBAAoB,CAAC,CAAC;QAC3B,IAAI,CAACoB,0BAA0B,CAAC,CAAC;MACrC;IACJ;IACA;IACAjG,gBAAgBA,CAACyG,KAAK,EAAE;MACpB,IAAI,CAACrC,WAAW,CAAC,IAAI,CAACiB,cAAc,EAAEoB,KAAK,CAAC,EAAE;QAC1C,IAAI,IAAI,CAAC3B,UAAU,EAAE;UACjB2B,KAAK,GAAG;YAAE5f,KAAK,EAAE,CAAC;YAAE0E,GAAG,EAAEnb,IAAI,CAAC2W,GAAG,CAAC,IAAI,CAACse,cAAc,CAAC9Z,GAAG,EAAEkb,KAAK,CAAClb,GAAG;UAAE,CAAC;QAC3E;QACA,IAAI,CAACoZ,qBAAqB,CAACluB,IAAI,CAAE,IAAI,CAAC4uB,cAAc,GAAGoB,KAAM,CAAC;QAC9D,IAAI,CAACR,0BAA0B,CAAC,MAAM,IAAI,CAACpqB,eAAe,CAAC6iB,iBAAiB,CAAC,CAAC,CAAC;MACnF;IACJ;IACA;AACJ;AACA;IACIgI,+BAA+BA,CAAA,EAAG;MAC9B,OAAO,IAAI,CAACjB,kCAAkC,GAAG,IAAI,GAAG,IAAI,CAACD,sBAAsB;IACvF;IACA;AACJ;AACA;AACA;IACIvF,wBAAwBA,CAAChb,MAAM,EAAE0hB,EAAE,GAAG,UAAU,EAAE;MAC9C;MACA1hB,MAAM,GAAG,IAAI,CAAC6f,UAAU,IAAI6B,EAAE,KAAK,UAAU,GAAG,CAAC,GAAG1hB,MAAM;MAC1D;MACA;MACA,MAAMgD,KAAK,GAAG,IAAI,CAAC1J,GAAG,IAAI,IAAI,CAACA,GAAG,CAACrkB,KAAK,IAAI,KAAK;MACjD,MAAM0sC,YAAY,GAAG,IAAI,CAAC3C,WAAW,IAAI,YAAY;MACrD,MAAMpa,IAAI,GAAG+c,YAAY,GAAG,GAAG,GAAG,GAAG;MACrC,MAAMC,aAAa,GAAGD,YAAY,IAAI3e,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;MACpD,IAAIQ,SAAS,GAAG,YAAYoB,IAAI,IAAIid,MAAM,CAACD,aAAa,GAAG5hB,MAAM,CAAC,KAAK;MACvE,IAAI,CAACugB,sBAAsB,GAAGvgB,MAAM;MACpC,IAAI0hB,EAAE,KAAK,QAAQ,EAAE;QACjBle,SAAS,IAAI,aAAaoB,IAAI,SAAS;QACvC;QACA;QACA;QACA,IAAI,CAAC4b,kCAAkC,GAAG,IAAI;MAClD;MACA,IAAI,IAAI,CAACL,yBAAyB,IAAI3c,SAAS,EAAE;QAC7C;QACA;QACA,IAAI,CAAC2c,yBAAyB,GAAG3c,SAAS;QAC1C,IAAI,CAACwd,0BAA0B,CAAC,MAAM;UAClC,IAAI,IAAI,CAACR,kCAAkC,EAAE;YACzC,IAAI,CAACD,sBAAsB,IAAI,IAAI,CAACuB,0BAA0B,CAAC,CAAC;YAChE,IAAI,CAACtB,kCAAkC,GAAG,KAAK;YAC/C,IAAI,CAACxF,wBAAwB,CAAC,IAAI,CAACuF,sBAAsB,CAAC;UAC9D,CAAC,MACI;YACD,IAAI,CAAC3pB,eAAe,CAAC8iB,uBAAuB,CAAC,CAAC;UAClD;QACJ,CAAC,CAAC;MACN;IACJ;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;IACIG,cAAcA,CAAC7Z,MAAM,EAAE4Z,QAAQ,GAAG,MAAM,EAAE;MACtC,MAAMwD,OAAO,GAAG;QAAExD;MAAS,CAAC;MAC5B,IAAI,IAAI,CAACoF,WAAW,KAAK,YAAY,EAAE;QACnC5B,OAAO,CAACxb,KAAK,GAAG5B,MAAM;MAC1B,CAAC,MACI;QACDod,OAAO,CAACv1B,GAAG,GAAGmY,MAAM;MACxB;MACA,IAAI,CAACpV,UAAU,CAACsnB,QAAQ,CAACkL,OAAO,CAAC;IACrC;IACA;AACJ;AACA;AACA;AACA;IACIzD,aAAaA,CAACnpB,KAAK,EAAEopB,QAAQ,GAAG,MAAM,EAAE;MACpC,IAAI,CAAChjB,eAAe,CAAC+iB,aAAa,CAACnpB,KAAK,EAAEopB,QAAQ,CAAC;IACvD;IACA;AACJ;AACA;AACA;AACA;IACIU,mBAAmBA,CAACkD,IAAI,EAAE;MACtB;MACA,IAAIlD,mBAAmB;MACvB,IAAI,IAAI,CAAC1vB,UAAU,IAAI,IAAI,EAAE;QACzB0vB,mBAAmB,GAAIyH,KAAK,IAAK,KAAK,CAACzH,mBAAmB,CAACyH,KAAK,CAAC;MACrE,CAAC,MACI;QACDzH,mBAAmB,GAAIyH,KAAK,IAAK,IAAI,CAACn3B,UAAU,CAAC0vB,mBAAmB,CAACyH,KAAK,CAAC;MAC/E;MACA,OAAO52B,IAAI,CAAC2W,GAAG,CAAC,CAAC,EAAEwY,mBAAmB,CAACkD,IAAI,KAAK,IAAI,CAACwB,WAAW,KAAK,YAAY,GAAG,OAAO,GAAG,KAAK,CAAC,CAAC,GACjG,IAAI,CAACgD,qBAAqB,CAAC,CAAC,CAAC;IACrC;IACA;AACJ;AACA;AACA;IACIA,qBAAqBA,CAACxE,IAAI,EAAE;MACxB,IAAIyE,QAAQ;MACZ,MAAMxE,IAAI,GAAG,MAAM;MACnB,MAAMC,KAAK,GAAG,OAAO;MACrB,MAAM1a,KAAK,GAAG,IAAI,CAAC1J,GAAG,EAAErkB,KAAK,IAAI,KAAK;MACtC,IAAIuoC,IAAI,IAAI,OAAO,EAAE;QACjByE,QAAQ,GAAGjf,KAAK,GAAG0a,KAAK,GAAGD,IAAI;MACnC,CAAC,MACI,IAAID,IAAI,IAAI,KAAK,EAAE;QACpByE,QAAQ,GAAGjf,KAAK,GAAGya,IAAI,GAAGC,KAAK;MACnC,CAAC,MACI,IAAIF,IAAI,EAAE;QACXyE,QAAQ,GAAGzE,IAAI;MACnB,CAAC,MACI;QACDyE,QAAQ,GAAG,IAAI,CAACjD,WAAW,KAAK,YAAY,GAAG,MAAM,GAAG,KAAK;MACjE;MACA,MAAMkD,kBAAkB,GAAG,IAAI,CAACt3B,UAAU,CAAC02B,yCAAyC,CAACW,QAAQ,CAAC;MAC9F,MAAME,kBAAkB,GAAG,IAAI,CAACzZ,UAAU,CAAC3d,aAAa,CAACqC,qBAAqB,CAAC,CAAC,CAAC60B,QAAQ,CAAC;MAC1F,OAAOE,kBAAkB,GAAGD,kBAAkB;IAClD;IACA;IACAJ,0BAA0BA,CAAA,EAAG;MACzB,MAAMM,SAAS,GAAG,IAAI,CAACtC,eAAe,CAAC/0B,aAAa;MACpD,OAAO,IAAI,CAACi0B,WAAW,KAAK,YAAY,GAAGoD,SAAS,CAACC,WAAW,GAAGD,SAAS,CAACE,YAAY;IAC7F;IACA;AACJ;AACA;AACA;IACIC,gBAAgBA,CAACf,KAAK,EAAE;MACpB,IAAI,CAAC,IAAI,CAAClB,MAAM,EAAE;QACd,OAAO,CAAC;MACZ;MACA,OAAO,IAAI,CAACA,MAAM,CAACiC,gBAAgB,CAACf,KAAK,EAAE,IAAI,CAACxC,WAAW,CAAC;IAChE;IACA;IACA8B,iBAAiBA,CAAA,EAAG;MAChB;MACA,IAAI,CAACC,oBAAoB,CAAC,CAAC;MAC3B,IAAI,CAACnqB,eAAe,CAAC4iB,mBAAmB,CAAC,CAAC;IAC9C;IACA;IACAuH,oBAAoBA,CAAA,EAAG;MACnB,IAAI,CAACjD,aAAa,GAAG,IAAI,CAAClzB,UAAU,CAACm0B,mBAAmB,CAAC,IAAI,CAACC,WAAW,CAAC;IAC9E;IACA;IACAgC,0BAA0BA,CAACwB,QAAQ,EAAE;MACjC,IAAIA,QAAQ,EAAE;QACV,IAAI,CAAC9B,wBAAwB,CAACnwB,IAAI,CAACiyB,QAAQ,CAAC;MAChD;MACA;MACA;MACA,IAAI,CAAC,IAAI,CAAC/B,yBAAyB,EAAE;QACjC,IAAI,CAACA,yBAAyB,GAAG,IAAI;QACrC,IAAI,CAAC1D,MAAM,CAAC9rB,iBAAiB,CAAC,MAAMiH,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;UAC7D,IAAI,CAACipB,kBAAkB,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;MACP;IACJ;IACA;IACAA,kBAAkBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACT,YAAY,EAAE;QACnB;MACJ;MACA,IAAI,CAAC7D,MAAM,CAACrxB,GAAG,CAAC,MAAM;QAClB;QACA;QACA;QACA,IAAI,CAAC8zB,kBAAkB,CAACiD,YAAY,CAAC,CAAC;QACtC;QACA;QACA;QACA;QACA,IAAI,CAAC3C,eAAe,CAAC/0B,aAAa,CAACvC,KAAK,CAACgb,SAAS,GAAG,IAAI,CAAC2c,yBAAyB;QACnFj7B,8DAAe,CAAC,MAAM;UAClB,IAAI,CAACu7B,yBAAyB,GAAG,KAAK;UACtC,MAAMiC,uBAAuB,GAAG,IAAI,CAAChC,wBAAwB;UAC7D,IAAI,CAACA,wBAAwB,GAAG,EAAE;UAClC,KAAK,MAAMhT,EAAE,IAAIgV,uBAAuB,EAAE;YACtChV,EAAE,CAAC,CAAC;UACR;QACJ,CAAC,EAAE;UAAElmB,QAAQ,EAAE,IAAI,CAAC+F;QAAU,CAAC,CAAC;MACpC,CAAC,CAAC;IACN;IACA;IACAqyB,oBAAoBA,CAAA,EAAG;MACnB,IAAI,CAACM,mBAAmB,CAAC3O,GAAG,CAAC,IAAI,CAACyN,WAAW,KAAK,YAAY,GAAG,EAAE,GAAG,GAAG,IAAI,CAACgB,iBAAiB,IAAI,CAAC;MACpG,IAAI,CAACC,kBAAkB,CAAC1O,GAAG,CAAC,IAAI,CAACyN,WAAW,KAAK,YAAY,GAAG,GAAG,IAAI,CAACgB,iBAAiB,IAAI,GAAG,EAAE,CAAC;IACvG;IACA,OAAO97B,IAAI,YAAAy+B,iCAAAv+B,iBAAA;MAAA,YAAAA,iBAAA,IAAwFm7B,wBAAwB;IAAA;IAC3H,OAAO5rB,IAAI,kBAl1B8EpR,+DAAE;MAAAoQ,IAAA,EAk1BJ4sB,wBAAwB;MAAA1rB,SAAA;MAAA+uB,SAAA,WAAAC,+BAAA1uB,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAl1BtB5R,yDAAE,CAAA+1B,GAAA;QAAA;QAAA,IAAAnkB,EAAA;UAAA,IAAA4uB,EAAA;UAAFxgC,4DAAE,CAAAwgC,EAAA,GAAFxgC,yDAAE,QAAA6R,GAAA,CAAA0rB,eAAA,GAAAiD,EAAA,CAAAG,KAAA;QAAA;MAAA;MAAApvB,SAAA;MAAAsf,QAAA;MAAAC,YAAA,WAAA8P,sCAAAhvB,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAF5R,yDAAE,8CAAA6R,GAAA,CAAA4qB,WAAA,KAk1BY,YAAO,CAAC,4CAAA5qB,GAAA,CAAA4qB,WAAA,KAAR,YAAO,CAAC;QAAA;MAAA;MAAA9T,MAAA;QAAA8T,WAAA;QAAAa,UAAA,kCAA8Ih6B,2DAAgB;MAAA;MAAAslB,OAAA;QAAAyN,mBAAA;MAAA;MAAAxN,QAAA,GAl1BpL7oB,gEAAE,CAk1B4e,CAC/jB;QACIipB,OAAO,EAAEqR,aAAa;QACtBpR,UAAU,EAAEA,CAAC4X,iBAAiB,EAAE95B,QAAQ,KAAK85B,iBAAiB,IAAI95B,QAAQ;QAC1E8xB,IAAI,EAAE,CAAC,CAAC,IAAI/D,mDAAQ,CAAC,CAAC,EAAE,IAAIC,iDAAM,CAACsH,kBAAkB,CAAC,CAAC,EAAEU,wBAAwB;MACrF,CAAC,CACJ,GAx1BoFh9B,wEAAE;MAAA+gC,kBAAA,EAAA/K,GAAA;MAAAxkB,KAAA;MAAAC,IAAA;MAAAuvB,MAAA;MAAAtvB,QAAA,WAAAuvB,kCAAArvB,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAF5R,6DAAE;UAAFA,+DAAE,eAw1BoR,CAAC;UAx1BvRA,0DAAE,EAw1BiT,CAAC;UAx1BpTA,6DAAE,CAw1ByT,CAAC;UAx1B5TA,0DAAE,YAw1BknB,CAAC;QAAA;QAAA,IAAA4R,EAAA;UAx1BrnB5R,uDAAE,EAw1BkkB,CAAC;UAx1BrkBA,yDAAE,UAAA6R,GAAA,CAAA6rB,kBAAA,EAw1BkkB,CAAC,WAAA7rB,GAAA,CAAA8rB,mBAAA,EAAwC,CAAC;QAAA;MAAA;MAAA7rB,MAAA;MAAAC,aAAA;MAAAC,eAAA;IAAA;EAC3sB;EAAC,OAhYKgrB,wBAAwB;AAAA;AAiY9B;EAAA,QAAA76B,SAAA,oBAAAA,SAAA;AAAA;;AAyBA;AACA,SAASs/B,SAASA,CAAChF,WAAW,EAAExwB,SAAS,EAAEy1B,IAAI,EAAE;EAC7C,MAAM5G,EAAE,GAAG4G,IAAI;EACf,IAAI,CAAC5G,EAAE,CAACjwB,qBAAqB,EAAE;IAC3B,OAAO,CAAC;EACZ;EACA,MAAM82B,IAAI,GAAG7G,EAAE,CAACjwB,qBAAqB,CAAC,CAAC;EACvC,IAAI4xB,WAAW,KAAK,YAAY,EAAE;IAC9B,OAAOxwB,SAAS,KAAK,OAAO,GAAG01B,IAAI,CAACp8B,IAAI,GAAGo8B,IAAI,CAAC53B,KAAK;EACzD;EACA,OAAOkC,SAAS,KAAK,OAAO,GAAG01B,IAAI,CAACr8B,GAAG,GAAGq8B,IAAI,CAAC/3B,MAAM;AACzD;AACA;AACA;AACA;AACA;AAHA,IAIMg4B,eAAe;EAArB,MAAMA,eAAe,CAAC;IAClBvU,iBAAiB,GAAGptB,qDAAM,CAACoD,2DAAgB,CAAC;IAC5Cw+B,SAAS,GAAG5hC,qDAAM,CAACmD,sDAAW,CAAC;IAC/B0+B,QAAQ,GAAG7hC,qDAAM,CAACi1B,0DAAe,CAAC;IAClC6M,aAAa,GAAG9hC,qDAAM,CAAC4yB,2EAAuB,CAAC;IAC/CyD,SAAS,GAAGr2B,qDAAM,CAAC+8B,wBAAwB,EAAE;MAAEgF,QAAQ,EAAE;IAAK,CAAC,CAAC;IAChE;IACAC,UAAU,GAAG,IAAIn+B,yCAAO,CAAC,CAAC;IAC1B;IACAo+B,kBAAkB,GAAG,IAAIp+B,yCAAO,CAAC,CAAC;IAClC;IACA,IAAIq+B,eAAeA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACC,gBAAgB;IAChC;IACA,IAAID,eAAeA,CAACzvC,KAAK,EAAE;MACvB,IAAI,CAAC0vC,gBAAgB,GAAG1vC,KAAK;MAC7B,IAAID,6DAAY,CAACC,KAAK,CAAC,EAAE;QACrB,IAAI,CAACwvC,kBAAkB,CAACjzB,IAAI,CAACvc,KAAK,CAAC;MACvC,CAAC,MACI;QACD;QACA,IAAI,CAACwvC,kBAAkB,CAACjzB,IAAI,CAAC,IAAIyjB,2EAAe,CAACF,kDAAY,CAAC9/B,KAAK,CAAC,GAAGA,KAAK,GAAG2vC,KAAK,CAACpH,IAAI,CAACvoC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;MAC5G;IACJ;IACA0vC,gBAAgB;IAChB;AACJ;AACA;AACA;IACI,IAAIE,oBAAoBA,CAAA,EAAG;MACvB,OAAO,IAAI,CAACC,qBAAqB;IACrC;IACA,IAAID,oBAAoBA,CAACnX,EAAE,EAAE;MACzB,IAAI,CAACqX,YAAY,GAAG,IAAI;MACxB,IAAI,CAACD,qBAAqB,GAAGpX,EAAE,GACzB,CAACld,KAAK,EAAEw0B,IAAI,KAAKtX,EAAE,CAACld,KAAK,IAAI,IAAI,CAAC4vB,cAAc,GAAG,IAAI,CAACA,cAAc,CAACxe,KAAK,GAAG,CAAC,CAAC,EAAEojB,IAAI,CAAC,GACxFl2B,SAAS;IACnB;IACAg2B,qBAAqB;IACrB;IACA,IAAIG,qBAAqBA,CAAChwC,KAAK,EAAE;MAC7B,IAAIA,KAAK,EAAE;QACP,IAAI,CAAC8vC,YAAY,GAAG,IAAI;QACxB,IAAI,CAACX,SAAS,GAAGnvC,KAAK;MAC1B;IACJ;IACA;AACJ;AACA;AACA;IACI,IAAIiwC,8BAA8BA,CAAA,EAAG;MACjC,OAAO,IAAI,CAACZ,aAAa,CAAChP,aAAa;IAC3C;IACA,IAAI4P,8BAA8BA,CAAC3D,IAAI,EAAE;MACrC,IAAI,CAAC+C,aAAa,CAAChP,aAAa,GAAG8C,wDAAoB,CAACmJ,IAAI,CAAC;IACjE;IACA;IACAL,UAAU,GAAG,IAAI,CAACuD,kBAAkB,CAAC95B,IAAI;IACzC;IACAotB,yDAAS,CAAC,IAAI,CAAC;IACf;IACAE,wDAAQ,CAAC,CAAC;IACV;IACA;IACA;IACAC,yDAAS,CAAC,CAAC,CAACiN,IAAI,EAAEC,GAAG,CAAC,KAAK,IAAI,CAACC,iBAAiB,CAACF,IAAI,EAAEC,GAAG,CAAC,CAAC;IAC7D;IACAjN,2DAAW,CAAC,CAAC,CAAC,CAAC;IACf;IACAmN,OAAO,GAAG,IAAI;IACd;IACApQ,KAAK;IACL;IACAqQ,cAAc;IACd;IACAnF,cAAc;IACd;IACA2E,YAAY,GAAG,KAAK;IACpB9H,UAAU,GAAG,IAAI52B,yCAAO,CAAC,CAAC;IAC1BpC,WAAWA,CAAA,EAAG;MACV,MAAM84B,MAAM,GAAGv6B,qDAAM,CAACoC,iDAAM,CAAC;MAC7B,IAAI,CAACs8B,UAAU,CAACj2B,SAAS,CAACk2B,IAAI,IAAI;QAC9B,IAAI,CAACjM,KAAK,GAAGiM,IAAI;QACjB,IAAI,CAACqE,qBAAqB,CAAC,CAAC;MAChC,CAAC,CAAC;MACF,IAAI,CAAC3M,SAAS,CAACkH,mBAAmB,CAACp1B,IAAI,CAACqtB,yDAAS,CAAC,IAAI,CAACiF,UAAU,CAAC,CAAC,CAAChyB,SAAS,CAACu2B,KAAK,IAAI;QACnF,IAAI,CAACpB,cAAc,GAAGoB,KAAK;QAC3B,IAAI,IAAI,CAACgD,UAAU,CAACjzB,SAAS,CAACZ,MAAM,EAAE;UAClCosB,MAAM,CAACrxB,GAAG,CAAC,MAAM,IAAI,CAAC84B,UAAU,CAAChzB,IAAI,CAAC,IAAI,CAAC4uB,cAAc,CAAC,CAAC;QAC/D;QACA,IAAI,CAACoF,qBAAqB,CAAC,CAAC;MAChC,CAAC,CAAC;MACF,IAAI,CAAC3M,SAAS,CAAC3wB,MAAM,CAAC,IAAI,CAAC;IAC/B;IACA;AACJ;AACA;AACA;AACA;IACIq6B,gBAAgBA,CAACf,KAAK,EAAExC,WAAW,EAAE;MACjC,IAAIwC,KAAK,CAAC5f,KAAK,IAAI4f,KAAK,CAAClb,GAAG,EAAE;QAC1B,OAAO,CAAC;MACZ;MACA,IAAI,CAACkb,KAAK,CAAC5f,KAAK,GAAG,IAAI,CAACwe,cAAc,CAACxe,KAAK,IAAI4f,KAAK,CAAClb,GAAG,GAAG,IAAI,CAAC8Z,cAAc,CAAC9Z,GAAG,MAC9E,OAAO5hB,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;QACjD,MAAMoF,KAAK,CAAC,0DAA0D,CAAC;MAC3E;MACA;MACA,MAAM27B,kBAAkB,GAAGjE,KAAK,CAAC5f,KAAK,GAAG,IAAI,CAACwe,cAAc,CAACxe,KAAK;MAClE;MACA,MAAM8jB,QAAQ,GAAGlE,KAAK,CAAClb,GAAG,GAAGkb,KAAK,CAAC5f,KAAK;MACxC;MACA;MACA,IAAI+jB,SAAS;MACb,IAAIC,QAAQ;MACZ;MACA,KAAK,IAAIxwC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGswC,QAAQ,EAAEtwC,CAAC,EAAE,EAAE;QAC/B,MAAM4gC,IAAI,GAAG,IAAI,CAACpG,iBAAiB,CAACloB,GAAG,CAACtS,CAAC,GAAGqwC,kBAAkB,CAAC;QAC/D,IAAIzP,IAAI,IAAIA,IAAI,CAACrH,SAAS,CAAChe,MAAM,EAAE;UAC/Bg1B,SAAS,GAAGC,QAAQ,GAAG5P,IAAI,CAACrH,SAAS,CAAC,CAAC,CAAC;UACxC;QACJ;MACJ;MACA;MACA,KAAK,IAAIv5B,CAAC,GAAGswC,QAAQ,GAAG,CAAC,EAAEtwC,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,EAAE,EAAE;QACpC,MAAM4gC,IAAI,GAAG,IAAI,CAACpG,iBAAiB,CAACloB,GAAG,CAACtS,CAAC,GAAGqwC,kBAAkB,CAAC;QAC/D,IAAIzP,IAAI,IAAIA,IAAI,CAACrH,SAAS,CAAChe,MAAM,EAAE;UAC/Bi1B,QAAQ,GAAG5P,IAAI,CAACrH,SAAS,CAACqH,IAAI,CAACrH,SAAS,CAAChe,MAAM,GAAG,CAAC,CAAC;UACpD;QACJ;MACJ;MACA,OAAOg1B,SAAS,IAAIC,QAAQ,GACtB5B,SAAS,CAAChF,WAAW,EAAE,KAAK,EAAE4G,QAAQ,CAAC,GAAG5B,SAAS,CAAChF,WAAW,EAAE,OAAO,EAAE2G,SAAS,CAAC,GACpF,CAAC;IACX;IACAE,SAASA,CAAA,EAAG;MACR,IAAI,IAAI,CAACP,OAAO,IAAI,IAAI,CAACP,YAAY,EAAE;QACnC;QACA;QACA;QACA,MAAM1a,OAAO,GAAG,IAAI,CAACib,OAAO,CAACQ,IAAI,CAAC,IAAI,CAACP,cAAc,CAAC;QACtD,IAAI,CAAClb,OAAO,EAAE;UACV,IAAI,CAAC0b,cAAc,CAAC,CAAC;QACzB,CAAC,MACI;UACD,IAAI,CAACC,aAAa,CAAC3b,OAAO,CAAC;QAC/B;QACA,IAAI,CAAC0a,YAAY,GAAG,KAAK;MAC7B;IACJ;IACAz0B,WAAWA,CAAA,EAAG;MACV,IAAI,CAACuoB,SAAS,CAACrtB,MAAM,CAAC,CAAC;MACvB,IAAI,CAACi5B,kBAAkB,CAACjzB,IAAI,CAAC1C,SAAS,CAAC;MACvC,IAAI,CAAC21B,kBAAkB,CAAC/rB,QAAQ,CAAC,CAAC;MAClC,IAAI,CAAC8rB,UAAU,CAAC9rB,QAAQ,CAAC,CAAC;MAC1B,IAAI,CAACukB,UAAU,CAACzrB,IAAI,CAAC,CAAC;MACtB,IAAI,CAACyrB,UAAU,CAACvkB,QAAQ,CAAC,CAAC;MAC1B,IAAI,CAAC4rB,aAAa,CAAC94B,MAAM,CAAC,CAAC;IAC/B;IACA;IACAg6B,qBAAqBA,CAAA,EAAG;MACpB,IAAI,CAAC,IAAI,CAACpF,cAAc,EAAE;QACtB;MACJ;MACA,IAAI,CAACmF,cAAc,GAAG,IAAI,CAACrQ,KAAK,CAACtiB,KAAK,CAAC,IAAI,CAACwtB,cAAc,CAACxe,KAAK,EAAE,IAAI,CAACwe,cAAc,CAAC9Z,GAAG,CAAC;MAC1F,IAAI,CAAC,IAAI,CAACgf,OAAO,EAAE;QACf;QACA;QACA,IAAI,CAACA,OAAO,GAAG,IAAI,CAACjB,QAAQ,CAAC4B,IAAI,CAAC,IAAI,CAACV,cAAc,CAAC,CAACld,MAAM,CAAC,CAAC7X,KAAK,EAAEw0B,IAAI,KAAK;UAC3E,OAAO,IAAI,CAACH,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACr0B,KAAK,EAAEw0B,IAAI,CAAC,GAAGA,IAAI;QACpF,CAAC,CAAC;MACN;MACA,IAAI,CAACD,YAAY,GAAG,IAAI;IAC5B;IACA;IACAM,iBAAiBA,CAACa,KAAK,EAAEC,KAAK,EAAE;MAC5B,IAAID,KAAK,EAAE;QACPA,KAAK,CAACxrB,UAAU,CAAC,IAAI,CAAC;MAC1B;MACA,IAAI,CAACqqB,YAAY,GAAG,IAAI;MACxB,OAAOoB,KAAK,GAAGA,KAAK,CAACjxC,OAAO,CAAC,IAAI,CAAC,GAAG8/B,wCAAE,CAAC,CAAC;IAC7C;IACA;IACA+Q,cAAcA,CAAA,EAAG;MACb,MAAMK,KAAK,GAAG,IAAI,CAAClR,KAAK,CAACvkB,MAAM;MAC/B,IAAIvb,CAAC,GAAG,IAAI,CAACw6B,iBAAiB,CAACjf,MAAM;MACrC,OAAOvb,CAAC,EAAE,EAAE;QACR,MAAM4gC,IAAI,GAAG,IAAI,CAACpG,iBAAiB,CAACloB,GAAG,CAACtS,CAAC,CAAC;QAC1C4gC,IAAI,CAAChJ,OAAO,CAACxc,KAAK,GAAG,IAAI,CAAC4vB,cAAc,CAACxe,KAAK,GAAGxsB,CAAC;QAClD4gC,IAAI,CAAChJ,OAAO,CAACoZ,KAAK,GAAGA,KAAK;QAC1B,IAAI,CAACC,gCAAgC,CAACrQ,IAAI,CAAChJ,OAAO,CAAC;QACnDgJ,IAAI,CAACnH,aAAa,CAAC,CAAC;MACxB;IACJ;IACA;IACAmX,aAAaA,CAAC3b,OAAO,EAAE;MACnB,IAAI,CAACia,aAAa,CAAC9O,YAAY,CAACnL,OAAO,EAAE,IAAI,CAACuF,iBAAiB,EAAE,CAACiG,MAAM,EAAEyQ,sBAAsB,EAAEvQ,YAAY,KAAK,IAAI,CAACwQ,oBAAoB,CAAC1Q,MAAM,EAAEE,YAAY,CAAC,EAAEF,MAAM,IAAIA,MAAM,CAACmP,IAAI,CAAC;MAC1L;MACA3a,OAAO,CAACmc,qBAAqB,CAAE3Q,MAAM,IAAK;QACtC,MAAMG,IAAI,GAAG,IAAI,CAACpG,iBAAiB,CAACloB,GAAG,CAACmuB,MAAM,CAACE,YAAY,CAAC;QAC5DC,IAAI,CAAChJ,OAAO,CAAC6J,SAAS,GAAGhB,MAAM,CAACmP,IAAI;MACxC,CAAC,CAAC;MACF;MACA,MAAMoB,KAAK,GAAG,IAAI,CAAClR,KAAK,CAACvkB,MAAM;MAC/B,IAAIvb,CAAC,GAAG,IAAI,CAACw6B,iBAAiB,CAACjf,MAAM;MACrC,OAAOvb,CAAC,EAAE,EAAE;QACR,MAAM4gC,IAAI,GAAG,IAAI,CAACpG,iBAAiB,CAACloB,GAAG,CAACtS,CAAC,CAAC;QAC1C4gC,IAAI,CAAChJ,OAAO,CAACxc,KAAK,GAAG,IAAI,CAAC4vB,cAAc,CAACxe,KAAK,GAAGxsB,CAAC;QAClD4gC,IAAI,CAAChJ,OAAO,CAACoZ,KAAK,GAAGA,KAAK;QAC1B,IAAI,CAACC,gCAAgC,CAACrQ,IAAI,CAAChJ,OAAO,CAAC;MACvD;IACJ;IACA;IACAqZ,gCAAgCA,CAACrZ,OAAO,EAAE;MACtCA,OAAO,CAACkW,KAAK,GAAGlW,OAAO,CAACxc,KAAK,KAAK,CAAC;MACnCwc,OAAO,CAACyZ,IAAI,GAAGzZ,OAAO,CAACxc,KAAK,KAAKwc,OAAO,CAACoZ,KAAK,GAAG,CAAC;MAClDpZ,OAAO,CAAC0Z,IAAI,GAAG1Z,OAAO,CAACxc,KAAK,GAAG,CAAC,KAAK,CAAC;MACtCwc,OAAO,CAAC2Z,GAAG,GAAG,CAAC3Z,OAAO,CAAC0Z,IAAI;IAC/B;IACAH,oBAAoBA,CAAC1Q,MAAM,EAAErlB,KAAK,EAAE;MAChC;MACA;MACA;MACA;MACA,OAAO;QACH0Z,WAAW,EAAE,IAAI,CAACka,SAAS;QAC3BpX,OAAO,EAAE;UACL6J,SAAS,EAAEhB,MAAM,CAACmP,IAAI;UACtB;UACA;UACAN,eAAe,EAAE,IAAI,CAACC,gBAAgB;UACtCn0B,KAAK,EAAE,CAAC,CAAC;UACT41B,KAAK,EAAE,CAAC,CAAC;UACTlD,KAAK,EAAE,KAAK;UACZuD,IAAI,EAAE,KAAK;UACXE,GAAG,EAAE,KAAK;UACVD,IAAI,EAAE;QACV,CAAC;QACDl2B;MACJ,CAAC;IACL;IACA,OAAOo2B,sBAAsBA,CAACC,SAAS,EAAE7Z,OAAO,EAAE;MAC9C,OAAO,IAAI;IACf;IACA,OAAO9oB,IAAI,YAAA4iC,wBAAA1iC,iBAAA;MAAA,YAAAA,iBAAA,IAAwF+/B,eAAe;IAAA;IAClH,OAAOvb,IAAI,kBAxnC8ErmB,+DAAE;MAAAoQ,IAAA,EAwnCJwxB,eAAe;MAAAtwB,SAAA;MAAAqX,MAAA;QAAAwZ,eAAA;QAAAG,oBAAA;QAAAI,qBAAA;QAAAC,8BAAA;MAAA;MAAA9Z,QAAA,GAxnCb7oB,gEAAE,CAwnC0S,CAAC;QAAEipB,OAAO,EAAE4J,2EAAuB;QAAE2R,QAAQ,EAAE1R,2EAA4BA;MAAC,CAAC,CAAC;IAAA;EACvd;EAAC,OAtPK8O,eAAe;AAAA;AAuPrB;EAAA,QAAAz/B,SAAA,oBAAAA,SAAA;AAAA;;AAgBA;AACA;AACA;AAFA,IAGMsiC,2BAA2B;EAAjC,MAAMA,2BAA2B,SAASlI,oBAAoB,CAAC;IAC3D76B,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;IACX;IACAq9B,yCAAyCA,CAAC9D,IAAI,EAAE;MAC5C,OAAQ,IAAI,CAAC1yB,aAAa,CAAC,CAAC,CAACC,aAAa,CAACqC,qBAAqB,CAAC,CAAC,CAACowB,IAAI,CAAC,GACpE,IAAI,CAAClD,mBAAmB,CAACkD,IAAI,CAAC;IACtC;IACA,OAAOt5B,IAAI,YAAA+iC,oCAAA7iC,iBAAA;MAAA,YAAAA,iBAAA,IAAwF4iC,2BAA2B;IAAA;IAC9H,OAAOpe,IAAI,kBAtpC8ErmB,+DAAE;MAAAoQ,IAAA,EAspCJq0B,2BAA2B;MAAAnzB,SAAA;MAAAC,SAAA;MAAAsX,QAAA,GAtpCzB7oB,gEAAE,CAspCsJ,CAAC;QAAEipB,OAAO,EAAEqT,kBAAkB;QAAEpP,WAAW,EAAEuX;MAA4B,CAAC,CAAC,GAtpCnOzkC,wEAAE;IAAA;EAupC/F;EAAC,OAVKykC,2BAA2B;AAAA;AAWjC;EAAA,QAAAtiC,SAAA,oBAAAA,SAAA;AAAA;;AAWA;AACA;AACA;AAFA,IAGMwiC,0BAA0B;EAAhC,MAAMA,0BAA0B,SAASpI,oBAAoB,CAAC;IAC1D76B,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;MACP,MAAMf,QAAQ,GAAGV,qDAAM,CAACmC,mDAAQ,CAAC;MACjC,IAAI,CAAC+jB,UAAU,GAAG,IAAIvjB,qDAAU,CAACjC,QAAQ,CAACoF,eAAe,CAAC;MAC1D,IAAI,CAAC00B,cAAc,GAAG95B,QAAQ;IAClC;IACAo+B,yCAAyCA,CAAC9D,IAAI,EAAE;MAC5C,OAAO,IAAI,CAAC1yB,aAAa,CAAC,CAAC,CAACC,aAAa,CAACqC,qBAAqB,CAAC,CAAC,CAACowB,IAAI,CAAC;IAC3E;IACA,OAAOt5B,IAAI,YAAAijC,mCAAA/iC,iBAAA;MAAA,YAAAA,iBAAA,IAAwF8iC,0BAA0B;IAAA;IAC7H,OAAOte,IAAI,kBAjrC8ErmB,+DAAE;MAAAoQ,IAAA,EAirCJu0B,0BAA0B;MAAArzB,SAAA;MAAAuX,QAAA,GAjrCxB7oB,gEAAE,CAirC8G,CAAC;QAAEipB,OAAO,EAAEqT,kBAAkB;QAAEpP,WAAW,EAAEyX;MAA2B,CAAC,CAAC,GAjrC1L3kC,wEAAE;IAAA;EAkrC/F;EAAC,OAZK2kC,0BAA0B;AAAA;AAahC;EAAA,QAAAxiC,SAAA,oBAAAA,SAAA;AAAA;AAMwC,IAElC0iC,mBAAmB;EAAzB,MAAMA,mBAAmB,CAAC;IACtB,OAAOljC,IAAI,YAAAmjC,4BAAAjjC,iBAAA;MAAA,YAAAA,iBAAA,IAAwFgjC,mBAAmB;IAAA;IACtH,OAAOxb,IAAI,kBA7rC8ErpB,8DAAE;MAAAoQ,IAAA,EA6rCSy0B;IAAmB;IACvH,OAAOtb,IAAI,kBA9rC8EvpB,8DAAE;EA+rC/F;EAAC,OAJK6kC,mBAAmB;AAAA;AAKzB;EAAA,QAAA1iC,SAAA,oBAAAA,SAAA;AAAA;AAOA;AACA;AACA;AAFA,IAGMiC,eAAe;EAArB,MAAMA,eAAe,CAAC;IAClB,OAAOzC,IAAI,YAAAojC,wBAAAljC,iBAAA;MAAA,YAAAA,iBAAA,IAAwFuC,eAAe;IAAA;IAClH,OAAOilB,IAAI,kBA5sC8ErpB,8DAAE;MAAAoQ,IAAA,EA4sCShM;IAAe;IASnH,OAAOmlB,IAAI,kBArtC8EvpB,8DAAE;MAAA0pB,OAAA,GAqtCoC5kB,iDAAU,EACjI+/B,mBAAmB,EAAE//B,iDAAU,EAAE+/B,mBAAmB;IAAA;EAChE;EAAC,OAbKzgC,eAAe;AAAA;AAcrB;EAAA,QAAAjC,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC55CsE;AAC02B;AAC54B;AACiC;AAC4U;AACvW;AACjB;AACQ;AACE;AACM;AACJ;AACvB;AAC0B;AACV;AACR;AACY;AACV;AACa;AACE;AACN;AACT;AACQ;AACuB;AACnB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOMmjC,0BAA0B;EAAhC,MAAMA,0BAA0B,SAASrzB,2DAAgB,CAAC;IACtD1D,SAAS,GAAGtO,qDAAM,CAACsC,2DAAgB,CAAC,CAACiM,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;IAC/D+2B,oBAAoB;IACpBC,0BAA0B;IAC1B9jC,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;IACX;IACAqM,WAAWA,CAAA,EAAG;MACV,KAAK,CAACA,WAAW,CAAC,CAAC;MACnB,IAAI,CAACy3B,0BAA0B,GAAG,CAAC;IACvC;IACAlzB,gBAAgBA,CAAA,EAAG;MACf,MAAMmzB,SAAS,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MACtC,KAAK,CAACpzB,gBAAgB,CAAC,CAAC;MACxB,IAAI,CAACqzB,gCAAgC,CAAC,CAAC;MACvC,IAAIF,SAAS,EAAE;QACX,IAAI,CAACD,0BAA0B,GAAG,CAAC;QACnC,IAAI,CAACA,0BAA0B,GAAG,IAAI,CAACj3B,SAAS,CAACI,MAAM,CAAC,UAAU,EAAE82B,SAAS,EAAE,MAAM;UACjF,IAAI,CAACE,gCAAgC,CAAC,CAAC;QAC3C,CAAC,CAAC;MACN;IACJ;IACAA,gCAAgCA,CAAA,EAAG;MAC/B,IAAI,IAAI,CAACzzB,iBAAiB,EAAE;QACxB,MAAM0zB,iBAAiB,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;QACrD,MAAMl1B,MAAM,GAAGi1B,iBAAiB,IAAI,IAAI,CAAClgC,SAAS,CAACY,IAAI;QACvDqK,MAAM,CAACkC,WAAW,CAAC,IAAI,CAACX,iBAAiB,CAAC;MAC9C;IACJ;IACAwzB,aAAaA,CAAA,EAAG;MACZ,IAAI,CAAC,IAAI,CAACH,oBAAoB,EAAE;QAC5B,MAAM7/B,SAAS,GAAG,IAAI,CAACA,SAAS;QAChC,IAAIA,SAAS,CAACogC,iBAAiB,EAAE;UAC7B,IAAI,CAACP,oBAAoB,GAAG,kBAAkB;QAClD,CAAC,MACI,IAAI7/B,SAAS,CAACqgC,uBAAuB,EAAE;UACxC,IAAI,CAACR,oBAAoB,GAAG,wBAAwB;QACxD,CAAC,MACI,IAAI7/B,SAAS,CAACsgC,oBAAoB,EAAE;UACrC,IAAI,CAACT,oBAAoB,GAAG,qBAAqB;QACrD,CAAC,MACI,IAAI7/B,SAAS,CAACugC,mBAAmB,EAAE;UACpC,IAAI,CAACV,oBAAoB,GAAG,oBAAoB;QACpD;MACJ;MACA,OAAO,IAAI,CAACA,oBAAoB;IACpC;IACA;AACJ;AACA;AACA;IACIM,oBAAoBA,CAAA,EAAG;MACnB,MAAMngC,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,OAAQA,SAAS,CAACkgC,iBAAiB,IAC/BlgC,SAAS,CAACwgC,uBAAuB,IACjCxgC,SAAS,CAACygC,oBAAoB,IAC9BzgC,SAAS,CAAC0gC,mBAAmB,IAC7B,IAAI;IACZ;IACA,OAAOzkC,IAAI,YAAA0kC,mCAAAxkC,iBAAA;MAAA,YAAAA,iBAAA,IAAwFyjC,0BAA0B;IAAA;IAC7H,OAAOxjC,KAAK,kBAD6E9B,gEAAE;MAAAgC,KAAA,EACYsjC,0BAA0B;MAAArjC,OAAA,EAA1BqjC,0BAA0B,CAAA3jC,IAAA;MAAAO,UAAA,EAAc;IAAM;EACzJ;EAAC,OA7DKojC,0BAA0B;AAAA;AA8DhC;EAAA,QAAAnjC,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;AC9FoC;AAC+E;;AAEnH;AACA,MAAMmkC,eAAe,gBAAG,IAAIC,OAAO,CAAC,CAAC;AACrC;AACA;AACA;AACA;AAHA,IAIM1iC,sBAAsB;EAA5B,MAAMA,sBAAsB,CAAC;IACzBwnB,OAAO;IACPrgB,SAAS,GAAG/K,qDAAM,CAACqC,mDAAQ,CAAC;IAC5BkkC,oBAAoB,GAAGvmC,qDAAM,CAAC+C,8DAAmB,CAAC;IAClD;AACJ;AACA;AACA;IACI8P,IAAIA,CAAC2zB,MAAM,EAAE;MACT;MACA,MAAMthB,MAAM,GAAI,IAAI,CAACkG,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,IAAI,CAACrgB,SAAS,CAAC7F,GAAG,CAACtC,yDAAc,CAAE;MAClF,IAAI+7B,IAAI,GAAG0H,eAAe,CAACnhC,GAAG,CAACggB,MAAM,CAAC;MACtC;MACA,IAAI,CAACyZ,IAAI,EAAE;QACPA,IAAI,GAAG;UAAE8H,OAAO,EAAE,IAAIC,GAAG,CAAC,CAAC;UAAEC,IAAI,EAAE;QAAG,CAAC;QACvCN,eAAe,CAACtX,GAAG,CAAC7J,MAAM,EAAEyZ,IAAI,CAAC;QACjC;QACAzZ,MAAM,CAACzP,SAAS,CAAC,MAAM;UACnB4wB,eAAe,CAACnhC,GAAG,CAACggB,MAAM,CAAC,EAAEyhB,IAAI,CAAC32B,OAAO,CAAC0d,GAAG,IAAIA,GAAG,CAACtY,OAAO,CAAC,CAAC,CAAC;UAC/DixB,eAAe,CAAC7M,MAAM,CAACtU,MAAM,CAAC;QAClC,CAAC,CAAC;MACN;MACA;MACA,IAAI,CAACyZ,IAAI,CAAC8H,OAAO,CAACrN,GAAG,CAACoN,MAAM,CAAC,EAAE;QAC3B7H,IAAI,CAAC8H,OAAO,CAACvgC,GAAG,CAACsgC,MAAM,CAAC;QACxB7H,IAAI,CAACgI,IAAI,CAAC54B,IAAI,CAAC4b,8DAAe,CAAC6c,MAAM,EAAE;UAAE9a,mBAAmB,EAAE,IAAI,CAAC6a;QAAqB,CAAC,CAAC,CAAC;MAC/F;IACJ;IACA,OAAO7kC,IAAI,YAAAklC,+BAAAhlC,iBAAA;MAAA,YAAAA,iBAAA,IAAwFgC,sBAAsB;IAAA;IACzH,OAAO/B,KAAK,kBAD6E9B,gEAAE;MAAAgC,KAAA,EACY6B,sBAAsB;MAAA5B,OAAA,EAAtB4B,sBAAsB,CAAAlC,IAAA;MAAAO,UAAA,EAAc;IAAM;EACrJ;EAAC,OA9BK2B,sBAAsB;AAAA;AA+B5B;EAAA,QAAA1B,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;;ACxC2C;AAE3C,SAAS0zB,oBAAoBA,CAACnjC,KAAK,EAAEo0C,aAAa,GAAG,CAAC,EAAE;EACpD,IAAIC,cAAc,CAACr0C,KAAK,CAAC,EAAE;IACvB,OAAO4sC,MAAM,CAAC5sC,KAAK,CAAC;EACxB;EACA,OAAOs0C,SAAS,CAAC54B,MAAM,KAAK,CAAC,GAAG04B,aAAa,GAAG,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACr0C,KAAK,EAAE;EAC3B;EACA;EACA;EACA,OAAO,CAACu0C,KAAK,CAAClkB,UAAU,CAACrwB,KAAK,CAAC,CAAC,IAAI,CAACu0C,KAAK,CAAC3H,MAAM,CAAC5sC,KAAK,CAAC,CAAC;AAC7D;;AAEA;AACA;AACA;AACA;AACA,SAASojC,aAAaA,CAACoR,YAAY,EAAE;EACjC,OAAOA,YAAY,YAAYtkC,qDAAU,GAAGskC,YAAY,CAAC1+B,aAAa,GAAG0+B,YAAY;AACzF;;;;;;;;;;;;;;;ACzBA,SAASjjC,WAAWA,CAACvR,KAAK,EAAE;EACxB,OAAO2vC,KAAK,CAAC8E,OAAO,CAACz0C,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;AACjD","sources":["./node_modules/@angular/cdk/fesm2022/data-source-D34wiQZj.mjs","./node_modules/@angular/cdk/fesm2022/keycodes-CpHkExLC.mjs","./node_modules/@angular/cdk/fesm2022/platform-DNDzkVcI.mjs","./node_modules/@angular/cdk/fesm2022/overlay-module-Bd2UplUU.mjs","./node_modules/@angular/cdk/fesm2022/portal.mjs","./node_modules/@angular/cdk/fesm2022/directionality-CChdj3az.mjs","./node_modules/@angular/cdk/fesm2022/id-generator-LuoRZSid.mjs","./node_modules/@angular/cdk/fesm2022/scrolling-BkvA05C8.mjs","./node_modules/@angular/cdk/fesm2022/bidi.mjs","./node_modules/@angular/cdk/fesm2022/test-environment-CT0XxPyp.mjs","./node_modules/@angular/cdk/fesm2022/shadow-dom-B0oHn41l.mjs","./node_modules/@angular/cdk/fesm2022/keycodes.mjs","./node_modules/@angular/cdk/fesm2022/recycle-view-repeater-strategy-SfuyU210.mjs","./node_modules/@angular/cdk/fesm2022/css-pixel-value-C_HEqLhI.mjs","./node_modules/@angular/cdk/fesm2022/scrolling.mjs","./node_modules/@angular/cdk/fesm2022/overlay.mjs","./node_modules/@angular/cdk/fesm2022/style-loader-B2sGQXxD.mjs","./node_modules/@angular/cdk/fesm2022/element-x4z00URv.mjs","./node_modules/@angular/cdk/fesm2022/array-I1yfCXUO.mjs"],"sourcesContent":["import { ConnectableObservable } from 'rxjs';\n\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n    // here, because of some internal apps.\n    return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\nexport { DataSource as D, isDataSource as i };\n","const MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\nexport { FF_EQUALS as $, A, BACKSPACE as B, CONTROL as C, DOWN_ARROW as D, END as E, F1 as F, PRINT_SCREEN as G, HOME as H, INSERT as I, TWO as J, THREE as K, LEFT_ARROW as L, MAC_META as M, NINE as N, ONE as O, PAGE_DOWN as P, FOUR as Q, RIGHT_ARROW as R, SPACE as S, TAB as T, UP_ARROW as U, FIVE as V, SIX as W, SEVEN as X, EIGHT as Y, Z, FF_SEMICOLON as _, PAGE_UP as a, CLOSE_SQUARE_BRACKET as a$, QUESTION_MARK as a0, AT_SIGN as a1, B as a2, C as a3, D as a4, E as a5, F as a6, G as a7, H as a8, I as a9, NUMPAD_SEVEN as aA, NUMPAD_EIGHT as aB, NUMPAD_NINE as aC, NUMPAD_MULTIPLY as aD, NUMPAD_PLUS as aE, NUMPAD_MINUS as aF, NUMPAD_PERIOD as aG, NUMPAD_DIVIDE as aH, NUM_LOCK as aI, SCROLL_LOCK as aJ, FIRST_MEDIA as aK, FF_MINUS as aL, MUTE as aM, VOLUME_DOWN as aN, VOLUME_UP as aO, FF_MUTE as aP, FF_VOLUME_DOWN as aQ, LAST_MEDIA as aR, FF_VOLUME_UP as aS, SEMICOLON as aT, EQUALS as aU, DASH as aV, SLASH as aW, APOSTROPHE as aX, TILDE as aY, OPEN_SQUARE_BRACKET as aZ, BACKSLASH as a_, J as aa, K as ab, L as ac, M as ad, N as ae, O as af, P as ag, Q as ah, R as ai, S as aj, T as ak, U as al, V as am, W as an, X as ao, Y as ap, MAC_WK_CMD_LEFT as aq, MAC_WK_CMD_RIGHT as ar, CONTEXT_MENU as as, NUMPAD_ZERO as at, NUMPAD_ONE as au, NUMPAD_TWO as av, NUMPAD_THREE as aw, NUMPAD_FOUR as ax, NUMPAD_FIVE as ay, NUMPAD_SIX as az, ZERO as b, SINGLE_QUOTE as b0, ENTER as c, ALT as d, META as e, SHIFT as f, ESCAPE as g, PERIOD as h, DELETE as i, F2 as j, F3 as k, F4 as l, F5 as m, F6 as n, F7 as o, F8 as p, F9 as q, F10 as r, F11 as s, F12 as t, COMMA as u, MAC_ENTER as v, NUM_CENTER as w, PAUSE as x, CAPS_LOCK as y, PLUS_SIGN as z };\n","import * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    _platformId = inject(PLATFORM_ID);\n    // We want to use the Angular platform check because if the Document is shimmed\n    // without the navigator, the following checks will fail. This is preferred because\n    // sometimes the Document may be shimmed without the user's knowledge or intention\n    /** Whether the Angular application is being rendered in the browser. */\n    isBrowser = this._platformId\n        ? isPlatformBrowser(this._platformId)\n        : typeof document === 'object' && !!document;\n    /** Whether the current browser is Microsoft Edge. */\n    EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n    /** Whether the current rendering engine is Microsoft Trident. */\n    TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n    // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n    /** Whether the current rendering engine is Blink. */\n    BLINK = this.isBrowser &&\n        !!(window.chrome || hasV8BreakIterator) &&\n        typeof CSS !== 'undefined' &&\n        !this.EDGE &&\n        !this.TRIDENT;\n    // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n    // ensure that Webkit runs standalone and is not used as another engine's base.\n    /** Whether the current rendering engine is WebKit. */\n    WEBKIT = this.isBrowser &&\n        /AppleWebKit/i.test(navigator.userAgent) &&\n        !this.BLINK &&\n        !this.EDGE &&\n        !this.TRIDENT;\n    /** Whether the current platform is Apple iOS. */\n    IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n    // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n    // them self as Gecko-like browsers and modify the userAgent's according to that.\n    // Since we only cover one explicit Firefox case, we can simply check for Firefox\n    // instead of having an unstable check for Gecko.\n    /** Whether the current browser is Firefox. */\n    FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n    /** Whether the current platform is Android. */\n    // Trident on mobile adds the android platform to the userAgent to trick detections.\n    ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n    // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n    // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n    // Safari browser should also use Webkit as its layout engine.\n    /** Whether the current browser is Safari. */\n    SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { Platform as P };\n","import * as i0 from '@angular/core';\nimport { DOCUMENT, NgZone, inject, Injector, Injectable, RendererFactory2, Component, ChangeDetectionStrategy, ViewEncapsulation, afterNextRender, ElementRef, ApplicationRef, Renderer2, ANIMATION_MODULE_TYPE, EnvironmentInjector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, booleanAttribute, Input, Output, NgModule } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { _ as _getEventTarget } from './shadow-dom-B0oHn41l.mjs';\nimport { _ as _isTestEnvironment } from './test-environment-CT0XxPyp.mjs';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-B2sGQXxD.mjs';\nimport { Subject, Subscription } from 'rxjs';\nimport { c as coerceCssPixelValue } from './css-pixel-value-C_HEqLhI.mjs';\nimport { c as coerceArray } from './array-I1yfCXUO.mjs';\nimport { ViewportRuler, ScrollDispatcher, ScrollingModule } from './scrolling.mjs';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from './portal.mjs';\nimport { s as supportsScrollBehavior } from './scrolling-BkvA05C8.mjs';\nimport { filter, takeWhile } from 'rxjs/operators';\nimport { _ as _IdGenerator } from './id-generator-LuoRZSid.mjs';\nimport { D as Directionality } from './directionality-CChdj3az.mjs';\nimport { g as ESCAPE } from './keycodes-CpHkExLC.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { BidiModule } from './bidi.mjs';\n\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Creates a scroll strategy that prevents the user from scrolling while the overlay is open.\n * @param injector Injector used to resolve dependencies of the scroll strategy.\n * @param config Configuration options for the scroll strategy.\n */\nfunction createBlockScrollStrategy(injector) {\n    return new BlockScrollStrategy(injector.get(ViewportRuler), injector.get(DOCUMENT));\n}\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    _viewportRuler;\n    _previousHTMLStyles = { top: '', left: '' };\n    _previousScrollPosition;\n    _isEnabled = false;\n    _document;\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const rootElement = this._document.documentElement;\n        const viewport = this._viewportRuler.getViewportSize();\n        return rootElement.scrollHeight > viewport.height || rootElement.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Creates a scroll strategy that closes the overlay when the user starts to scroll.\n * @param injector Injector used to resolve dependencies of the scroll strategy.\n * @param config Configuration options for the scroll strategy.\n */\nfunction createCloseScrollStrategy(injector, config) {\n    return new CloseScrollStrategy(injector.get(ScrollDispatcher), injector.get(NgZone), injector.get(ViewportRuler), config);\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    _scrollDispatcher;\n    _ngZone;\n    _viewportRuler;\n    _config;\n    _scrollSubscription = null;\n    _overlayRef;\n    _initialScrollPosition;\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0).pipe(filter(scrollable => {\n            return (!scrollable ||\n                !this._overlayRef.overlayElement.contains(scrollable.getElementRef().nativeElement));\n        }));\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n    /** Detaches the overlay ref and disables the scroll strategy. */\n    _detach = () => {\n        this.disable();\n        if (this._overlayRef.hasAttached()) {\n            this._ngZone.run(() => this._overlayRef.detach());\n        }\n    };\n}\n\n/** Creates a scroll strategy that does nothing. */\nfunction createNoopScrollStrategy() {\n    return new NoopScrollStrategy();\n}\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * Creates a scroll strategy that updates the overlay's position when the user scrolls.\n * @param injector Injector used to resolve dependencies of the scroll strategy.\n * @param config Configuration options for the scroll strategy.\n */\nfunction createRepositionScrollStrategy(injector, config) {\n    return new RepositionScrollStrategy(injector.get(ScrollDispatcher), injector.get(ViewportRuler), injector.get(NgZone), config);\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    _scrollDispatcher;\n    _viewportRuler;\n    _ngZone;\n    _config;\n    _scrollSubscription = null;\n    _overlayRef;\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    _injector = inject(Injector);\n    constructor() { }\n    /** Do nothing on scroll. */\n    noop = () => new NoopScrollStrategy();\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * @param config Configuration to be used inside the scroll strategy.\n     */\n    close = (config) => createCloseScrollStrategy(this._injector, config);\n    /** Block scrolling. */\n    block = () => createBlockScrollStrategy(this._injector);\n    /**\n     * Update the overlay's position on scroll.\n     * @param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     */\n    reposition = (config) => createRepositionScrollStrategy(this._injector, config);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollStrategyOptions, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    /** Strategy with which to position the overlay. */\n    positionStrategy;\n    /** Strategy to be used when handling scroll events while the overlay is open. */\n    scrollStrategy = new NoopScrollStrategy();\n    /** Custom class to add to the overlay pane. */\n    panelClass = '';\n    /** Whether the overlay has a backdrop. */\n    hasBackdrop = false;\n    /** Custom class to add to the backdrop */\n    backdropClass = 'cdk-overlay-dark-backdrop';\n    /** Whether to disable any built-in animations. */\n    disableAnimations;\n    /** The width of the overlay panel. If a number is provided, pixel units are assumed. */\n    width;\n    /** The height of the overlay panel. If a number is provided, pixel units are assumed. */\n    height;\n    /** The min-width of the overlay panel. If a number is provided, pixel units are assumed. */\n    minWidth;\n    /** The min-height of the overlay panel. If a number is provided, pixel units are assumed. */\n    minHeight;\n    /** The max-width of the overlay panel. If a number is provided, pixel units are assumed. */\n    maxWidth;\n    /** The max-height of the overlay panel. If a number is provided, pixel units are assumed. */\n    maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     */\n    direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    disposeOnNavigation = false;\n    constructor(config) {\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    offsetX;\n    offsetY;\n    panelClass;\n    /** X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'. */\n    originX;\n    /** Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'. */\n    originY;\n    /** X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'. */\n    overlayX;\n    /** Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'. */\n    overlayY;\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n    isOriginClipped;\n    isOriginOutsideView;\n    isOverlayClipped;\n    isOverlayOutsideView;\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    connectionPair;\n    scrollableViewProperties;\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    /** Currently attached overlays in the order they were attached. */\n    _attachedOverlays = [];\n    _document = inject(DOCUMENT);\n    _isAttached;\n    constructor() { }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BaseOverlayDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    _ngZone = inject(NgZone);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cleanupKeydown;\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._ngZone.runOutsideAngular(() => {\n                this._cleanupKeydown = this._renderer.listen('body', 'keydown', this._keydownListener);\n            });\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._cleanupKeydown?.();\n            this._isAttached = false;\n        }\n    }\n    /** Keyboard event listener that will be attached to the body. */\n    _keydownListener = (event) => {\n        const overlays = this._attachedOverlays;\n        for (let i = overlays.length - 1; i > -1; i--) {\n            // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n            // We want to target the most recent overlay, rather than trying to match where the event came\n            // from, because some components might open an overlay, but keep focus on a trigger element\n            // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n            // because we don't want overlays that don't handle keyboard events to block the ones below\n            // them that do.\n            if (overlays[i]._keydownEvents.observers.length > 0) {\n                this._ngZone.run(() => overlays[i]._keydownEvents.next(event));\n                break;\n            }\n        }\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cursorOriginalValue;\n    _cursorStyleIsSet = false;\n    _pointerDownEventTarget;\n    _cleanups;\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            const eventOptions = { capture: true };\n            const renderer = this._renderer;\n            this._cleanups = this._ngZone.runOutsideAngular(() => [\n                renderer.listen(body, 'pointerdown', this._pointerDownListener, eventOptions),\n                renderer.listen(body, 'click', this._clickListener, eventOptions),\n                renderer.listen(body, 'auxclick', this._clickListener, eventOptions),\n                renderer.listen(body, 'contextmenu', this._clickListener, eventOptions),\n            ]);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._cleanups?.forEach(cleanup => cleanup());\n            this._cleanups = undefined;\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                this._document.body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n    /** Store pointerdown event target to track origin of click. */\n    _pointerDownListener = (event) => {\n        this._pointerDownEventTarget = _getEventTarget(event);\n    };\n    /** Click event listener that will be attached to the body propagate phase. */\n    _clickListener = (event) => {\n        const target = _getEventTarget(event);\n        // In case of a click event, we want to check the origin of the click\n        // (e.g. in case where a user starts a click inside the overlay and\n        // releases the click outside of it).\n        // This is done by using the event target of the preceding pointerdown event.\n        // Every click event caused by a pointer device has a preceding pointerdown\n        // event, unless the click was programmatically triggered (e.g. in a unit test).\n        const origin = event.type === 'click' && this._pointerDownEventTarget\n            ? this._pointerDownEventTarget\n            : target;\n        // Reset the stored pointerdown event target, to avoid having it interfere\n        // in subsequent events.\n        this._pointerDownEventTarget = null;\n        // We copy the array because the original may be modified asynchronously if the\n        // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n        // the for loop.\n        const overlays = this._attachedOverlays.slice();\n        // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n        // We want to target all overlays for which the click could be considered as outside click.\n        // As soon as we reach an overlay for which the click is not outside click we break off\n        // the loop.\n        for (let i = overlays.length - 1; i > -1; i--) {\n            const overlayRef = overlays[i];\n            if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                continue;\n            }\n            // If it's a click inside the overlay, just break - we should do nothing\n            // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n            // and proceed with the next overlay\n            if (containsPierceShadowDom(overlayRef.overlayElement, target) ||\n                containsPierceShadowDom(overlayRef.overlayElement, origin)) {\n                break;\n            }\n            const outsidePointerEvents = overlayRef._outsidePointerEvents;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.run(() => outsidePointerEvents.next(event));\n            }\n            else {\n                outsidePointerEvents.next(event);\n            }\n        }\n    };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** Version of `Element.contains` that transcends shadow DOM boundaries. */\nfunction containsPierceShadowDom(parent, child) {\n    const supportsShadowRoot = typeof ShadowRoot !== 'undefined' && ShadowRoot;\n    let current = child;\n    while (current) {\n        if (current === parent) {\n            return true;\n        }\n        current =\n            supportsShadowRoot && current instanceof ShadowRoot ? current.host : current.parentNode;\n    }\n    return false;\n}\n\nclass _CdkOverlayStyleLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkOverlayStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _CdkOverlayStyleLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"cdk-overlay-style-loader\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\".cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed}@layer cdk-overlay{.cdk-overlay-container{z-index:1000}}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute}@layer cdk-overlay{.cdk-global-overlay-wrapper{z-index:1000}}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;display:flex;max-width:100%;max-height:100%}@layer cdk-overlay{.cdk-overlay-pane{z-index:1000}}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);opacity:0;touch-action:manipulation}@layer cdk-overlay{.cdk-overlay-backdrop{z-index:1000;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}}@media(prefers-reduced-motion){.cdk-overlay-backdrop{transition-duration:1ms}}.cdk-overlay-backdrop-showing{opacity:1}@media(forced-colors: active){.cdk-overlay-backdrop-showing{opacity:.6}}@layer cdk-overlay{.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing,.cdk-high-contrast-active .cdk-overlay-transparent-backdrop{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;display:flex;flex-direction:column;min-width:1px;min-height:1px}@layer cdk-overlay{.cdk-overlay-connected-position-bounding-box{z-index:1000}}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkOverlayStyleLoader, decorators: [{\n            type: Component,\n            args: [{ template: '', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { 'cdk-overlay-style-loader': '' }, styles: [\".cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed}@layer cdk-overlay{.cdk-overlay-container{z-index:1000}}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute}@layer cdk-overlay{.cdk-global-overlay-wrapper{z-index:1000}}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;display:flex;max-width:100%;max-height:100%}@layer cdk-overlay{.cdk-overlay-pane{z-index:1000}}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);opacity:0;touch-action:manipulation}@layer cdk-overlay{.cdk-overlay-backdrop{z-index:1000;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}}@media(prefers-reduced-motion){.cdk-overlay-backdrop{transition-duration:1ms}}.cdk-overlay-backdrop-showing{opacity:1}@media(forced-colors: active){.cdk-overlay-backdrop-showing{opacity:.6}}@layer cdk-overlay{.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing,.cdk-high-contrast-active .cdk-overlay-transparent-backdrop{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;display:flex;flex-direction:column;min-width:1px;min-height:1px}@layer cdk-overlay{.cdk-overlay-connected-position-bounding-box{z-index:1000}}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}\\n\"] }]\n        }] });\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    _platform = inject(Platform);\n    _containerElement;\n    _document = inject(DOCUMENT);\n    _styleLoader = inject(_CdkPrivateStyleLoader);\n    constructor() { }\n    ngOnDestroy() {\n        this._containerElement?.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        this._loadStyles();\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n    /** Loads the structural styles necessary for the overlay to work. */\n    _loadStyles() {\n        this._styleLoader.load(_CdkOverlayStyleLoader);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayContainer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Encapsulates the logic for attaching and detaching a backdrop. */\nclass BackdropRef {\n    _renderer;\n    _ngZone;\n    element;\n    _cleanupClick;\n    _cleanupTransitionEnd;\n    _fallbackTimeout;\n    constructor(document, _renderer, _ngZone, onClick) {\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this.element = document.createElement('div');\n        this.element.classList.add('cdk-overlay-backdrop');\n        this._cleanupClick = _renderer.listen(this.element, 'click', onClick);\n    }\n    detach() {\n        this._ngZone.runOutsideAngular(() => {\n            const element = this.element;\n            clearTimeout(this._fallbackTimeout);\n            this._cleanupTransitionEnd?.();\n            this._cleanupTransitionEnd = this._renderer.listen(element, 'transitionend', this.dispose);\n            this._fallbackTimeout = setTimeout(this.dispose, 500);\n            // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n            // In this case we make it unclickable and we try to remove it after a delay.\n            element.style.pointerEvents = 'none';\n            element.classList.remove('cdk-overlay-backdrop-showing');\n        });\n    }\n    dispose = () => {\n        clearTimeout(this._fallbackTimeout);\n        this._cleanupClick?.();\n        this._cleanupTransitionEnd?.();\n        this._cleanupClick = this._cleanupTransitionEnd = this._fallbackTimeout = undefined;\n        this.element.remove();\n    };\n}\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    _portalOutlet;\n    _host;\n    _pane;\n    _config;\n    _ngZone;\n    _keyboardDispatcher;\n    _document;\n    _location;\n    _outsideClickDispatcher;\n    _animationsDisabled;\n    _injector;\n    _renderer;\n    _backdropClick = new Subject();\n    _attachments = new Subject();\n    _detachments = new Subject();\n    _positionStrategy;\n    _scrollStrategy;\n    _locationChanges = Subscription.EMPTY;\n    _backdropRef = null;\n    _detachContentMutationObserver;\n    _detachContentAfterRenderRef;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     */\n    _previousHostParent;\n    /** Stream of keydown events dispatched to this overlay. */\n    _keydownEvents = new Subject();\n    /** Stream of mouse outside events dispatched to this overlay. */\n    _outsidePointerEvents = new Subject();\n    /** Reference to the currently-running `afterNextRender` call. */\n    _afterNextRenderRef;\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false, _injector, _renderer) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsDisabled = _animationsDisabled;\n        this._injector = _injector;\n        this._renderer = _renderer;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropRef?.element || null;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        // Insert the host into the DOM before attaching the portal, otherwise\n        // the animations module will skip animations on repeat attachments.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        const attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // We need to clean this up ourselves, because we're passing in an\n        // `EnvironmentInjector` below which won't ever be destroyed.\n        // Otherwise it causes some callbacks to be retained (see #29696).\n        this._afterNextRenderRef?.destroy();\n        // Update the position once the overlay is fully rendered before attempting to position it,\n        // as the position may depend on the size of the rendered content.\n        this._afterNextRenderRef = afterNextRender(() => {\n            // The overlay could've been detached before the callback executed.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }, { injector: this._injector });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        this._completeDetachContent();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n        // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n        // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n        if (typeof attachResult?.onDestroy === 'function') {\n            // In most cases we control the portal and we know when it is being detached so that\n            // we can finish the disposal process. The exception is if the user passes in a custom\n            // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n            // `detach` here instead of `dispose`, because we don't know if the user intends to\n            // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n            attachResult.onDestroy(() => {\n                if (this.hasAttached()) {\n                    // We have to delay the `detach` call, because detaching immediately prevents\n                    // other destroy hooks from running. This is likely a framework bug similar to\n                    // https://github.com/angular/angular/issues/46119\n                    this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n                }\n            });\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        this._completeDetachContent();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenEmpty();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._backdropRef?.dispose();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        this._host?.remove();\n        this._afterNextRenderRef?.destroy();\n        this._previousHostParent = this._pane = this._host = this._backdropRef = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n        this._completeDetachContent();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = { ...this._config, ...sizeConfig };\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = { ...this._config, direction: dir };\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropRef?.dispose();\n        this._backdropRef = new BackdropRef(this._document, this._renderer, this._ngZone, event => {\n            this._backdropClick.next(event);\n        });\n        if (this._animationsDisabled) {\n            this._backdropRef.element.classList.add('cdk-overlay-backdrop-noop-animation');\n        }\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropRef.element, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropRef.element, this._host);\n        // Add class to fade-in the backdrop after one frame.\n        if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._backdropRef?.element.classList.add(showingClass));\n            });\n        }\n        else {\n            this._backdropRef.element.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        if (this._animationsDisabled) {\n            this._backdropRef?.dispose();\n            this._backdropRef = null;\n        }\n        else {\n            this._backdropRef?.detach();\n        }\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay once the content finishes animating and is removed from the DOM. */\n    _detachContentWhenEmpty() {\n        let rethrow = false;\n        // Attempt to detach on the next render.\n        try {\n            this._detachContentAfterRenderRef = afterNextRender(() => {\n                // Rethrow if we encounter an actual error detaching.\n                rethrow = true;\n                this._detachContent();\n            }, {\n                injector: this._injector,\n            });\n        }\n        catch (e) {\n            if (rethrow) {\n                throw e;\n            }\n            // afterNextRender throws if the EnvironmentInjector is has already been destroyed.\n            // This may happen in tests that don't properly flush all async work.\n            // In order to avoid breaking those tests, we just detach immediately in this case.\n            this._detachContent();\n        }\n        // Otherwise wait until the content finishes animating out and detach.\n        if (globalThis.MutationObserver && this._pane) {\n            this._detachContentMutationObserver ||= new globalThis.MutationObserver(() => {\n                this._detachContent();\n            });\n            this._detachContentMutationObserver.observe(this._pane, { childList: true });\n        }\n    }\n    _detachContent() {\n        // Needs a couple of checks for the pane and host, because\n        // they may have been removed by the time the zone stabilizes.\n        if (!this._pane || !this._host || this._pane.children.length === 0) {\n            if (this._pane && this._config.panelClass) {\n                this._toggleClasses(this._pane, this._config.panelClass, false);\n            }\n            if (this._host && this._host.parentElement) {\n                this._previousHostParent = this._host.parentElement;\n                this._host.remove();\n            }\n            this._completeDetachContent();\n        }\n    }\n    _completeDetachContent() {\n        this._detachContentAfterRenderRef?.destroy();\n        this._detachContentAfterRenderRef = undefined;\n        this._detachContentMutationObserver?.disconnect();\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        scrollStrategy?.disable();\n        scrollStrategy?.detach?.();\n    }\n}\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Creates a flexible position strategy.\n * @param injector Injector used to resolve dependnecies for the position strategy.\n * @param origin Origin relative to which to position the overlay.\n */\nfunction createFlexibleConnectedPositionStrategy(injector, origin) {\n    return new FlexibleConnectedPositionStrategy(origin, injector.get(ViewportRuler), injector.get(DOCUMENT), injector.get(Platform), injector.get(OverlayContainer));\n}\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    _viewportRuler;\n    _document;\n    _platform;\n    _overlayContainer;\n    /** The overlay to which this strategy is attached. */\n    _overlayRef;\n    /** Whether we're performing the very first positioning of the overlay. */\n    _isInitialRender;\n    /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n    _lastBoundingBoxSize = { width: 0, height: 0 };\n    /** Whether the overlay was pushed in a previous positioning. */\n    _isPushed = false;\n    /** Whether the overlay can be pushed on-screen on the initial open. */\n    _canPush = true;\n    /** Whether the overlay can grow via flexible width/height after the initial open. */\n    _growAfterOpen = false;\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    _hasFlexibleDimensions = true;\n    /** Whether the overlay position is locked. */\n    _positionLocked = false;\n    /** Cached origin dimensions */\n    _originRect;\n    /** Cached overlay dimensions */\n    _overlayRect;\n    /** Cached viewport dimensions */\n    _viewportRect;\n    /** Cached container dimensions */\n    _containerRect;\n    /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n    _viewportMargin = 0;\n    /** The Scrollable containers used to check scrollable view properties on position change. */\n    _scrollables = [];\n    /** Ordered list of preferred positions, from most to least desirable. */\n    _preferredPositions = [];\n    /** The origin element against which the overlay will be positioned. */\n    _origin;\n    /** The overlay pane element. */\n    _pane;\n    /** Whether the strategy has been disposed of already. */\n    _isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     */\n    _boundingBox;\n    /** The last position to have been calculated as the best fit position. */\n    _lastPosition;\n    /** The last calculated scroll visibility. Only tracked  */\n    _lastScrollVisibility;\n    /** Subject that emits whenever the position changes. */\n    _positionChanges = new Subject();\n    /** Subscription to viewport size changes. */\n    _resizeSubscription = Subscription.EMPTY;\n    /** Default offset for the overlay along the x axis. */\n    _offsetX = 0;\n    /** Default offset for the overlay along the y axis. */\n    _offsetY = 0;\n    /** Selector to be used when finding the elements on which to set the transform origin. */\n    _transformOriginSelector;\n    /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n    _appliedPanelClasses = [];\n    /** Amount by which the overlay was pushed in each axis during the last time it was positioned. */\n    _previousPushAmount;\n    /** Observable sequence of position changes. */\n    positionChanges = this._positionChanges;\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        this.setOrigin(connectedTo);\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin, the overlay and the container to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        const containerRect = this._containerRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        const lastPosition = this._lastPosition;\n        if (lastPosition) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n            const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n        else {\n            this.apply();\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, containerRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        // When zooming in Safari the container rectangle contains negative values for the position\n        // and we need to re-add them to the calculated coordinates.\n        if (containerRect.left < 0) {\n            x -= containerRect.left;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n        // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        // Additionally, when zooming in Safari this fixes the vertical position.\n        if (containerRect.top < 0) {\n            y -= containerRect.top;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlay at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param rawOverlayRect Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollVisibility = this._getScrollVisibility();\n            // We're recalculating on scroll, but we only want to emit if anything\n            // changed since downstream code might be hitting the `NgZone`.\n            if (position !== this._lastPosition ||\n                !this._lastScrollVisibility ||\n                !compareScrollVisibility(this._lastScrollVisibility, scrollVisibility)) {\n                const changeEvent = new ConnectedOverlayPositionChange(position, scrollVisibility);\n                this._positionChanges.next(changeEvent);\n            }\n            this._lastScrollVisibility = scrollVisibility;\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `DOMRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin * 2;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stretches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breaking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the DOMRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `DOMRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `DOMRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\n/** Returns whether two `ScrollingVisibility` objects are identical. */\nfunction compareScrollVisibility(a, b) {\n    if (a === b) {\n        return true;\n    }\n    return (a.isOriginClipped === b.isOriginClipped &&\n        a.isOriginOutsideView === b.isOriginOutsideView &&\n        a.isOverlayClipped === b.isOverlayClipped &&\n        a.isOverlayOutsideView === b.isOverlayOutsideView);\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [\n    { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n    { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n    { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [\n    { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n    { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n    { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n];\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * Creates a global position strategy.\n * @param injector Injector used to resolve dependencies for the strategy.\n */\nfunction createGlobalPositionStrategy(_injector) {\n    // Note: `injector` is unused, but we may need it in\n    // the future which would introduce a breaking change.\n    return new GlobalPositionStrategy();\n}\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    /** The overlay to which this strategy is attached. */\n    _overlayRef;\n    _cssPosition = 'static';\n    _topOffset = '';\n    _bottomOffset = '';\n    _alignItems = '';\n    _xPosition = '';\n    _xOffset = '';\n    _width = '';\n    _height = '';\n    _isDisposed = false;\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'left';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'right';\n        return this;\n    }\n    /**\n     * Sets the overlay to the start of the viewport, depending on the overlay direction.\n     * This will be to the left in LTR layouts and to the right in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    start(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'start';\n        return this;\n    }\n    /**\n     * Sets the overlay to the end of the viewport, depending on the overlay direction.\n     * This will be to the right in LTR layouts and to the left in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    end(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._xPosition = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        const xPosition = this._xPosition;\n        const xOffset = this._xOffset;\n        const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n        let marginLeft = '';\n        let marginRight = '';\n        let justifyContent = '';\n        if (shouldBeFlushHorizontally) {\n            justifyContent = 'flex-start';\n        }\n        else if (xPosition === 'center') {\n            justifyContent = 'center';\n            if (isRtl) {\n                marginRight = xOffset;\n            }\n            else {\n                marginLeft = xOffset;\n            }\n        }\n        else if (isRtl) {\n            if (xPosition === 'left' || xPosition === 'end') {\n                justifyContent = 'flex-end';\n                marginLeft = xOffset;\n            }\n            else if (xPosition === 'right' || xPosition === 'start') {\n                justifyContent = 'flex-start';\n                marginRight = xOffset;\n            }\n        }\n        else if (xPosition === 'left' || xPosition === 'start') {\n            justifyContent = 'flex-start';\n            marginLeft = xOffset;\n        }\n        else if (xPosition === 'right' || xPosition === 'end') {\n            justifyContent = 'flex-end';\n            marginRight = xOffset;\n        }\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n        parentStyles.justifyContent = justifyContent;\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    _injector = inject(Injector);\n    constructor() { }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return createGlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return createFlexibleConnectedPositionStrategy(this._injector, origin);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayPositionBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Creates an overlay.\n * @param injector Injector to use when resolving the overlay's dependencies.\n * @param config Configuration applied to the overlay.\n * @returns Reference to the created overlay.\n */\nfunction createOverlayRef(injector, config) {\n    // This is done in the overlay container as well, but we have it here\n    // since it's common to mock out the overlay container in tests.\n    injector.get(_CdkPrivateStyleLoader).load(_CdkOverlayStyleLoader);\n    const overlayContainer = injector.get(OverlayContainer);\n    const doc = injector.get(DOCUMENT);\n    const idGenerator = injector.get(_IdGenerator);\n    const appRef = injector.get(ApplicationRef);\n    const directionality = injector.get(Directionality);\n    const host = doc.createElement('div');\n    const pane = doc.createElement('div');\n    pane.id = idGenerator.getId('cdk-overlay-');\n    pane.classList.add('cdk-overlay-pane');\n    host.appendChild(pane);\n    overlayContainer.getContainerElement().appendChild(host);\n    const portalOutlet = new DomPortalOutlet(pane, appRef, injector);\n    const overlayConfig = new OverlayConfig(config);\n    const renderer = injector.get(Renderer2, null, { optional: true }) ||\n        injector.get(RendererFactory2).createRenderer(null, null);\n    overlayConfig.direction = overlayConfig.direction || directionality.value;\n    return new OverlayRef(portalOutlet, host, pane, overlayConfig, injector.get(NgZone), injector.get(OverlayKeyboardDispatcher), doc, injector.get(Location), injector.get(OverlayOutsideClickDispatcher), config?.disableAnimations ??\n        injector.get(ANIMATION_MODULE_TYPE, null, { optional: true }) === 'NoopAnimations', injector.get(EnvironmentInjector), renderer);\n}\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    scrollStrategies = inject(ScrollStrategyOptions);\n    _positionBuilder = inject(OverlayPositionBuilder);\n    _injector = inject(Injector);\n    constructor() { }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        return createOverlayRef(this._injector, config);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Overlay, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Overlay, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(Injector);\n        return () => createRepositionScrollStrategy(injector);\n    },\n});\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    elementRef = inject(ElementRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkOverlayOrigin, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkOverlayOrigin, isStandalone: true, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    _dir = inject(Directionality, { optional: true });\n    _injector = inject(Injector);\n    _overlayRef;\n    _templatePortal;\n    _backdropSubscription = Subscription.EMPTY;\n    _attachSubscription = Subscription.EMPTY;\n    _detachSubscription = Subscription.EMPTY;\n    _positionSubscription = Subscription.EMPTY;\n    _offsetX;\n    _offsetY;\n    _position;\n    _scrollStrategyFactory = inject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY);\n    _disposeOnNavigation = false;\n    _ngZone = inject(NgZone);\n    /** Origin for the connected overlay. */\n    origin;\n    /** Registered connected position pairs. */\n    positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     */\n    positionStrategy;\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The width of the overlay panel. */\n    width;\n    /** The height of the overlay panel. */\n    height;\n    /** The min width of the overlay panel. */\n    minWidth;\n    /** The min height of the overlay panel. */\n    minHeight;\n    /** The custom class to be set on the backdrop element. */\n    backdropClass;\n    /** The custom class to add to the overlay pane element. */\n    panelClass;\n    /** Margin between the overlay and the viewport edges. */\n    viewportMargin = 0;\n    /** Strategy to be used when handling scroll events while the overlay is open. */\n    scrollStrategy;\n    /** Whether the overlay is open. */\n    open = false;\n    /** Whether the overlay can be closed by user interaction. */\n    disableClose = false;\n    /** CSS selector which to set the transform origin. */\n    transformOriginSelector;\n    /** Whether or not the overlay should attach a backdrop. */\n    hasBackdrop = false;\n    /** Whether or not the overlay should be locked when scrolling. */\n    lockPosition = false;\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    flexibleDimensions = false;\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    growAfterOpen = false;\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    push = false;\n    /** Whether the overlay should be disposed of when the user goes backwards/forwards in history. */\n    get disposeOnNavigation() {\n        return this._disposeOnNavigation;\n    }\n    set disposeOnNavigation(value) {\n        this._disposeOnNavigation = value;\n    }\n    /** Event emitted when the backdrop is clicked. */\n    backdropClick = new EventEmitter();\n    /** Event emitted when the position has changed. */\n    positionChange = new EventEmitter();\n    /** Event emitted when the overlay has been attached. */\n    attach = new EventEmitter();\n    /** Event emitted when the overlay has been detached. */\n    detach = new EventEmitter();\n    /** Emits when there are keyboard events that are targeted at the overlay. */\n    overlayKeydown = new EventEmitter();\n    /** Emits when there are mouse outside click events that are targeted at the overlay. */\n    overlayOutsideClick = new EventEmitter();\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor() {\n        const templateRef = inject(TemplateRef);\n        const viewContainerRef = inject(ViewContainerRef);\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        this._overlayRef?.dispose();\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef?.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this.attachOverlay() : this.detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = createOverlayRef(this._injector, this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this.detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            const origin = this._getOriginElement();\n            const target = _getEventTarget(event);\n            if (!origin || (origin !== target && !origin.contains(target))) {\n                this.overlayOutsideClick.next(event);\n            }\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir || 'ltr',\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n            disposeOnNavigation: this.disposeOnNavigation,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = createFlexibleConnectedPositionStrategy(this._injector, this._getOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    _getOriginElement() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef.nativeElement;\n        }\n        if (this.origin instanceof ElementRef) {\n            return this.origin.nativeElement;\n        }\n        if (typeof Element !== 'undefined' && this.origin instanceof Element) {\n            return this.origin;\n        }\n        return null;\n    }\n    /** Attaches the overlay. */\n    attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this._ngZone.run(() => this.positionChange.emit(position));\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n        this.open = true;\n    }\n    /** Detaches the overlay. */\n    detachOverlay() {\n        this._overlayRef?.detach();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        this.open = false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkConnectedOverlay, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkConnectedOverlay, isStandalone: true, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\", booleanAttribute], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\", booleanAttribute], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\", booleanAttribute], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\", booleanAttribute], push: [\"cdkConnectedOverlayPush\", \"push\", booleanAttribute], disposeOnNavigation: [\"cdkConnectedOverlayDisposeOnNavigation\", \"disposeOnNavigation\", booleanAttribute] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                }]\n        }], ctorParameters: () => [], propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayHasBackdrop', transform: booleanAttribute }]\n            }], lockPosition: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayLockPosition', transform: booleanAttribute }]\n            }], flexibleDimensions: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayFlexibleDimensions', transform: booleanAttribute }]\n            }], growAfterOpen: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayGrowAfterOpen', transform: booleanAttribute }]\n            }], push: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayPush', transform: booleanAttribute }]\n            }], disposeOnNavigation: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayDisposeOnNavigation', transform: booleanAttribute }]\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    const injector = inject(Injector);\n    return () => createRepositionScrollStrategy(injector);\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\nclass OverlayModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayModule, imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\nexport { BlockScrollStrategy as B, CdkOverlayOrigin as C, FlexibleConnectedPositionStrategy as F, GlobalPositionStrategy as G, NoopScrollStrategy as N, OverlayContainer as O, RepositionScrollStrategy as R, STANDARD_DROPDOWN_ADJACENT_POSITIONS as S, Overlay as a, CdkConnectedOverlay as b, createOverlayRef as c, OverlayRef as d, OverlayPositionBuilder as e, createGlobalPositionStrategy as f, STANDARD_DROPDOWN_BELOW_POSITIONS as g, createFlexibleConnectedPositionStrategy as h, OverlayConfig as i, ConnectionPositionPair as j, ScrollingVisibility as k, ConnectedOverlayPositionChange as l, validateHorizontalPosition as m, ScrollStrategyOptions as n, createRepositionScrollStrategy as o, CloseScrollStrategy as p, createCloseScrollStrategy as q, createNoopScrollStrategy as r, createBlockScrollStrategy as s, OverlayModule as t, OverlayOutsideClickDispatcher as u, validateVerticalPosition as v, OverlayKeyboardDispatcher as w };\n","import * as i0 from '@angular/core';\nimport { ElementRef, NgModuleRef, EnvironmentInjector, createComponent, Injector, inject, TemplateRef, ViewContainerRef, Directive, DOCUMENT, EventEmitter, Input, Output, NgModule } from '@angular/core';\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    _attachedHost;\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    /** The type of the component that will be instantiated for attachment. */\n    component;\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     */\n    viewContainerRef;\n    /** Injector used for the instantiation of the component. */\n    injector;\n    /**\n     * List of DOM nodes that should be projected through `<ng-content>` of the attached component.\n     */\n    projectableNodes;\n    constructor(component, viewContainerRef, injector, projectableNodes) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.projectableNodes = projectableNodes;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    templateRef;\n    viewContainerRef;\n    context;\n    injector;\n    constructor(\n    /** The embedded template that will be used to instantiate an embedded View in the host. */\n    templateRef, \n    /** Reference to the ViewContainer into which the template will be stamped out. */\n    viewContainerRef, \n    /** Contextual data to be passed in to the embedded view. */\n    context, \n    /** The injector to use for the embedded view. */\n    injector) {\n        super();\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n        this.injector = injector;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    /** DOM node hosting the portal's content. */\n    element;\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    /** The portal currently attached to the host. */\n    _attachedPortal;\n    /** A function that will permanently dispose this host. */\n    _disposeFn;\n    /** Whether this host has already been permanently disposed. */\n    _isDisposed = false;\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n    attachDomPortal = null;\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    outletElement;\n    _appRef;\n    _defaultInjector;\n    /**\n     * @param outletElement Element into which the content is projected.\n     * @param _appRef Reference to the application. Only used in component portals when there\n     *   is no `ViewContainerRef` available.\n     * @param _defaultInjector Injector to use as a fallback when the portal being attached doesn't\n     *   have one. Only used for component portals.\n     */\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _appRef, _defaultInjector) {\n        super();\n        this.outletElement = outletElement;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            const injector = portal.injector || portal.viewContainerRef.injector;\n            const ngModuleRef = injector.get(NgModuleRef, null, { optional: true }) || undefined;\n            componentRef = portal.viewContainerRef.createComponent(portal.component, {\n                index: portal.viewContainerRef.length,\n                injector,\n                ngModuleRef,\n                projectableNodes: portal.projectableNodes || undefined,\n            });\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._appRef) {\n                throw Error('Cannot attach component portal to outlet without an ApplicationRef.');\n            }\n            const appRef = this._appRef;\n            const elementInjector = portal.injector || this._defaultInjector || Injector.NULL;\n            const environmentInjector = elementInjector.get(EnvironmentInjector, appRef.injector);\n            componentRef = createComponent(portal.component, {\n                elementInjector,\n                environmentInjector,\n                projectableNodes: portal.projectableNodes || undefined,\n            });\n            appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                // Verify that the ApplicationRef has registered views before trying to detach a host view.\n                // This check also protects the `detachView` from being called on a destroyed ApplicationRef.\n                if (appRef.viewCount > 0) {\n                    appRef.detachView(componentRef.hostView);\n                }\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn(() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        });\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    attachDomPortal = (portal) => {\n        const element = portal.element;\n        if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('DOM portal content must be attached to a parent node.');\n        }\n        // Anchor used to save the element's previous position so\n        // that we can restore it when the portal is detached.\n        const anchorNode = this.outletElement.ownerDocument.createComment('dom-portal');\n        element.parentNode.insertBefore(anchorNode, element);\n        this.outletElement.appendChild(element);\n        this._attachedPortal = portal;\n        super.setDisposeFn(() => {\n            // We can't use `replaceWith` here because IE doesn't support it.\n            if (anchorNode.parentNode) {\n                anchorNode.parentNode.replaceChild(element, anchorNode);\n            }\n        });\n    };\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        this.outletElement.remove();\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor() {\n        const templateRef = inject(TemplateRef);\n        const viewContainerRef = inject(ViewContainerRef);\n        super(templateRef, viewContainerRef);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkPortal, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkPortal, isStandalone: true, selector: \"[cdkPortal]\", exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortal]',\n                    exportAs: 'cdkPortal',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TemplatePortalDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: TemplatePortalDirective, isStandalone: true, selector: \"[cdk-portal], [portal]\", providers: [\n            {\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective,\n            },\n        ], exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TemplatePortalDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-portal], [portal]',\n                    exportAs: 'cdkPortal',\n                    providers: [\n                        {\n                            provide: CdkPortal,\n                            useExisting: TemplatePortalDirective,\n                        },\n                    ],\n                }]\n        }] });\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    _moduleRef = inject(NgModuleRef, { optional: true });\n    _document = inject(DOCUMENT);\n    _viewContainerRef = inject(ViewContainerRef);\n    /** Whether the portal component is initialized. */\n    _isInitialized = false;\n    /** Reference to the currently-attached component/view ref. */\n    _attachedRef;\n    constructor() {\n        super();\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal || null;\n    }\n    /** Emits when a portal is attached to the outlet. */\n    attached = new EventEmitter();\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedRef = this._attachedPortal = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n        const ref = viewContainerRef.createComponent(portal.component, {\n            index: viewContainerRef.length,\n            injector: portal.injector || viewContainerRef.injector,\n            projectableNodes: portal.projectableNodes || undefined,\n            ngModuleRef: this._moduleRef || undefined,\n        });\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    attachDomPortal = (portal) => {\n        const element = portal.element;\n        if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('DOM portal content must be attached to a parent node.');\n        }\n        // Anchor used to save the element's previous position so\n        // that we can restore it when the portal is detached.\n        const anchorNode = this._document.createComment('dom-portal');\n        portal.setAttachedHost(this);\n        element.parentNode.insertBefore(anchorNode, element);\n        this._getRootNode().appendChild(element);\n        this._attachedPortal = portal;\n        super.setDisposeFn(() => {\n            if (anchorNode.parentNode) {\n                anchorNode.parentNode.replaceChild(element, anchorNode);\n            }\n        });\n    };\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE\n            ? nativeElement\n            : nativeElement.parentNode);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkPortalOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkPortalOutlet, isStandalone: true, selector: \"[cdkPortalOutlet]\", inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkPortalOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalOutlet]',\n                    exportAs: 'cdkPortalOutlet',\n                }]\n        }], ctorParameters: () => [], propDecorators: { portal: [{\n                type: Input,\n                args: ['cdkPortalOutlet']\n            }], attached: [{\n                type: Output\n            }] } });\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalHostDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: PortalHostDirective, isStandalone: true, selector: \"[cdkPortalHost], [portalHost]\", inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, providers: [\n            {\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective,\n            },\n        ], exportAs: [\"cdkPortalHost\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalHost',\n                    inputs: [{ name: 'portal', alias: 'cdkPortalHost' }],\n                    providers: [\n                        {\n                            provide: CdkPortalOutlet,\n                            useExisting: PortalHostDirective,\n                        },\n                    ],\n                }]\n        }] });\nclass PortalModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalModule, imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: PortalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                    exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                }]\n        }] });\n\nexport { BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalOutlet, Portal, PortalHostDirective, PortalModule, TemplatePortal, TemplatePortalDirective };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, DOCUMENT, signal, EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /** The current 'ltr' or 'rtl' value. */\n    get value() {\n        return this.valueSignal();\n    }\n    /**\n     * The current 'ltr' or 'rtl' value.\n     */\n    valueSignal = signal('ltr');\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n    change = new EventEmitter();\n    constructor() {\n        const _document = inject(DIR_DOCUMENT, { optional: true });\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.valueSignal.set(_resolveDirectionality(bodyDir || htmlDir || 'ltr'));\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { Directionality as D, _resolveDirectionality as _, DIR_DOCUMENT as a };\n","import * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable } from '@angular/core';\n\n/**\n * Keeps track of the ID count per prefix. This helps us make the IDs a bit more deterministic\n * like they were before the service was introduced. Note that ideally we wouldn't have to do\n * this, but there are some internal tests that rely on the IDs.\n */\nconst counters = {};\n/** Service that generates unique IDs for DOM nodes. */\nclass _IdGenerator {\n    _appId = inject(APP_ID);\n    /**\n     * Generates a unique ID with a specific prefix.\n     * @param prefix Prefix to add to the ID.\n     */\n    getId(prefix) {\n        // Omit the app ID if it's the default `ng`. Since the vast majority of pages have one\n        // Angular app on them, we can reduce the amount of breakages by not adding it.\n        if (this._appId !== 'ng') {\n            prefix += this._appId;\n        }\n        if (!counters.hasOwnProperty(prefix)) {\n            counters[prefix] = 0;\n        }\n        return `${prefix}${counters[prefix]++}`;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { _IdGenerator as _ };\n","/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nvar RtlScrollAxisType;\n(function (RtlScrollAxisType) {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NORMAL\"] = 0] = \"NORMAL\";\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NEGATED\"] = 1] = \"NEGATED\";\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"INVERTED\"] = 2] = \"INVERTED\";\n})(RtlScrollAxisType || (RtlScrollAxisType = {}));\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\nexport { RtlScrollAxisType as R, getRtlScrollAxisType as g, supportsScrollBehavior as s };\n","import { _ as _resolveDirectionality, D as Directionality } from './directionality-CChdj3az.mjs';\nexport { a as DIR_DOCUMENT } from './directionality-CChdj3az.mjs';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, signal, Directive, Output, Input, NgModule } from '@angular/core';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    /** Whether the `value` has been set to its initial value. */\n    _isInitialized = false;\n    /** Direction as passed in by the consumer. */\n    _rawDir;\n    /** Event emitted when the direction changes. */\n    change = new EventEmitter();\n    /** @docs-private */\n    get dir() {\n        return this.valueSignal();\n    }\n    set dir(value) {\n        const previousValue = this.valueSignal();\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this.valueSignal.set(_resolveDirectionality(value));\n        this._rawDir = value;\n        if (previousValue !== this.valueSignal() && this._isInitialized) {\n            this.change.emit(this.valueSignal());\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    valueSignal = signal('ltr');\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: Dir, isStandalone: true, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass BidiModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, imports: [Dir], exports: [Dir] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Dir],\n                    exports: [Dir],\n                }]\n        }] });\n\nexport { BidiModule, Dir, Directionality };\n","/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\nexport { _isTestEnvironment as _ };\n","let shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\nexport { _getEventTarget as _, _getShadowRoot as a, _supportsShadowDom as b, _getFocusedElementPierceShadowDom as c };\n","export { A, d as ALT, aX as APOSTROPHE, a1 as AT_SIGN, a2 as B, a_ as BACKSLASH, B as BACKSPACE, a3 as C, y as CAPS_LOCK, a$ as CLOSE_SQUARE_BRACKET, u as COMMA, as as CONTEXT_MENU, C as CONTROL, a4 as D, aV as DASH, i as DELETE, D as DOWN_ARROW, a5 as E, Y as EIGHT, E as END, c as ENTER, aU as EQUALS, g as ESCAPE, a6 as F, F as F1, r as F10, s as F11, t as F12, j as F2, k as F3, l as F4, m as F5, n as F6, o as F7, p as F8, q as F9, $ as FF_EQUALS, aL as FF_MINUS, aP as FF_MUTE, _ as FF_SEMICOLON, aQ as FF_VOLUME_DOWN, aS as FF_VOLUME_UP, aK as FIRST_MEDIA, V as FIVE, Q as FOUR, a7 as G, a8 as H, H as HOME, a9 as I, I as INSERT, aa as J, ab as K, ac as L, aR as LAST_MEDIA, L as LEFT_ARROW, ad as M, v as MAC_ENTER, M as MAC_META, aq as MAC_WK_CMD_LEFT, ar as MAC_WK_CMD_RIGHT, e as META, aM as MUTE, ae as N, N as NINE, aH as NUMPAD_DIVIDE, aB as NUMPAD_EIGHT, ay as NUMPAD_FIVE, ax as NUMPAD_FOUR, aF as NUMPAD_MINUS, aD as NUMPAD_MULTIPLY, aC as NUMPAD_NINE, au as NUMPAD_ONE, aG as NUMPAD_PERIOD, aE as NUMPAD_PLUS, aA as NUMPAD_SEVEN, az as NUMPAD_SIX, aw as NUMPAD_THREE, av as NUMPAD_TWO, at as NUMPAD_ZERO, w as NUM_CENTER, aI as NUM_LOCK, af as O, O as ONE, aZ as OPEN_SQUARE_BRACKET, ag as P, P as PAGE_DOWN, a as PAGE_UP, x as PAUSE, h as PERIOD, z as PLUS_SIGN, G as PRINT_SCREEN, ah as Q, a0 as QUESTION_MARK, ai as R, R as RIGHT_ARROW, aj as S, aJ as SCROLL_LOCK, aT as SEMICOLON, X as SEVEN, f as SHIFT, b0 as SINGLE_QUOTE, W as SIX, aW as SLASH, S as SPACE, ak as T, T as TAB, K as THREE, aY as TILDE, J as TWO, al as U, U as UP_ARROW, am as V, aN as VOLUME_DOWN, aO as VOLUME_UP, an as W, ao as X, ap as Y, Z, b as ZERO } from './keycodes-CpHkExLC.mjs';\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\nexport { hasModifierKey };\n","import { isObservable, of } from 'rxjs';\nimport { D as DataSource } from './data-source-D34wiQZj.mjs';\nimport { InjectionToken } from '@angular/core';\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    _data;\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/** Indicates how a view was changed by a `_ViewRepeater`. */\nvar _ViewRepeaterOperation;\n(function (_ViewRepeaterOperation) {\n    /** The content of an existing view was replaced with another item. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REPLACED\"] = 0] = \"REPLACED\";\n    /** A new view was created with `createEmbeddedView`. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"INSERTED\"] = 1] = \"INSERTED\";\n    /** The position of a view changed, but the content remains the same. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"MOVED\"] = 2] = \"MOVED\";\n    /** A view was detached from the view container. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REMOVED\"] = 3] = \"REMOVED\";\n})(_ViewRepeaterOperation || (_ViewRepeaterOperation = {}));\n/**\n * Injection token for `_ViewRepeater`. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * A repeater that caches views when they are removed from a\n * `ViewContainerRef`. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    /**\n     * The size of the cache used to store unused views.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n     */\n    viewCacheSize = 20;\n    /**\n     * View cache that stores embedded view instances that have been previously stamped out,\n     * but don't are not currently rendered. The view repeater will reuse these views rather than\n     * creating brand new ones.\n     *\n     * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n     */\n    _viewCache = [];\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\nexport { ArrayDataSource as A, _RecycleViewRepeaterStrategy as _, _ViewRepeaterOperation as a, _VIEW_REPEATER_STRATEGY as b };\n","/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\nexport { coerceCssPixelValue as c };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, inject, NgZone, RendererFactory2, Injectable, ElementRef, Renderer2, DOCUMENT, ChangeDetectorRef, signal, Injector, afterNextRender, booleanAttribute, Optional, Inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, NgModule } from '@angular/core';\nimport { Subject, of, Observable, Subscription, animationFrameScheduler, asapScheduler, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, startWith, takeUntil, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { c as coerceNumberProperty, a as coerceElement } from './element-x4z00URv.mjs';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { D as Directionality } from './directionality-CChdj3az.mjs';\nimport { g as getRtlScrollAxisType, R as RtlScrollAxisType, s as supportsScrollBehavior } from './scrolling-BkvA05C8.mjs';\nimport { BidiModule } from './bidi.mjs';\nexport { Dir as ɵɵDir } from './bidi.mjs';\nimport { b as _VIEW_REPEATER_STRATEGY, A as ArrayDataSource, _ as _RecycleViewRepeaterStrategy } from './recycle-view-repeater-strategy-SfuyU210.mjs';\nimport { i as isDataSource } from './data-source-D34wiQZj.mjs';\nimport '@angular/common';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    _scrolledIndexChange = new Subject();\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n    /** The attached viewport. */\n    _viewport = null;\n    /** The size of the items in the virtually scrolling list. */\n    _itemSize;\n    /** The minimum amount of buffer rendered beyond the viewport (in pixels). */\n    _minBufferPx;\n    /** The number of buffer items to render beyond the edge of the viewport (in pixels). */\n    _maxBufferPx;\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    _itemSize = 20;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    _minBufferPx = 100;\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    _maxBufferPx = 200;\n    /** The scroll strategy used by this directive. */\n    _scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkFixedSizeVirtualScroll, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n            {\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n            },\n        ], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cleanupGlobalListener;\n    constructor() { }\n    /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n    _scrolled = new Subject();\n    /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n    _scrolledCount = 0;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     */\n    scrollContainers = new Map();\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._cleanupGlobalListener) {\n                this._cleanupGlobalListener = this._ngZone.runOutsideAngular(() => this._renderer.listen('document', 'scroll', () => this._scrolled.next()));\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._cleanupGlobalListener?.();\n                    this._cleanupGlobalListener = undefined;\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._cleanupGlobalListener?.();\n        this._cleanupGlobalListener = undefined;\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => !target || ancestors.indexOf(target) > -1));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    elementRef = inject(ElementRef);\n    scrollDispatcher = inject(ScrollDispatcher);\n    ngZone = inject(NgZone);\n    dir = inject(Directionality, { optional: true });\n    _scrollElement = this.elementRef.nativeElement;\n    _destroyed = new Subject();\n    _renderer = inject(Renderer2);\n    _cleanupScroll;\n    _elementScrolled = new Subject();\n    constructor() { }\n    ngOnInit() {\n        this._cleanupScroll = this.ngZone.runOutsideAngular(() => this._renderer.listen(this._scrollElement, 'scroll', event => this._elementScrolled.next(event)));\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this._cleanupScroll?.();\n        this._elementScrolled.complete();\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollable, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkScrollable, isStandalone: true, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                }]\n        }], ctorParameters: () => [] });\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    _platform = inject(Platform);\n    _listeners;\n    /** Cached viewport dimensions. */\n    _viewportSize;\n    /** Stream of viewport change events. */\n    _change = new Subject();\n    /** Used to reference correct document/window */\n    _document = inject(DOCUMENT);\n    constructor() {\n        const ngZone = inject(NgZone);\n        const renderer = inject(RendererFactory2).createRenderer(null, null);\n        ngZone.runOutsideAngular(() => {\n            if (this._platform.isBrowser) {\n                const changeListener = (event) => this._change.next(event);\n                this._listeners = [\n                    renderer.listen('window', 'resize', changeListener),\n                    renderer.listen('window', 'orientationchange', changeListener),\n                ];\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        this._listeners?.forEach(cleanup => cleanup());\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a DOMRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ViewportRuler, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ViewportRuler, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the `CdkScrollable` to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n    constructor() {\n        super();\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n        const viewportEl = this.elementRef.nativeElement;\n        return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollable, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualScrollable, isStandalone: true, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollable, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [] });\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _scrollStrategy = inject(VIRTUAL_SCROLL_STRATEGY, {\n        optional: true,\n    });\n    scrollable = inject(VIRTUAL_SCROLLABLE, { optional: true });\n    _platform = inject(Platform);\n    /** Emits when the viewport is detached from a CdkVirtualForOf. */\n    _detachedSubject = new Subject();\n    /** Emits when the rendered range changes. */\n    _renderedRangeSubject = new Subject();\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    _orientation = 'vertical';\n    /**\n     * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n     * will be removed.\n     */\n    appendOnly = false;\n    // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n    // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n    // depending on how the strategy calculates the scrolled index, it may come at a cost to\n    // performance.\n    /** Emits when the index of the first element visible in the viewport changes. */\n    scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n    /** The element that wraps the rendered content. */\n    _contentWrapper;\n    /** A stream that emits whenever the rendered range changes. */\n    renderedRangeStream = this._renderedRangeSubject;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     */\n    _totalContentSize = 0;\n    /** A string representing the `style.width` property value to be used for the spacer element. */\n    _totalContentWidth = signal('');\n    /** A string representing the `style.height` property value to be used for the spacer element. */\n    _totalContentHeight = signal('');\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     */\n    _renderedContentTransform;\n    /** The currently rendered range of indices. */\n    _renderedRange = { start: 0, end: 0 };\n    /** The length of the data bound to this viewport (in number of items). */\n    _dataLength = 0;\n    /** The size of the viewport (in pixels). */\n    _viewportSize = 0;\n    /** the currently attached CdkVirtualScrollRepeater. */\n    _forOf;\n    /** The last rendered content offset that was set. */\n    _renderedContentOffset = 0;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     */\n    _renderedContentOffsetNeedsRewrite = false;\n    /** Whether there is a pending change detection cycle. */\n    _isChangeDetectionPending = false;\n    /** A list of functions to run after the next change detection cycle. */\n    _runAfterChangeDetection = [];\n    /** Subscription to changes in the viewport size. */\n    _viewportChanges = Subscription.EMPTY;\n    _injector = inject(Injector);\n    _isDestroyed = false;\n    constructor() {\n        super();\n        const viewportRuler = inject(ViewportRuler);\n        if (!this._scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n        if (!this.scrollable) {\n            // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n            this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n            this.scrollable = this;\n        }\n    }\n    ngOnInit() {\n        // Scrolling depends on the element dimensions which we can't get during SSR.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        if (this.scrollable === this) {\n            super.ngOnInit();\n        }\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.scrollable\n                .elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER), \n            // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n            // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n            // to unsubscribe here just in case.\n            takeUntil(this._destroyed))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        this._isDestroyed = true;\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // In appendOnly, we always start from the top\n        offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        // This is to break the call cycle\n        let measureScrollOffset;\n        if (this.scrollable == this) {\n            measureScrollOffset = (_from) => super.measureScrollOffset(_from);\n        }\n        else {\n            measureScrollOffset = (_from) => this.scrollable.measureScrollOffset(_from);\n        }\n        return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) -\n            this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n        let fromRect;\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const isRtl = this.dir?.value == 'rtl';\n        if (from == 'start') {\n            fromRect = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            fromRect = isRtl ? LEFT : RIGHT;\n        }\n        else if (from) {\n            fromRect = from;\n        }\n        else {\n            fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n        }\n        const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n        const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n        return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        if (this._isDestroyed) {\n            return;\n        }\n        this.ngZone.run(() => {\n            // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n            // from the root, since the repeated items are content projected in. Calling `detectChanges`\n            // instead does not properly check the projected content.\n            this._changeDetectorRef.markForCheck();\n            // Apply the content transform. The transform can't be set via an Angular binding because\n            // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n            // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n            // the `Number` function first to coerce it to a numeric value.\n            this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n            afterNextRender(() => {\n                this._isChangeDetectionPending = false;\n                const runAfterChangeDetection = this._runAfterChangeDetection;\n                this._runAfterChangeDetection = [];\n                for (const fn of runAfterChangeDetection) {\n                    fn();\n                }\n            }, { injector: this._injector });\n        });\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight.set(this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`);\n        this._totalContentWidth.set(this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkVirtualScrollViewport, isStandalone: true, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: [\"appendOnly\", \"appendOnly\", booleanAttribute] }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n            },\n        ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth()\\\" [style.height]=\\\"_totalContentHeight()\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth()\\\" [style.height]=\\\"_totalContentHeight()\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    _viewContainerRef = inject(ViewContainerRef);\n    _template = inject(TemplateRef);\n    _differs = inject(IterableDiffers);\n    _viewRepeater = inject(_VIEW_REPEATER_STRATEGY);\n    _viewport = inject(CdkVirtualScrollViewport, { skipSelf: true });\n    /** Emits when the rendered view of the data changes. */\n    viewChange = new Subject();\n    /** Subject that emits when a new DataSource instance is given. */\n    _dataSourceChanges = new Subject();\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    _cdkVirtualForOf;\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    _cdkVirtualForTrackBy;\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /** Emits whenever the data in the current DataSource changes. */\n    dataStream = this._dataSourceChanges.pipe(\n    // Start off with null `DataSource`.\n    startWith(null), \n    // Bundle up the previous and current data sources so we can work with both.\n    pairwise(), \n    // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n    // new one, passing back a stream of data changes which we run through `switchMap` to give\n    // us a data stream that emits the latest data from whatever the current `DataSource` is.\n    switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n    // Replay the last emitted data when someone subscribes.\n    shareReplay(1));\n    /** The differ used to calculate changes to the data. */\n    _differ = null;\n    /** The most recent data emitted from the DataSource. */\n    _data;\n    /** The currently rendered items. */\n    _renderedItems;\n    /** The currently rendered range of indices. */\n    _renderedRange;\n    /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n    _needsUpdate = false;\n    _destroyed = new Subject();\n    constructor() {\n        const ngZone = inject(NgZone);\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            if (this.viewChange.observers.length) {\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n            }\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n    static ngTemplateContextGuard(directive, context) {\n        return true;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualForOf, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualForOf, isStandalone: true, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }], ctorParameters: () => [], propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor() {\n        super();\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return (this.getElementRef().nativeElement.getBoundingClientRect()[from] -\n            this.measureScrollOffset(from));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableElement, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualScrollableElement, isStandalone: true, selector: \"[cdkVirtualScrollingElement]\", host: { classAttribute: \"cdk-virtual-scrollable\" }, providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableElement, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualScrollingElement]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }],\n                    host: {\n                        'class': 'cdk-virtual-scrollable',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor() {\n        super();\n        const document = inject(DOCUMENT);\n        this.elementRef = new ElementRef(document.documentElement);\n        this._scrollElement = document;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableWindow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualScrollableWindow, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[scrollWindow]\", providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }],\n                }]\n        }], ctorParameters: () => [] });\n\nclass CdkScrollableModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule, imports: [CdkScrollable], exports: [CdkScrollable] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    imports: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport,\n            CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollViewport,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, imports: [BidiModule,\n            CdkScrollableModule, BidiModule, CdkScrollableModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkVirtualScrollViewport,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                }]\n        }] });\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import { O as OverlayContainer } from './overlay-module-Bd2UplUU.mjs';\nexport { B as BlockScrollStrategy, b as CdkConnectedOverlay, C as CdkOverlayOrigin, p as CloseScrollStrategy, l as ConnectedOverlayPositionChange, j as ConnectionPositionPair, F as FlexibleConnectedPositionStrategy, G as GlobalPositionStrategy, N as NoopScrollStrategy, a as Overlay, i as OverlayConfig, w as OverlayKeyboardDispatcher, t as OverlayModule, u as OverlayOutsideClickDispatcher, e as OverlayPositionBuilder, d as OverlayRef, R as RepositionScrollStrategy, S as STANDARD_DROPDOWN_ADJACENT_POSITIONS, g as STANDARD_DROPDOWN_BELOW_POSITIONS, n as ScrollStrategyOptions, k as ScrollingVisibility, s as createBlockScrollStrategy, q as createCloseScrollStrategy, h as createFlexibleConnectedPositionStrategy, f as createGlobalPositionStrategy, r as createNoopScrollStrategy, c as createOverlayRef, o as createRepositionScrollStrategy, m as validateHorizontalPosition, v as validateVerticalPosition } from './overlay-module-Bd2UplUU.mjs';\nimport * as i0 from '@angular/core';\nimport { inject, RendererFactory2, Injectable } from '@angular/core';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkFixedSizeVirtualScroll as ɵɵCdkFixedSizeVirtualScroll, CdkScrollableModule as ɵɵCdkScrollableModule, CdkVirtualForOf as ɵɵCdkVirtualForOf, CdkVirtualScrollViewport as ɵɵCdkVirtualScrollViewport, CdkVirtualScrollableElement as ɵɵCdkVirtualScrollableElement, CdkVirtualScrollableWindow as ɵɵCdkVirtualScrollableWindow } from './scrolling.mjs';\nexport { Dir as ɵɵDir } from './bidi.mjs';\nimport '@angular/common';\nimport './platform-DNDzkVcI.mjs';\nimport './shadow-dom-B0oHn41l.mjs';\nimport './test-environment-CT0XxPyp.mjs';\nimport './style-loader-B2sGQXxD.mjs';\nimport 'rxjs';\nimport './css-pixel-value-C_HEqLhI.mjs';\nimport './array-I1yfCXUO.mjs';\nimport './portal.mjs';\nimport './scrolling-BkvA05C8.mjs';\nimport 'rxjs/operators';\nimport './id-generator-LuoRZSid.mjs';\nimport './directionality-CChdj3az.mjs';\nimport './keycodes-CpHkExLC.mjs';\nimport './keycodes.mjs';\nimport './element-x4z00URv.mjs';\nimport './recycle-view-repeater-strategy-SfuyU210.mjs';\nimport './data-source-D34wiQZj.mjs';\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _fullScreenEventName;\n    _cleanupFullScreenListener;\n    constructor() {\n        super();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._cleanupFullScreenListener?.();\n    }\n    _createContainer() {\n        const eventName = this._getEventName();\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        if (eventName) {\n            this._cleanupFullScreenListener?.();\n            this._cleanupFullScreenListener = this._renderer.listen('document', eventName, () => {\n                this._adjustParentForFullscreenChange();\n            });\n        }\n    }\n    _adjustParentForFullscreenChange() {\n        if (this._containerElement) {\n            const fullscreenElement = this.getFullscreenElement();\n            const parent = fullscreenElement || this._document.body;\n            parent.appendChild(this._containerElement);\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FullscreenOverlayContainer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { FullscreenOverlayContainer, OverlayContainer };\n","import * as i0 from '@angular/core';\nimport { inject, Injector, EnvironmentInjector, ApplicationRef, createComponent, Injectable } from '@angular/core';\n\n/** Apps in which we've loaded styles. */\nconst appsWithLoaders = new WeakMap();\n/**\n * Service that loads structural styles dynamically\n * and ensures that they're only loaded once per app.\n */\nclass _CdkPrivateStyleLoader {\n    _appRef;\n    _injector = inject(Injector);\n    _environmentInjector = inject(EnvironmentInjector);\n    /**\n     * Loads a set of styles.\n     * @param loader Component which will be instantiated to load the styles.\n     */\n    load(loader) {\n        // Resolve the app ref lazily to avoid circular dependency errors if this is called too early.\n        const appRef = (this._appRef = this._appRef || this._injector.get(ApplicationRef));\n        let data = appsWithLoaders.get(appRef);\n        // If we haven't loaded for this app before, we have to initialize it.\n        if (!data) {\n            data = { loaders: new Set(), refs: [] };\n            appsWithLoaders.set(appRef, data);\n            // When the app is destroyed, we need to clean up all the related loaders.\n            appRef.onDestroy(() => {\n                appsWithLoaders.get(appRef)?.refs.forEach(ref => ref.destroy());\n                appsWithLoaders.delete(appRef);\n            });\n        }\n        // If the loader hasn't been loaded before, we need to instatiate it.\n        if (!data.loaders.has(loader)) {\n            data.loaders.add(loader);\n            data.refs.push(createComponent(loader, { environmentInjector: this._environmentInjector }));\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkPrivateStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkPrivateStyleLoader, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkPrivateStyleLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { _CdkPrivateStyleLoader as _ };\n","import { ElementRef } from '@angular/core';\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    if (_isNumberValue(value)) {\n        return Number(value);\n    }\n    return arguments.length === 2 ? fallbackValue : 0;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\nexport { _isNumberValue as _, coerceElement as a, coerceNumberProperty as c };\n","function coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\nexport { coerceArray as c };\n"],"names":["ConnectableObservable","DataSource","isDataSource","value","connect","D","i","MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","A","B","C","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","PERIOD","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MAC_META","$","_","a","a$","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aA","aB","aC","aD","aE","aF","aG","aH","aI","aJ","aK","aL","aM","aN","aO","aP","aQ","aR","aS","aT","aU","aV","aW","aX","aY","aZ","a_","aa","ab","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","an","ao","ap","aq","ar","as","at","au","av","aw","ax","ay","az","b","b0","c","d","e","f","g","h","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","i0","inject","PLATFORM_ID","Injectable","isPlatformBrowser","hasV8BreakIterator","Intl","v8BreakIterator","Platform","_platformId","isBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","constructor","ɵfac","Platform_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","DOCUMENT","NgZone","Injector","RendererFactory2","Component","ChangeDetectionStrategy","ViewEncapsulation","afterNextRender","ElementRef","ApplicationRef","Renderer2","ANIMATION_MODULE_TYPE","EnvironmentInjector","InjectionToken","Directive","EventEmitter","TemplateRef","ViewContainerRef","booleanAttribute","Input","Output","NgModule","Location","_getEventTarget","_isTestEnvironment","_CdkPrivateStyleLoader","Subject","Subscription","coerceCssPixelValue","coerceArray","ViewportRuler","ScrollDispatcher","ScrollingModule","DomPortalOutlet","TemplatePortal","PortalModule","supportsScrollBehavior","filter","takeWhile","_IdGenerator","Directionality","hasModifierKey","BidiModule","scrollBehaviorSupported","createBlockScrollStrategy","injector","BlockScrollStrategy","get","_viewportRuler","_previousHTMLStyles","top","left","_previousScrollPosition","_isEnabled","_document","attach","enable","_canBeEnabled","root","documentElement","getViewportScrollPosition","style","classList","add","disable","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","scroll","contains","rootElement","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","getMatScrollStrategyAlreadyAttachedError","Error","createCloseScrollStrategy","config","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_overlayRef","_initialScrollPosition","overlayRef","stream","scrolled","pipe","scrollable","overlayElement","getElementRef","nativeElement","threshold","subscribe","scrollPosition","Math","abs","_detach","updatePosition","unsubscribe","detach","hasAttached","run","createNoopScrollStrategy","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","createRepositionScrollStrategy","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","getBoundingClientRect","parentRects","ScrollStrategyOptions","_injector","noop","close","block","reposition","ScrollStrategyOptions_Factory","OverlayConfig","positionStrategy","scrollStrategy","panelClass","hasBackdrop","backdropClass","disableAnimations","minWidth","minHeight","maxWidth","maxHeight","direction","disposeOnNavigation","configKeys","Object","keys","key","undefined","ConnectionPositionPair","offsetX","offsetY","originX","originY","overlayX","overlayY","origin","overlay","ScrollingVisibility","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","BaseOverlayDispatcher","_attachedOverlays","_isAttached","ngOnDestroy","push","index","indexOf","splice","length","BaseOverlayDispatcher_Factory","OverlayKeyboardDispatcher","_renderer","createRenderer","_cleanupKeydown","runOutsideAngular","listen","_keydownListener","event","overlays","_keydownEvents","observers","next","ɵOverlayKeyboardDispatcher_BaseFactory","OverlayKeyboardDispatcher_Factory","ɵɵgetInheritedFactory","OverlayOutsideClickDispatcher","_platform","_cursorOriginalValue","_cursorStyleIsSet","_pointerDownEventTarget","_cleanups","eventOptions","capture","renderer","_pointerDownListener","_clickListener","cursor","forEach","cleanup","target","type","slice","_outsidePointerEvents","containsPierceShadowDom","outsidePointerEvents","ɵOverlayOutsideClickDispatcher_BaseFactory","OverlayOutsideClickDispatcher_Factory","parent","child","supportsShadowRoot","ShadowRoot","current","host","parentNode","_CdkOverlayStyleLoader","_CdkOverlayStyleLoader_Factory","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","decls","vars","template","_CdkOverlayStyleLoader_Template","rf","ctx","styles","encapsulation","changeDetection","OverlayContainer","_containerElement","_styleLoader","getContainerElement","_loadStyles","_createContainer","containerClass","oppositePlatformContainers","querySelectorAll","container","createElement","setAttribute","appendChild","load","OverlayContainer_Factory","BackdropRef","_cleanupClick","_cleanupTransitionEnd","_fallbackTimeout","onClick","clearTimeout","dispose","setTimeout","pointerEvents","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_animationsDisabled","_backdropClick","_attachments","_detachments","_positionStrategy","_scrollStrategy","_locationChanges","EMPTY","_backdropRef","_detachContentMutationObserver","_detachContentAfterRenderRef","_previousHostParent","_afterNextRenderRef","backdropElement","hostElement","portal","parentElement","attachResult","_updateStackingOrder","_updateElementSize","_updateElementDirection","destroy","_togglePointerEvents","_attachBackdrop","_toggleClasses","_completeDetachContent","onDestroy","Promise","resolve","then","detachBackdrop","detachmentResult","_detachContentWhenEmpty","isAttached","_disposeScrollStrategy","complete","backdropClick","attachments","detachments","keydownEvents","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","setDirection","dir","addPanelClass","classes","removePanelClass","getDirection","updateScrollStrategy","enablePointer","showingClass","insertBefore","requestAnimationFrame","nextSibling","cssClasses","isAdd","rethrow","_detachContent","globalThis","MutationObserver","observe","childList","children","disconnect","boundingBoxClass","cssUnitPattern","createFlexibleConnectedPositionStrategy","FlexibleConnectedPositionStrategy","_overlayContainer","_isInitialRender","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_originRect","_overlayRect","_viewportRect","_containerRect","_viewportMargin","_scrollables","_preferredPositions","_origin","_isDisposed","_boundingBox","_lastPosition","_lastScrollVisibility","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_transformOriginSelector","_appliedPanelClasses","_previousPushAmount","positionChanges","positions","connectedTo","setOrigin","_validatePositions","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_getNarrowedViewportRect","_getOriginRect","originRect","viewportRect","containerRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","selector","startX","_isRtl","endX","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","_pushOverlayOnScreen","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","scrollVisibility","_getScrollVisibility","compareScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","overflows","reduce","currentValue","currentOverflow","axis","pair","cssClass","Element","destination","source","hasOwnProperty","input","units","split","parseFloat","clientRect","floor","STANDARD_DROPDOWN_BELOW_POSITIONS","STANDARD_DROPDOWN_ADJACENT_POSITIONS","wrapperClass","createGlobalPositionStrategy","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_alignItems","_xPosition","_xOffset","_width","_height","end","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","xPosition","xOffset","marginLeft","marginRight","marginTop","marginBottom","OverlayPositionBuilder","global","flexibleConnectedTo","OverlayPositionBuilder_Factory","createOverlayRef","overlayContainer","doc","idGenerator","appRef","directionality","pane","id","getId","portalOutlet","overlayConfig","optional","Overlay","scrollStrategies","_positionBuilder","create","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","elementRef","CdkOverlayOrigin_Factory","ɵdir","ɵɵdefineDirective","exportAs","CdkConnectedOverlay","_dir","_templatePortal","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","_position","_scrollStrategyFactory","_disposeOnNavigation","_updatePositionStrategy","viewportMargin","open","disableClose","transformOriginSelector","lockPosition","positionChange","overlayKeydown","overlayOutsideClick","templateRef","viewContainerRef","ngOnChanges","changes","attachOverlay","detachOverlay","_createOverlay","_buildConfig","emit","keyCode","preventDefault","_getOriginElement","_createPositionStrategy","currentPosition","_getOrigin","CdkConnectedOverlay_Factory","inputs","outputs","features","ɵɵNgOnChangesFeature","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","useFactory","OverlayModule","OverlayModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","imports","NgModuleRef","createComponent","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","_attachedHost","setAttachedHost","ComponentPortal","component","projectableNodes","context","DomPortal","BasePortalOutlet","_attachedPortal","_disposeFn","attachComponentPortal","attachTemplatePortal","attachDomPortal","_invokeDisposeFn","setDisposeFn","fn","outletElement","_appRef","_defaultInjector","componentRef","ngModuleRef","elementInjector","NULL","environmentInjector","attachView","hostView","viewCount","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","rootNodes","rootNode","detectChanges","anchorNode","ownerDocument","createComment","replaceChild","CdkPortal","CdkPortal_Factory","ɵɵInheritDefinitionFeature","TemplatePortalDirective","ɵTemplatePortalDirective_BaseFactory","TemplatePortalDirective_Factory","ɵɵProvidersFeature","useExisting","CdkPortalOutlet","_moduleRef","_viewContainerRef","_isInitialized","_attachedRef","attached","attachedRef","ngOnInit","ref","_getRootNode","clear","nodeType","ELEMENT_NODE","CdkPortalOutlet_Factory","PortalHostDirective","ɵPortalHostDirective_BaseFactory","PortalHostDirective_Factory","PortalModule_Factory","signal","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","toLowerCase","language","valueSignal","bodyDir","htmlDir","set","Directionality_Factory","APP_ID","counters","_appId","prefix","_IdGenerator_Factory","RtlScrollAxisType","rtlScrollAxisType","scrollToFunction","prototype","scrollTo","toString","getRtlScrollAxisType","NORMAL","scrollContainer","containerStyle","overflow","visibility","content","contentStyle","scrollLeft","NEGATED","INVERTED","Dir","_rawDir","previousValue","ngAfterContentInit","Dir_Factory","hostVars","hostBindings","Dir_HostBindings","ɵɵattribute","BidiModule_Factory","__karma__","jasmine","jest","Mocha","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","_getShadowRoot","getRootNode","_getFocusedElementPierceShadowDom","activeElement","shadowRoot","newActiveElement","composedPath","modifiers","modifier","altKey","shiftKey","ctrlKey","metaKey","isObservable","of","ArrayDataSource","_data","_ViewRepeaterOperation","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","applyChanges","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","viewArgsFactory","_insertView","INSERTED","REPLACED","_detachAndCacheView","REMOVED","_moveView","MOVED","cachedView","_insertViewFromCache","$implicit","viewArgs","detachedView","_maybeCacheView","move","pop","insert","forwardRef","ChangeDetectorRef","Optional","Inject","ViewChild","IterableDiffers","Observable","animationFrameScheduler","asapScheduler","distinctUntilChanged","auditTime","startWith","takeUntil","pairwise","switchMap","shareReplay","coerceNumberProperty","coerceElement","_c0","_c1","ɵɵDir","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","itemSize","minBufferPx","maxBufferPx","_updateTotalContentSize","_updateRenderedRange","updateItemAndBufferSize","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","viewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","ceil","newVisibleIndex","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","CdkFixedSizeVirtualScroll_Factory","deps","DEFAULT_SCROLL_TIME","_cleanupGlobalListener","_scrolled","_scrolledCount","Map","register","has","elementScrolled","deregister","scrollableReference","delete","auditTimeInMs","observer","subscription","ancestorScrolled","elementOrElementRef","ancestors","getAncestorScrollContainers","scrollingContainers","_subscription","_scrollableContainsElement","scrollableElement","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_scrollElement","_destroyed","_cleanupScroll","_elementScrolled","options","el","_applyScrollToOptions","scrollTop","from","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","_listeners","_viewportSize","_change","changeListener","_updateViewportSize","output","getViewportRect","_getWindow","documentRect","scrollY","scrollX","throttleTime","defaultView","innerWidth","innerHeight","ViewportRuler_Factory","VIRTUAL_SCROLLABLE","CdkVirtualScrollable","measureViewportSize","orientation","viewportEl","CdkVirtualScrollable_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_changeDetectorRef","_detachedSubject","_renderedRangeSubject","_orientation","_calculateSpacerSize","appendOnly","_contentWrapper","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedContentTransform","_renderedRange","_dataLength","_forOf","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","_isDestroyed","viewportRuler","checkViewportSize","_measureViewportSize","_markChangeDetectionNeeded","forOf","dataStream","data","newLength","_doChangeDetection","measureBoundingClientRectWithScrollOffset","size","range","getOffsetToRenderedContentStart","to","isHorizontal","axisDirection","Number","measureRenderedContentSize","_from","measureViewportOffset","fromRect","scrollerClientRect","viewportClientRect","contentEl","offsetWidth","offsetHeight","measureRangeSize","runAfter","markForCheck","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","viewQuery","CdkVirtualScrollViewport_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","CdkVirtualScrollViewport_HostBindings","ɵɵclassProp","virtualScrollable","ngContentSelectors","consts","CdkVirtualScrollViewport_Template","ɵɵprojectionDef","ɵɵdomElementStart","ɵɵprojection","ɵɵdomElementEnd","ɵɵdomElement","ɵɵadvance","ɵɵstyleProp","getOffset","node","rect","CdkVirtualForOf","_template","_differs","_viewRepeater","skipSelf","viewChange","_dataSourceChanges","cdkVirtualForOf","_cdkVirtualForOf","Array","cdkVirtualForTrackBy","_cdkVirtualForTrackBy","_needsUpdate","item","cdkVirtualForTemplate","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_renderedItems","_onRenderedDataChange","renderedStartIndex","rangeLen","firstNode","lastNode","ngDoCheck","diff","_updateContext","_applyChanges","find","oldDs","newDs","count","_updateComputedContextProperties","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","last","even","odd","ngTemplateContextGuard","directive","CdkVirtualForOf_Factory","useClass","CdkVirtualScrollableElement","CdkVirtualScrollableElement_Factory","CdkVirtualScrollableWindow","CdkVirtualScrollableWindow_Factory","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule_Factory","ɵɵCdkFixedSizeVirtualScroll","ɵɵCdkScrollableModule","ɵɵCdkVirtualForOf","ɵɵCdkVirtualScrollViewport","ɵɵCdkVirtualScrollableElement","ɵɵCdkVirtualScrollableWindow","FullscreenOverlayContainer","_fullScreenEventName","_cleanupFullScreenListener","eventName","_getEventName","_adjustParentForFullscreenChange","fullscreenElement","getFullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","appsWithLoaders","WeakMap","_environmentInjector","loader","loaders","Set","refs","_CdkPrivateStyleLoader_Factory","fallbackValue","_isNumberValue","arguments","isNaN","elementOrRef","isArray"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}