{"version":3,"file":"6622.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/common-module-cKSwHniA.mjs","./node_modules/@angular/material/fesm2022/error-options-DCNQlTOA.mjs","./node_modules/@angular/material/fesm2022/ripple-BYgV4oZC.mjs","./node_modules/@angular/material/fesm2022/icon-registry-CwOTJ7YM.mjs","./node_modules/@angular/material/fesm2022/stepper.mjs","./node_modules/@angular/material/fesm2022/animation-DfMFjxHu.mjs","./node_modules/@angular/material/fesm2022/structural-styles-CObeNzjn.mjs","./node_modules/@angular/material/fesm2022/index-BFRo2fUq.mjs","./node_modules/@angular/material/fesm2022/icon.mjs"],"sourcesContent":["import { HighContrastModeDetector } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgModule } from '@angular/core';\n\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @deprecated No longer used and will be removed.\n * @breaking-change 21.0.0\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: () => true,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n * @deprecated No longer used and will be removed.\n * @breaking-change 21.0.0\n */\nclass MatCommonModule {\n    constructor() {\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        inject(HighContrastModeDetector)._applyBodyHighContrastModeCssClasses();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule, BidiModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: () => [] });\n\nexport { MatCommonModule as M, MATERIAL_SANITY_CHECKS as a };\n","import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { ErrorStateMatcher as E, ShowOnDirtyErrorStateMatcher as S };\n","import { normalizePassiveListenerOptions, _getEventTarget, Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, InjectionToken, inject, ElementRef, NgZone, Injector, Directive, Input } from '@angular/core';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\n\n/** Possible states for a ripple element. */\nvar RippleState;\n(function (RippleState) {\n    RippleState[RippleState[\"FADING_IN\"] = 0] = \"FADING_IN\";\n    RippleState[RippleState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n    RippleState[RippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n    RippleState[RippleState[\"HIDDEN\"] = 3] = \"HIDDEN\";\n})(RippleState || (RippleState = {}));\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    _renderer;\n    element;\n    config;\n    _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n    state = RippleState.HIDDEN;\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config, \n    /* Whether animations are forcibly disabled for ripples through CSS. */\n    _animationForciblyDisabledThroughCss = false) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n    _events = new Map();\n    /** Adds an event handler. */\n    addHandler(ngZone, name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (handlersForEvent) {\n            const handlersForElement = handlersForEvent.get(element);\n            if (handlersForElement) {\n                handlersForElement.add(handler);\n            }\n            else {\n                handlersForEvent.set(element, new Set([handler]));\n            }\n        }\n        else {\n            this._events.set(name, new Map([[element, new Set([handler])]]));\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n            });\n        }\n    }\n    /** Removes an event handler. */\n    removeHandler(name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (!handlersForEvent) {\n            return;\n        }\n        const handlersForElement = handlersForEvent.get(element);\n        if (!handlersForElement) {\n            return;\n        }\n        handlersForElement.delete(handler);\n        if (handlersForElement.size === 0) {\n            handlersForEvent.delete(element);\n        }\n        if (handlersForEvent.size === 0) {\n            this._events.delete(name);\n            document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n        }\n    }\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n    _delegateEventHandler = (event) => {\n        const target = _getEventTarget(event);\n        if (target) {\n            this._events.get(event.type)?.forEach((handlers, element) => {\n                if (element === target || element.contains(target)) {\n                    handlers.forEach(handler => handler.handleEvent(event));\n                }\n            });\n        }\n    };\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\nclass _MatRippleStylesLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatRippleStylesLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _MatRippleStylesLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"mat-ripple-style-loader\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0);background-color:var(--mat-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface) 10%, transparent))}@media(forced-colors: active){.mat-ripple-element{display:none}}.cdk-drag-preview .mat-ripple-element,.cdk-drag-placeholder .mat-ripple-element{display:none}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatRippleStylesLoader, decorators: [{\n            type: Component,\n            args: [{ template: '', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { 'mat-ripple-style-loader': '' }, styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0);background-color:var(--mat-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface) 10%, transparent))}@media(forced-colors: active){.mat-ripple-element{display:none}}.cdk-drag-preview .mat-ripple-element,.cdk-drag-placeholder .mat-ripple-element{display:none}\\n\"] }]\n        }] });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    _target;\n    _ngZone;\n    _platform;\n    /** Element where the ripples are being added to. */\n    _containerElement;\n    /** Element which triggers the ripple elements on mouse events. */\n    _triggerElement;\n    /** Whether the pointer is currently down or not. */\n    _isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n    _activeRipples = new Map();\n    /** Latest non-persistent ripple that was triggered. */\n    _mostRecentTransientRipple;\n    /** Time in milliseconds when the last touchstart event happened. */\n    _lastTouchStartEvent;\n    /** Whether pointer-up event listeners have been registered. */\n    _pointerUpEventsRegistered = false;\n    /**\n     * Cached dimensions of the ripple container. Set when the first\n     * ripple is shown and cleared once no more ripples are visible.\n     */\n    _containerRect;\n    static _eventManager = new RippleEventManager();\n    constructor(_target, _ngZone, elementOrElementRef, _platform, injector) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        // Only do anything if we're on the browser.\n        if (_platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n        if (injector) {\n            injector.get(_CdkPrivateStyleLoader).load(_MatRippleStylesLoader);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const enterDuration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${enterDuration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical to ensure that the `scale` animates properly.\n        // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        const computedStyles = window.getComputedStyle(ripple);\n        const userTransitionProperty = computedStyles.transitionProperty;\n        const userTransitionDuration = computedStyles.transitionDuration;\n        // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n        // `transition: none` or `display: none`). This is technically unexpected since animations are\n        // controlled through the animation config, but this exists for backwards compatibility. This\n        // logic does not need to be super accurate since it covers some edge cases which can be easily\n        // avoided by users.\n        const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n            // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n            // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n            userTransitionDuration === '0s' ||\n            userTransitionDuration === '0s, 0s' ||\n            // If the container is 0x0, it's likely `display: none`.\n            (containerRect.width === 0 && containerRect.height === 0);\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n        // Start the enter animation by setting the transform/scale to 100%. The animation will\n        // execute as part of this statement because we forced a style recalculation before.\n        // Note: We use a 3d transform here in order to avoid an issue in Safari where\n        // the ripples aren't clipped when inside the shadow DOM (see #24028).\n        ripple.style.transform = 'scale3d(1, 1, 1)';\n        rippleRef.state = RippleState.FADING_IN;\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        let eventListeners = null;\n        // Do not register the `transition` event listener if fade-in and fade-out duration\n        // are set to zero. The events won't fire anyway and we can save resources here.\n        if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n            this._ngZone.runOutsideAngular(() => {\n                const onTransitionEnd = () => {\n                    // Clear the fallback timer since the transition fired correctly.\n                    if (eventListeners) {\n                        eventListeners.fallbackTimer = null;\n                    }\n                    clearTimeout(fallbackTimer);\n                    this._finishRippleTransition(rippleRef);\n                };\n                const onTransitionCancel = () => this._destroyRipple(rippleRef);\n                // In some cases where there's a higher load on the browser, it can choose not to dispatch\n                // neither `transitionend` nor `transitioncancel` (see b/227356674). This timer serves as a\n                // fallback for such cases so that the ripple doesn't become stuck. We add a 100ms buffer\n                // because timers aren't precise. Note that another approach can be to transition the ripple\n                // to the `VISIBLE` state immediately above and to `FADING_IN` afterwards inside\n                // `transitionstart`. We go with the timer because it's one less event listener and\n                // it's less likely to break existing tests.\n                const fallbackTimer = setTimeout(onTransitionCancel, enterDuration + 100);\n                ripple.addEventListener('transitionend', onTransitionEnd);\n                // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n                // directly as otherwise we would keep it part of the ripple container forever.\n                // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n                ripple.addEventListener('transitioncancel', onTransitionCancel);\n                eventListeners = { onTransitionEnd, onTransitionCancel, fallbackTimer };\n            });\n        }\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.set(rippleRef, eventListeners);\n        // In case there is no fade-in transition duration, we need to manually call the transition\n        // end listener because `transitionend` doesn't fire if there is no transition.\n        if (animationForciblyDisabledThroughCss || !enterDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        // For ripples already fading out or hidden, this should be a noop.\n        if (rippleRef.state === RippleState.FADING_OUT || rippleRef.state === RippleState.HIDDEN) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        // This starts the fade-out transition and will fire the transition end listener that\n        // removes the ripple element from the DOM.\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // In case there is no fade-out transition duration, we need to manually call the\n        // transition end listener because `transitionend` doesn't fire if there is no transition.\n        if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._getActiveRipples().forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        // Use event delegation for the trigger events since they're\n        // set up during creation and are performance-sensitive.\n        pointerDownEvents.forEach(type => {\n            RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n        });\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            // The events for hiding the ripple are bound directly on the trigger, because:\n            // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n            // delegation will be diminished by having to look through all the data structures often.\n            // 2. They aren't as performance-sensitive, because they're bound only after the user\n            // has interacted with an element.\n            this._ngZone.runOutsideAngular(() => {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n                });\n            });\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n    _finishRippleTransition(rippleRef) {\n        if (rippleRef.state === RippleState.FADING_IN) {\n            this._startFadeOutTransition(rippleRef);\n        }\n        else if (rippleRef.state === RippleState.FADING_OUT) {\n            this._destroyRipple(rippleRef);\n        }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n    _startFadeOutTransition(rippleRef) {\n        const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n        const { persistent } = rippleRef.config;\n        rippleRef.state = RippleState.VISIBLE;\n        // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n        if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n            rippleRef.fadeOut();\n        }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n    _destroyRipple(rippleRef) {\n        const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n        this._activeRipples.delete(rippleRef);\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // If the current ref is the most recent transient ripple, unset it\n        // avoid memory leaks.\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        rippleRef.state = RippleState.HIDDEN;\n        if (eventListeners !== null) {\n            rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n            rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n            if (eventListeners.fallbackTimer !== null) {\n                clearTimeout(eventListeners.fallbackTimer);\n            }\n        }\n        rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            // According to the typings the touches should always be defined, but in some cases\n            // the browser appears to not assign them in tests which leads to flakes.\n            if (touches) {\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._getActiveRipples().forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === RippleState.VISIBLE ||\n                (ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    _getActiveRipples() {\n        return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        const trigger = this._triggerElement;\n        if (trigger) {\n            pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n                this._pointerUpEventsRegistered = false;\n            }\n        }\n    }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    _elementRef = inject(ElementRef);\n    _animationsDisabled = _animationsDisabled();\n    /** Custom color for all ripples. */\n    color;\n    /** Whether the ripples should be visible outside the component's bounds. */\n    unbounded;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     */\n    centered;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    radius = 0;\n    /**\n     * Configuration for the ripple animation. Allows modifying the enter and exit animation\n     * duration of the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     */\n    animation;\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    _disabled = false;\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    _trigger;\n    /** Renderer for the ripple DOM manipulations. */\n    _rippleRenderer;\n    /** Options that are set globally for all ripples. */\n    _globalOptions;\n    /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n    _isInitialized = false;\n    constructor() {\n        const ngZone = inject(NgZone);\n        const platform = inject(Platform);\n        const globalOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, { optional: true });\n        const injector = inject(Injector);\n        // Note: cannot use `inject()` here, because this class\n        // gets instantiated manually in the ripple loader.\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, this._elementRef, platform, injector);\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationsDisabled ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRipple, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatRipple, isStandalone: true, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\nexport { MatRipple as M, RippleRenderer as R, MAT_RIPPLE_GLOBAL_OPTIONS as a, RippleState as b, RippleRef as c, defaultRippleAnimationConfig as d };\n","import * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { SecurityContext, DOCUMENT, Injectable, Optional, Inject, SkipSelf, ErrorHandler } from '@angular/core';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of, throwError, forkJoin } from 'rxjs';\nimport { tap, map, catchError, finalize, share } from 'rxjs/operators';\n\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient for use with Angular Material icons. ' +\n        'Please add provideHttpClient() to your providers.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    url;\n    svgText;\n    options;\n    svgElement;\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    _httpClient;\n    _sanitizer;\n    _errorHandler;\n    _document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     */\n    _svgIconConfigs = new Map();\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     */\n    _iconSetConfigs = new Map();\n    /** Cache for icons loaded by direct URLs. */\n    _cachedIconsByUrl = new Map();\n    /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n    _inProgressUrlFetches = new Map();\n    /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n    _fontCssClassesByAlias = new Map();\n    /** Registered icon resolver functions. */\n    _resolvers = [];\n    /**\n     * The CSS classes to apply when an `<mat-icon>` component has no icon name, url, or font\n     * specified. The default 'material-icons' value assumes that the material icon font has been\n     * loaded as described at https://google.github.io/material-design-icons/#icon-font-for-the-web\n     */\n    _defaultFontSetClass = ['material-icons', 'mat-ligature-font'];\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for CSS class names to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * If the registered font is a ligature font, then don't forget to also include the special\n     * class `mat-ligature-font` to allow the usage via attribute. So register like this:\n     *\n     * ```ts\n     * iconRegistry.registerFontClassAlias('f1', 'font1 mat-ligature-font');\n     * ```\n     *\n     * And use like this:\n     *\n     * ```html\n     * <mat-icon fontSet=\"f1\" fontIcon=\"home\"></mat-icon>\n     * ```\n     *\n     * @param alias Alias for the font.\n     * @param classNames Class names override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, classNames = alias) {\n        this._fontCssClassesByAlias.set(alias, classNames);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    setDefaultFontSetClass(...classNames) {\n        this._defaultFontSetClass = classNames;\n        return this;\n    }\n    /**\n     * Returns the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = options?.withCredentials ?? false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ErrorHandler }] });\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\nexport { ICON_REGISTRY_PROVIDER_FACTORY as I, MatIconRegistry as M, getMatIconNoHttpProviderError as a, getMatIconFailedToSanitizeUrlError as b, getMatIconFailedToSanitizeLiteralError as c, ICON_REGISTRY_PROVIDER as d, getMatIconNameNotFoundError as g };\n","import { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, inject, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, TemplateRef, ViewContainerRef, ContentChild, NgZone, Renderer2, signal, QueryList, EventEmitter, ElementRef, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport { MatIcon, MatIconModule } from './icon.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { M as MatRipple } from './ripple-BYgV4oZC.mjs';\nimport { Platform } from '@angular/cdk/platform';\nimport { switchMap, map, startWith, takeUntil } from 'rxjs/operators';\nimport { E as ErrorStateMatcher } from './error-options-DCNQlTOA.mjs';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatRippleModule } from './index-BFRo2fUq.mjs';\nimport './icon-registry-CwOTJ7YM.mjs';\nimport '@angular/common/http';\nimport '@angular/platform-browser';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/bidi';\n\nclass MatStepLabel extends CdkStepLabel {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepLabel, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStepLabel, isStandalone: true, selector: \"[matStepLabel]\", usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matStepLabel]',\n                }]\n        }] });\n\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    changes = new Subject();\n    /** Label that is rendered below optional steps. */\n    optionalLabel = 'Optional';\n    /** Label that is used to indicate step as completed to screen readers. */\n    completedLabel = 'Completed';\n    /** Label that is used to indicate step as editable to screen readers. */\n    editableLabel = 'Editable';\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperIntl, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY,\n};\n\nclass MatStepHeader extends CdkStepHeader {\n    _intl = inject(MatStepperIntl);\n    _focusMonitor = inject(FocusMonitor);\n    _intlSubscription;\n    /** State of the given step. */\n    state;\n    /** Label of the given step. */\n    label;\n    /** Error message to display when there's an error. */\n    errorMessage;\n    /** Overrides for the header icons, passed in via the stepper. */\n    iconOverrides;\n    /** Index of the given step. */\n    index;\n    /** Whether the given step is selected. */\n    selected;\n    /** Whether the given step label is active. */\n    active;\n    /** Whether the given step is optional. */\n    optional;\n    /** Whether the ripple should be disabled. */\n    disableRipple;\n    /**\n     * Theme color of the step header. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/stepper/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    constructor() {\n        super();\n        const styleLoader = inject(_CdkPrivateStyleLoader);\n        styleLoader.load(_StructuralStylesLoader);\n        styleLoader.load(_VisuallyHiddenLoader);\n        const changeDetectorRef = inject(ChangeDetectorRef);\n        this._intlSubscription = this._intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepHeader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatStepHeader, isStandalone: true, selector: \"mat-step-header\", inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\", color: \"color\" }, host: { attributes: { \"role\": \"tab\" }, properties: { \"class\": \"\\\"mat-\\\" + (color || \\\"primary\\\")\" }, classAttribute: \"mat-step-header\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"{index, active, optional}\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-hover-state-layer-shape, var(--mat-sys-corner-medium))}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-focus-state-layer-shape, var(--mat-sys-corner-medium))}@media(hover: none){.mat-step-header:hover{background:none}}@media(forced-colors: active){.mat-step-header{outline:solid 1px}.mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-header[aria-disabled=true]{outline-color:GrayText}.mat-step-header[aria-disabled=true] .mat-step-label,.mat-step-header[aria-disabled=true] .mat-step-icon,.mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color, var(--mat-sys-surface));background-color:var(--mat-stepper-header-icon-background-color, var(--mat-sys-on-surface-variant))}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color, transparent);color:var(--mat-stepper-header-error-state-icon-foreground-color, var(--mat-sys-error))}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-stepper-header-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-label-text-weight, var(--mat-sys-title-small-weight));color:var(--mat-stepper-header-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color, var(--mat-sys-error));font-size:var(--mat-stepper-header-error-state-label-text-size, var(--mat-sys-title-small-size))}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-selected-state-label-text-weight, var(--mat-sys-title-small-weight))}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-selected-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-done-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-edit-state-icon-foreground-color, var(--mat-sys-on-primary))}\\n\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step-header', host: {\n                        'class': 'mat-step-header',\n                        '[class]': '\"mat-\" + (color || \"primary\")',\n                        'role': 'tab',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatRipple, NgTemplateOutlet, MatIcon], template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"{index, active, optional}\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-hover-state-layer-shape, var(--mat-sys-corner-medium))}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-focus-state-layer-shape, var(--mat-sys-corner-medium))}@media(hover: none){.mat-step-header:hover{background:none}}@media(forced-colors: active){.mat-step-header{outline:solid 1px}.mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-header[aria-disabled=true]{outline-color:GrayText}.mat-step-header[aria-disabled=true] .mat-step-label,.mat-step-header[aria-disabled=true] .mat-step-icon,.mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color, var(--mat-sys-surface));background-color:var(--mat-stepper-header-icon-background-color, var(--mat-sys-on-surface-variant))}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color, transparent);color:var(--mat-stepper-header-error-state-icon-foreground-color, var(--mat-sys-error))}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-stepper-header-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-label-text-weight, var(--mat-sys-title-small-weight));color:var(--mat-stepper-header-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color, var(--mat-sys-error));font-size:var(--mat-stepper-header-error-state-label-text-size, var(--mat-sys-title-small-size))}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-selected-state-label-text-weight, var(--mat-sys-title-small-weight))}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-selected-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-done-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-edit-state-icon-foreground-color, var(--mat-sys-on-primary))}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { state: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], iconOverrides: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }] } });\n\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    templateRef = inject(TemplateRef);\n    /** Name of the icon to be overridden. */\n    name;\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperIcon, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStepperIcon, isStandalone: true, selector: \"ng-template[matStepperIcon]\", inputs: { name: [\"matStepperIcon\", \"name\"] }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepperIcon]',\n                }]\n        }], ctorParameters: () => [], propDecorators: { name: [{\n                type: Input,\n                args: ['matStepperIcon']\n            }] } });\n\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    _template = inject(TemplateRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStepContent, isStandalone: true, selector: \"ng-template[matStepContent]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepContent]',\n                }]\n        }], ctorParameters: () => [] });\n\nclass MatStep extends CdkStep {\n    _errorStateMatcher = inject(ErrorStateMatcher, { skipSelf: true });\n    _viewContainerRef = inject(ViewContainerRef);\n    _isSelected = Subscription.EMPTY;\n    /** Content for step label given by `<ng-template matStepLabel>`. */\n    // We need an initializer here to avoid a TS error.\n    stepLabel = undefined;\n    /**\n     * Theme color for the particular step. This API is supported in M2 themes\n     * only, it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/stepper/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Content that will be rendered lazily. */\n    _lazyContent;\n    /** Currently-attached portal containing the lazy content. */\n    _portal;\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes\n            .pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        }))\n            .subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStep, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStep, isStandalone: true, selector: \"mat-step\", inputs: { color: \"color\" }, host: { attributes: { \"hidden\": \"\" } }, providers: [\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ], queries: [{ propertyName: \"stepLabel\", first: true, predicate: MatStepLabel, descendants: true }, { propertyName: \"_lazyContent\", first: true, predicate: MatStepContent, descendants: true }], exportAs: [\"matStep\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStep, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step', providers: [\n                        { provide: ErrorStateMatcher, useExisting: MatStep },\n                        { provide: CdkStep, useExisting: MatStep },\n                    ], encapsulation: ViewEncapsulation.None, exportAs: 'matStep', changeDetection: ChangeDetectionStrategy.OnPush, imports: [CdkPortalOutlet], host: {\n                        'hidden': '', // Hide the steps so they don't affect the layout.\n                    }, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\" }]\n        }], propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [MatStepLabel]\n            }], color: [{\n                type: Input\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatStepContent, { static: false }]\n            }] } });\nclass MatStepper extends CdkStepper {\n    _ngZone = inject(NgZone);\n    _renderer = inject(Renderer2);\n    _animationsDisabled = _animationsDisabled();\n    _cleanupTransition;\n    _isAnimating = signal(false);\n    /** The list of step headers of the steps in the stepper. */\n    _stepHeader = undefined;\n    /** Elements hosting the step animations. */\n    _animatedContainers;\n    /** Full list of steps inside the stepper, including inside nested steppers. */\n    _steps = undefined;\n    /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n    steps = new QueryList();\n    /** Custom icon overrides passed in by the consumer. */\n    _icons;\n    /** Event emitted when the current step is done transitioning in. */\n    animationDone = new EventEmitter();\n    /** Whether ripples should be disabled for the step headers. */\n    disableRipple;\n    /**\n     * Theme color for all of the steps in stepper. This API is supported in M2\n     * themes only, it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/stepper/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /**\n     * Whether the label should display in bottom or end position.\n     * Only applies in the `horizontal` orientation.\n     */\n    labelPosition = 'end';\n    /**\n     * Position of the stepper's header.\n     * Only applies in the `horizontal` orientation.\n     */\n    headerPosition = 'top';\n    /** Consumer-specified template-refs to be used to override the header icons. */\n    _iconOverrides = {};\n    /** Duration for the animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    _animationDuration = '';\n    /** Whether the stepper is rendering on the server. */\n    _isServer = !inject(Platform).isBrowser;\n    constructor() {\n        super();\n        const elementRef = inject(ElementRef);\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\n        // Transition events won't fire if animations are disabled so we simulate them.\n        this.selectedIndexChange.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            const duration = this._getAnimationDuration();\n            if (duration === '0ms' || duration === '0s') {\n                this._onAnimationDone();\n            }\n            else {\n                this._isAnimating.set(true);\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._animationsDisabled) {\n                setTimeout(() => {\n                    // Delay enabling the animations so we don't animate the initial state.\n                    this._elementRef.nativeElement.classList.add('mat-stepper-animations-enabled');\n                    // Bind this outside the zone since it fires for all transitions inside the stepper.\n                    this._cleanupTransition = this._renderer.listen(this._elementRef.nativeElement, 'transitionend', this._handleTransitionend);\n                }, 200);\n            }\n        });\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        // Prior to #30314 the stepper had animation `done` events bound to each animated container.\n        // The animations module was firing them on initialization and for each subsequent animation.\n        // Since the events were bound in the template, it had the unintended side-effect of triggering\n        // change detection as well. It appears that this side-effect ended up being load-bearing,\n        // because it was ensuring that the content elements (e.g. `matStepLabel`) that are defined\n        // in sub-components actually get picked up in a timely fashion. This subscription simulates\n        // the same change detection by using `queueMicrotask` similarly to the animations module.\n        if (typeof queueMicrotask === 'function') {\n            let hasEmittedInitial = false;\n            this._animatedContainers.changes\n                .pipe(startWith(null), takeUntil(this._destroyed))\n                .subscribe(() => queueMicrotask(() => {\n                // Simulate the initial `animationDone` event\n                // that gets emitted by the animations module.\n                if (!hasEmittedInitial) {\n                    hasEmittedInitial = true;\n                    this.animationDone.emit();\n                }\n                this._stateChanged();\n            }));\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._cleanupTransition?.();\n    }\n    _getAnimationDuration() {\n        if (this._animationsDisabled) {\n            return '0ms';\n        }\n        if (this.animationDuration) {\n            return this.animationDuration;\n        }\n        return this.orientation === 'horizontal' ? '500ms' : '225ms';\n    }\n    _handleTransitionend = (event) => {\n        const target = event.target;\n        if (!target) {\n            return;\n        }\n        // Because we bind a single `transitionend` handler on the host node and because transition\n        // events bubble, we have to filter down to only the active step so don't emit events too\n        // often. We check the orientation and `property` name first to reduce the amount of times\n        // we need to check the DOM.\n        const isHorizontalActiveElement = this.orientation === 'horizontal' &&\n            event.propertyName === 'transform' &&\n            target.classList.contains('mat-horizontal-stepper-content-current');\n        const isVerticalActiveElement = this.orientation === 'vertical' &&\n            event.propertyName === 'grid-template-rows' &&\n            target.classList.contains('mat-vertical-content-container-active');\n        // Finally we need to ensure that the animated element is a direct descendant,\n        // rather than one coming from a nested stepper.\n        const shouldEmit = (isHorizontalActiveElement || isVerticalActiveElement) &&\n            this._animatedContainers.find(ref => ref.nativeElement === target);\n        if (shouldEmit) {\n            this._onAnimationDone();\n        }\n    };\n    _onAnimationDone() {\n        this._isAnimating.set(false);\n        this.animationDone.emit();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepper, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatStepper, isStandalone: true, selector: \"mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]\", inputs: { disableRipple: \"disableRipple\", color: \"color\", labelPosition: \"labelPosition\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\" }, outputs: { animationDone: \"animationDone\" }, host: { attributes: { \"role\": \"tablist\" }, properties: { \"class.mat-stepper-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.mat-stepper-vertical\": \"orientation === \\\"vertical\\\"\", \"class.mat-stepper-label-position-end\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"end\\\"\", \"class.mat-stepper-label-position-bottom\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"bottom\\\"\", \"class.mat-stepper-header-position-bottom\": \"headerPosition === \\\"bottom\\\"\", \"class.mat-stepper-animating\": \"_isAnimating()\", \"style.--mat-stepper-animation-duration\": \"_getAnimationDuration()\", \"attr.aria-orientation\": \"orientation\" } }, providers: [{ provide: CdkStepper, useExisting: MatStepper }], queries: [{ propertyName: \"_steps\", predicate: MatStep, descendants: true }, { propertyName: \"_icons\", predicate: MatStepperIcon, descendants: true }], viewQueries: [{ propertyName: \"_stepHeader\", predicate: MatStepHeader, descendants: true }, { propertyName: \"_animatedContainers\", predicate: [\"animatedContainer\"], descendants: true }], exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step}\\\"/>\\n          @if (!$last) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step) {\\n          <div\\n            #animatedContainer\\n            class=\\\"mat-horizontal-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\"\\n            [class]=\\\"'mat-horizontal-stepper-content-' + _getAnimationDirection($index)\\\"\\n            [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step}\\\"/>\\n        <div\\n          #animatedContainer\\n          class=\\\"mat-vertical-content-container\\\"\\n          [class.mat-stepper-vertical-line]=\\\"!$last\\\"\\n          [class.mat-vertical-content-container-active]=\\\"selectedIndex === $index\\\"\\n          [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === step.index() ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(step.index())\\\"\\n    [attr.aria-posinset]=\\\"step.index() + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(step.index())\\\"\\n    [attr.aria-selected]=\\\"step.isSelected()\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"step.isNavigable() ? null : true\\\"\\n    [index]=\\\"step.index()\\\"\\n    [state]=\\\"step.indicatorType()\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"step.isSelected()\\\"\\n    [active]=\\\"step.isNavigable()\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !step.isNavigable()\\\"\\n    [color]=\\\"step.color || color\\\"/>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font, var(--mat-sys-body-medium-font));background:var(--mat-stepper-container-color, var(--mat-sys-surface))}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height, 72px)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{visibility:hidden;overflow:hidden;outline:0;height:0}.mat-stepper-animations-enabled .mat-horizontal-stepper-content{transition:transform var(--mat-stepper-animation-duration, 0) cubic-bezier(0.35, 0, 0.25, 1)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-previous{transform:translate3d(-100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-next{transform:translate3d(100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{visibility:visible;transform:none;height:auto}.mat-stepper-horizontal:not(.mat-stepper-animating) .mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{overflow:visible}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}@media(forced-colors: active){.mat-horizontal-content-container{outline:solid 1px}}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{display:grid;grid-template-rows:0fr;grid-template-columns:100%;margin-left:36px;border:0;position:relative}.mat-stepper-animations-enabled .mat-vertical-content-container{transition:grid-template-rows var(--mat-stepper-animation-duration, 0) cubic-bezier(0.4, 0, 0.2, 1)}.mat-vertical-content-container.mat-vertical-content-container-active{grid-template-rows:1fr}.mat-step:last-child .mat-vertical-content-container{border:none}@media(forced-colors: active){.mat-vertical-content-container{outline:solid 1px}}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}@supports not (grid-template-rows: 0fr){.mat-vertical-content-container{height:0}.mat-vertical-content-container.mat-vertical-content-container-active{height:auto}}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color, var(--mat-sys-outline));top:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0;visibility:hidden}.mat-stepper-animations-enabled .mat-vertical-stepper-content{transition:visibility var(--mat-stepper-animation-duration, 0) linear}.mat-vertical-content-container-active>.mat-vertical-stepper-content{visibility:visible}.mat-vertical-content{padding:0 24px 24px 24px}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: MatStepHeader, selector: \"mat-step-header\", inputs: [\"state\", \"label\", \"errorMessage\", \"iconOverrides\", \"index\", \"selected\", \"active\", \"optional\", \"disableRipple\", \"color\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepper, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]', exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper', host: {\n                        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                        '[class.mat-stepper-header-position-bottom]': 'headerPosition === \"bottom\"',\n                        '[class.mat-stepper-animating]': '_isAnimating()',\n                        '[style.--mat-stepper-animation-duration]': '_getAnimationDuration()',\n                        '[attr.aria-orientation]': 'orientation',\n                        'role': 'tablist',\n                    }, providers: [{ provide: CdkStepper, useExisting: MatStepper }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [NgTemplateOutlet, MatStepHeader], template: \"<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step}\\\"/>\\n          @if (!$last) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step) {\\n          <div\\n            #animatedContainer\\n            class=\\\"mat-horizontal-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\"\\n            [class]=\\\"'mat-horizontal-stepper-content-' + _getAnimationDirection($index)\\\"\\n            [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step}\\\"/>\\n        <div\\n          #animatedContainer\\n          class=\\\"mat-vertical-content-container\\\"\\n          [class.mat-stepper-vertical-line]=\\\"!$last\\\"\\n          [class.mat-vertical-content-container-active]=\\\"selectedIndex === $index\\\"\\n          [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === step.index() ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(step.index())\\\"\\n    [attr.aria-posinset]=\\\"step.index() + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(step.index())\\\"\\n    [attr.aria-selected]=\\\"step.isSelected()\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"step.isNavigable() ? null : true\\\"\\n    [index]=\\\"step.index()\\\"\\n    [state]=\\\"step.indicatorType()\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"step.isSelected()\\\"\\n    [active]=\\\"step.isNavigable()\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !step.isNavigable()\\\"\\n    [color]=\\\"step.color || color\\\"/>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font, var(--mat-sys-body-medium-font));background:var(--mat-stepper-container-color, var(--mat-sys-surface))}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height, 72px)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{visibility:hidden;overflow:hidden;outline:0;height:0}.mat-stepper-animations-enabled .mat-horizontal-stepper-content{transition:transform var(--mat-stepper-animation-duration, 0) cubic-bezier(0.35, 0, 0.25, 1)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-previous{transform:translate3d(-100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-next{transform:translate3d(100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{visibility:visible;transform:none;height:auto}.mat-stepper-horizontal:not(.mat-stepper-animating) .mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{overflow:visible}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}@media(forced-colors: active){.mat-horizontal-content-container{outline:solid 1px}}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{display:grid;grid-template-rows:0fr;grid-template-columns:100%;margin-left:36px;border:0;position:relative}.mat-stepper-animations-enabled .mat-vertical-content-container{transition:grid-template-rows var(--mat-stepper-animation-duration, 0) cubic-bezier(0.4, 0, 0.2, 1)}.mat-vertical-content-container.mat-vertical-content-container-active{grid-template-rows:1fr}.mat-step:last-child .mat-vertical-content-container{border:none}@media(forced-colors: active){.mat-vertical-content-container{outline:solid 1px}}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}@supports not (grid-template-rows: 0fr){.mat-vertical-content-container{height:0}.mat-vertical-content-container.mat-vertical-content-container-active{height:auto}}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color, var(--mat-sys-outline));top:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0;visibility:hidden}.mat-stepper-animations-enabled .mat-vertical-stepper-content{transition:visibility var(--mat-stepper-animation-duration, 0) linear}.mat-vertical-content-container-active>.mat-vertical-stepper-content{visibility:visible}.mat-vertical-content{padding:0 24px 24px 24px}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _stepHeader: [{\n                type: ViewChildren,\n                args: [MatStepHeader]\n            }], _animatedContainers: [{\n                type: ViewChildren,\n                args: ['animatedContainer']\n            }], _steps: [{\n                type: ContentChildren,\n                args: [MatStep, { descendants: true }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatStepperIcon, { descendants: true }]\n            }], animationDone: [{\n                type: Output\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperNext, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStepperNext, isStandalone: true, selector: \"button[matStepperNext]\", host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-next\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperNext]',\n                    host: {\n                        'class': 'mat-stepper-next',\n                        '[type]': 'type',\n                    },\n                }]\n        }] });\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperPrevious, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStepperPrevious, isStandalone: true, selector: \"button[matStepperPrevious]\", host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-previous\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperPrevious]',\n                    host: {\n                        'class': 'mat-stepper-previous',\n                        '[type]': 'type',\n                    },\n                }]\n        }] });\n\nclass MatStepperModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperModule, imports: [MatCommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n            MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent], exports: [MatCommonModule,\n            MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperModule, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [MatCommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n            MatStepper,\n            MatStepHeader, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        PortalModule,\n                        CdkStepperModule,\n                        MatIconModule,\n                        MatRippleModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    exports: [\n                        MatCommonModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matStepperAnimations = {\n    // Represents:\n    // trigger('horizontalStepTransition', [\n    //   state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    //   // Transition to `inherit`, rather than `visible`,\n    //   // because visibility on a child element the one from the parent,\n    //   // making this element focusable inside of a `hidden` element.\n    //   state('current', style({transform: 'none', visibility: 'inherit'})),\n    //   state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    //   transition(\n    //     '* => *',\n    //     group([\n    //       animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n    //       query('@*', animateChild(), {optional: true}),\n    //     ]),\n    //     {\n    //       params: {animationDuration: '500ms'},\n    //     },\n    //   ),\n    // ])\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: {\n        type: 7,\n        name: 'horizontalStepTransition',\n        definitions: [\n            {\n                type: 0,\n                name: 'previous',\n                styles: {\n                    type: 6,\n                    styles: { transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' },\n                    offset: null,\n                },\n            },\n            {\n                type: 0,\n                name: 'current',\n                styles: {\n                    type: 6,\n                    styles: { transform: 'none', visibility: 'inherit' },\n                    offset: null,\n                },\n            },\n            {\n                type: 0,\n                name: 'next',\n                styles: {\n                    type: 6,\n                    styles: { transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' },\n                    offset: null,\n                },\n            },\n            {\n                type: 1,\n                expr: '* => *',\n                animation: {\n                    type: 3,\n                    steps: [\n                        {\n                            type: 4,\n                            styles: null,\n                            timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)',\n                        },\n                        {\n                            type: 11,\n                            selector: '@*',\n                            animation: { type: 9, options: null },\n                            options: { optional: true },\n                        },\n                    ],\n                    options: null,\n                },\n                options: { params: { animationDuration: '500ms' } },\n            },\n        ],\n        options: {},\n    },\n    // Represents:\n    // trigger('verticalStepTransition', [\n    //   state('previous', style({height: '0px', visibility: 'hidden'})),\n    //   state('next', style({height: '0px', visibility: 'hidden'})),\n    //   // Transition to `inherit`, rather than `visible`,\n    //   // because visibility on a child element the one from the parent,\n    //   // making this element focusable inside of a `hidden` element.\n    //   state('current', style({height: '*', visibility: 'inherit'})),\n    //   transition(\n    //     '* <=> current',\n    //     group([\n    //       animate('{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'),\n    //       query('@*', animateChild(), {optional: true}),\n    //     ]),\n    //     {\n    //       params: {animationDuration: '225ms'},\n    //     },\n    //   ),\n    // ])\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: {\n        type: 7,\n        name: 'verticalStepTransition',\n        definitions: [\n            {\n                type: 0,\n                name: 'previous',\n                styles: { type: 6, styles: { 'height': '0px', visibility: 'hidden' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'next',\n                styles: { type: 6, styles: { 'height': '0px', visibility: 'hidden' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'current',\n                styles: { type: 6, styles: { 'height': '*', visibility: 'inherit' }, offset: null },\n            },\n            {\n                type: 1,\n                expr: '* <=> current',\n                animation: {\n                    type: 3,\n                    steps: [\n                        {\n                            type: 4,\n                            styles: null,\n                            timings: '{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)',\n                        },\n                        {\n                            type: 11,\n                            selector: '@*',\n                            animation: { type: 9, options: null },\n                            options: { optional: true },\n                        },\n                    ],\n                    options: null,\n                },\n                options: { params: { animationDuration: '225ms' } },\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, matStepperAnimations };\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { InjectionToken, inject, ANIMATION_MODULE_TYPE } from '@angular/core';\n\n/** Injection token used to configure the animations in Angular Material. */\nconst MATERIAL_ANIMATIONS = new InjectionToken('MATERIAL_ANIMATIONS');\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationCurves {\n    static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationDurations {\n    static COMPLEX = '375ms';\n    static ENTERING = '225ms';\n    static EXITING = '195ms';\n}\n/**\n * Returns whether animations have been disabled by DI. Must be called in a DI context.\n * @docs-private\n */\nfunction _animationsDisabled() {\n    if (inject(MATERIAL_ANIMATIONS, { optional: true })?.animationsDisabled ||\n        inject(ANIMATION_MODULE_TYPE, { optional: true }) === 'NoopAnimations') {\n        return true;\n    }\n    const mediaMatcher = inject(MediaMatcher);\n    return mediaMatcher.matchMedia('(prefers-reduced-motion)').matches;\n}\n\nexport { AnimationCurves as A, MATERIAL_ANIMATIONS as M, _animationsDisabled as _, AnimationDurations as a };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Component used to load structural styles for focus indicators.\n * @docs-private\n */\nclass _StructuralStylesLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _StructuralStylesLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _StructuralStylesLoader, isStandalone: true, selector: \"structural-styles\", ngImport: i0, template: '', isInline: true, styles: [\".mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border-width:var(--mat-focus-indicator-border-width, 3px);border-style:var(--mat-focus-indicator-border-style, solid);border-color:var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\\\"\\\"}@media(forced-colors: active){html{--mat-focus-indicator-display: block}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _StructuralStylesLoader, decorators: [{\n            type: Component,\n            args: [{ selector: 'structural-styles', encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border-width:var(--mat-focus-indicator-border-width, 3px);border-style:var(--mat-focus-indicator-border-style, solid);border-color:var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\\\"\\\"}@media(forced-colors: active){html{--mat-focus-indicator-display: block}}\\n\"] }]\n        }] });\n\nexport { _StructuralStylesLoader as _ };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatRipple } from './ripple-BYgV4oZC.mjs';\n\nclass MatRippleModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatRipple], exports: [MatRipple, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRipple],\n                    exports: [MatRipple, MatCommonModule],\n                }]\n        }] });\n\nexport { MatRippleModule as M };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, DOCUMENT, ElementRef, ErrorHandler, HostAttributeToken, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { M as MatIconRegistry } from './icon-registry-CwOTJ7YM.mjs';\nexport { d as ICON_REGISTRY_PROVIDER, I as ICON_REGISTRY_PROVIDER_FACTORY, c as getMatIconFailedToSanitizeLiteralError, b as getMatIconFailedToSanitizeUrlError, g as getMatIconNameNotFoundError, a as getMatIconNoHttpProviderError } from './icon-registry-CwOTJ7YM.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/common/http';\nimport '@angular/platform-browser';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-icon`. */\nconst MAT_ICON_DEFAULT_OPTIONS = new InjectionToken('MAT_ICON_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the `fontIcon` attribute or the\n *   content of the `<mat-icon>` component. If you register a custom font class, don't forget to also\n *   include the special class `mat-ligature-font`. It is recommended to use the attribute alternative\n *   to prevent the ligature text to be selectable and to appear in search engine results.\n *   By default, the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon fontIcon=\"home\"></mat-icon>\n *     <mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\" fontIcon=\"sun\"></mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fontawesome-v4.github.io/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon {\n    _elementRef = inject(ElementRef);\n    _iconRegistry = inject(MatIconRegistry);\n    _location = inject(MAT_ICON_LOCATION);\n    _errorHandler = inject(ErrorHandler);\n    _defaultColor;\n    /**\n     * Theme color of the icon. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/icon/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    _color;\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    inline = false;\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    _svgIcon;\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    _fontSet;\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    _fontIcon;\n    _previousFontSetClass = [];\n    _previousFontIconClass;\n    _svgName;\n    _svgNamespace;\n    /** Keeps track of the current page path. */\n    _previousPath;\n    /** Keeps track of the elements and attributes that we've prefixed with the current path. */\n    _elementsWithExternalReferences;\n    /** Subscription to the current in-progress SVG icon request. */\n    _currentIconFetch = Subscription.EMPTY;\n    constructor() {\n        const ariaHidden = inject(new HostAttributeToken('aria-hidden'), { optional: true });\n        const defaults = inject(MAT_ICON_DEFAULT_OPTIONS, { optional: true });\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.fontSet) {\n                this.fontSet = defaults.fontSet;\n            }\n        }\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            this._elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClasses = (this.fontSet\n            ? this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/)\n            : this._iconRegistry.getDefaultFontSetClass()).filter(className => className.length > 0);\n        this._previousFontSetClass.forEach(className => elem.classList.remove(className));\n        fontSetClasses.forEach(className => elem.classList.add(className));\n        this._previousFontSetClass = fontSetClasses;\n        if (this.fontIcon !== this._previousFontIconClass &&\n            !fontSetClasses.includes('mat-ligature-font')) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIcon, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatIcon, isStandalone: true, selector: \"mat-icon\", inputs: { color: \"color\", inline: [\"inline\", \"inline\", booleanAttribute], svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\", \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"attr.fontIcon\": \"_usingFontIcon() ? fontIcon : null\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\"mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color, inherit)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[class]': 'color ? \"mat-\" + color : \"\"',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[attr.fontIcon]': '_usingFontIcon() ? fontIcon : null',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\"mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color, inherit)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input\n            }], inline: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\nclass MatIconModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconModule, imports: [MatCommonModule, MatIcon], exports: [MatIcon, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconModule, imports: [MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatIcon],\n                    exports: [MatIcon, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_ICON_DEFAULT_OPTIONS, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry };\n"],"names":["HighContrastModeDetector","BidiModule","i0","InjectionToken","inject","NgModule","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","constructor","_applyBodyHighContrastModeCssClasses","ɵfac","MatCommonModule_Factory","__ngFactoryType__","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ngDevMode","M","a","Injectable","ShowOnDirtyErrorStateMatcher","isErrorState","control","form","invalid","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ɵprov","ɵɵdefineInjectable","token","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","E","S","normalizePassiveListenerOptions","_getEventTarget","Platform","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","NgZone","Injector","Directive","Input","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","coerceElement","_CdkPrivateStyleLoader","_","_animationsDisabled","RippleState","RippleRef","_renderer","element","config","_animationForciblyDisabledThroughCss","state","HIDDEN","fadeOut","fadeOutRipple","passiveCapturingEventOptions$1","passive","capture","RippleEventManager","_events","Map","addHandler","ngZone","name","handler","handlersForEvent","get","handlersForElement","add","set","Set","runOutsideAngular","document","addEventListener","_delegateEventHandler","removeHandler","delete","size","removeEventListener","event","target","forEach","handlers","contains","handleEvent","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveCapturingEventOptions","pointerDownEvents","pointerUpEvents","_MatRippleStylesLoader","_MatRippleStylesLoader_Factory","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","decls","vars","template","_MatRippleStylesLoader_Template","rf","ctx","styles","encapsulation","changeDetection","RippleRenderer","_target","_ngZone","_platform","_containerElement","_triggerElement","_isPointerDown","_activeRipples","_mostRecentTransientRipple","_lastTouchStartEvent","_pointerUpEventsRegistered","_containerRect","_eventManager","elementOrElementRef","injector","isBrowser","load","fadeInRipple","x","y","containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","ripple","createElement","classList","style","color","backgroundColor","transitionDuration","appendChild","computedStyles","window","getComputedStyle","userTransitionProperty","transitionProperty","userTransitionDuration","animationForciblyDisabledThroughCss","rippleRef","transform","FADING_IN","persistent","eventListeners","onTransitionEnd","fallbackTimer","clearTimeout","_finishRippleTransition","onTransitionCancel","_destroyRipple","setTimeout","FADING_OUT","rippleEl","opacity","fadeOutAll","_getActiveRipples","fadeOutAllNonPersistent","setupTriggerEvents","_removeTriggerEvents","_onMousedown","_onTouchStart","_onPointerUp","_startFadeOutTransition","isMostRecentTransientRipple","VISIBLE","remove","isFakeMousedown","isSyntheticEvent","Date","now","rippleDisabled","clientX","clientY","rippleConfig","touches","changedTouches","i","length","isVisible","terminateOnPointerUp","Array","from","keys","trigger","rect","distX","Math","max","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","_elementRef","unbounded","disabled","_disabled","value","_setupTriggerEventsIfEnabled","_trigger","nativeElement","_rippleRenderer","_globalOptions","_isInitialized","platform","globalOptions","optional","ngOnInit","ngOnDestroy","launch","configOrX","MatRipple_Factory","ɵdir","ɵɵdefineDirective","hostVars","hostBindings","MatRipple_HostBindings","ɵɵclassProp","inputs","exportAs","R","b","c","d","i1","HttpClient","SecurityContext","DOCUMENT","Optional","Inject","SkipSelf","ErrorHandler","i2","DomSanitizer","of","throwError","forkJoin","tap","map","catchError","finalize","share","policy","getPolicy","undefined","ttWindow","trustedTypes","createPolicy","createHTML","s","trustedHTMLFromString","html","getMatIconNameNotFoundError","iconName","Error","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","options","svgElement","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_document","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","addSvgIconResolver","resolver","push","cleanLiteral","sanitize","HTML","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","classNames","classNameForFontAlias","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","pipe","svg","getNamedSvgIcon","key","iconKey","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","clear","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","filter","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","message","handleError","foundIcon","toString","indexOf","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","querySelector","iconElement","cloneNode","removeAttribute","nodeName","toLowerCase","_setSvgAttributes","_toSvgElement","_svgElementFromString","str","div","innerHTML","attributes","setAttribute","childNodes","nodeType","ELEMENT_NODE","viewBox","iconConfig","withCredentials","inProgressFetch","req","responseType","configNamespace","result","isSafeUrlWithOptions","MatIconRegistry_Factory","ɵɵinject","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","provide","deps","useFactory","I","g","TemplatePortal","CdkPortalOutlet","PortalModule","CdkStepLabel","CdkStepHeader","CdkStep","CdkStepper","CdkStepperNext","CdkStepperPrevious","CdkStepperModule","ChangeDetectorRef","TemplateRef","ViewContainerRef","ContentChild","Renderer2","signal","QueryList","EventEmitter","ViewChildren","ContentChildren","Output","FocusMonitor","Subject","Subscription","NgTemplateOutlet","_VisuallyHiddenLoader","MatIcon","MatIconModule","_StructuralStylesLoader","switchMap","startWith","takeUntil","MatRippleModule","_c0","a0","a1","a2","index","active","MatStepHeader_Conditional_3_Template","ɵɵelementContainer","ctx_r0","ɵɵnextContext","ɵɵproperty","iconOverrides","ɵɵpureFunction3","MatStepHeader_Conditional_4_Case_0_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","_getDefaultTextForState","MatStepHeader_Conditional_4_Case_1_Conditional_0_Template","_intl","completedLabel","MatStepHeader_Conditional_4_Case_1_Conditional_1_Template","editableLabel","MatStepHeader_Conditional_4_Case_1_Template","ɵɵconditionalCreate","ɵɵconditional","MatStepHeader_Conditional_4_Template","tmp_1_0","MatStepHeader_Conditional_6_Template","MatStepHeader_Conditional_7_Template","label","MatStepHeader_Conditional_8_Template","optionalLabel","MatStepHeader_Conditional_9_Template","_c1","MatStep_ng_template_0_ng_template_1_Template","MatStep_ng_template_0_Template","ɵɵprojection","ɵɵtemplate","_portal","_c2","_c3","step","MatStepper_Conditional_0_Template","MatStepper_Case_1_For_3_Conditional_1_Template","ɵɵelement","MatStepper_Case_1_For_3_Template","step_r1","$implicit","ɵ$index_8_r2","$index","ɵ$count_8_r3","$count","stepTemplate_r4","ɵɵreference","ɵɵpureFunction1","MatStepper_Case_1_For_6_Template","step_r5","$index_r6","ctx_r6","ɵɵclassMap","_getAnimationDirection","_getStepContentId","ɵɵattribute","_getStepLabelId","selectedIndex","content","MatStepper_Case_1_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","steps","MatStepper_Case_2_For_1_Template","step_r8","$index_r9","ɵ$index_22_r10","ɵ$count_22_r11","MatStepper_Case_2_Template","MatStepper_ng_template_3_Template","_r12","ɵɵgetCurrentView","ɵɵlistener","MatStepper_ng_template_3_Template_mat_step_header_click_0_listener","step_r13","ɵɵrestoreView","ɵɵresetView","select","MatStepper_ng_template_3_Template_mat_step_header_keydown_0_listener","$event","_onKeydown","orientation","_getFocusIndex","indicatorType","stepLabel","isSelected","isNavigable","_iconOverrides","disableRipple","ariaLabel","ariaLabelledby","MatStepLabel","ɵMatStepLabel_BaseFactory","MatStepLabel_Factory","ɵɵgetInheritedFactory","features","ɵɵInheritDefinitionFeature","MatStepperIntl","changes","MatStepperIntl_Factory","MAT_STEPPER_INTL_PROVIDER_FACTORY","parentIntl","MAT_STEPPER_INTL_PROVIDER","MatStepHeader","_focusMonitor","_intlSubscription","selected","styleLoader","changeDetectorRef","subscribe","markForCheck","ngAfterViewInit","monitor","unsubscribe","stopMonitoring","focus","origin","focusVia","_stringLabel","_templateLabel","_getHostElement","MatStepHeader_Factory","MatStepHeader_HostBindings","consts","MatStepHeader_Template","tmp_8_0","ɵɵinterpolate1","dependencies","MatStepperIcon","templateRef","MatStepperIcon_Factory","MatStepContent","_template","MatStepContent_Factory","MatStep","_errorStateMatcher","skipSelf","_viewContainerRef","_isSelected","EMPTY","_lazyContent","ngAfterContentInit","_stepper","selectionChange","selectedStep","originalErrorState","customErrorState","interacted","ɵMatStep_BaseFactory","MatStep_Factory","contentQueries","MatStep_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","ɵɵProvidersFeature","useExisting","ngContentSelectors","MatStep_Template","ɵɵprojectionDef","MatStepper","_cleanupTransition","_isAnimating","_stepHeader","_animatedContainers","_steps","_icons","animationDone","labelPosition","headerPosition","animationDuration","_animationDuration","test","_isServer","elementRef","_destroyed","_stateChanged","selectedIndexChange","duration","_getAnimationDuration","_onAnimationDone","listen","_handleTransitionend","queueMicrotask","hasEmittedInitial","emit","isHorizontalActiveElement","propertyName","isVerticalActiveElement","shouldEmit","find","ref","MatStepper_Factory","MatStepper_ContentQueries","viewQuery","MatStepper_Query","ɵɵviewQuery","MatStepper_HostBindings","ɵɵstyleProp","outputs","MatStepper_Template","ɵɵtemplateRefExtractor","tmp_2_0","MatStepperNext","ɵMatStepperNext_BaseFactory","MatStepperNext_Factory","MatStepperNext_HostBindings","ɵɵdomProperty","MatStepperPrevious","ɵMatStepperPrevious_BaseFactory","MatStepperPrevious_Factory","MatStepperPrevious_HostBindings","MatStepperModule","MatStepperModule_Factory","providers","matStepperAnimations","horizontalStepTransition","definitions","visibility","offset","expr","timings","selector","params","verticalStepTransition","MediaMatcher","ANIMATION_MODULE_TYPE","MATERIAL_ANIMATIONS","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","animationsDisabled","mediaMatcher","matchMedia","matches","A","_StructuralStylesLoader_Factory","_StructuralStylesLoader_Template","MatRippleModule_Factory","HostAttributeToken","booleanAttribute","take","MAT_ICON_DEFAULT_OPTIONS","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","_location","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","attr","join","funcIriPattern","_iconRegistry","_defaultColor","_color","inline","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","fontSet","_fontSet","newValue","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_previousFontSetClass","_previousFontIconClass","_svgName","_svgNamespace","_previousPath","_elementsWithExternalReferences","_currentIconFetch","ariaHidden","defaults","_splitIconName","parts","split","ngAfterViewChecked","cachedElements","newPath","_prependPathToReferences","_usingFontIcon","_setSvgElement","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","elem","fontSetClasses","className","includes","trim","elements","attrs","elementsWithFuncIri","querySelectorAll","elementWithReference","getAttribute","match","rawName","MatIcon_Factory","MatIcon_HostBindings","MatIcon_Template","MatIconModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}