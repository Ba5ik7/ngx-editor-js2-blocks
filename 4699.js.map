{"version":3,"file":"4699.js","mappings":"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","sources":["./projects/demo/src/app/services/theme-picker.service.ts","./projects/demo/src/app/services/app.service.ts","./projects/demo/src/app/components/hero.component.ts","./projects/demo/src/app/components/footer.component.ts","./projects/demo/src/app/app.component.ts","./projects/demo/src/app/components/document.component.ts","./node_modules/@tmdjr/ngx-editor-js2/fesm2022/tmdjr-ngx-editor-js2.mjs","./projects/demo/src/app/components/nav-bar.component.ts","./projects/demo/src/app/components/theme-picker.component.ts","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import {\n  computed,\n  Injectable,\n  linkedSignal,\n  resource,\n  signal,\n} from '@angular/core';\n\nexport interface DocsSiteTheme {\n  name: string;\n  displayName: string;\n  color: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemePickerService {\n  static THEME_EXAMPLE_ICON = 'assets/img/theme-demo-icon.svg';\n  static DEFAULT_THEME = 'cyan-palette';\n  static THEME_STRORAGE_KEY: string = 'theme-picker-current-name';\n  static DARK_MODE_STRORAGE_KEY: string = 'dark-mode';\n  static THEMES: DocsSiteTheme[] = [\n    {\n      displayName: 'Red Palette',\n      name: 'red-palette',\n      color: '#ffd9d4',\n    },\n    {\n      displayName: 'Green Palette',\n      name: 'green-palette',\n      color: '#76ff61',\n    },\n    {\n      displayName: 'Blue Palette',\n      name: 'blue-palette',\n      color: '#e0e0fe',\n    },\n    {\n      displayName: 'Yellow Palette',\n      name: 'yellow-palette',\n      color: '#eaea01',\n    },\n    {\n      displayName: 'Cyan Palette',\n      name: 'cyan-palette',\n      color: '#00fbfb',\n    },\n    {\n      displayName: 'Magenta Palette',\n      name: 'magenta-palette',\n      color: '#ffd6f5',\n    },\n    {\n      displayName: 'Orange Palette',\n      name: 'orange-palette',\n      color: '#ffdcc7',\n    },\n    {\n      displayName: 'Chartreuse Palette',\n      name: 'chartreuse-palette',\n      color: '#82ff0d',\n    },\n    {\n      displayName: 'Spring-Green Palette',\n      name: 'spring-green-palette',\n      color: '#62ff93',\n    },\n    {\n      displayName: 'Azure Palette',\n      name: 'azure-palette',\n      color: '#d6e3fe',\n    },\n    {\n      color: '#810081',\n      displayName: 'Violet Palette',\n      name: 'violet-palette',\n    },\n    {\n      displayName: 'Rose Palette',\n      name: 'rose-palette',\n      color: '#ffd8e1',\n    },\n  ];\n\n  darkMode = signal<boolean>(\n    localStorage.getItem(ThemePickerService.DARK_MODE_STRORAGE_KEY) === 'true'\n  );\n  darkModeResource = resource({\n    params: () => this.darkMode(),\n    loader: async ({ params: darkMode }) => {\n      await localStorage.setItem(\n        ThemePickerService.DARK_MODE_STRORAGE_KEY,\n        darkMode.toString()\n      );\n    },\n  });\n\n  userSelectedTheme = signal<string>(\n    localStorage.getItem(ThemePickerService.THEME_STRORAGE_KEY) ?? ThemePickerService.DEFAULT_THEME\n  );\n  currentTheme = linkedSignal<string, string>({\n    source: this.userSelectedTheme,\n    computation: (newTheme, previous) => {\n      return this.setThemeStyleAndLocalStorage(newTheme)\n        ? newTheme\n        : previous?.value ?? ThemePickerService.DEFAULT_THEME;\n    },\n  });\n\n  setThemeStyleAndLocalStorage(newTheme: string) {\n    localStorage.setItem(ThemePickerService.THEME_STRORAGE_KEY, newTheme);\n    document.body.className = `${newTheme} ${\n      this.darkMode() ? 'dark-mode' : 'light-mode'\n    }`;\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxEditorJsBlock } from '@tmdjr/ngx-editor-js2';\nimport { BehaviorSubject, lastValueFrom, Observable, tap } from 'rxjs';\n\nexport const TEST_DATA: NgxEditorJsBlock[] = [\n  {\n    blockId: 'iovlbzgosf',\n    sortIndex: 0,\n    componentInstanceName: 'HeaderBlockComponent',\n    savedAction: 'h1',\n    dataClean: '🚀 Ready to Explore?',\n  },\n  {\n    blockId: '6ldk3i',\n    sortIndex: 1,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'large',\n    dataClean:\n      'This demo showcases the core concept of Ngx-EditorJs2 — a flexible, block-based content editor built with Angular. Each section of content is a self-contained block that can be rearranged via drag and drop, making it easy to structure and reorganize complex content visually.<div><br></div><div>Blocks aren’t just static — they can be configured through block-specific settings. For example, the Header block allows you to choose between multiple heading levels (H1–H6), and the Image block supports captions and alignment settings.</div><div><br></div><div>In addition, when selecting text within blocks that support inline formatting, a contextual inline toolbar appears. This toolbar enables quick formatting actions such as <b>bold</b>, <i>italic</i>, and text alignment (left, center, right) — allowing for a more expressive and intuitive editing experience.</div><div><br></div><div>Use this page to explore how each block behaves, how they can be customized, and how the editor adapts to your content needs in a modular and scalable way.</div>',\n  },\n  {\n    blockId: 'pkm1k',\n    sortIndex: 2,\n    componentInstanceName: 'HeaderBlockComponent',\n    savedAction: 'h3',\n    dataClean: '✍️ Paragraph + Header',\n  },\n  {\n    blockId: 'wpg67v',\n    sortIndex: 3,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'large',\n    dataClean:\n      'The bread and butter of any editor. Use paragraphs for flowing content, and headers to create structure and hierarchy. <b>Clear</b>. <i>Clean</i>. <u>Essential</u>.',\n  },\n  {\n    blockId: '8u3uiij5vyj',\n    sortIndex: 4,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'large',\n    dataClean:\n      '<ul><li><a href=\"https://www.typescriptlang.org/\">TypeScript</a> and HTML5 programming</li><li>Angular app-design fundamentals, as described in <a href=\"https://angular.io/guide/architecture\">Angular Concepts</a><br></li><li>The basics of <a href=\"https://angular.io/guide/architecture-components#template-syntax\">Angular template syntax</a><br></li></ul>',\n  },\n  {\n    blockId: '2rdtwb',\n    sortIndex: 5,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'medium',\n    dataClean: '',\n  },\n  {\n    blockId: '8w37us',\n    sortIndex: 6,\n    componentInstanceName: 'HeaderBlockComponent',\n    savedAction: 'h3',\n    dataClean: '💡 Quote',\n  },\n  {\n    blockId: '31tbry',\n    sortIndex: 7,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'large',\n    dataClean:\n      'Craft your favorite inspiration, callouts, or even markdown-style blockquotes using the Quote block.',\n  },\n  {\n    blockId: 'n177d7',\n    sortIndex: 8,\n    componentInstanceName: 'NgxEditorJs2BlockquotesComponent',\n    savedAction: 'display-large',\n    dataClean:\n      '“A quote block is like a spotlight — simple, elegant, and perfect for making a point.”',\n  },\n  {\n    blockId: 'dq5uat',\n    sortIndex: 9,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'medium',\n    dataClean: '',\n  },\n  {\n    blockId: 'mq9i9m',\n    sortIndex: 10,\n    componentInstanceName: 'HeaderBlockComponent',\n    savedAction: 'h3',\n    dataClean: '📷 Image Block',\n  },\n  {\n    blockId: '4xkw3s',\n    sortIndex: 11,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'large',\n    dataClean:\n      'A picture says a thousand words. The Image block supports captions and even alignment options to make your visuals shine.',\n  },\n  {\n    blockId: 'n177dsd',\n    sortIndex: 12,\n    componentInstanceName: 'NgxEditorJs2ImageComponent',\n    savedAction: 'stretch',\n    dataClean:\n      '{\"url\":\"https://res.cloudinary.com/dowdpiikk/image/upload/w_650,q_auto:best,f_auto/v1709445782/lnyst5aqppuin8wt73ci.webp\",\"title\":\"test\"}',\n  },\n  {\n    blockId: 'gt9e9s',\n    sortIndex: 13,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'medium',\n    dataClean: '',\n  },\n  {\n    blockId: 'b3t74',\n    sortIndex: 14,\n    componentInstanceName: 'HeaderBlockComponent',\n    savedAction: 'h3',\n    dataClean: '🎨 CodeMirror Block',\n  },\n  {\n    blockId: '9qls1d',\n    sortIndex: 15,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'large',\n    dataClean:\n      'Embed rich, theme-able code editors right inside your documents. Great for live code samples or collaborative coding.',\n  },\n  {\n    blockId: 'asdfasdf',\n    sortIndex: 16,\n    componentInstanceName: 'NgxEditorJs2CodemirrorComponent',\n    savedAction: 'text/typescript',\n    dataClean:\n      \"export class SimpleFormGroup {\\n  form = new FormGroup({\\n    first: new FormControl('Nancy', Validators.minLength(2)),\\n    last: new FormControl('Drew'),\\n  });\\n\\n  get first(): any {\\n    return this.form.get('first');\\n  }\\n\\n  onSubmit(): void {\\n    console.log(this.form.value); // {first: 'Nancy', last: 'Drew'}\\n  }\\n\\n  setValue() {\\n    this.form.setValue({first: 'Carson', last: 'Drew'});\\n  }\\n}\",\n  },\n  {\n    blockId: 'hduds',\n    sortIndex: 17,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'medium',\n    dataClean: '',\n  },\n  {\n    blockId: '8npajb',\n    sortIndex: 18,\n    componentInstanceName: 'HeaderBlockComponent',\n    savedAction: 'h3',\n    dataClean: '🔥 Mermaid.js Block',\n  },\n  {\n    blockId: 'su45ai',\n    sortIndex: 19,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'large',\n    dataClean:\n      'Need to include a flowchart, sequence diagram, or Gantt chart? The Mermaid.js block brings technical diagrams to life using simple syntax.',\n  },\n  {\n    blockId: 'uapf2',\n    sortIndex: 20,\n    componentInstanceName: 'NgxEditorJs2MermaidjsComponent',\n    savedAction: 'center',\n    dataClean:\n      'flowchart TD\\n    A[Christmas] -->|Get money| B(Go shopping)\\n    B --> C{Let me think}\\n    C -->|One| D[Laptop]\\n    C -->|Two| E[Hello World iPhone]\\n    C -->|Three| F[fa:fa-car Car]',\n  },\n  {\n    blockId: 'y3r4xs',\n    sortIndex: 21,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'medium',\n    dataClean: '<div><br></div>',\n  },\n  {\n    blockId: 'q5m0u',\n    sortIndex: 22,\n    componentInstanceName: 'HeaderBlockComponent',\n    savedAction: 'h3',\n    dataClean: '🧠 Pop Quiz Block',\n  },\n  {\n    blockId: 'ubo23s',\n    sortIndex: 23,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'large',\n    dataClean:\n      'Test your knowledge or embed interactive quiz questions inline with your content. Great for workshops, tutorials, or even just friendly challenges.',\n  },\n  {\n    blockId: '9bqhk',\n    sortIndex: 24,\n    componentInstanceName: 'NgxEditorJs2PopQuizComponent',\n    savedAction: 'display-large',\n    dataClean:\n      '{\"question\":\"Which of the following statements is true about Angular\\'s default RouteReuseStrategy?\",\"answer\":\"It reuses components when the route configuration remains the same.\",\"correctResponse\":\"That\\'s correct! Angular\\'s default RouteReuseStrategy reuses components when the route configuration remains the same. This prevents components from being destroyed and recreated when only the fragment or query parameters change.\",\"incorrectResponse\":\"That\\'s incorrect. The correct answer is C. Angular\\'s default RouteReuseStrategy reuses components when the route configuration remains the same. This prevents components from being destroyed and recreated when only the fragment or query parameters change.\",\"choices\":[{\"value\":\"It only reuses components when the route configuration changes.\"},{\"value\":\"It only reuses components when the route parameters change.\"},{\"value\":\"It reuses components when the route configuration remains the same.\"},{\"value\":\"It never reuses components.\"}]}',\n  },\n];\n\nexport const TEST_DATA_TWO: NgxEditorJsBlock[] = [\n  {\n    blockId: 'iovlbzgosf',\n    sortIndex: 0,\n    componentInstanceName: 'HeaderBlockComponent',\n    dataClean: 'Different Prerequisites',\n    savedAction: 'h1',\n  },\n  {\n    blockId: 'bu23hwyltwl',\n    sortIndex: 1,\n    componentInstanceName: 'ParagraphBlockComponent',\n    dataClean:\n      'Skips the very first call to startViewTransition. This can be useful for disabling the animation during the applications initial loading phase.',\n    savedAction: 'meduim',\n  },\n  {\n    blockId: 'bu23hwyltss',\n    sortIndex: 2,\n    componentInstanceName: 'ParagraphBlockComponent',\n    dataClean: 'SOmeehting Different then the last one',\n    savedAction: 'meduim',\n  },\n  {\n    blockId: 'iovlbzgosuu',\n    sortIndex: 3,\n    componentInstanceName: 'HeaderBlockComponent',\n    dataClean: 'Woah! This is cool..',\n    savedAction: 'h3',\n  },\n  {\n    blockId: 'bu23hwyltsww',\n    sortIndex: 2,\n    componentInstanceName: 'ParagraphBlockComponent',\n    dataClean:\n      'Material Design uses color to create accessible, personal color schemes that communicate your products hierarchy, state, and brand. See Material Designs Color System page to learn more about its use and purpose.',\n    savedAction: 'small',\n  },\n];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n  ngxEditorJsBlocks = new BehaviorSubject<NgxEditorJsBlock[]>(TEST_DATA);\n  ngxEditorJsBlocks$ = this.ngxEditorJsBlocks.asObservable();\n\n  requestBlocks = new BehaviorSubject<{}>({});\n  requestBlocks$ = this.requestBlocks.asObservable();\n\n  handleBlocks(blocks$: Observable<NgxEditorJsBlock[]>) {\n    void lastValueFrom(blocks$.pipe(tap(console.table)));\n  }\n}\n","import { Component, inject } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { AppService, TEST_DATA, TEST_DATA_TWO } from '../services/app.service';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-hero',\n  imports: [MatButton, MatTooltip],\n  template: `\n    <header class=\"header-background\">\n      <div class=\"header-section\">\n        <div class=\"header-headline\">\n          <h1>Ngx EditorJs2</h1>\n          <h2>A Custom Themeable Angular Material 3 Component</h2>\n        </div>\n        <div class=\"header-start\">\n          <button\n            mat-stroked-button\n            matTooltip=\"Simulate loading blocks\"\n            (click)=\"loadValue()\"\n          >\n            Load\n          </button>\n          <button\n            mat-stroked-button\n            matTooltip=\"Simulate clearing blocks\"\n            (click)=\"clearValue()\"\n          >\n            Clear\n          </button>\n          <button\n            mat-stroked-button\n            matTooltip=\"Open the console for blocks\"\n            (click)=\"saveValue()\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </header>\n  `,\n  styles: [\n    `\n      @use '@angular/material' as mat;\n\n      :host {\n        width: 100%;\n        @include mat.button-overrides(\n          (\n            outlined-label-text-color: var(--mat-sys-on-secondary),\n          )\n        );\n        .header-background {\n          overflow: hidden;\n          position: relative;\n          height: 360px;\n          color: var(--mat-sys-on-secondary);\n          background: var(--mat-sys-secondary);\n          &::before {\n            content: '';\n            background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" width=\"48\" fill=\"%23FFFFFF\"><path d=\"M14.5 40V13H4V8h26v5H19.5v27Zm18 0V23H26v-5h18v5h-6.5v17Z\"/></svg>');\n            background-repeat: no-repeat;\n            background-size: 400px;\n            background-position: 80% -25px;\n            opacity: 0.2;\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n          }\n        }\n        .header-section {\n          display: flex;\n          justify-content: center;\n          flex-direction: column;\n          align-items: center;\n          height: 100%;\n          text-align: center;\n          .header-headline {\n            h1 {\n              font-size: 56px;\n              font-weight: bold;\n              line-height: 56px;\n              margin: 15px 5px;\n            }\n            h2 {\n              font-size: 20px;\n              font-weight: 300;\n              line-height: 28px;\n              margin: 15px 0 25px 0;\n            }\n          }\n          .header-start {\n            display: flex;\n            flex-direction: row;\n            gap: 10px;\n            button {\n              margin: 0 5px;\n            }\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class HeroComponent {\n  appService = inject(AppService);\n\n  saveValue() {\n    this.appService.requestBlocks.next({});\n  }\n\n  switch = false;\n  loadValue() {\n    this.switch = !this.switch;\n    this.appService.ngxEditorJsBlocks.next(\n      this.switch ? TEST_DATA : TEST_DATA_TWO\n    );\n  }\n\n  clearValue() {\n    this.appService.ngxEditorJsBlocks.next([]);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  template: `\n    <footer class=\"footer\">\n      <a\n        class=\"a\"\n        href=\"https://github.com/Ba5ik7/ngx-editor-js2-blocks\"\n        target=\"_blank\"\n      >\n\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><title>github-circle-white-transparent</title><path d=\"M10 0C4.477 0 0 4.477 0 10c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V19c0 .27.16.59.67.5C17.14 18.16 20 14.42 20 10A10 10 0 0 0 10 0z\" fill=\"#FFF\" fill-rule=\"evenodd\"/></svg>\n        <span class=\"flex-grow\"></span>\n        Made with ❤️\n      </a>\n    </footer>\n  `,\n  styles: [\n    `\n      :host {\n        footer {\n          display: flex;\n          color: var(--mat-sys-on-secondary-container);\n          // background: var(--mat-sys-secondary-container);\n          padding: 4px;\n          text-align: right;\n          a {\n            display: flex;\n            font-size: 0.1875em;\n            text-decoration: none;\n            color: var(--mat-sys-on-secondary-container);\n            align-items: center;\n            gap: 0.5em;\n            svg {\n              width: 16px;\n              path {\n\n                fill: var(--mat-sys-on-secondary-container);\n              }\n            }\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class FooterComponent {}\n","import { Component } from '@angular/core';\nimport { NavBarComponent } from './components/nav-bar.component';\nimport { HeroComponent } from './components/hero.component';\nimport { DocumentComponent } from './components/document.component';\nimport { FooterComponent } from './components/footer.component';\n\n@Component({\n  selector: 'app-root',\n  imports: [NavBarComponent, HeroComponent, DocumentComponent, FooterComponent],\n  template: `\n    <app-nav-bar></app-nav-bar>\n    <main>\n      <app-hero></app-hero>\n      <app-document></app-document>\n    </main>\n    <app-footer></app-footer>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        flex-direction: column;\n        min-height: 100vh;\n        main {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          gap: 3em;\n          margin-top: 56px;\n          app-document {\n            width: 100%;\n            max-width: 800px;\n            margin-bottom: 3em;\n          }\n        }\n        app-nav-bar {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          z-index: 2;\n        }\n      }\n    `,\n  ],\n})\nexport class AppComponent {}\n","import { Component, inject } from '@angular/core';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { NgxEditorJs2Component } from '@tmdjr/ngx-editor-js2';\nimport { AppService } from '../services/app.service';\nimport { AsyncPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-document',\n  imports: [MatCard, MatCardContent, NgxEditorJs2Component, AsyncPipe],\n  template: `\n    <mat-card appearance=\"outlined\">\n      <mat-card-content>\n        <ngx-editor-js2\n          [blocks]=\"(appService.ngxEditorJsBlocks$ | async)!\"\n          [requestBlocks]=\"appService.requestBlocks$ | async\"\n          (blocksRequested)=\"appService.handleBlocks($event)\"\n        ></ngx-editor-js2>\n      </mat-card-content>\n    </mat-card>\n  `,\n  styles: [\n    `\n      @use '@angular/material' as mat;\n      :host {\n        @include mat.card-overrides(\n          (\n            outlined-outline-width: 0.5px,\n            outlined-container-color: var(--mat-sys-surface-container-low),\n            outlined-outline-color: var(--mat-sys-on-surface),\n          )\n        );\n      }\n    `,\n  ],\n})\nexport class DocumentComponent {\n  appService = inject(AppService);\n}\n","import * as i0 from '@angular/core';\nimport { inject, ElementRef, input, forwardRef, HostListener, Directive, output, Component, signal, Injectable, ViewContainerRef, effect, InjectionToken, viewChild, EventEmitter, Renderer2, Output } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormControl, ReactiveFormsModule, FormBuilder, FormsModule } from '@angular/forms';\nimport { startWith, combineLatest, map, firstValueFrom, of, from, tap, filter, defaultIfEmpty, Observable, lastValueFrom, forkJoin, iif, switchMap, mergeMap, BehaviorSubject, distinctUntilChanged, delay, exhaustMap, merge, fromEvent, debounceTime } from 'rxjs';\nimport { MatRipple } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/drag-drop';\nimport { CdkDragHandle, CdkDrag, CdkDropList } from '@angular/cdk/drag-drop';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule, Overlay } from '@angular/cdk/overlay';\nimport * as i1$2 from '@angular/material/icon';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport { AsyncPipe, NgTemplateOutlet, NgClass } from '@angular/common';\nimport { toObservable } from '@angular/core/rxjs-interop';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatList, MatListItem, MatListModule } from '@angular/material/list';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\nclass ControlAccessorDirective {\n    elementRef = inject(ElementRef);\n    defaultValue = input();\n    onChange = () => { };\n    onTouched = () => { };\n    writeValue() {\n        this.elementRef.nativeElement.innerHTML = this.defaultValue() || '';\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onBlur() {\n        this.onTouched();\n    }\n    onInput() {\n        this.onChange(this.elementRef.nativeElement.innerHTML);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ControlAccessorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ControlAccessorDirective, isStandalone: true, selector: \"[controlAccessor]\", inputs: { defaultValue: { classPropertyName: \"defaultValue\", publicName: \"defaultValue\", isSignal: true, isRequired: false, transformFunction: null } }, host: { listeners: { \"blur\": \"onBlur()\", \"input\": \"onInput()\" } }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => ControlAccessorDirective),\n                multi: true,\n            },\n        ], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ControlAccessorDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[controlAccessor]',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => ControlAccessorDirective),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], propDecorators: { onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onInput: [{\n                type: HostListener,\n                args: ['input']\n            }] } });\n\nclass AutofocusDirective {\n    elementRef = inject(ElementRef);\n    autofocus = input(false);\n    ngAfterContentInit() {\n        this.autofocus() && this.elementRef.nativeElement.focus?.();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: AutofocusDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: AutofocusDirective, isStandalone: true, selector: \"[autofocus]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: AutofocusDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[autofocus]',\n                }]\n        }] });\n\nvar MovePositionActions;\n(function (MovePositionActions) {\n    MovePositionActions[\"UP\"] = \"UP\";\n    MovePositionActions[\"DOWN\"] = \"DOWN\";\n    MovePositionActions[\"DELETE\"] = \"DELETE\";\n})(MovePositionActions || (MovePositionActions = {}));\n\nclass ToolbarBlockOptionsComponent {\n    Position = MovePositionActions;\n    blockOptionActions = input();\n    handleActionEmitter = output({ alias: 'handleAction' });\n    moveBlockPositionEmitter = output({\n        alias: 'moveBlockPosition',\n    });\n    movePosition(action) {\n        this.moveBlockPositionEmitter.emit(action);\n    }\n    handleAction(action) {\n        this.handleActionEmitter.emit(action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlockOptionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarBlockOptionsComponent, isStandalone: true, selector: \"toolbar-block-options\", inputs: { blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { handleActionEmitter: \"handleAction\", moveBlockPositionEmitter: \"moveBlockPosition\" }, ngImport: i0, template: `\n    <div class=\"actions-panel mat-elevation-z24\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:hover,:host .actions-panel .action-btn:focus{color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"], dependencies: [{ kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlockOptionsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-block-options', imports: [MatIcon, MatRipple], template: `\n    <div class=\"actions-panel mat-elevation-z24\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:hover,:host .actions-panel .action-btn:focus{color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"] }]\n        }] });\n\nclass ToolbarBlocksComponent {\n    addBlockEmitter = output({ alias: 'addBlock' });\n    supportedBlocks = input([]);\n    supportedBlocks$ = toObservable(this.supportedBlocks);\n    blockCtrl = new FormControl([]);\n    filter$ = this.blockCtrl.valueChanges.pipe(startWith(''));\n    filteredBlocks$ = combineLatest([this.supportedBlocks$, this.filter$]).pipe(map(([blocks, filterString]) => {\n        if (typeof filterString !== 'string')\n            filterString = '';\n        filterString = filterString.replace(/\\\\/g, '');\n        const pattern = filterString\n            ?.split('')\n            .map((v) => `(?=.*${v})`)\n            .join('');\n        const regex = new RegExp(`${pattern}`, 'gi');\n        // return blocks.filter(block => regex.exec(block));\n        return blocks.filter((block) => block.name.match(regex));\n    }));\n    addBlock(block) {\n        this.addBlockEmitter.emit(block?.component);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlocksComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarBlocksComponent, isStandalone: true, selector: \"toolbar-blocks\", inputs: { supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { addBlockEmitter: \"addBlock\" }, ngImport: i0, template: `\n    <div class=\"block-list-container mat-elevation-z24\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{background:var(--mat-sys-secondary-container);border-radius:4px}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:hover,:host mat-list-item:focus{background:var(--mat-sys-surface-bright)}\\n\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"directive\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\", \"disabledInteractive\"], exportAs: [\"matInput\"] }, { kind: \"component\", type: MatList, selector: \"mat-list\", exportAs: [\"matList\"] }, { kind: \"component\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: [\"activated\"], exportAs: [\"matListItem\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatLabel, selector: \"mat-label\" }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlocksComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-blocks', imports: [\n                        MatFormField,\n                        MatInput,\n                        MatList,\n                        MatListItem,\n                        MatRipple,\n                        MatLabel,\n                        ReactiveFormsModule,\n                        AsyncPipe,\n                    ], template: `\n    <div class=\"block-list-container mat-elevation-z24\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{background:var(--mat-sys-secondary-container);border-radius:4px}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:hover,:host mat-list-item:focus{background:var(--mat-sys-surface-bright)}\\n\"] }]\n        }] });\n\nclass ToolbarComponent {\n    componentContextPositionIndex = input.required();\n    supportedBlocks = input.required();\n    blockOptionActions = input();\n    actionCallback = input(() => () => { });\n    formControlName = input();\n    addBlockCallback = input.required();\n    moveBlockPositionCallback = input.required();\n    openBlocks = signal(false);\n    openBlocksOption = signal(false);\n    openBlocksList() {\n        this.openBlocks.update((prev) => !prev);\n    }\n    openBlockOptionList() {\n        this.openBlocksOption.update((prev) => !prev);\n    }\n    moveBlockPosition(action) {\n        this.closeLists();\n        this.moveBlockPositionCallback()(action, this.componentContextPositionIndex());\n    }\n    handleAction(action) {\n        this.closeLists();\n        this.actionCallback()(action);\n    }\n    addBlock(block) {\n        this.closeLists();\n        firstValueFrom(this.addBlockCallback()(block, this.componentContextPositionIndex()));\n    }\n    closeLists() {\n        this.openBlocks.set(false);\n        this.openBlocksOption.set(false);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ToolbarComponent, isStandalone: true, selector: \"toolbar\", inputs: { componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: false, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: false, transformFunction: null }, addBlockCallback: { classPropertyName: \"addBlockCallback\", publicName: \"addBlockCallback\", isSignal: true, isRequired: true, transformFunction: null }, moveBlockPositionCallback: { classPropertyName: \"moveBlockPositionCallback\", publicName: \"moveBlockPositionCallback\", isSignal: true, isRequired: true, transformFunction: null } }, ngImport: i0, template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, isInline: true, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container)}:host .toolbar-buttons:hover,:host .toolbar-buttons:focus{background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"ngmodule\", type: OverlayModule }, { kind: \"directive\", type: i1.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\", \"cdkConnectedOverlayDisposeOnNavigation\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i1.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"component\", type: ToolbarBlockOptionsComponent, selector: \"toolbar-block-options\", inputs: [\"blockOptionActions\"], outputs: [\"handleAction\", \"moveBlockPosition\"] }, { kind: \"component\", type: ToolbarBlocksComponent, selector: \"toolbar-blocks\", inputs: [\"supportedBlocks\"], outputs: [\"addBlock\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar', imports: [\n                        CdkDragHandle,\n                        MatRipple,\n                        OverlayModule,\n                        ToolbarBlockOptionsComponent,\n                        ToolbarBlocksComponent,\n                    ], template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container)}:host .toolbar-buttons:hover,:host .toolbar-buttons:focus{background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"] }]\n        }] });\n\nclass BlockMovementService {\n    componentRefMap = new Map();\n    clearComponentRefs() {\n        this.componentRefMap.clear();\n    }\n    getNgxEditorJsBlocks() {\n        return of(Array.from(this.componentRefMap.values()));\n    }\n    newComponentAttached(componentRef) {\n        this.componentRefMap.set(componentRef.instance, componentRef);\n    }\n    updateComponentIndices(ngxEditor) {\n        return from(this.componentRefMap.values()).pipe(tap((componentRef) => componentRef.setInput('sortIndex', ngxEditor.indexOf(componentRef.hostView))));\n    }\n    moveBlockComponentPosition(ngxEditor, action, index) {\n        return of(Array.from(this.componentRefMap.values())).pipe(map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), filter((componentRef) => !!componentRef), map((componentRef) => ({\n            componentRef,\n            totalComponents: ngxEditor.length - 1,\n            currentIndex: ngxEditor.indexOf(componentRef.hostView),\n            newIndex: (index) => action === MovePositionActions.UP ? index - 1 : index + 1,\n        })), map(({ componentRef, totalComponents, currentIndex, newIndex }) => ({\n            componentRef,\n            currentIndex,\n            newIndex: Math.max(0, Math.min(newIndex(currentIndex), totalComponents)),\n        })), filter(({ currentIndex, newIndex }) => currentIndex !== newIndex), tap(({ componentRef, newIndex }) => {\n            ngxEditor.move(componentRef.hostView, newIndex);\n            componentRef.setInput('sortIndex', newIndex);\n            componentRef.setInput('autofocus', true);\n        }), defaultIfEmpty(false));\n    }\n    removeBlockComponent(ngxEditor, index, clear = false) {\n        return of(Array.from(this.componentRefMap.values())).pipe(filter((componentRefs) => clear || componentRefs.length !== 1), map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), map((componentRef) => this.componentRefMap.delete(componentRef?.instance ?? {})), tap((successful) => successful && ngxEditor.remove(index - 1)), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nconst createUID = () => Math.random().toString(36).substring(7);\nclass EditorJsService {\n    formBuilder = inject(FormBuilder);\n    blockMovementService = inject(BlockMovementService);\n    componentRefMap = new Map();\n    ngxEditor;\n    formGroup = this.formBuilder.group({});\n    // TODO - Handle this idiomatically\n    setNgxEditor(ngxEditor) {\n        this.ngxEditor = ngxEditor;\n    }\n    getBlocks$() {\n        return new Observable((observer) => {\n            lastValueFrom(this.blockMovementService.getNgxEditorJsBlocks().pipe(map((componentRefs) => componentRefs.map(({ instance }) => ({\n                blockId: instance.formControlName(),\n                sortIndex: instance.sortIndex(),\n                componentInstanceName: instance.componentInstanceName,\n                savedAction: instance.savedAction(),\n                dataClean: instance.formGroup().get(instance.formControlName())\n                    ?.value,\n            }))), map((blocks) => blocks.sort((a, b) => a.sortIndex - b.sortIndex)))).then((blocks) => {\n                observer.next(blocks);\n                observer.complete();\n            });\n        });\n    }\n    createNgxEditorJsBlockWithComponent(blockComponent, componentContextPositionIndex) {\n        return of({\n            blockId: createUID(),\n            sortIndex: componentContextPositionIndex,\n            componentInstanceName: blockComponent.name,\n            component: blockComponent,\n            // TODO - Force content-type for dataClean? JSON, HTML, etc.\n            // TODO - And maybe rename dataClean to just data?\n            dataClean: '',\n            autofocus: true,\n        });\n    }\n    addBlockComponent(ngxEditorJsBlock) {\n        return forkJoin([\n            this.createFormGroupControl(ngxEditorJsBlock),\n            this.attachComponent(ngxEditorJsBlock),\n            this.blockMovementService.updateComponentIndices(this.ngxEditor),\n        ]).pipe(map(() => void 0));\n    }\n    createFormGroupControl({ blockId, dataClean, }) {\n        return of(this.formBuilder.control(dataClean, [])).pipe(tap((formControl) => this.formGroup.addControl(blockId, formControl)));\n    }\n    attachComponent({ component, blockId, autofocus, savedAction, sortIndex: index, }) {\n        return of(blockId).pipe(map((controlName) => {\n            const componentRef = this.ngxEditor.createComponent(component, {\n                index,\n            });\n            componentRef.setInput('sortIndex', index);\n            componentRef.setInput('formGroup', this.formGroup);\n            componentRef.setInput('formControlName', controlName);\n            componentRef.setInput('autofocus', autofocus);\n            savedAction && componentRef.instance.actionCallback?.(savedAction);\n            this.blockMovementService.newComponentAttached(componentRef);\n            return componentRef;\n        }));\n    }\n    determineMovePositionAction(action, index, formControlName) {\n        return iif(() => action === MovePositionActions.DELETE, this.removeBlockComponent(index, formControlName), this.blockMovementService.moveBlockComponentPosition(this.ngxEditor, action, index)).pipe(switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)));\n    }\n    moveBlockComponentPosition(previousIndex, currentIndex) {\n        return of(this.ngxEditor.get(previousIndex)).pipe(filter((viewRef) => !!viewRef), tap((viewRef) => {\n            this.ngxEditor.move(viewRef, currentIndex);\n        }), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), defaultIfEmpty(false));\n    }\n    removeBlockComponent(index, formControlName, clear = false) {\n        return combineLatest([\n            this.blockMovementService.removeBlockComponent(this.ngxEditor, index, clear),\n            of(this.formGroup.removeControl(formControlName)),\n        ]);\n    }\n    clearBlocks() {\n        return this.blockMovementService.getNgxEditorJsBlocks().pipe(filter((componentRefs) => componentRefs.length > 0), map((componentRefs) => componentRefs.sort((a, b) => a.instance.sortIndex() - b.instance.sortIndex())), mergeMap((componentRefs) => forkJoin(Array.from(componentRefs.values()).map((componentRef) => this.removeBlockComponent(componentRef.instance.sortIndex() + 1, componentRef.instance.formControlName(), true)))), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), tap(() => {\n            this.blockMovementService.clearComponentRefs();\n            this.ngxEditor.clear();\n        }), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolFabService {\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    editorJsService = inject(EditorJsService);\n    // I need to explain this in detail so the future me can understand this.\n    componentContext = new BehaviorSubject(null);\n    toolbarComponentRef$ = combineLatest({\n        componentContext: this.componentContext.asObservable(),\n        supportedBlocks: this.ngxEditorJs2Service.supportedBlocks$,\n    }).pipe(filter(({ componentContext }) => componentContext !== null), distinctUntilChanged(({ componentContext: previous }, { componentContext: current }) => previous.index !== current.index ||\n        previous.viewContainerRef !== current.viewContainerRef\n        ? (previous.viewContainerRef.clear(), false)\n        : true), map(({ componentContext, supportedBlocks }) => {\n        const { index, viewContainerRef, blockOptionActions, actionCallback, formControlName, } = componentContext;\n        // TODO We will need to create a ToolbarBottomRailComponent to handle the mobile view\n        const componentRef = viewContainerRef.createComponent(ToolbarComponent);\n        componentRef.setInput('componentContextPositionIndex', index + 1);\n        componentRef.setInput('supportedBlocks', supportedBlocks);\n        componentRef.setInput('blockOptionActions', blockOptionActions);\n        componentRef.setInput('actionCallback', actionCallback);\n        componentRef.setInput('formControlName', formControlName);\n        componentRef.setInput('addBlockCallback', this.addBlock.bind(this));\n        componentRef.setInput('moveBlockPositionCallback', this.movePositionAction.bind(this));\n        return componentRef;\n    }));\n    addBlock(block, index) {\n        return this.editorJsService\n            .createNgxEditorJsBlockWithComponent(block, index)\n            .pipe(switchMap((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    movePositionAction(action, index, formControlName) {\n        return lastValueFrom(this.editorJsService.determineMovePositionAction(action, index, formControlName));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolbarFabDirective {\n    toolFabService = inject(ToolFabService);\n    viewContainerRef = inject(ViewContainerRef);\n    autofocus = input();\n    blockOptionActions = input();\n    actionCallback = input.required();\n    componentContextPositionIndex = input.required();\n    formControlName = input.required();\n    onMouseEnter() {\n        this.toolFabService.componentContext.next({\n            viewContainerRef: this.viewContainerRef,\n            blockOptionActions: this.blockOptionActions() ?? [],\n            actionCallback: this.actionCallback(),\n            index: this.componentContextPositionIndex(),\n            formControlName: this.formControlName(),\n        });\n    }\n    constructor() {\n        effect(() => {\n            this.autofocus() && this.onMouseEnter();\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarFabDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ToolbarFabDirective, isStandalone: true, selector: \"[toolbarFab]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: true, transformFunction: null }, componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null } }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarFabDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[toolbarFab]',\n                }]\n        }], ctorParameters: () => [], propDecorators: { onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }] } });\n\nclass CleanPasteDataDirective {\n    onPaste(event) {\n        event.preventDefault();\n        const text = event.clipboardData?.getData('text/plain');\n        document.execCommand('insertText', false, text);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: CleanPasteDataDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.4\", type: CleanPasteDataDirective, isStandalone: true, selector: \"[cleanPasteData]\", host: { listeners: { \"paste\": \"onPaste($event)\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: CleanPasteDataDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cleanPasteData]',\n                }]\n        }], propDecorators: { onPaste: [{\n                type: HostListener,\n                args: ['paste', ['$event']]\n            }] } });\n\nclass HeaderBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'HeaderBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'h1', text: 'H1' },\n        { action: 'h2', text: 'H2' },\n        { action: 'h3', text: 'H3' },\n        { action: 'h4', text: 'H4' },\n        { action: 'h5', text: 'H5' },\n        { action: 'h6', text: 'H6' },\n    ]);\n    savedAction = signal('h1');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(selectedAction) {\n        this.savedAction.set(selectedAction);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: HeaderBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: HeaderBlockComponent, isStandalone: true, selector: \"header-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n@switch (savedAction()) {\n  @case ('h1') {\n    <h1>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h1>\n  }\n  @case ('h2') {\n    <h2>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h2>\n  }\n  @case ('h3') {\n    <h3>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h3>\n  }\n  @case ('h4') {\n    <h4>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h4>\n  }\n  @case ('h5') {\n    <h5>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h5>\n  }\n  @case ('h6') {\n    <h6>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h6>\n  }\n}\n\n<ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n  <span\n    controlAccessor\n    cleanPasteData\n    contentEditable\n    toolbarFab\n    [defaultValue]=\"formGroup().get(formControlName())?.value\"\n    [actionCallback]=\"actionCallbackBind\"\n    [blockOptionActions]=\"blockOptionActions()\"\n    [autofocus]=\"autofocus()\"\n    [formControlName]=\"formControlName()\"\n    [componentContextPositionIndex]=\"sortIndex()\"\n  ></span>\n</ng-template>\n`, isInline: true, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: HeaderBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'header-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgTemplateOutlet\n                    ], template: `\n@switch (savedAction()) {\n  @case ('h1') {\n    <h1>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h1>\n  }\n  @case ('h2') {\n    <h2>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h2>\n  }\n  @case ('h3') {\n    <h3>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h3>\n  }\n  @case ('h4') {\n    <h4>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h4>\n  }\n  @case ('h5') {\n    <h5>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h5>\n  }\n  @case ('h6') {\n    <h6>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h6>\n  }\n}\n\n<ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n  <span\n    controlAccessor\n    cleanPasteData\n    contentEditable\n    toolbarFab\n    [defaultValue]=\"formGroup().get(formControlName())?.value\"\n    [actionCallback]=\"actionCallbackBind\"\n    [blockOptionActions]=\"blockOptionActions()\"\n    [autofocus]=\"autofocus()\"\n    [formControlName]=\"formControlName()\"\n    [componentContextPositionIndex]=\"sortIndex()\"\n  ></span>\n</ng-template>\n`, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"] }]\n        }] });\n\nclass ParagraphBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'ParagraphBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'small', icon: 'density_small' },\n        { action: 'medium', icon: 'density_medium' },\n        { action: 'large', icon: 'density_large' },\n        { action: 'title-small', text: 'TS' },\n        { action: 'title-medium', text: 'TM' },\n        { action: 'title-large', text: 'TL' },\n    ]);\n    savedAction = signal('medium');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(action) {\n        this.savedAction.update(() => action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ParagraphBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ParagraphBlockComponent, isStandalone: true, selector: \"paragraph-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, isInline: true, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ParagraphBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'paragraph-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgClass,\n                    ], template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"] }]\n        }] });\n\nconst NGX_EDITORJS_OPTIONS = new InjectionToken('NGX_EDITORJS_OPTIONS');\nclass NgxEditorJs2Service {\n    editorJsService = inject(EditorJsService);\n    consumerSupportedBlocks = new BehaviorSubject(inject(NGX_EDITORJS_OPTIONS, { optional: true })?.consumerSupportedBlocks ??\n        []);\n    internalSupportedBlocks = new BehaviorSubject([\n        {\n            name: 'Paragraph',\n            component: ParagraphBlockComponent,\n            componentInstanceName: 'ParagraphBlockComponent',\n        },\n        {\n            name: 'Header',\n            component: HeaderBlockComponent,\n            componentInstanceName: 'HeaderBlockComponent',\n        },\n    ]);\n    supportedBlocks$ = combineLatest([\n        this.internalSupportedBlocks.asObservable(),\n        this.consumerSupportedBlocks.asObservable(),\n    ]).pipe(map(([internal, consumer]) => [...internal, ...consumer]));\n    blocksToLoad = new BehaviorSubject([]);\n    loadBlocks$ = this.blocksToLoad.asObservable().pipe(delay(0), exhaustMap((blocks) => this.clearBlocksFromEditorJs(blocks)), map(([blocks]) => this.determineToloadDefaultBlocks(blocks)), map((blocks) => this.removeDuplicateBlocksWithSameIds(blocks)), map((blocks) => this.sortBlocks(blocks)), switchMap((blocks) => this.combineSupportBlocks(blocks)), map(([blocks, supportedBlocks]) => this.createALookupMapForSupportedBlocks(blocks, supportedBlocks)), map(({ blocks, supportedBlocksMap }) => this.findAndMarshalBlocksComponent(blocks, supportedBlocksMap)), mergeMap((blocks) => this.addBlocksToEditorJs(blocks).pipe(map(() => blocks))));\n    clearBlocksFromEditorJs(blocks) {\n        return forkJoin([of(blocks), this.editorJsService.clearBlocks()]);\n    }\n    determineToloadDefaultBlocks(blocks) {\n        return blocks.length > 0 ? blocks : this.loadDefaultBlocks();\n    }\n    loadDefaultBlocks() {\n        return [\n            {\n                blockId: 'tmdjr',\n                sortIndex: 0,\n                componentInstanceName: 'HeaderBlockComponent',\n                dataClean: \"Let's get started... 🚀\",\n                savedAction: 'h1',\n            },\n        ];\n    }\n    removeDuplicateBlocksWithSameIds(blocks) {\n        return Array.from(new Map(blocks.map((block) => [block.blockId, block])).values());\n    }\n    sortBlocks(blocks) {\n        return blocks.sort((a, b) => a.sortIndex - b.sortIndex);\n    }\n    combineSupportBlocks(blocks) {\n        return combineLatest([of(blocks), this.supportedBlocks$]);\n    }\n    createALookupMapForSupportedBlocks(blocks, supportedBlocks) {\n        return {\n            blocks,\n            supportedBlocksMap: new Map(supportedBlocks.map((sb) => [sb.componentInstanceName, sb.component])),\n        };\n    }\n    findAndMarshalBlocksComponent(blocks, supportedBlocksMap) {\n        return blocks.map((block) => ({\n            ...block,\n            component: supportedBlocksMap.get(block.componentInstanceName) ??\n                HeaderBlockComponent,\n        }));\n    }\n    addBlocksToEditorJs(blocks) {\n        return combineLatest(blocks.map((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass EditorJsComponent {\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    bootstrapEditorJs = input();\n    blocks = input.required({\n        transform: (value) => this.ngxEditorJs2Service.blocksToLoad.next(value),\n    });\n    ngxEditor = viewChild.required('ngxEditor', { read: ViewContainerRef });\n    constructor() {\n        effect(() => {\n            this.editorJsService.setNgxEditor(this.ngxEditor());\n        });\n    }\n    // * DEBUGGING\n    // ngOnInit() {\n    //   this.editorJsService.formGroup.valueChanges.subscribe((value) => {\n    //     console.log('[formGroup.value] : ', value);\n    //   });\n    //   this.editorJsService.blockComponents$.subscribe((components) => {\n    //     console.log('[components] : ', components);\n    //   });\n    // }\n    drop(event) {\n        lastValueFrom(this.editorJsService.moveBlockComponentPosition(event.previousIndex, event.currentIndex)).then(() => {\n            // DRAG ANIMATION HOT FIX\n            // Wait for Angular to update the DOM, then remove the animation class\n            requestAnimationFrame(() => {\n                document.querySelectorAll('.cdk-drag-animating').forEach((el) => {\n                    const element = el;\n                    element.classList.remove('cdk-drag-animating'); // Ensure old class is removed\n                    void element.offsetWidth; // Force reflow\n                    element.classList.add('cdk-drag-animating'); // Re-add for next drag\n                });\n            });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.2.0\", version: \"20.0.4\", type: EditorJsComponent, isStandalone: true, selector: \"editor-js\", inputs: { bootstrapEditorJs: { classPropertyName: \"bootstrapEditorJs\", publicName: \"bootstrapEditorJs\", isSignal: true, isRequired: false, transformFunction: null }, blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: true, transformFunction: null } }, viewQueries: [{ propertyName: \"ngxEditor\", first: true, predicate: [\"ngxEditor\"], descendants: true, read: ViewContainerRef, isSignal: true }], ngImport: i0, template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, isInline: true, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\", \"cdkDropListElementContainer\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'editor-js', imports: [CdkDropList], template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nclass ToolbarInlineComponent {\n    // @Input() selection!: Selection;\n    selection = input.required();\n    closeOverlayEmitter = new EventEmitter();\n    renderer = inject(Renderer2);\n    url = '';\n    showURLInputField = signal(false);\n    savedRanges = [];\n    options = [\n        { icon: 'format_bold', action: 'bold' },\n        { icon: 'format_italic', action: 'italic' },\n        { icon: 'format_underlined', action: 'underline' },\n        { icon: 'strikethrough_s', action: 'strikethrough' },\n        { icon: 'format_list_bulleted', action: 'insertUnorderedList' },\n        { icon: 'format_list_numbered', action: 'insertOrderedList' },\n        { icon: 'highlight', action: 'highlightColor' },\n        { icon: 'format_align_left', action: 'justifyLeft' },\n        { icon: 'format_align_center', action: 'justifyCenter' },\n        { icon: 'format_align_right', action: 'justifyRight' },\n        { icon: 'format_align_justify', action: 'justifyFull' },\n    ];\n    addInlineTag(tag) {\n        // https://stackoverflow.com/questions/60581285/execcommand-is-now-obsolete-whats-the-alternative\n        document.execCommand(tag);\n        this.closeOverlayEmitter.emit();\n    }\n    addClassTag(tag, className) {\n        const range = this.selection().getRangeAt(0);\n        const element = this.renderer.createElement(tag);\n        element.className = className ?? '';\n        element.innerHTML = range.toString();\n        range.deleteContents();\n        range.insertNode(element);\n        this.closeOverlayEmitter.emit();\n    }\n    clearTags() {\n        document.execCommand('removeFormat');\n        document.execCommand('unlink');\n        this.closeOverlayEmitter.emit();\n    }\n    openUrlInput() {\n        this.savedRanges.push(this.selection().getRangeAt(0));\n        this.showURLInputField.set(true);\n    }\n    createLink() {\n        this.selection().removeAllRanges();\n        this.selection().addRange(this.savedRanges.pop());\n        document.execCommand('createLink', false, this.url);\n        this.closeOverlayEmitter.emit();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarInlineComponent, isStandalone: true, selector: \"toolbar-inline\", inputs: { selection: { classPropertyName: \"selection\", publicName: \"selection\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { closeOverlayEmitter: \"closeOverlay\" }, host: { classAttribute: \"mat-elevation-z24\" }, ngImport: i0, template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, isInline: true, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"], dependencies: [{ kind: \"ngmodule\", type: MatListModule }, { kind: \"ngmodule\", type: MatIconModule }, { kind: \"component\", type: i1$2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-inline', imports: [MatListModule, MatIconModule, FormsModule], host: { class: 'mat-elevation-z24' }, template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"] }]\n        }], propDecorators: { closeOverlayEmitter: [{\n                type: Output,\n                args: ['closeOverlay']\n            }] } });\n\nclass ToolbarInlineService {\n    overlay = inject(Overlay);\n    overlayRef;\n    determineToDisplayInlineToolbarBlock(_event) {\n        return of(window.getSelection()).pipe(filter((selection) => selection !== null), filter((selection) => selection.rangeCount > 0), filter((selection) => selection.toString().length > 0), filter((selection) => selection.toString() !== ''), tap(() => this.overlayRef?.hasAttached() && this.overlayRef.dispose()), // So hacky tired to do this properly\n        map((selection) => ({\n            selection,\n            parant: this.getSelectionParent(selection),\n        })), filter(({ parant }) => this.isSelectionInABlock(parant)), exhaustMap(({ selection }) => this.attachInlineToolbar(selection)));\n    }\n    getSelectionParent(selection) {\n        const range = selection.getRangeAt(0);\n        return range.commonAncestorContainer.nodeType === Node.ELEMENT_NODE\n            ? range.commonAncestorContainer\n            : range.commonAncestorContainer.parentElement;\n    }\n    isSelectionInABlock(target) {\n        // ! TODO: This is a hacky way to determine if the selection is in a block\n        // ! Need to also check if the block wants to display the inline toolbar\n        return (!!target &&\n            (target.closest('.no-toolbar-inline') !== null\n                ? false\n                : target.closest('ngx-editor-js2') !== null\n                    ? true\n                    : false));\n    }\n    attachInlineToolbar(selection) {\n        return of(selection.getRangeAt(0)).pipe(map((range) => range.getBoundingClientRect()), map((selectionRect) => this.createOverlay(selectionRect)), \n        // So hacky tired to do this properly\n        // passing the refs down the pipe adds a bug\n        // user selects text with a drag\n        // (mousedown → mousemove → wait → mousemove → mouseup)\n        tap((overlayRef) => (this.overlayRef = overlayRef)), map((overlayRef) => {\n            const inlineToolbar = overlayRef.attach(new ComponentPortal(ToolbarInlineComponent));\n            inlineToolbar.setInput('selection', selection);\n            lastValueFrom(merge(overlayRef.backdropClick(), inlineToolbar.instance.closeOverlayEmitter).pipe(tap(() => overlayRef.dispose()), tap(() => selection.removeAllRanges())));\n            return true;\n        }));\n    }\n    createOverlay(selectionRect) {\n        return this.overlay.create({\n            hasBackdrop: true,\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            positionStrategy: this.overlay\n                .position()\n                .flexibleConnectedTo(selectionRect)\n                .withPositions([\n                {\n                    offsetY: 8,\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                },\n            ]),\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass NgxEditorJs2Component {\n    inlineToolbarSerivce = inject(ToolbarInlineService);\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    blocks = input([]);\n    blocksRequested = output();\n    requestBlocks = input.required({\n        transform: (value) => value && this.blocksRequested.emit(this.editorJsService.getBlocks$()),\n    });\n    bootstrapEditorJs$ = combineLatest([\n        inject(ToolFabService).toolbarComponentRef$,\n        this.ngxEditorJs2Service.loadBlocks$,\n        fromEvent(document, 'selectionchange').pipe(debounceTime(200), switchMap((event) => this.inlineToolbarSerivce.determineToDisplayInlineToolbarBlock(event)))\n    ]);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Component, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: NgxEditorJs2Component, isStandalone: true, selector: \"ngx-editor-js2\", inputs: { blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: false, transformFunction: null }, requestBlocks: { classPropertyName: \"requestBlocks\", publicName: \"requestBlocks\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { blocksRequested: \"blocksRequested\" }, ngImport: i0, template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `, isInline: true, dependencies: [{ kind: \"component\", type: EditorJsComponent, selector: \"editor-js\", inputs: [\"bootstrapEditorJs\", \"blocks\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Component, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-editor-js2',\n                    imports: [EditorJsComponent, AsyncPipe],\n                    template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `,\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-editor-js2\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofocusDirective, CleanPasteDataDirective, ControlAccessorDirective, NGX_EDITORJS_OPTIONS, NgxEditorJs2Component, NgxEditorJs2Service, ToolbarFabDirective };\n","import { Component } from '@angular/core';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ThemePickerComponent } from './theme-picker.component';\n\n@Component({\n  selector: 'app-nav-bar',\n  imports: [MatIcon, MatButtonModule, ThemePickerComponent],\n  template: `\n    <nav class=\"docs-navbar-header\">\n      <a\n        mat-button\n        href=\"https://github.com/Ba5ik7/ngx-editor-js2-blocks\"\n        target=\"_blank\"\n      >\n        <mat-icon>format_size</mat-icon>Ngx EditorJs 2\n      </a>\n      <div class=\"flex-spacer\"></div>\n      <app-theme-picker></app-theme-picker>\n    </nav>\n  `,\n  styles: [\n    `\n      :host {\n        color: var(--mat-sys-on-primary-container);\n        background-color: var(--mat-sys-primary-container);\n        box-shadow: var(--mat-sys-level5);\n        .docs-navbar-header {\n          display: flex;\n          flex-wrap: wrap;\n          align-items: center;\n          padding: 0.5em 1em;\n          mat-icon {\n            font-size: 2rem;\n            width: 2rem;\n            height: 2rem;\n            margin: 0 0.1em 0.1875em 0;\n            vertical-align: middle;\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class NavBarComponent {}\n","import { Component, inject, input } from '@angular/core';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatMenu, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatSlideToggle } from '@angular/material/slide-toggle';\nimport {\n  DocsSiteTheme,\n  ThemePickerService,\n} from '../services/theme-picker.service';\n\n// Menu Item\n@Component({\n  selector: 'app-theme-picker-menu-item',\n  imports: [MatMenuItem, MatIcon],\n  template: `\n    <button mat-menu-item>\n      @if (isCurrentTheme(); as isCurrentTheme) {\n      <mat-icon class=\"docs-theme-selected-icon\">radio_button_checked</mat-icon>\n      } @else {\n      <mat-icon>radio_button_unchecked</mat-icon>\n      }\n      <span>{{ theme().displayName }}</span>\n      <svg\n        matMenuItemIcon\n        class=\"theme-example-icon\"\n        width=\"80\"\n        height=\"80\"\n        viewBox=\"0 0 80 80\"\n      >\n        <path\n          class=\"theme-example-background\"\n          d=\"M77.87 0C79.05 0 80 .95 80 2.13v75.74c0 1.17-.95 2.13-2.13 2.13H2.13C.96 80 0 79.04 0 77.87V2.13C0 .95.96 0 2.13 0h75.74z\"\n        />\n        <path\n          [attr.fill]=\"theme().color\"\n          d=\"M54 40c3.32 0 6 2.69 6 6 0 1.2 0-1.2 0 0 0 3.31-2.68 6-6 6H26c-3.31 0-6-2.69-6-6 0-1.2 0 1.2 0 0 0-3.31 2.69-6 6-6h28z\"\n        />\n        <path [attr.fill]=\"theme().color\" d=\"M0 0h80v17.24H0V0z\" />\n      </svg>\n    </button>\n  `,\n  styles: [\n    `\n      :host {\n        .theme-example-icon {\n          margin-right: 0;\n          margin-left: 24px;\n          order: 1;\n          width: 24px;\n          height: 24px;\n          border-radius: 4px;\n          border: solid 1px\n            color-mix(in srgb, var(--mat-sys-outline-variant) 50%, transparent);\n\n          .theme-example-background {\n            fill: var(--mat-sys-surface-container-lowest);\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class ThemePickerMenuItemComponent {\n  theme = input.required<DocsSiteTheme>();\n  isCurrentTheme = input.required<boolean>();\n}\n// Menu\n@Component({\n  selector: 'app-theme-picker',\n  imports: [\n    MatIconButton,\n    MatMenu,\n    MatMenuTrigger,\n    MatIcon,\n    MatTooltip,\n    MatSlideToggle,\n    ThemePickerMenuItemComponent,\n    MatMenuItem,\n  ],\n  template: `\n    <button\n      mat-icon-button\n      [mat-menu-trigger-for]=\"themeMenu\"\n      matTooltip=\"Select a theme for the documentation\"\n    >\n      <mat-icon>format_color_fill</mat-icon>\n    </button>\n\n    <mat-menu #themeMenu=\"matMenu\" xPosition=\"before\">\n      <div mat-menu-item>\n        <mat-slide-toggle\n          [checked]=\"darkMode()\"\n          (toggleChange)=\"toggleDarkMode()\"\n          >Dark Mode</mat-slide-toggle\n        >\n      </div>\n      @for (theme of themes; track $index) {\n      <app-theme-picker-menu-item\n        [theme]=\"theme\"\n        [isCurrentTheme]=\"theme.name === currentTheme()\"\n        (click)=\"selectTheme(theme.name)\"\n      ></app-theme-picker-menu-item>\n      }\n    </mat-menu>\n  `,\n  styles: [\n    `\n      @use '@angular/material' as mat;\n      :host {\n        button {\n          @include mat.icon-overrides(\n            (\n              color: var(--mat-sys-primary),\n            )\n          );\n        }\n      }\n    `,\n  ],\n})\nexport class ThemePickerComponent {\n  themePickerService = inject(ThemePickerService);\n  themes = ThemePickerService.THEMES;\n  currentTheme = this.themePickerService.currentTheme;\n  darkMode = this.themePickerService.darkMode;\n\n  selectTheme(theme: string): void {\n    this.themePickerService.userSelectedTheme.set(theme);\n  }\n\n  toggleDarkMode(): void {\n    this.themePickerService.darkMode.set(!this.darkMode());\n  }\n}\n","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nexport { _asyncToGenerator as default };"],"names":["linkedSignal","resource","signal","ThemePickerService","THEME_EXAMPLE_ICON","DEFAULT_THEME","THEME_STRORAGE_KEY","DARK_MODE_STRORAGE_KEY","THEMES","displayName","name","color","darkMode","localStorage","getItem","darkModeResource","params","loader","_ref","_asyncToGenerator","setItem","toString","_x","apply","arguments","userSelectedTheme","currentTheme","source","computation","newTheme","previous","setThemeStyleAndLocalStorage","value","document","body","className","factory","ɵfac","providedIn","BehaviorSubject","lastValueFrom","tap","TEST_DATA","blockId","sortIndex","componentInstanceName","savedAction","dataClean","TEST_DATA_TWO","AppService","ngxEditorJsBlocks","ngxEditorJsBlocks$","asObservable","requestBlocks","requestBlocks$","handleBlocks","blocks$","pipe","console","table","inject","MatButton","MatTooltip","HeroComponent","appService","saveValue","next","switch","loadValue","clearValue","selectors","decls","vars","consts","template","HeroComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HeroComponent_Template_button_click_8_listener","HeroComponent_Template_button_click_10_listener","HeroComponent_Template_button_click_12_listener","styles","FooterComponent","FooterComponent_Template","ɵɵelement","NavBarComponent","DocumentComponent","AppComponent","AppComponent_Template","MatCard","MatCardContent","NgxEditorJs2Component","AsyncPipe","DocumentComponent_Template","DocumentComponent_Template_ngx_editor_js2_blocksRequested_2_listener","$event","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","ElementRef","input","forwardRef","HostListener","Directive","output","Component","Injectable","ViewContainerRef","effect","InjectionToken","viewChild","EventEmitter","Renderer2","Output","i2","NG_VALUE_ACCESSOR","FormControl","ReactiveFormsModule","FormBuilder","FormsModule","startWith","combineLatest","map","firstValueFrom","of","from","filter","defaultIfEmpty","Observable","forkJoin","iif","switchMap","mergeMap","distinctUntilChanged","delay","exhaustMap","merge","fromEvent","debounceTime","MatRipple","i1$1","CdkDragHandle","CdkDrag","CdkDropList","i1","OverlayModule","Overlay","i1$2","MatIcon","MatIconModule","NgTemplateOutlet","NgClass","toObservable","MatFormField","MatLabel","MatInput","MatList","MatListItem","MatListModule","ComponentPortal","ToolbarBlockOptionsComponent_For_11_Conditional_1_Template","blockOptionAction_r2","ɵɵnextContext","$implicit","ɵɵtextInterpolate1","text","ToolbarBlockOptionsComponent_For_11_Conditional_2_Template","ɵɵtextInterpolate","icon","ToolbarBlockOptionsComponent_For_11_Template","_r1","ɵɵgetCurrentView","ToolbarBlockOptionsComponent_For_11_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵresetView","handleAction","action","ɵɵconditionalCreate","ɵɵconditional","ToolbarBlocksComponent_Conditional_5_Conditional_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template_mat_list_item_click_0_listener","block_r2","addBlock","ToolbarBlocksComponent_Conditional_5_Conditional_2_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIndex","filteredBlocks_r4","ɵɵrepeater","ToolbarBlocksComponent_Conditional_5_Template","length","ToolbarComponent_ng_template_9_Template","_r2","ToolbarComponent_ng_template_9_Template_toolbar_blocks_addBlock_0_listener","supportedBlocks","ToolbarComponent_ng_template_10_Template","_r4","ToolbarComponent_ng_template_10_Template_toolbar_block_options_handleAction_0_listener","ToolbarComponent_ng_template_10_Template_toolbar_block_options_moveBlockPosition_0_listener","moveBlockPosition","blockOptionActions","HeaderBlockComponent_Case_0_ng_container_1_Template","ɵɵelementContainer","HeaderBlockComponent_Case_0_Template","ɵɵtemplate","sharedHeaderTemplate_r1","ɵɵreference","HeaderBlockComponent_Case_1_ng_container_1_Template","HeaderBlockComponent_Case_1_Template","HeaderBlockComponent_Case_2_ng_container_1_Template","HeaderBlockComponent_Case_2_Template","HeaderBlockComponent_Case_3_ng_container_1_Template","HeaderBlockComponent_Case_3_Template","HeaderBlockComponent_Case_4_ng_container_1_Template","HeaderBlockComponent_Case_4_Template","HeaderBlockComponent_Case_5_ng_container_1_Template","HeaderBlockComponent_Case_5_Template","HeaderBlockComponent_ng_template_6_Template","tmp_2_0","ctx_r1","formGroup","get","formControlName","actionCallbackBind","autofocus","_c0","ToolbarInlineComponent_For_2_Template","ToolbarInlineComponent_For_2_Template_div_click_0_listener","item_r2","addInlineTag","ToolbarInlineComponent_Conditional_12_Template","ɵɵtwoWayListener","ToolbarInlineComponent_Conditional_12_Template_input_ngModelChange_1_listener","ɵɵtwoWayBindingSet","url","ToolbarInlineComponent_Conditional_12_Template_div_click_2_listener","createLink","ɵɵtwoWayProperty","ControlAccessorDirective","elementRef","defaultValue","onChange","onTouched","writeValue","nativeElement","innerHTML","registerOnChange","fn","registerOnTouched","onBlur","onInput","ControlAccessorDirective_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","hostBindings","ControlAccessorDirective_HostBindings","ControlAccessorDirective_blur_HostBindingHandler","ControlAccessorDirective_input_HostBindingHandler","inputs","features","ɵɵProvidersFeature","provide","useExisting","multi","ngDevMode","AutofocusDirective","ngAfterContentInit","focus","AutofocusDirective_Factory","MovePositionActions","ToolbarBlockOptionsComponent","Position","handleActionEmitter","alias","moveBlockPositionEmitter","movePosition","emit","ToolbarBlockOptionsComponent_Factory","ɵcmp","ɵɵdefineComponent","outputs","ToolbarBlockOptionsComponent_Template","ToolbarBlockOptionsComponent_Template_div_click_1_listener","UP","ToolbarBlockOptionsComponent_Template_div_click_4_listener","DELETE","ToolbarBlockOptionsComponent_Template_div_click_7_listener","DOWN","dependencies","ToolbarBlocksComponent","addBlockEmitter","supportedBlocks$","blockCtrl","filter$","valueChanges","filteredBlocks$","blocks","filterString","replace","pattern","split","v","join","regex","RegExp","block","match","component","ToolbarBlocksComponent_Factory","ToolbarBlocksComponent_Template","ɵɵpipe","DefaultValueAccessor","NgControlStatus","FormControlDirective","ToolbarComponent","componentContextPositionIndex","required","actionCallback","addBlockCallback","moveBlockPositionCallback","openBlocks","openBlocksOption","openBlocksList","update","prev","openBlockOptionList","closeLists","set","ToolbarComponent_Factory","ToolbarComponent_Template","ToolbarComponent_Template_div_click_1_listener","ToolbarComponent_Template_div_click_5_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_9_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_10_listener","blockListTigger_r5","blockOptionListTigger_r6","CdkConnectedOverlay","CdkOverlayOrigin","BlockMovementService","componentRefMap","Map","clearComponentRefs","clear","getNgxEditorJsBlocks","Array","values","newComponentAttached","componentRef","instance","updateComponentIndices","ngxEditor","setInput","indexOf","hostView","moveBlockComponentPosition","index","componentRefs","find","totalComponents","currentIndex","newIndex","Math","max","min","move","removeBlockComponent","delete","successful","remove","BlockMovementService_Factory","ɵprov","ɵɵdefineInjectable","token","createUID","random","substring","EditorJsService","formBuilder","blockMovementService","group","setNgxEditor","getBlocks$","observer","sort","a","b","then","complete","createNgxEditorJsBlockWithComponent","blockComponent","addBlockComponent","ngxEditorJsBlock","createFormGroupControl","attachComponent","control","formControl","addControl","controlName","createComponent","determineMovePositionAction","previousIndex","viewRef","removeControl","clearBlocks","EditorJsService_Factory","ToolFabService","ngxEditorJs2Service","NgxEditorJs2Service","editorJsService","componentContext","toolbarComponentRef$","current","viewContainerRef","bind","movePositionAction","ToolFabService_Factory","ToolbarFabDirective","toolFabService","onMouseEnter","constructor","ToolbarFabDirective_Factory","ToolbarFabDirective_HostBindings","ToolbarFabDirective_mouseenter_HostBindingHandler","CleanPasteDataDirective","onPaste","event","preventDefault","clipboardData","getData","execCommand","CleanPasteDataDirective_Factory","CleanPasteDataDirective_HostBindings","CleanPasteDataDirective_paste_HostBindingHandler","HeaderBlockComponent","selectedAction","HeaderBlockComponent_Factory","hostAttrs","ɵɵHostDirectivesFeature","HeaderBlockComponent_Template","ɵɵtemplateRefExtractor","tmp_1_0","NgControlStatusGroup","FormGroupDirective","FormControlName","ParagraphBlockComponent","ParagraphBlockComponent_Factory","ParagraphBlockComponent_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","NGX_EDITORJS_OPTIONS","consumerSupportedBlocks","optional","internalSupportedBlocks","internal","consumer","blocksToLoad","loadBlocks$","clearBlocksFromEditorJs","determineToloadDefaultBlocks","removeDuplicateBlocksWithSameIds","sortBlocks","combineSupportBlocks","createALookupMapForSupportedBlocks","supportedBlocksMap","findAndMarshalBlocksComponent","addBlocksToEditorJs","loadDefaultBlocks","sb","NgxEditorJs2Service_Factory","EditorJsComponent","bootstrapEditorJs","transform","read","drop","requestAnimationFrame","querySelectorAll","forEach","el","element","classList","offsetWidth","add","EditorJsComponent_Factory","viewQuery","EditorJsComponent_Query","ɵɵviewQuerySignal","ɵɵqueryAdvance","EditorJsComponent_Template","EditorJsComponent_Template_div_cdkDropListDropped_0_listener","ToolbarInlineComponent","selection","closeOverlayEmitter","renderer","showURLInputField","savedRanges","options","tag","addClassTag","range","getRangeAt","createElement","deleteContents","insertNode","clearTags","openUrlInput","push","removeAllRanges","addRange","pop","ToolbarInlineComponent_Factory","ToolbarInlineComponent_Template","ToolbarInlineComponent_Template_div_click_3_listener","ToolbarInlineComponent_Template_div_click_6_listener","ToolbarInlineComponent_Template_div_click_9_listener","NgModel","ToolbarInlineService","overlay","overlayRef","determineToDisplayInlineToolbarBlock","_event","window","getSelection","rangeCount","hasAttached","dispose","parant","getSelectionParent","isSelectionInABlock","attachInlineToolbar","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","parentElement","target","closest","getBoundingClientRect","selectionRect","createOverlay","inlineToolbar","attach","backdropClick","create","hasBackdrop","backdropClass","positionStrategy","position","flexibleConnectedTo","withPositions","offsetY","originX","originY","overlayX","overlayY","ToolbarInlineService_Factory","inlineToolbarSerivce","blocksRequested","bootstrapEditorJs$","NgxEditorJs2Component_Factory","NgxEditorJs2Component_Template","encapsulation","MatButtonModule","ThemePickerComponent","NavBarComponent_Template","MatIconButton","MatMenu","MatMenuItem","MatMenuTrigger","MatSlideToggle","ThemePickerComponent_For_9_Template_app_theme_picker_menu_item_click_0_listener","theme_r3","ctx_r3","selectTheme","ThemePickerMenuItemComponent","theme","isCurrentTheme","ThemePickerMenuItemComponent_Template","ThemePickerMenuItemComponent_Conditional_1_Template","ThemePickerMenuItemComponent_Conditional_2_Template","tmp_0_0","themePickerService","themes","toggleDarkMode","ThemePickerComponent_Template","ThemePickerComponent_Template_mat_slide_toggle_toggleChange_6_listener","ThemePickerComponent_For_9_Template","themeMenu_r5"],"sourceRoot":"webpack:///","x_google_ignoreList":[6,9]}