{"version":3,"file":"4699.js","mappings":"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","sources":["./projects/demo/src/app/app.component.ts","./projects/demo/src/app/components/document.component.ts","./projects/demo/src/app/components/footer.component.ts","./projects/demo/src/app/components/hero.component.ts","./projects/demo/src/app/components/nav-bar.component.ts","./projects/demo/src/app/components/theme-picker.component.ts","./projects/demo/src/app/services/app.service.ts","./projects/demo/src/app/services/theme-picker.service.ts","./node_modules/@tmdjr/ngx-editor-js2/fesm2022/tmdjr-ngx-editor-js2.mjs","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NavBarComponent } from './components/nav-bar.component';\nimport { HeroComponent } from './components/hero.component';\nimport { DocumentComponent } from './components/document.component';\nimport { FooterComponent } from './components/footer.component';\n\n@Component({\n  selector: 'app-root',\n  imports: [NavBarComponent, HeroComponent, DocumentComponent, FooterComponent],\n  template: `\n    <app-nav-bar></app-nav-bar>\n    <main>\n      <app-hero></app-hero>\n      <app-document></app-document>\n    </main>\n    <app-footer></app-footer>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        flex-direction: column;\n        min-height: 100vh;\n        main {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          gap: 3em;\n          margin-top: 56px;\n          app-document {\n            width: 100%;\n            max-width: 800px;\n            margin-bottom: 3em;\n          }\n        }\n        app-nav-bar {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          z-index: 2;\n        }\n      }\n    `,\n  ],\n})\nexport class AppComponent {}\n","import { Component, inject } from '@angular/core';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { NgxEditorJs2Component } from '@tmdjr/ngx-editor-js2';\nimport { AppService } from '../services/app.service';\nimport { AsyncPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-document',\n  imports: [MatCard, MatCardContent, NgxEditorJs2Component, AsyncPipe],\n  template: `\n    <mat-card appearance=\"outlined\">\n      <mat-card-content>\n        <ngx-editor-js2\n          [blocks]=\"(appService.ngxEditorJsBlocks$ | async)!\"\n          [requestBlocks]=\"appService.requestBlocks$ | async\"\n          (blocksRequested)=\"appService.handleBlocks($event)\"\n        ></ngx-editor-js2>\n      </mat-card-content>\n    </mat-card>\n  `,\n  styles: [\n    `\n      @use '@angular/material' as mat;\n      :host {\n        @include mat.card-overrides(\n          (\n            outlined-outline-width: 0.5px,\n            outlined-container-color: var(--mat-sys-surface-container-low),\n            outlined-outline-color: var(--mat-sys-on-surface),\n          )\n        );\n      }\n    `,\n  ],\n})\nexport class DocumentComponent {\n  appService = inject(AppService);\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  template: `\n    <footer class=\"footer\">\n      <a\n        class=\"a\"\n        href=\"https://github.com/Ba5ik7/ngx-editor-js2-blocks\"\n        target=\"_blank\"\n      >\n\n<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><title>github-circle-white-transparent</title><path d=\"M10 0C4.477 0 0 4.477 0 10c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V19c0 .27.16.59.67.5C17.14 18.16 20 14.42 20 10A10 10 0 0 0 10 0z\" fill=\"#FFF\" fill-rule=\"evenodd\"/></svg>\n        <span class=\"flex-grow\"></span>\n        Made with ❤️\n      </a>\n    </footer>\n  `,\n  styles: [\n    `\n      :host {\n        footer {\n          display: flex;\n          color: var(--mat-sys-on-secondary-container);\n          // background: var(--mat-sys-secondary-container);\n          padding: 4px;\n          text-align: right;\n          a {\n            display: flex;\n            font-size: 0.1875em;\n            text-decoration: none;\n            color: var(--mat-sys-on-secondary-container);\n            align-items: center;\n            gap: 0.5em;\n            svg {\n              width: 16px;\n              path {\n\n                fill: var(--mat-sys-on-secondary-container);\n              }\n            }\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class FooterComponent {}\n","import { Component, inject } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { AppService, TEST_DATA, TEST_DATA_TWO } from '../services/app.service';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-hero',\n  imports: [MatButton, MatTooltip],\n  template: `\n    <header class=\"header-background\">\n      <div class=\"header-section\">\n        <div class=\"header-headline\">\n          <h1>Ngx EditorJs2</h1>\n          <h2>A Custom Themeable Angular Material 3 Component</h2>\n        </div>\n        <div class=\"header-start\">\n          <button\n            mat-stroked-button\n            matTooltip=\"Simulate loading blocks\"\n            (click)=\"loadValue()\"\n          >\n            Load\n          </button>\n          <button\n            mat-stroked-button\n            matTooltip=\"Simulate clearing blocks\"\n            (click)=\"clearValue()\"\n          >\n            Clear\n          </button>\n          <button\n            mat-stroked-button\n            matTooltip=\"Open the console for blocks\"\n            (click)=\"saveValue()\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </header>\n  `,\n  styles: [\n    `\n      @use '@angular/material' as mat;\n\n      :host {\n        width: 100%;\n        @include mat.button-overrides(\n          (\n            outlined-label-text-color: var(--mat-sys-on-secondary),\n          )\n        );\n        .header-background {\n          overflow: hidden;\n          position: relative;\n          height: 360px;\n          color: var(--mat-sys-on-secondary);\n          background: var(--mat-sys-secondary);\n          &::before {\n            content: '';\n            background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" width=\"48\" fill=\"%23FFFFFF\"><path d=\"M14.5 40V13H4V8h26v5H19.5v27Zm18 0V23H26v-5h18v5h-6.5v17Z\"/></svg>');\n            background-repeat: no-repeat;\n            background-size: 400px;\n            background-position: 80% -25px;\n            opacity: 0.2;\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n          }\n        }\n        .header-section {\n          display: flex;\n          justify-content: center;\n          flex-direction: column;\n          align-items: center;\n          height: 100%;\n          text-align: center;\n          .header-headline {\n            h1 {\n              font-size: 56px;\n              font-weight: bold;\n              line-height: 56px;\n              margin: 15px 5px;\n            }\n            h2 {\n              font-size: 20px;\n              font-weight: 300;\n              line-height: 28px;\n              margin: 15px 0 25px 0;\n            }\n          }\n          .header-start {\n            display: flex;\n            flex-direction: row;\n            gap: 10px;\n            button {\n              margin: 0 5px;\n            }\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class HeroComponent {\n  appService = inject(AppService);\n\n  saveValue() {\n    this.appService.requestBlocks.next({});\n  }\n\n  switch = false;\n  loadValue() {\n    this.switch = !this.switch;\n    this.appService.ngxEditorJsBlocks.next(\n      this.switch ? TEST_DATA : TEST_DATA_TWO\n    );\n  }\n\n  clearValue() {\n    this.appService.ngxEditorJsBlocks.next([]);\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ThemePickerComponent } from './theme-picker.component';\n\n@Component({\n  selector: 'app-nav-bar',\n  imports: [MatIcon, MatButtonModule, ThemePickerComponent],\n  template: `\n    <nav class=\"docs-navbar-header\">\n      <a\n        mat-button\n        href=\"https://github.com/Ba5ik7/ngx-editor-js2-blocks\"\n        target=\"_blank\"\n      >\n        <mat-icon>format_size</mat-icon>Ngx EditorJs 2\n      </a>\n      <div class=\"flex-spacer\"></div>\n      <app-theme-picker></app-theme-picker>\n    </nav>\n  `,\n  styles: [\n    `\n      :host {\n        color: var(--mat-sys-on-primary-container);\n        background-color: var(--mat-sys-primary-container);\n        box-shadow: var(--mat-sys-level5);\n        .docs-navbar-header {\n          display: flex;\n          flex-wrap: wrap;\n          align-items: center;\n          padding: 0.5em 1em;\n          mat-icon {\n            font-size: 2rem;\n            width: 2rem;\n            height: 2rem;\n            margin: 0 0.1em 0.1875em 0;\n            vertical-align: middle;\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class NavBarComponent {}\n","import { Component, inject, input } from '@angular/core';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatMenu, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatSlideToggle } from '@angular/material/slide-toggle';\nimport {\n  DocsSiteTheme,\n  ThemePickerService,\n} from '../services/theme-picker.service';\n\n// Menu Item\n@Component({\n  selector: 'app-theme-picker-menu-item',\n  imports: [MatMenuItem, MatIcon],\n  template: `\n    <button mat-menu-item>\n      @if (isCurrentTheme(); as isCurrentTheme) {\n      <mat-icon class=\"docs-theme-selected-icon\">radio_button_checked</mat-icon>\n      } @else {\n      <mat-icon>radio_button_unchecked</mat-icon>\n      }\n      <span>{{ theme().displayName }}</span>\n      <svg\n        matMenuItemIcon\n        class=\"theme-example-icon\"\n        width=\"80\"\n        height=\"80\"\n        viewBox=\"0 0 80 80\"\n      >\n        <path\n          class=\"theme-example-background\"\n          d=\"M77.87 0C79.05 0 80 .95 80 2.13v75.74c0 1.17-.95 2.13-2.13 2.13H2.13C.96 80 0 79.04 0 77.87V2.13C0 .95.96 0 2.13 0h75.74z\"\n        />\n        <path\n          [attr.fill]=\"theme().color\"\n          d=\"M54 40c3.32 0 6 2.69 6 6 0 1.2 0-1.2 0 0 0 3.31-2.68 6-6 6H26c-3.31 0-6-2.69-6-6 0-1.2 0 1.2 0 0 0-3.31 2.69-6 6-6h28z\"\n        />\n        <path [attr.fill]=\"theme().color\" d=\"M0 0h80v17.24H0V0z\" />\n      </svg>\n    </button>\n  `,\n  styles: [\n    `\n      :host {\n        .theme-example-icon {\n          margin-right: 0;\n          margin-left: 24px;\n          order: 1;\n          width: 24px;\n          height: 24px;\n          border-radius: 4px;\n          border: solid 1px\n            color-mix(in srgb, var(--mat-sys-outline-variant) 50%, transparent);\n\n          .theme-example-background {\n            fill: var(--mat-sys-surface-container-lowest);\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class ThemePickerMenuItemComponent {\n  theme = input.required<DocsSiteTheme>();\n  isCurrentTheme = input.required<boolean>();\n}\n// Menu\n@Component({\n  selector: 'app-theme-picker',\n  imports: [\n    MatIconButton,\n    MatMenu,\n    MatMenuTrigger,\n    MatIcon,\n    MatTooltip,\n    MatSlideToggle,\n    ThemePickerMenuItemComponent,\n    MatMenuItem,\n  ],\n  template: `\n    <button\n      mat-icon-button\n      [mat-menu-trigger-for]=\"themeMenu\"\n      matTooltip=\"Select a theme for the documentation\"\n    >\n      <mat-icon>format_color_fill</mat-icon>\n    </button>\n\n    <mat-menu #themeMenu=\"matMenu\" xPosition=\"before\">\n      <div mat-menu-item>\n        <mat-slide-toggle\n          [checked]=\"darkMode()\"\n          (toggleChange)=\"toggleDarkMode()\"\n          >Dark Mode</mat-slide-toggle\n        >\n      </div>\n      @for (theme of themes; track $index) {\n      <app-theme-picker-menu-item\n        [theme]=\"theme\"\n        [isCurrentTheme]=\"theme.name === currentTheme()\"\n        (click)=\"selectTheme(theme.name)\"\n      ></app-theme-picker-menu-item>\n      }\n    </mat-menu>\n  `,\n  styles: [\n    `\n      @use '@angular/material' as mat;\n      :host {\n        button {\n          @include mat.icon-overrides(\n            (\n              color: var(--mat-sys-primary),\n            )\n          );\n        }\n      }\n    `,\n  ],\n})\nexport class ThemePickerComponent {\n  themePickerService = inject(ThemePickerService);\n  themes = ThemePickerService.THEMES;\n  currentTheme = this.themePickerService.currentTheme;\n  darkMode = this.themePickerService.darkMode;\n\n  selectTheme(theme: string): void {\n    this.themePickerService.userSelectedTheme.set(theme);\n  }\n\n  toggleDarkMode(): void {\n    this.themePickerService.darkMode.set(!this.darkMode());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxEditorJsBlock } from '@tmdjr/ngx-editor-js2';\nimport { BehaviorSubject, lastValueFrom, Observable, tap } from 'rxjs';\n\nexport const TEST_DATA: NgxEditorJsBlock[] = [\n  {\n    blockId: 'n177d7',\n    sortIndex: 0,\n    componentInstanceName: 'NgxEditorJs2BlockquotesComponent',\n    savedAction: 'display-large',\n    dataClean:\n      '`Design is not just what it looks like and feels like. Design is how it works.',\n  },\n  {\n    blockId: 'n177dsd',\n    sortIndex: 1,\n    componentInstanceName: 'NgxEditorJs2ImageComponent',\n    savedAction: 'stretch',\n    dataClean:\n      '{\"url\":\"https://res.cloudinary.com/dowdpiikk/image/upload/w_650,q_auto:best,f_auto/v1709445782/lnyst5aqppuin8wt73ci.webp\",\"title\":\"test\"}',\n  },\n  {\n    blockId: 'iovlbzgosf',\n    sortIndex: 2,\n    componentInstanceName: 'HeaderBlockComponent',\n    savedAction: 'h1',\n    dataClean: 'Prerequisites',\n  },\n  {\n    blockId: '8u3uiij5vyj',\n    sortIndex: 3,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'large',\n    dataClean:\n      '<ul><li><a href=\"https://www.typescriptlang.org/\">TypeScript</a> and HTML5 programming</li><li>Angular app-design fundamentals, as described in <a href=\"https://angular.io/guide/architecture\">Angular Concepts</a><br></li><li>The basics of <a href=\"https://angular.io/guide/architecture-components#template-syntax\">Angular template syntax</a><br></li></ul>',\n  },\n  {\n    blockId: 'bu23hwyltss',\n    sortIndex: 4,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'large',\n    dataClean:\n      'Evaluation of a template expression should have no visible side effects. Use the syntax for template expressions to help avoid side effects. In general, the correct syntax prevents you from assigning a value to anything in a property binding expression. The syntax also prevents you from using increment and decrement operators.',\n  },\n  {\n    blockId: 'uapf2',\n    sortIndex: 5,\n    componentInstanceName: 'NgxEditorJs2MermaidjsComponent',\n    savedAction: 'center',\n    dataClean:\n      'flowchart TD\\n    A[Christmas] -->|Get money| B(Go shopping)\\n    B --> C{Let me think}\\n    C -->|One| D[Laptop]\\n    C -->|Two| E[Hello World iPhone]\\n    C -->|Three| F[fa:fa-car Car]',\n  },\n  {\n    blockId: 'bu23hwyltsww',\n    sortIndex: 6,\n    componentInstanceName: 'ParagraphBlockComponent',\n    savedAction: 'small',\n    dataClean:\n      'Material Design uses color to create accessible, personal color schemes that communicate your products hierarchy, state, and brand. See Material Designs Color System page to learn more about its use and purpose.',\n  },\n  {\n    blockId: 'asdfasdf',\n    sortIndex: 7,\n    componentInstanceName: 'NgxEditorJs2CodemirrorComponent',\n    savedAction: 'text/typescript',\n    dataClean:\n      \"export class SimpleFormGroup {\\n  form = new FormGroup({\\n    first: new FormControl('Nancy', Validators.minLength(2)),\\n    last: new FormControl('Drew'),\\n  });\\n\\n  get first(): any {\\n    return this.form.get('first');\\n  }\\n\\n  onSubmit(): void {\\n    console.log(this.form.value); // {first: 'Nancy', last: 'Drew'}\\n  }\\n\\n  setValue() {\\n    this.form.setValue({first: 'Carson', last: 'Drew'});\\n  }\\n}\",\n  },\n  {\n    blockId: 'l13u3k',\n    sortIndex: 8,\n    componentInstanceName: 'HeaderBlockComponent',\n    savedAction: 'h1',\n    dataClean: 'New way of learning...',\n  },\n  {\n    blockId: '9bqhk',\n    sortIndex: 9,\n    componentInstanceName: 'NgxEditorJs2PopQuizComponent',\n    savedAction: 'display-large',\n    dataClean:\n      '{\"question\":\"Which of the following statements is true about Angular\\'s default RouteReuseStrategy?\",\"answer\":\"It reuses components when the route configuration remains the same.\",\"correctResponse\":\"That\\'s correct! Angular\\'s default RouteReuseStrategy reuses components when the route configuration remains the same. This prevents components from being destroyed and recreated when only the fragment or query parameters change.\",\"incorrectResponse\":\"That\\'s incorrect. The correct answer is C. Angular\\'s default RouteReuseStrategy reuses components when the route configuration remains the same. This prevents components from being destroyed and recreated when only the fragment or query parameters change.\",\"choices\":[{\"value\":\"It only reuses components when the route configuration changes.\"},{\"value\":\"It only reuses components when the route parameters change.\"},{\"value\":\"It reuses components when the route configuration remains the same.\"},{\"value\":\"It never reuses components.\"}]}',\n  },\n];\n\nexport const TEST_DATA_TWO: NgxEditorJsBlock[] = [\n  {\n    blockId: 'iovlbzgosf',\n    sortIndex: 0,\n    componentInstanceName: 'HeaderBlockComponent',\n    dataClean: 'Different Prerequisites',\n    savedAction: 'h1',\n  },\n  {\n    blockId: 'bu23hwyltwl',\n    sortIndex: 1,\n    componentInstanceName: 'ParagraphBlockComponent',\n    dataClean:\n      'Skips the very first call to startViewTransition. This can be useful for disabling the animation during the applications initial loading phase.',\n    savedAction: 'meduim',\n  },\n  {\n    blockId: 'bu23hwyltss',\n    sortIndex: 2,\n    componentInstanceName: 'ParagraphBlockComponent',\n    dataClean: 'SOmeehting Different then the last one',\n    savedAction: 'meduim',\n  },\n  {\n    blockId: 'iovlbzgosuu',\n    sortIndex: 3,\n    componentInstanceName: 'HeaderBlockComponent',\n    dataClean: 'Woah! This is cool..',\n    savedAction: 'h3',\n  },\n  {\n    blockId: 'bu23hwyltsww',\n    sortIndex: 2,\n    componentInstanceName: 'ParagraphBlockComponent',\n    dataClean:\n      'Material Design uses color to create accessible, personal color schemes that communicate your products hierarchy, state, and brand. See Material Designs Color System page to learn more about its use and purpose.',\n    savedAction: 'small',\n  },\n];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n  ngxEditorJsBlocks = new BehaviorSubject<NgxEditorJsBlock[]>(TEST_DATA);\n  ngxEditorJsBlocks$ = this.ngxEditorJsBlocks.asObservable();\n\n  requestBlocks = new BehaviorSubject<{}>({});\n  requestBlocks$ = this.requestBlocks.asObservable();\n\n  handleBlocks(blocks$: Observable<NgxEditorJsBlock[]>) {\n    void lastValueFrom(blocks$.pipe(tap(console.table)));\n  }\n}\n","import {\n  computed,\n  Injectable,\n  linkedSignal,\n  resource,\n  signal,\n} from '@angular/core';\n\nexport interface DocsSiteTheme {\n  name: string;\n  displayName: string;\n  color: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemePickerService {\n  static THEME_EXAMPLE_ICON = 'assets/img/theme-demo-icon.svg';\n  static DEFAULT_THEME = 'cyan-palette';\n  static THEME_STRORAGE_KEY: string = 'theme-picker-current-name';\n  static DARK_MODE_STRORAGE_KEY: string = 'dark-mode';\n  static THEMES: DocsSiteTheme[] = [\n    {\n      displayName: 'Red Palette',\n      name: 'red-palette',\n      color: '#ffd9d4',\n    },\n    {\n      displayName: 'Green Palette',\n      name: 'green-palette',\n      color: '#76ff61',\n    },\n    {\n      displayName: 'Blue Palette',\n      name: 'blue-palette',\n      color: '#e0e0fe',\n    },\n    {\n      displayName: 'Yellow Palette',\n      name: 'yellow-palette',\n      color: '#eaea01',\n    },\n    {\n      displayName: 'Cyan Palette',\n      name: 'cyan-palette',\n      color: '#00fbfb',\n    },\n    {\n      displayName: 'Magenta Palette',\n      name: 'magenta-palette',\n      color: '#ffd6f5',\n    },\n    {\n      displayName: 'Orange Palette',\n      name: 'orange-palette',\n      color: '#ffdcc7',\n    },\n    {\n      displayName: 'Chartreuse Palette',\n      name: 'chartreuse-palette',\n      color: '#82ff0d',\n    },\n    {\n      displayName: 'Spring-Green Palette',\n      name: 'spring-green-palette',\n      color: '#62ff93',\n    },\n    {\n      displayName: 'Azure Palette',\n      name: 'azure-palette',\n      color: '#d6e3fe',\n    },\n    {\n      color: '#810081',\n      displayName: 'Violet Palette',\n      name: 'violet-palette',\n    },\n    {\n      displayName: 'Rose Palette',\n      name: 'rose-palette',\n      color: '#ffd8e1',\n    },\n  ];\n\n  darkMode = signal<boolean>(\n    localStorage.getItem(ThemePickerService.DARK_MODE_STRORAGE_KEY) === 'true'\n  );\n  darkModeResource = resource({\n    request: () => this.darkMode(),\n    loader: async ({ request: darkMode }) => {\n      await localStorage.setItem(\n        ThemePickerService.DARK_MODE_STRORAGE_KEY,\n        darkMode.toString()\n      );\n    },\n  });\n\n  userSelectedTheme = signal<string>(\n    localStorage.getItem(ThemePickerService.THEME_STRORAGE_KEY) ?? ThemePickerService.DEFAULT_THEME\n  );\n  currentTheme = linkedSignal<string, string>({\n    source: this.userSelectedTheme,\n    computation: (newTheme, previous) => {\n      return this.setThemeStyleAndLocalStorage(newTheme)\n        ? newTheme\n        : previous?.value ?? ThemePickerService.DEFAULT_THEME;\n    },\n  });\n\n  setThemeStyleAndLocalStorage(newTheme: string) {\n    localStorage.setItem(ThemePickerService.THEME_STRORAGE_KEY, newTheme);\n    document.body.className = `${newTheme} ${\n      this.darkMode() ? 'dark-mode' : 'light-mode'\n    }`;\n    return true;\n  }\n}\n","import * as i0 from '@angular/core';\nimport { inject, ElementRef, input, forwardRef, Directive, HostListener, output, Component, signal, Injectable, ViewContainerRef, effect, InjectionToken, viewChild, EventEmitter, Renderer2, Output } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormControl, ReactiveFormsModule, FormBuilder, FormsModule } from '@angular/forms';\nimport { startWith, combineLatest, map, firstValueFrom, of, from, tap, filter, defaultIfEmpty, Observable, lastValueFrom, forkJoin, iif, switchMap, mergeMap, BehaviorSubject, distinctUntilChanged, delay, exhaustMap, merge, fromEvent, debounceTime } from 'rxjs';\nimport { MatRipple } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/drag-drop';\nimport { CdkDragHandle, CdkDrag, CdkDropList } from '@angular/cdk/drag-drop';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule, Overlay } from '@angular/cdk/overlay';\nimport * as i1$2 from '@angular/material/icon';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport { AsyncPipe, NgSwitch, NgSwitchCase, NgTemplateOutlet, NgClass } from '@angular/common';\nimport { toObservable } from '@angular/core/rxjs-interop';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatList, MatListItem, MatListModule } from '@angular/material/list';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\nclass ControlAccessorDirective {\n    elementRef = inject(ElementRef);\n    defaultValue = input();\n    onChange = () => { };\n    onTouched = () => { };\n    writeValue() {\n        this.elementRef.nativeElement.innerHTML = this.defaultValue() || '';\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onBlur() {\n        this.onTouched();\n    }\n    onInput() {\n        this.onChange(this.elementRef.nativeElement.innerHTML);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ControlAccessorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ControlAccessorDirective, isStandalone: true, selector: \"[controlAccessor]\", inputs: { defaultValue: { classPropertyName: \"defaultValue\", publicName: \"defaultValue\", isSignal: true, isRequired: false, transformFunction: null } }, host: { listeners: { \"blur\": \"onBlur()\", \"input\": \"onInput()\" } }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => ControlAccessorDirective),\n                multi: true,\n            },\n        ], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ControlAccessorDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[controlAccessor]',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => ControlAccessorDirective),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], propDecorators: { onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onInput: [{\n                type: HostListener,\n                args: ['input']\n            }] } });\n\nclass AutofocusDirective {\n    elementRef = inject(ElementRef);\n    autofocus = input(false);\n    ngAfterContentInit() {\n        this.autofocus() && this.elementRef.nativeElement.focus?.();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: AutofocusDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"19.1.5\", type: AutofocusDirective, isStandalone: true, selector: \"[autofocus]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: AutofocusDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[autofocus]',\n                }]\n        }] });\n\nvar MovePositionActions;\n(function (MovePositionActions) {\n    MovePositionActions[\"UP\"] = \"UP\";\n    MovePositionActions[\"DOWN\"] = \"DOWN\";\n    MovePositionActions[\"DELETE\"] = \"DELETE\";\n})(MovePositionActions || (MovePositionActions = {}));\n\nclass ToolbarBlockOptionsComponent {\n    Position = MovePositionActions;\n    blockOptionActions = input();\n    handleActionEmitter = output({ alias: 'handleAction' });\n    moveBlockPositionEmitter = output({\n        alias: 'moveBlockPosition',\n    });\n    movePosition(action) {\n        this.moveBlockPositionEmitter.emit(action);\n    }\n    handleAction(action) {\n        this.handleActionEmitter.emit(action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlockOptionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.1.5\", type: ToolbarBlockOptionsComponent, isStandalone: true, selector: \"toolbar-block-options\", inputs: { blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { handleActionEmitter: \"handleAction\", moveBlockPositionEmitter: \"moveBlockPosition\" }, ngImport: i0, template: `\n    <div class=\"actions-panel mat-elevation-z24\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:is(:hover,:focus){color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"], dependencies: [{ kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlockOptionsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-block-options', imports: [MatIcon, MatRipple], template: `\n    <div class=\"actions-panel mat-elevation-z24\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:is(:hover,:focus){color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"] }]\n        }] });\n\nclass ToolbarBlocksComponent {\n    addBlockEmitter = output({ alias: 'addBlock' });\n    supportedBlocks = input([]);\n    supportedBlocks$ = toObservable(this.supportedBlocks);\n    blockCtrl = new FormControl([]);\n    filter$ = this.blockCtrl.valueChanges.pipe(startWith(''));\n    filteredBlocks$ = combineLatest([this.supportedBlocks$, this.filter$]).pipe(map(([blocks, filterString]) => {\n        if (typeof filterString !== 'string')\n            filterString = '';\n        filterString = filterString.replace(/\\\\/g, '');\n        const pattern = filterString\n            ?.split('')\n            .map((v) => `(?=.*${v})`)\n            .join('');\n        const regex = new RegExp(`${pattern}`, 'gi');\n        // return blocks.filter(block => regex.exec(block));\n        return blocks.filter((block) => block.name.match(regex));\n    }));\n    addBlock(block) {\n        this.addBlockEmitter.emit(block?.component);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlocksComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.1.5\", type: ToolbarBlocksComponent, isStandalone: true, selector: \"toolbar-blocks\", inputs: { supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { addBlockEmitter: \"addBlock\" }, ngImport: i0, template: `\n    <div class=\"block-list-container mat-elevation-z24\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{background:var(--mat-sys-secondary-container);border-radius:4px}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:is(:hover,:focus){background:var(--mat-sys-surface-bright)}\\n\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"directive\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\", \"disabledInteractive\"], exportAs: [\"matInput\"] }, { kind: \"component\", type: MatList, selector: \"mat-list\", exportAs: [\"matList\"] }, { kind: \"component\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: [\"activated\"], exportAs: [\"matListItem\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatLabel, selector: \"mat-label\" }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlocksComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-blocks', imports: [\n                        MatFormField,\n                        MatInput,\n                        MatList,\n                        MatListItem,\n                        MatRipple,\n                        MatLabel,\n                        ReactiveFormsModule,\n                        AsyncPipe,\n                    ], template: `\n    <div class=\"block-list-container mat-elevation-z24\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{background:var(--mat-sys-secondary-container);border-radius:4px}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:is(:hover,:focus){background:var(--mat-sys-surface-bright)}\\n\"] }]\n        }] });\n\nclass ToolbarComponent {\n    componentContextPositionIndex = input.required();\n    supportedBlocks = input.required();\n    blockOptionActions = input();\n    actionCallback = input(() => () => { });\n    formControlName = input();\n    addBlockCallback = input.required();\n    moveBlockPositionCallback = input.required();\n    openBlocks = signal(false);\n    openBlocksOption = signal(false);\n    openBlocksList() {\n        this.openBlocks.update((prev) => !prev);\n    }\n    openBlockOptionList() {\n        this.openBlocksOption.update((prev) => !prev);\n    }\n    moveBlockPosition(action) {\n        this.closeLists();\n        this.moveBlockPositionCallback()(action, this.componentContextPositionIndex());\n    }\n    handleAction(action) {\n        this.closeLists();\n        this.actionCallback()(action);\n    }\n    addBlock(block) {\n        this.closeLists();\n        firstValueFrom(this.addBlockCallback()(block, this.componentContextPositionIndex()));\n    }\n    closeLists() {\n        this.openBlocks.set(false);\n        this.openBlocksOption.set(false);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ToolbarComponent, isStandalone: true, selector: \"toolbar\", inputs: { componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: false, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: false, transformFunction: null }, addBlockCallback: { classPropertyName: \"addBlockCallback\", publicName: \"addBlockCallback\", isSignal: true, isRequired: true, transformFunction: null }, moveBlockPositionCallback: { classPropertyName: \"moveBlockPositionCallback\", publicName: \"moveBlockPositionCallback\", isSignal: true, isRequired: true, transformFunction: null } }, ngImport: i0, template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, isInline: true, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container)}:host .toolbar-buttons:is(:hover,:focus){background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"ngmodule\", type: OverlayModule }, { kind: \"directive\", type: i1.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\", \"cdkConnectedOverlayDisposeOnNavigation\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i1.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"component\", type: ToolbarBlockOptionsComponent, selector: \"toolbar-block-options\", inputs: [\"blockOptionActions\"], outputs: [\"handleAction\", \"moveBlockPosition\"] }, { kind: \"component\", type: ToolbarBlocksComponent, selector: \"toolbar-blocks\", inputs: [\"supportedBlocks\"], outputs: [\"addBlock\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar', imports: [\n                        CdkDragHandle,\n                        MatRipple,\n                        OverlayModule,\n                        ToolbarBlockOptionsComponent,\n                        ToolbarBlocksComponent,\n                    ], template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container)}:host .toolbar-buttons:is(:hover,:focus){background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"] }]\n        }] });\n\nclass BlockMovementService {\n    componentRefMap = new Map();\n    clearComponentRefs() {\n        this.componentRefMap.clear();\n    }\n    getNgxEditorJsBlocks() {\n        return of(Array.from(this.componentRefMap.values()));\n    }\n    newComponentAttached(componentRef) {\n        this.componentRefMap.set(componentRef.instance, componentRef);\n    }\n    updateComponentIndices(ngxEditor) {\n        return from(this.componentRefMap.values()).pipe(tap((componentRef) => componentRef.setInput('sortIndex', ngxEditor.indexOf(componentRef.hostView))));\n    }\n    moveBlockComponentPosition(ngxEditor, action, index) {\n        return of(Array.from(this.componentRefMap.values())).pipe(map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), filter((componentRef) => !!componentRef), map((componentRef) => ({\n            componentRef,\n            totalComponents: ngxEditor.length - 1,\n            currentIndex: ngxEditor.indexOf(componentRef.hostView),\n            newIndex: (index) => action === MovePositionActions.UP ? index - 1 : index + 1,\n        })), map(({ componentRef, totalComponents, currentIndex, newIndex }) => ({\n            componentRef,\n            currentIndex,\n            newIndex: Math.max(0, Math.min(newIndex(currentIndex), totalComponents)),\n        })), filter(({ currentIndex, newIndex }) => currentIndex !== newIndex), tap(({ componentRef, newIndex }) => {\n            ngxEditor.move(componentRef.hostView, newIndex);\n            componentRef.setInput('sortIndex', newIndex);\n            componentRef.setInput('autofocus', true);\n        }), defaultIfEmpty(false));\n    }\n    removeBlockComponent(ngxEditor, index, clear = false) {\n        return of(Array.from(this.componentRefMap.values())).pipe(filter((componentRefs) => clear || componentRefs.length !== 1), map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), map((componentRef) => this.componentRefMap.delete(componentRef?.instance ?? {})), tap((successful) => successful && ngxEditor.remove(index - 1)), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: BlockMovementService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: BlockMovementService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: BlockMovementService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nconst createUID = () => Math.random().toString(36).substring(7);\nclass EditorJsService {\n    formBuilder = inject(FormBuilder);\n    blockMovementService = inject(BlockMovementService);\n    componentRefMap = new Map();\n    ngxEditor;\n    formGroup = this.formBuilder.group({});\n    // TODO - Handle this idiomatically\n    setNgxEditor(ngxEditor) {\n        this.ngxEditor = ngxEditor;\n    }\n    getBlocks$() {\n        return new Observable((observer) => {\n            lastValueFrom(this.blockMovementService.getNgxEditorJsBlocks().pipe(map((componentRefs) => componentRefs.map(({ instance }) => ({\n                blockId: instance.formControlName(),\n                sortIndex: instance.sortIndex(),\n                componentInstanceName: instance.componentInstanceName,\n                savedAction: instance.savedAction(),\n                dataClean: instance.formGroup().get(instance.formControlName())\n                    ?.value,\n            }))), map((blocks) => blocks.sort((a, b) => a.sortIndex - b.sortIndex)))).then((blocks) => {\n                observer.next(blocks);\n                observer.complete();\n            });\n        });\n    }\n    createNgxEditorJsBlockWithComponent(blockComponent, componentContextPositionIndex) {\n        return of({\n            blockId: createUID(),\n            sortIndex: componentContextPositionIndex,\n            componentInstanceName: blockComponent.name,\n            component: blockComponent,\n            // TODO - Force content-type for dataClean? JSON, HTML, etc.\n            // TODO - And maybe rename dataClean to just data?\n            dataClean: '',\n            autofocus: true,\n        });\n    }\n    addBlockComponent(ngxEditorJsBlock) {\n        return forkJoin([\n            this.createFormGroupControl(ngxEditorJsBlock),\n            this.attachComponent(ngxEditorJsBlock),\n            this.blockMovementService.updateComponentIndices(this.ngxEditor),\n        ]).pipe(map(() => void 0));\n    }\n    createFormGroupControl({ blockId, dataClean, }) {\n        return of(this.formBuilder.control(dataClean, [])).pipe(tap((formControl) => this.formGroup.addControl(blockId, formControl)));\n    }\n    attachComponent({ component, blockId, autofocus, savedAction, sortIndex: index, }) {\n        return of(blockId).pipe(map((controlName) => {\n            const componentRef = this.ngxEditor.createComponent(component, {\n                index,\n            });\n            componentRef.setInput('sortIndex', index);\n            componentRef.setInput('formGroup', this.formGroup);\n            componentRef.setInput('formControlName', controlName);\n            componentRef.setInput('autofocus', autofocus);\n            savedAction && componentRef.instance.actionCallback?.(savedAction);\n            this.blockMovementService.newComponentAttached(componentRef);\n            return componentRef;\n        }));\n    }\n    determineMovePositionAction(action, index, formControlName) {\n        return iif(() => action === MovePositionActions.DELETE, this.removeBlockComponent(index, formControlName), this.blockMovementService.moveBlockComponentPosition(this.ngxEditor, action, index)).pipe(switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)));\n    }\n    moveBlockComponentPosition(previousIndex, currentIndex) {\n        return of(this.ngxEditor.get(previousIndex)).pipe(filter((viewRef) => !!viewRef), tap((viewRef) => {\n            this.ngxEditor.move(viewRef, currentIndex);\n        }), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), defaultIfEmpty(false));\n    }\n    removeBlockComponent(index, formControlName, clear = false) {\n        return combineLatest([\n            this.blockMovementService.removeBlockComponent(this.ngxEditor, index, clear),\n            of(this.formGroup.removeControl(formControlName)),\n        ]);\n    }\n    clearBlocks() {\n        return this.blockMovementService.getNgxEditorJsBlocks().pipe(filter((componentRefs) => componentRefs.length > 0), map((componentRefs) => componentRefs.sort((a, b) => a.instance.sortIndex() - b.instance.sortIndex())), mergeMap((componentRefs) => forkJoin(Array.from(componentRefs.values()).map((componentRef) => this.removeBlockComponent(componentRef.instance.sortIndex() + 1, componentRef.instance.formControlName(), true)))), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), tap(() => {\n            this.blockMovementService.clearComponentRefs();\n            this.ngxEditor.clear();\n        }), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolFabService {\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    editorJsService = inject(EditorJsService);\n    // I need to explain this in detail so the future me can understand this.\n    componentContext = new BehaviorSubject(null);\n    toolbarComponentRef$ = combineLatest({\n        componentContext: this.componentContext.asObservable(),\n        supportedBlocks: this.ngxEditorJs2Service.supportedBlocks$,\n    }).pipe(filter(({ componentContext }) => componentContext !== null), distinctUntilChanged(({ componentContext: previous }, { componentContext: current }) => previous.index !== current.index ||\n        previous.viewContainerRef !== current.viewContainerRef\n        ? (previous.viewContainerRef.clear(), false)\n        : true), map(({ componentContext, supportedBlocks }) => {\n        const { index, viewContainerRef, blockOptionActions, actionCallback, formControlName, } = componentContext;\n        // TODO We will need to create a ToolbarBottomRailComponent to handle the mobile view\n        const componentRef = viewContainerRef.createComponent(ToolbarComponent);\n        componentRef.setInput('componentContextPositionIndex', index + 1);\n        componentRef.setInput('supportedBlocks', supportedBlocks);\n        componentRef.setInput('blockOptionActions', blockOptionActions);\n        componentRef.setInput('actionCallback', actionCallback);\n        componentRef.setInput('formControlName', formControlName);\n        componentRef.setInput('addBlockCallback', this.addBlock.bind(this));\n        componentRef.setInput('moveBlockPositionCallback', this.movePositionAction.bind(this));\n        return componentRef;\n    }));\n    addBlock(block, index) {\n        return this.editorJsService\n            .createNgxEditorJsBlockWithComponent(block, index)\n            .pipe(switchMap((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    movePositionAction(action, index, formControlName) {\n        return lastValueFrom(this.editorJsService.determineMovePositionAction(action, index, formControlName));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolFabService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolFabService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolFabService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolbarFabDirective {\n    toolFabService = inject(ToolFabService);\n    viewContainerRef = inject(ViewContainerRef);\n    autofocus = input();\n    blockOptionActions = input();\n    actionCallback = input.required();\n    componentContextPositionIndex = input.required();\n    formControlName = input.required();\n    onMouseEnter() {\n        this.toolFabService.componentContext.next({\n            viewContainerRef: this.viewContainerRef,\n            blockOptionActions: this.blockOptionActions() ?? [],\n            actionCallback: this.actionCallback(),\n            index: this.componentContextPositionIndex(),\n            formControlName: this.formControlName(),\n        });\n    }\n    constructor() {\n        effect(() => {\n            this.autofocus() && this.onMouseEnter();\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarFabDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ToolbarFabDirective, isStandalone: true, selector: \"[toolbarFab]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: true, transformFunction: null }, componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null } }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarFabDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[toolbarFab]',\n                }]\n        }], ctorParameters: () => [], propDecorators: { onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }] } });\n\nclass CleanPasteDataDirective {\n    onPaste(event) {\n        event.preventDefault();\n        const text = event.clipboardData?.getData('text/plain');\n        document.execCommand('insertText', false, text);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: CleanPasteDataDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.1.5\", type: CleanPasteDataDirective, isStandalone: true, selector: \"[cleanPasteData]\", host: { listeners: { \"paste\": \"onPaste($event)\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: CleanPasteDataDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cleanPasteData]',\n                }]\n        }], propDecorators: { onPaste: [{\n                type: HostListener,\n                args: ['paste', ['$event']]\n            }] } });\n\nclass HeaderBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'HeaderBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'h1', text: 'H1' },\n        { action: 'h2', text: 'H2' },\n        { action: 'h3', text: 'H3' },\n        { action: 'h4', text: 'H4' },\n        { action: 'h5', text: 'H5' },\n        { action: 'h6', text: 'H6' },\n    ]);\n    savedAction = signal('h1');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(selectedAction) {\n        this.savedAction.set(selectedAction);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: HeaderBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: HeaderBlockComponent, isStandalone: true, selector: \"header-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n    <ng-container [ngSwitch]=\"savedAction()\">\n      <h1 *ngSwitchCase=\"'h1'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h1>\n      <h2 *ngSwitchCase=\"'h2'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h2>\n      <h3 *ngSwitchCase=\"'h3'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h3>\n      <h4 *ngSwitchCase=\"'h4'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h4>\n      <h5 *ngSwitchCase=\"'h5'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h5>\n      <h6 *ngSwitchCase=\"'h6'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h6>\n    </ng-container>\n\n    <ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n      <span\n        controlAccessor\n        cleanPasteData\n        contentEditable\n        toolbarFab\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [autofocus]=\"autofocus()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></span>\n    </ng-template>\n  `, isInline: true, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: HeaderBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'header-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgSwitch,\n                        NgSwitchCase,\n                        NgTemplateOutlet,\n                    ], template: `\n    <ng-container [ngSwitch]=\"savedAction()\">\n      <h1 *ngSwitchCase=\"'h1'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h1>\n      <h2 *ngSwitchCase=\"'h2'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h2>\n      <h3 *ngSwitchCase=\"'h3'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h3>\n      <h4 *ngSwitchCase=\"'h4'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h4>\n      <h5 *ngSwitchCase=\"'h5'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h5>\n      <h6 *ngSwitchCase=\"'h6'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h6>\n    </ng-container>\n\n    <ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n      <span\n        controlAccessor\n        cleanPasteData\n        contentEditable\n        toolbarFab\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [autofocus]=\"autofocus()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></span>\n    </ng-template>\n  `, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"] }]\n        }] });\n\nclass ParagraphBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'ParagraphBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'small', icon: 'density_small' },\n        { action: 'medium', icon: 'density_medium' },\n        { action: 'large', icon: 'density_large' },\n        { action: 'title-small', text: 'TS' },\n        { action: 'title-medium', text: 'TM' },\n        { action: 'title-large', text: 'TL' },\n    ]);\n    savedAction = signal('medium');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(action) {\n        this.savedAction.update(() => action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ParagraphBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ParagraphBlockComponent, isStandalone: true, selector: \"paragraph-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, isInline: true, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ParagraphBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'paragraph-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgClass,\n                    ], template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"] }]\n        }] });\n\nconst NGX_EDITORJS_OPTIONS = new InjectionToken('NGX_EDITORJS_OPTIONS');\nclass NgxEditorJs2Service {\n    editorJsService = inject(EditorJsService);\n    consumerSupportedBlocks = new BehaviorSubject(inject(NGX_EDITORJS_OPTIONS, { optional: true })?.consumerSupportedBlocks ??\n        []);\n    internalSupportedBlocks = new BehaviorSubject([\n        {\n            name: 'Paragraph',\n            component: ParagraphBlockComponent,\n            componentInstanceName: 'ParagraphBlockComponent',\n        },\n        {\n            name: 'Header',\n            component: HeaderBlockComponent,\n            componentInstanceName: 'HeaderBlockComponent',\n        },\n    ]);\n    supportedBlocks$ = combineLatest([\n        this.internalSupportedBlocks.asObservable(),\n        this.consumerSupportedBlocks.asObservable(),\n    ]).pipe(map(([internal, consumer]) => [...internal, ...consumer]));\n    blocksToLoad = new BehaviorSubject([]);\n    loadBlocks$ = this.blocksToLoad.asObservable().pipe(delay(0), exhaustMap((blocks) => this.clearBlocksFromEditorJs(blocks)), map(([blocks]) => this.determineToloadDefaultBlocks(blocks)), map((blocks) => this.removeDuplicateBlocksWithSameIds(blocks)), map((blocks) => this.sortBlocks(blocks)), switchMap((blocks) => this.combineSupportBlocks(blocks)), map(([blocks, supportedBlocks]) => this.createALookupMapForSupportedBlocks(blocks, supportedBlocks)), map(({ blocks, supportedBlocksMap }) => this.findAndMarshalBlocksComponent(blocks, supportedBlocksMap)), mergeMap((blocks) => this.addBlocksToEditorJs(blocks).pipe(map(() => blocks))));\n    clearBlocksFromEditorJs(blocks) {\n        return forkJoin([of(blocks), this.editorJsService.clearBlocks()]);\n    }\n    determineToloadDefaultBlocks(blocks) {\n        return blocks.length > 0 ? blocks : this.loadDefaultBlocks();\n    }\n    loadDefaultBlocks() {\n        return [\n            {\n                blockId: 'tmdjr',\n                sortIndex: 0,\n                componentInstanceName: 'HeaderBlockComponent',\n                dataClean: \"Let's get started... 🚀\",\n                savedAction: 'h1',\n            },\n        ];\n    }\n    removeDuplicateBlocksWithSameIds(blocks) {\n        return Array.from(new Map(blocks.map((block) => [block.blockId, block])).values());\n    }\n    sortBlocks(blocks) {\n        return blocks.sort((a, b) => a.sortIndex - b.sortIndex);\n    }\n    combineSupportBlocks(blocks) {\n        return combineLatest([of(blocks), this.supportedBlocks$]);\n    }\n    createALookupMapForSupportedBlocks(blocks, supportedBlocks) {\n        return {\n            blocks,\n            supportedBlocksMap: new Map(supportedBlocks.map((sb) => [sb.componentInstanceName, sb.component])),\n        };\n    }\n    findAndMarshalBlocksComponent(blocks, supportedBlocksMap) {\n        return blocks.map((block) => ({\n            ...block,\n            component: supportedBlocksMap.get(block.componentInstanceName) ??\n                HeaderBlockComponent,\n        }));\n    }\n    addBlocksToEditorJs(blocks) {\n        return combineLatest(blocks.map((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Service, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Service, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Service, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass EditorJsComponent {\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    bootstrapEditorJs = input();\n    blocks = input.required({\n        transform: (value) => this.ngxEditorJs2Service.blocksToLoad.next(value),\n    });\n    ngxEditor = viewChild.required('ngxEditor', { read: ViewContainerRef });\n    constructor() {\n        effect(() => {\n            this.editorJsService.setNgxEditor(this.ngxEditor());\n        });\n    }\n    // * DEBUGGING\n    // ngOnInit() {\n    //   this.editorJsService.formGroup.valueChanges.subscribe((value) => {\n    //     console.log('[formGroup.value] : ', value);\n    //   });\n    //   this.editorJsService.blockComponents$.subscribe((components) => {\n    //     console.log('[components] : ', components);\n    //   });\n    // }\n    drop(event) {\n        lastValueFrom(this.editorJsService.moveBlockComponentPosition(event.previousIndex, event.currentIndex)).then(() => {\n            // DRAG ANIMATION HOT FIX\n            // Wait for Angular to update the DOM, then remove the animation class\n            requestAnimationFrame(() => {\n                document.querySelectorAll('.cdk-drag-animating').forEach((el) => {\n                    const element = el;\n                    element.classList.remove('cdk-drag-animating'); // Ensure old class is removed\n                    void element.offsetWidth; // Force reflow\n                    element.classList.add('cdk-drag-animating'); // Re-add for next drag\n                });\n            });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.2.0\", version: \"19.1.5\", type: EditorJsComponent, isStandalone: true, selector: \"editor-js\", inputs: { bootstrapEditorJs: { classPropertyName: \"bootstrapEditorJs\", publicName: \"bootstrapEditorJs\", isSignal: true, isRequired: false, transformFunction: null }, blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: true, transformFunction: null } }, viewQueries: [{ propertyName: \"ngxEditor\", first: true, predicate: [\"ngxEditor\"], descendants: true, read: ViewContainerRef, isSignal: true }], ngImport: i0, template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, isInline: true, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\", \"cdkDropListElementContainer\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'editor-js', imports: [CdkDropList], template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nclass ToolbarInlineComponent {\n    // @Input() selection!: Selection;\n    selection = input.required();\n    closeOverlayEmitter = new EventEmitter();\n    renderer = inject(Renderer2);\n    url = '';\n    showURLInputField = signal(false);\n    savedRanges = [];\n    options = [\n        { icon: 'format_bold', action: 'bold' },\n        { icon: 'format_italic', action: 'italic' },\n        { icon: 'format_underlined', action: 'underline' },\n        { icon: 'strikethrough_s', action: 'strikethrough' },\n        { icon: 'format_list_bulleted', action: 'insertUnorderedList' },\n        { icon: 'format_list_numbered', action: 'insertOrderedList' },\n        { icon: 'highlight', action: 'highlightColor' },\n        { icon: 'format_align_left', action: 'justifyLeft' },\n        { icon: 'format_align_center', action: 'justifyCenter' },\n        { icon: 'format_align_right', action: 'justifyRight' },\n        { icon: 'format_align_justify', action: 'justifyFull' },\n    ];\n    addInlineTag(tag) {\n        // https://stackoverflow.com/questions/60581285/execcommand-is-now-obsolete-whats-the-alternative\n        document.execCommand(tag);\n        this.closeOverlayEmitter.emit();\n    }\n    addClassTag(tag, className) {\n        const range = this.selection().getRangeAt(0);\n        const element = this.renderer.createElement(tag);\n        element.className = className ?? '';\n        element.innerHTML = range.toString();\n        range.deleteContents();\n        range.insertNode(element);\n        this.closeOverlayEmitter.emit();\n    }\n    clearTags() {\n        document.execCommand('removeFormat');\n        document.execCommand('unlink');\n        this.closeOverlayEmitter.emit();\n    }\n    openUrlInput() {\n        this.savedRanges.push(this.selection().getRangeAt(0));\n        this.showURLInputField.set(true);\n    }\n    createLink() {\n        this.selection().removeAllRanges();\n        this.selection().addRange(this.savedRanges.pop());\n        document.execCommand('createLink', false, this.url);\n        this.closeOverlayEmitter.emit();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.1.5\", type: ToolbarInlineComponent, isStandalone: true, selector: \"toolbar-inline\", inputs: { selection: { classPropertyName: \"selection\", publicName: \"selection\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { closeOverlayEmitter: \"closeOverlay\" }, host: { classAttribute: \"mat-elevation-z24\" }, ngImport: i0, template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, isInline: true, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"], dependencies: [{ kind: \"ngmodule\", type: MatListModule }, { kind: \"ngmodule\", type: MatIconModule }, { kind: \"component\", type: i1$2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-inline', imports: [MatListModule, MatIconModule, FormsModule], host: { class: 'mat-elevation-z24' }, template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"] }]\n        }], propDecorators: { closeOverlayEmitter: [{\n                type: Output,\n                args: ['closeOverlay']\n            }] } });\n\nclass ToolbarInlineService {\n    overlay = inject(Overlay);\n    overlayRef;\n    determineToDisplayInlineToolbarBlock(_event) {\n        return of(window.getSelection()).pipe(filter((selection) => selection !== null), filter((selection) => selection.rangeCount > 0), filter((selection) => selection.toString().length > 0), filter((selection) => selection.toString() !== ''), tap(() => this.overlayRef?.hasAttached() && this.overlayRef.dispose()), // So hacky tired to do this properly\n        map((selection) => ({\n            selection,\n            parant: this.getSelectionParent(selection),\n        })), filter(({ parant }) => this.isSelectionInABlock(parant)), exhaustMap(({ selection }) => this.attachInlineToolbar(selection)));\n    }\n    getSelectionParent(selection) {\n        const range = selection.getRangeAt(0);\n        return range.commonAncestorContainer.nodeType === Node.ELEMENT_NODE\n            ? range.commonAncestorContainer\n            : range.commonAncestorContainer.parentElement;\n    }\n    isSelectionInABlock(target) {\n        // ! TODO: This is a hacky way to determine if the selection is in a block\n        // ! Need to also check if the block wants to display the inline toolbar\n        return (!!target &&\n            (target.closest('.no-toolbar-inline') !== null\n                ? false\n                : target.closest('ngx-editor-js2') !== null\n                    ? true\n                    : false));\n    }\n    attachInlineToolbar(selection) {\n        return of(selection.getRangeAt(0)).pipe(map((range) => range.getBoundingClientRect()), map((selectionRect) => this.createOverlay(selectionRect)), \n        // So hacky tired to do this properly\n        // passing the refs down the pipe adds a bug\n        // user selects text with a drag\n        // (mousedown → mousemove → wait → mousemove → mouseup)\n        tap((overlayRef) => (this.overlayRef = overlayRef)), map((overlayRef) => {\n            const inlineToolbar = overlayRef.attach(new ComponentPortal(ToolbarInlineComponent));\n            inlineToolbar.setInput('selection', selection);\n            lastValueFrom(merge(overlayRef.backdropClick(), inlineToolbar.instance.closeOverlayEmitter).pipe(tap(() => overlayRef.dispose()), tap(() => selection.removeAllRanges())));\n            return true;\n        }));\n    }\n    createOverlay(selectionRect) {\n        return this.overlay.create({\n            hasBackdrop: true,\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            positionStrategy: this.overlay\n                .position()\n                .flexibleConnectedTo(selectionRect)\n                .withPositions([\n                {\n                    offsetY: 8,\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                },\n            ]),\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass NgxEditorJs2Component {\n    inlineToolbarSerivce = inject(ToolbarInlineService);\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    blocks = input([]);\n    blocksRequested = output();\n    requestBlocks = input.required({\n        transform: (_v) => this.blocksRequested.emit(this.editorJsService.getBlocks$()),\n    });\n    bootstrapEditorJs$ = combineLatest([\n        inject(ToolFabService).toolbarComponentRef$,\n        this.ngxEditorJs2Service.loadBlocks$,\n        fromEvent(document, 'selectionchange').pipe(debounceTime(200), switchMap((event) => this.inlineToolbarSerivce.determineToDisplayInlineToolbarBlock(event)))\n    ]);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Component, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: NgxEditorJs2Component, isStandalone: true, selector: \"ngx-editor-js2\", inputs: { blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: false, transformFunction: null }, requestBlocks: { classPropertyName: \"requestBlocks\", publicName: \"requestBlocks\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { blocksRequested: \"blocksRequested\" }, ngImport: i0, template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `, isInline: true, dependencies: [{ kind: \"component\", type: EditorJsComponent, selector: \"editor-js\", inputs: [\"bootstrapEditorJs\", \"blocks\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Component, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-editor-js2',\n                    imports: [EditorJsComponent, AsyncPipe],\n                    template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `,\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-editor-js2\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofocusDirective, CleanPasteDataDirective, ControlAccessorDirective, NGX_EDITORJS_OPTIONS, NgxEditorJs2Component, NgxEditorJs2Service, ToolbarFabDirective };\n","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nexport { _asyncToGenerator as default };"],"names":["NavBarComponent","HeroComponent","DocumentComponent","FooterComponent","AppComponent","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","styles","inject","MatCard","MatCardContent","NgxEditorJs2Component","AppService","AsyncPipe","appService","consts","DocumentComponent_Template","ɵɵlistener","DocumentComponent_Template_ngx_editor_js2_blocksRequested_2_listener","$event","handleBlocks","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","ngxEditorJsBlocks$","requestBlocks$","FooterComponent_Template","ɵɵtext","MatButton","TEST_DATA","TEST_DATA_TWO","MatTooltip","saveValue","requestBlocks","next","switch","loadValue","ngxEditorJsBlocks","clearValue","HeroComponent_Template","HeroComponent_Template_button_click_8_listener","HeroComponent_Template_button_click_10_listener","HeroComponent_Template_button_click_12_listener","MatIcon","MatButtonModule","ThemePickerComponent","NavBarComponent_Template","i1","MatAnchor","input","MatIconButton","MatMenu","MatMenuItem","MatMenuTrigger","MatSlideToggle","ThemePickerService","ThemePickerComponent_For_9_Template_app_theme_picker_menu_item_click_0_listener","theme_r3","ɵɵrestoreView","_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","selectTheme","name","currentTheme","ThemePickerMenuItemComponent","theme","required","isCurrentTheme","inputs","ThemePickerMenuItemComponent_Template","ɵɵtemplate","ThemePickerMenuItemComponent_Conditional_1_Template","ThemePickerMenuItemComponent_Conditional_2_Template","ɵɵconditional","tmp_0_0","ɵɵtextInterpolate","displayName","themePickerService","themes","THEMES","darkMode","userSelectedTheme","set","toggleDarkMode","ThemePickerComponent_Template","ThemePickerComponent_Template_mat_slide_toggle_toggleChange_6_listener","_r1","ɵɵrepeaterCreate","ThemePickerComponent_For_9_Template","ɵɵrepeaterTrackByIndex","themeMenu_r5","ɵɵrepeater","BehaviorSubject","lastValueFrom","tap","blockId","sortIndex","componentInstanceName","savedAction","dataClean","asObservable","blocks$","pipe","console","table","factory","ɵfac","providedIn","linkedSignal","resource","signal","THEME_EXAMPLE_ICON","DEFAULT_THEME","THEME_STRORAGE_KEY","DARK_MODE_STRORAGE_KEY","color","localStorage","getItem","darkModeResource","request","loader","_ref","_asyncToGenerator","setItem","toString","_x","apply","arguments","source","computation","newTheme","previous","setThemeStyleAndLocalStorage","value","document","body","className","ElementRef","forwardRef","Directive","HostListener","output","Component","Injectable","ViewContainerRef","effect","InjectionToken","viewChild","EventEmitter","Renderer2","Output","i2","NG_VALUE_ACCESSOR","FormControl","ReactiveFormsModule","FormBuilder","FormsModule","startWith","combineLatest","map","firstValueFrom","of","from","filter","defaultIfEmpty","Observable","forkJoin","iif","switchMap","mergeMap","distinctUntilChanged","delay","exhaustMap","merge","fromEvent","debounceTime","MatRipple","i1$1","CdkDragHandle","CdkDrag","CdkDropList","OverlayModule","Overlay","i1$2","MatIconModule","NgSwitch","NgSwitchCase","NgTemplateOutlet","NgClass","toObservable","MatFormField","MatLabel","MatInput","MatList","MatListItem","MatListModule","ComponentPortal","ToolbarBlockOptionsComponent_For_11_Conditional_1_Template","blockOptionAction_r2","ɵɵtextInterpolate1","text","ToolbarBlockOptionsComponent_For_11_Conditional_2_Template","icon","ToolbarBlockOptionsComponent_For_11_Template","ɵɵgetCurrentView","ToolbarBlockOptionsComponent_For_11_Template_div_click_0_listener","ctx_r2","handleAction","action","ToolbarBlocksComponent_Conditional_5_Conditional_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template_mat_list_item_click_0_listener","block_r2","addBlock","ToolbarBlocksComponent_Conditional_5_Conditional_2_Template","filteredBlocks_r4","ToolbarBlocksComponent_Conditional_5_Template","length","ToolbarComponent_ng_template_9_Template","ToolbarComponent_ng_template_9_Template_toolbar_blocks_addBlock_0_listener","supportedBlocks","ToolbarComponent_ng_template_10_Template","_r4","ToolbarComponent_ng_template_10_Template_toolbar_block_options_handleAction_0_listener","ToolbarComponent_ng_template_10_Template_toolbar_block_options_moveBlockPosition_0_listener","moveBlockPosition","blockOptionActions","HeaderBlockComponent_h1_1_ng_container_1_Template","ɵɵelementContainer","HeaderBlockComponent_h1_1_Template","sharedHeaderTemplate_r1","ɵɵreference","HeaderBlockComponent_h2_2_ng_container_1_Template","HeaderBlockComponent_h2_2_Template","HeaderBlockComponent_h3_3_ng_container_1_Template","HeaderBlockComponent_h3_3_Template","HeaderBlockComponent_h4_4_ng_container_1_Template","HeaderBlockComponent_h4_4_Template","HeaderBlockComponent_h5_5_ng_container_1_Template","HeaderBlockComponent_h5_5_Template","HeaderBlockComponent_h6_6_ng_container_1_Template","HeaderBlockComponent_h6_6_Template","HeaderBlockComponent_ng_template_7_Template","tmp_2_0","ctx_r1","formGroup","get","formControlName","actionCallbackBind","autofocus","_c0","ToolbarInlineComponent_For_2_Template","ToolbarInlineComponent_For_2_Template_div_click_0_listener","item_r2","addInlineTag","ToolbarInlineComponent_Conditional_12_Template","ɵɵtwoWayListener","ToolbarInlineComponent_Conditional_12_Template_input_ngModelChange_1_listener","ɵɵtwoWayBindingSet","url","ToolbarInlineComponent_Conditional_12_Template_div_click_2_listener","createLink","ɵɵtwoWayProperty","ControlAccessorDirective","elementRef","defaultValue","onChange","onTouched","writeValue","nativeElement","innerHTML","registerOnChange","fn","registerOnTouched","onBlur","onInput","ControlAccessorDirective_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","hostBindings","ControlAccessorDirective_HostBindings","ControlAccessorDirective_blur_HostBindingHandler","ControlAccessorDirective_input_HostBindingHandler","features","ɵɵProvidersFeature","provide","useExisting","multi","ngDevMode","AutofocusDirective","ngAfterContentInit","focus","AutofocusDirective_Factory","MovePositionActions","ToolbarBlockOptionsComponent","Position","handleActionEmitter","alias","moveBlockPositionEmitter","movePosition","emit","ToolbarBlockOptionsComponent_Factory","ɵcmp","ɵɵdefineComponent","outputs","ToolbarBlockOptionsComponent_Template","ToolbarBlockOptionsComponent_Template_div_click_1_listener","UP","ToolbarBlockOptionsComponent_Template_div_click_4_listener","DELETE","ToolbarBlockOptionsComponent_Template_div_click_7_listener","DOWN","dependencies","ToolbarBlocksComponent","addBlockEmitter","supportedBlocks$","blockCtrl","filter$","valueChanges","filteredBlocks$","blocks","filterString","replace","pattern","split","v","join","regex","RegExp","block","match","component","ToolbarBlocksComponent_Factory","ToolbarBlocksComponent_Template","ɵɵpipe","DefaultValueAccessor","NgControlStatus","FormControlDirective","ToolbarComponent","componentContextPositionIndex","actionCallback","addBlockCallback","moveBlockPositionCallback","openBlocks","openBlocksOption","openBlocksList","update","prev","openBlockOptionList","closeLists","ToolbarComponent_Factory","ToolbarComponent_Template","ToolbarComponent_Template_div_click_1_listener","ToolbarComponent_Template_div_click_5_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_9_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_10_listener","blockListTigger_r5","blockOptionListTigger_r6","CdkConnectedOverlay","CdkOverlayOrigin","BlockMovementService","componentRefMap","Map","clearComponentRefs","clear","getNgxEditorJsBlocks","Array","values","newComponentAttached","componentRef","instance","updateComponentIndices","ngxEditor","setInput","indexOf","hostView","moveBlockComponentPosition","index","componentRefs","find","totalComponents","currentIndex","newIndex","Math","max","min","move","removeBlockComponent","delete","successful","remove","BlockMovementService_Factory","ɵprov","ɵɵdefineInjectable","token","createUID","random","substring","EditorJsService","formBuilder","blockMovementService","group","setNgxEditor","getBlocks$","observer","sort","a","b","then","complete","createNgxEditorJsBlockWithComponent","blockComponent","addBlockComponent","ngxEditorJsBlock","createFormGroupControl","attachComponent","control","formControl","addControl","controlName","createComponent","determineMovePositionAction","previousIndex","viewRef","removeControl","clearBlocks","EditorJsService_Factory","ToolFabService","ngxEditorJs2Service","NgxEditorJs2Service","editorJsService","componentContext","toolbarComponentRef$","current","viewContainerRef","bind","movePositionAction","ToolFabService_Factory","ToolbarFabDirective","toolFabService","onMouseEnter","constructor","ToolbarFabDirective_Factory","ToolbarFabDirective_HostBindings","ToolbarFabDirective_mouseenter_HostBindingHandler","CleanPasteDataDirective","onPaste","event","preventDefault","clipboardData","getData","execCommand","CleanPasteDataDirective_Factory","CleanPasteDataDirective_HostBindings","CleanPasteDataDirective_paste_HostBindingHandler","HeaderBlockComponent","selectedAction","HeaderBlockComponent_Factory","hostAttrs","ɵɵHostDirectivesFeature","HeaderBlockComponent_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵtemplateRefExtractor","NgControlStatusGroup","FormGroupDirective","FormControlName","ParagraphBlockComponent","ParagraphBlockComponent_Factory","ParagraphBlockComponent_Template","NGX_EDITORJS_OPTIONS","consumerSupportedBlocks","optional","internalSupportedBlocks","internal","consumer","blocksToLoad","loadBlocks$","clearBlocksFromEditorJs","determineToloadDefaultBlocks","removeDuplicateBlocksWithSameIds","sortBlocks","combineSupportBlocks","createALookupMapForSupportedBlocks","supportedBlocksMap","findAndMarshalBlocksComponent","addBlocksToEditorJs","loadDefaultBlocks","sb","NgxEditorJs2Service_Factory","EditorJsComponent","bootstrapEditorJs","transform","read","drop","requestAnimationFrame","querySelectorAll","forEach","el","element","classList","offsetWidth","add","EditorJsComponent_Factory","viewQuery","EditorJsComponent_Query","ɵɵviewQuerySignal","ɵɵqueryAdvance","EditorJsComponent_Template","EditorJsComponent_Template_div_cdkDropListDropped_0_listener","ToolbarInlineComponent","selection","closeOverlayEmitter","renderer","showURLInputField","savedRanges","options","tag","addClassTag","range","getRangeAt","createElement","deleteContents","insertNode","clearTags","openUrlInput","push","removeAllRanges","addRange","pop","ToolbarInlineComponent_Factory","ToolbarInlineComponent_Template","ToolbarInlineComponent_Template_div_click_3_listener","ToolbarInlineComponent_Template_div_click_6_listener","ToolbarInlineComponent_Template_div_click_9_listener","NgModel","ToolbarInlineService","overlay","overlayRef","determineToDisplayInlineToolbarBlock","_event","window","getSelection","rangeCount","hasAttached","dispose","parant","getSelectionParent","isSelectionInABlock","attachInlineToolbar","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","parentElement","target","closest","getBoundingClientRect","selectionRect","createOverlay","inlineToolbar","attach","backdropClick","create","hasBackdrop","backdropClass","positionStrategy","position","flexibleConnectedTo","withPositions","offsetY","originX","originY","overlayX","overlayY","ToolbarInlineService_Factory","inlineToolbarSerivce","blocksRequested","_v","bootstrapEditorJs$","NgxEditorJs2Component_Factory","NgxEditorJs2Component_Template","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[8,9]}