{"version":3,"file":"9305.js","mappings":"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","sources":["./node_modules/@tmdjr/ngx-editor-js2/fesm2022/tmdjr-ngx-editor-js2.mjs","./node_modules/@ctrl/ngx-codemirror/fesm2022/ctrl-ngx-codemirror.mjs","./projects/ngx-editor-js2-codemirror/src/lib/ngx-editor-js2-codemirror.component.ts","./projects/ngx-editor-js2-codemirror/src/public-api.ts","./projects/ngx-editor-js2-codemirror/src/tmdjr-ngx-editor-js2-codemirror.ts","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, ElementRef, input, forwardRef, HostListener, Directive, output, Component, signal, Injectable, ViewContainerRef, effect, InjectionToken, viewChild, EventEmitter, Renderer2, Output } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormControl, ReactiveFormsModule, FormBuilder, FormsModule } from '@angular/forms';\nimport { startWith, combineLatest, map, firstValueFrom, of, from, tap, filter, defaultIfEmpty, Observable, lastValueFrom, forkJoin, iif, switchMap, mergeMap, BehaviorSubject, distinctUntilChanged, delay, exhaustMap, merge, fromEvent, debounceTime } from 'rxjs';\nimport { MatRipple } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/drag-drop';\nimport { CdkDragHandle, CdkDrag, CdkDropList } from '@angular/cdk/drag-drop';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule, Overlay } from '@angular/cdk/overlay';\nimport * as i1$2 from '@angular/material/icon';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport { AsyncPipe, NgTemplateOutlet, NgClass } from '@angular/common';\nimport { toObservable } from '@angular/core/rxjs-interop';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatList, MatListItem, MatListModule } from '@angular/material/list';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\nclass ControlAccessorDirective {\n    elementRef = inject(ElementRef);\n    defaultValue = input();\n    onChange = () => { };\n    onTouched = () => { };\n    writeValue() {\n        this.elementRef.nativeElement.innerHTML = this.defaultValue() || '';\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onBlur() {\n        this.onTouched();\n    }\n    onInput() {\n        this.onChange(this.elementRef.nativeElement.innerHTML);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ControlAccessorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ControlAccessorDirective, isStandalone: true, selector: \"[controlAccessor]\", inputs: { defaultValue: { classPropertyName: \"defaultValue\", publicName: \"defaultValue\", isSignal: true, isRequired: false, transformFunction: null } }, host: { listeners: { \"blur\": \"onBlur()\", \"input\": \"onInput()\" } }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => ControlAccessorDirective),\n                multi: true,\n            },\n        ], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ControlAccessorDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[controlAccessor]',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => ControlAccessorDirective),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], propDecorators: { onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onInput: [{\n                type: HostListener,\n                args: ['input']\n            }] } });\n\nclass AutofocusDirective {\n    elementRef = inject(ElementRef);\n    autofocus = input(false);\n    ngAfterContentInit() {\n        this.autofocus() && this.elementRef.nativeElement.focus?.();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: AutofocusDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: AutofocusDirective, isStandalone: true, selector: \"[autofocus]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: AutofocusDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[autofocus]',\n                }]\n        }] });\n\nvar MovePositionActions;\n(function (MovePositionActions) {\n    MovePositionActions[\"UP\"] = \"UP\";\n    MovePositionActions[\"DOWN\"] = \"DOWN\";\n    MovePositionActions[\"DELETE\"] = \"DELETE\";\n})(MovePositionActions || (MovePositionActions = {}));\n\nclass ToolbarBlockOptionsComponent {\n    Position = MovePositionActions;\n    blockOptionActions = input();\n    handleActionEmitter = output({ alias: 'handleAction' });\n    moveBlockPositionEmitter = output({\n        alias: 'moveBlockPosition',\n    });\n    movePosition(action) {\n        this.moveBlockPositionEmitter.emit(action);\n    }\n    handleAction(action) {\n        this.handleActionEmitter.emit(action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlockOptionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarBlockOptionsComponent, isStandalone: true, selector: \"toolbar-block-options\", inputs: { blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { handleActionEmitter: \"handleAction\", moveBlockPositionEmitter: \"moveBlockPosition\" }, ngImport: i0, template: `\n    <div class=\"actions-panel\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:hover,:host .actions-panel .action-btn:focus{color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"], dependencies: [{ kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlockOptionsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-block-options', imports: [MatIcon, MatRipple], template: `\n    <div class=\"actions-panel\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:hover,:host .actions-panel .action-btn:focus{color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"] }]\n        }] });\n\nclass ToolbarBlocksComponent {\n    addBlockEmitter = output({ alias: 'addBlock' });\n    supportedBlocks = input([]);\n    supportedBlocks$ = toObservable(this.supportedBlocks);\n    blockCtrl = new FormControl([]);\n    filter$ = this.blockCtrl.valueChanges.pipe(startWith(''));\n    filteredBlocks$ = combineLatest([this.supportedBlocks$, this.filter$]).pipe(map(([blocks, filterString]) => {\n        if (typeof filterString !== 'string')\n            filterString = '';\n        filterString = filterString.replace(/\\\\/g, '');\n        const pattern = filterString\n            ?.split('')\n            .map((v) => `(?=.*${v})`)\n            .join('');\n        const regex = new RegExp(`${pattern}`, 'gi');\n        // return blocks.filter(block => regex.exec(block));\n        return blocks.filter((block) => block.name.match(regex));\n    }));\n    addBlock(block) {\n        this.addBlockEmitter.emit(block?.component);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlocksComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarBlocksComponent, isStandalone: true, selector: \"toolbar-blocks\", inputs: { supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { addBlockEmitter: \"addBlock\" }, ngImport: i0, template: `\n    <div class=\"block-list-container\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{border-radius:4px;background:var(--mat-sys-secondary-container);box-shadow:var(--mat-sys-level5)}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:hover,:host mat-list-item:focus{background:var(--mat-sys-surface-bright)}\\n\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"directive\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\", \"disabledInteractive\"], exportAs: [\"matInput\"] }, { kind: \"component\", type: MatList, selector: \"mat-list\", exportAs: [\"matList\"] }, { kind: \"component\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: [\"activated\"], exportAs: [\"matListItem\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatLabel, selector: \"mat-label\" }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlocksComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-blocks', imports: [\n                        MatFormField,\n                        MatInput,\n                        MatList,\n                        MatListItem,\n                        MatRipple,\n                        MatLabel,\n                        ReactiveFormsModule,\n                        AsyncPipe,\n                    ], template: `\n    <div class=\"block-list-container\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{border-radius:4px;background:var(--mat-sys-secondary-container);box-shadow:var(--mat-sys-level5)}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:hover,:host mat-list-item:focus{background:var(--mat-sys-surface-bright)}\\n\"] }]\n        }] });\n\nclass ToolbarComponent {\n    componentContextPositionIndex = input.required();\n    supportedBlocks = input.required();\n    blockOptionActions = input();\n    actionCallback = input(() => () => { });\n    formControlName = input();\n    addBlockCallback = input.required();\n    moveBlockPositionCallback = input.required();\n    openBlocks = signal(false);\n    openBlocksOption = signal(false);\n    openBlocksList() {\n        this.openBlocks.update((prev) => !prev);\n    }\n    openBlockOptionList() {\n        this.openBlocksOption.update((prev) => !prev);\n    }\n    moveBlockPosition(action) {\n        this.closeLists();\n        this.moveBlockPositionCallback()(action, this.componentContextPositionIndex());\n    }\n    handleAction(action) {\n        this.closeLists();\n        this.actionCallback()(action);\n    }\n    addBlock(block) {\n        this.closeLists();\n        firstValueFrom(this.addBlockCallback()(block, this.componentContextPositionIndex()));\n    }\n    closeLists() {\n        this.openBlocks.set(false);\n        this.openBlocksOption.set(false);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ToolbarComponent, isStandalone: true, selector: \"toolbar\", inputs: { componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: false, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: false, transformFunction: null }, addBlockCallback: { classPropertyName: \"addBlockCallback\", publicName: \"addBlockCallback\", isSignal: true, isRequired: true, transformFunction: null }, moveBlockPositionCallback: { classPropertyName: \"moveBlockPositionCallback\", publicName: \"moveBlockPositionCallback\", isSignal: true, isRequired: true, transformFunction: null } }, ngImport: i0, template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, isInline: true, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container);box-shadow:var(--mat-sys-level2)}:host .toolbar-buttons:hover,:host .toolbar-buttons:focus{background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"ngmodule\", type: OverlayModule }, { kind: \"directive\", type: i1.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\", \"cdkConnectedOverlayDisposeOnNavigation\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i1.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"component\", type: ToolbarBlockOptionsComponent, selector: \"toolbar-block-options\", inputs: [\"blockOptionActions\"], outputs: [\"handleAction\", \"moveBlockPosition\"] }, { kind: \"component\", type: ToolbarBlocksComponent, selector: \"toolbar-blocks\", inputs: [\"supportedBlocks\"], outputs: [\"addBlock\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar', imports: [\n                        CdkDragHandle,\n                        MatRipple,\n                        OverlayModule,\n                        ToolbarBlockOptionsComponent,\n                        ToolbarBlocksComponent,\n                    ], template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container);box-shadow:var(--mat-sys-level2)}:host .toolbar-buttons:hover,:host .toolbar-buttons:focus{background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"] }]\n        }] });\n\nclass BlockMovementService {\n    componentRefMap = new Map();\n    clearComponentRefs() {\n        this.componentRefMap.clear();\n    }\n    getNgxEditorJsBlocks() {\n        return of(Array.from(this.componentRefMap.values()));\n    }\n    newComponentAttached(componentRef) {\n        this.componentRefMap.set(componentRef.instance, componentRef);\n    }\n    updateComponentIndices(ngxEditor) {\n        return from(this.componentRefMap.values()).pipe(tap((componentRef) => componentRef.setInput('sortIndex', ngxEditor.indexOf(componentRef.hostView))));\n    }\n    moveBlockComponentPosition(ngxEditor, action, index) {\n        return of(Array.from(this.componentRefMap.values())).pipe(map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), filter((componentRef) => !!componentRef), map((componentRef) => ({\n            componentRef,\n            totalComponents: ngxEditor.length - 1,\n            currentIndex: ngxEditor.indexOf(componentRef.hostView),\n            newIndex: (index) => action === MovePositionActions.UP ? index - 1 : index + 1,\n        })), map(({ componentRef, totalComponents, currentIndex, newIndex }) => ({\n            componentRef,\n            currentIndex,\n            newIndex: Math.max(0, Math.min(newIndex(currentIndex), totalComponents)),\n        })), filter(({ currentIndex, newIndex }) => currentIndex !== newIndex), tap(({ componentRef, newIndex }) => {\n            ngxEditor.move(componentRef.hostView, newIndex);\n            componentRef.setInput('sortIndex', newIndex);\n            componentRef.setInput('autofocus', true);\n        }), defaultIfEmpty(false));\n    }\n    removeBlockComponent(ngxEditor, index, clear = false) {\n        return of(Array.from(this.componentRefMap.values())).pipe(filter((componentRefs) => clear || componentRefs.length !== 1), map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), map((componentRef) => this.componentRefMap.delete(componentRef?.instance ?? {})), tap((successful) => successful && ngxEditor.remove(index - 1)), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nconst createUID = () => Math.random().toString(36).substring(7);\nclass EditorJsService {\n    formBuilder = inject(FormBuilder);\n    blockMovementService = inject(BlockMovementService);\n    componentRefMap = new Map();\n    ngxEditor;\n    formGroup = this.formBuilder.group({});\n    // TODO - Handle this idiomatically\n    setNgxEditor(ngxEditor) {\n        this.ngxEditor = ngxEditor;\n    }\n    getBlocks$() {\n        return new Observable((observer) => {\n            lastValueFrom(this.blockMovementService.getNgxEditorJsBlocks().pipe(map((componentRefs) => componentRefs.map(({ instance }) => ({\n                blockId: instance.formControlName(),\n                sortIndex: instance.sortIndex(),\n                componentInstanceName: instance.componentInstanceName,\n                savedAction: instance.savedAction(),\n                dataClean: instance.formGroup().get(instance.formControlName())\n                    ?.value,\n            }))), map((blocks) => blocks.sort((a, b) => a.sortIndex - b.sortIndex)))).then((blocks) => {\n                observer.next(blocks);\n                observer.complete();\n            });\n        });\n    }\n    createNgxEditorJsBlockWithComponent(blockComponent, componentContextPositionIndex) {\n        return of({\n            blockId: createUID(),\n            sortIndex: componentContextPositionIndex,\n            componentInstanceName: blockComponent.name,\n            component: blockComponent,\n            // TODO - Force content-type for dataClean? JSON, HTML, etc.\n            // TODO - And maybe rename dataClean to just data?\n            dataClean: '',\n            autofocus: true,\n        });\n    }\n    addBlockComponent(ngxEditorJsBlock) {\n        return forkJoin([\n            this.createFormGroupControl(ngxEditorJsBlock),\n            this.attachComponent(ngxEditorJsBlock),\n            this.blockMovementService.updateComponentIndices(this.ngxEditor),\n        ]).pipe(map(() => void 0));\n    }\n    createFormGroupControl({ blockId, dataClean, }) {\n        return of(this.formBuilder.control(dataClean, [])).pipe(tap((formControl) => this.formGroup.addControl(blockId, formControl)));\n    }\n    attachComponent({ component, blockId, autofocus, savedAction, sortIndex: index, }) {\n        return of(blockId).pipe(map((controlName) => {\n            const componentRef = this.ngxEditor.createComponent(component, {\n                index,\n            });\n            componentRef.setInput('sortIndex', index);\n            componentRef.setInput('formGroup', this.formGroup);\n            componentRef.setInput('formControlName', controlName);\n            componentRef.setInput('autofocus', autofocus);\n            savedAction && componentRef.instance.actionCallback?.(savedAction);\n            this.blockMovementService.newComponentAttached(componentRef);\n            return componentRef;\n        }));\n    }\n    determineMovePositionAction(action, index, formControlName) {\n        return iif(() => action === MovePositionActions.DELETE, this.removeBlockComponent(index, formControlName), this.blockMovementService.moveBlockComponentPosition(this.ngxEditor, action, index)).pipe(switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)));\n    }\n    moveBlockComponentPosition(previousIndex, currentIndex) {\n        return of(this.ngxEditor.get(previousIndex)).pipe(filter((viewRef) => !!viewRef), tap((viewRef) => {\n            this.ngxEditor.move(viewRef, currentIndex);\n        }), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), defaultIfEmpty(false));\n    }\n    removeBlockComponent(index, formControlName, clear = false) {\n        return combineLatest([\n            this.blockMovementService.removeBlockComponent(this.ngxEditor, index, clear),\n            of(this.formGroup.removeControl(formControlName)),\n        ]);\n    }\n    clearBlocks() {\n        return this.blockMovementService.getNgxEditorJsBlocks().pipe(filter((componentRefs) => componentRefs.length > 0), map((componentRefs) => componentRefs.sort((a, b) => a.instance.sortIndex() - b.instance.sortIndex())), mergeMap((componentRefs) => forkJoin(Array.from(componentRefs.values()).map((componentRef) => this.removeBlockComponent(componentRef.instance.sortIndex() + 1, componentRef.instance.formControlName(), true)))), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), tap(() => {\n            this.blockMovementService.clearComponentRefs();\n            this.ngxEditor.clear();\n        }), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolFabService {\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    editorJsService = inject(EditorJsService);\n    // I need to explain this in detail so the future me can understand this.\n    componentContext = new BehaviorSubject(null);\n    toolbarComponentRef$ = combineLatest({\n        componentContext: this.componentContext.asObservable(),\n        supportedBlocks: this.ngxEditorJs2Service.supportedBlocks$,\n    }).pipe(filter(({ componentContext }) => componentContext !== null), distinctUntilChanged(({ componentContext: previous }, { componentContext: current }) => previous.index !== current.index ||\n        previous.viewContainerRef !== current.viewContainerRef\n        ? (previous.viewContainerRef.clear(), false)\n        : true), map(({ componentContext, supportedBlocks }) => {\n        const { index, viewContainerRef, blockOptionActions, actionCallback, formControlName, } = componentContext;\n        // TODO We will need to create a ToolbarBottomRailComponent to handle the mobile view\n        const componentRef = viewContainerRef.createComponent(ToolbarComponent);\n        componentRef.setInput('componentContextPositionIndex', index + 1);\n        componentRef.setInput('supportedBlocks', supportedBlocks);\n        componentRef.setInput('blockOptionActions', blockOptionActions);\n        componentRef.setInput('actionCallback', actionCallback);\n        componentRef.setInput('formControlName', formControlName);\n        componentRef.setInput('addBlockCallback', this.addBlock.bind(this));\n        componentRef.setInput('moveBlockPositionCallback', this.movePositionAction.bind(this));\n        return componentRef;\n    }));\n    addBlock(block, index) {\n        return this.editorJsService\n            .createNgxEditorJsBlockWithComponent(block, index)\n            .pipe(switchMap((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    movePositionAction(action, index, formControlName) {\n        return lastValueFrom(this.editorJsService.determineMovePositionAction(action, index, formControlName));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolbarFabDirective {\n    toolFabService = inject(ToolFabService);\n    viewContainerRef = inject(ViewContainerRef);\n    autofocus = input();\n    blockOptionActions = input();\n    actionCallback = input.required();\n    componentContextPositionIndex = input.required();\n    formControlName = input.required();\n    onMouseEnter() {\n        this.toolFabService.componentContext.next({\n            viewContainerRef: this.viewContainerRef,\n            blockOptionActions: this.blockOptionActions() ?? [],\n            actionCallback: this.actionCallback(),\n            index: this.componentContextPositionIndex(),\n            formControlName: this.formControlName(),\n        });\n    }\n    constructor() {\n        effect(() => {\n            this.autofocus() && this.onMouseEnter();\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarFabDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ToolbarFabDirective, isStandalone: true, selector: \"[toolbarFab]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: true, transformFunction: null }, componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null } }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarFabDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[toolbarFab]',\n                }]\n        }], ctorParameters: () => [], propDecorators: { onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }] } });\n\nclass CleanPasteDataDirective {\n    onPaste(event) {\n        event.preventDefault();\n        const text = event.clipboardData?.getData('text/plain');\n        document.execCommand('insertText', false, text);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: CleanPasteDataDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.4\", type: CleanPasteDataDirective, isStandalone: true, selector: \"[cleanPasteData]\", host: { listeners: { \"paste\": \"onPaste($event)\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: CleanPasteDataDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cleanPasteData]',\n                }]\n        }], propDecorators: { onPaste: [{\n                type: HostListener,\n                args: ['paste', ['$event']]\n            }] } });\n\nclass HeaderBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'HeaderBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'h1', text: 'H1' },\n        { action: 'h2', text: 'H2' },\n        { action: 'h3', text: 'H3' },\n        { action: 'h4', text: 'H4' },\n        { action: 'h5', text: 'H5' },\n        { action: 'h6', text: 'H6' },\n    ]);\n    savedAction = signal('h1');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(selectedAction) {\n        this.savedAction.set(selectedAction);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: HeaderBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: HeaderBlockComponent, isStandalone: true, selector: \"header-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n@switch (savedAction()) {\n  @case ('h1') {\n    <h1>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h1>\n  }\n  @case ('h2') {\n    <h2>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h2>\n  }\n  @case ('h3') {\n    <h3>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h3>\n  }\n  @case ('h4') {\n    <h4>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h4>\n  }\n  @case ('h5') {\n    <h5>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h5>\n  }\n  @case ('h6') {\n    <h6>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h6>\n  }\n}\n\n<ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n  <span\n    controlAccessor\n    cleanPasteData\n    contentEditable\n    toolbarFab\n    [defaultValue]=\"formGroup().get(formControlName())?.value\"\n    [actionCallback]=\"actionCallbackBind\"\n    [blockOptionActions]=\"blockOptionActions()\"\n    [autofocus]=\"autofocus()\"\n    [formControlName]=\"formControlName()\"\n    [componentContextPositionIndex]=\"sortIndex()\"\n  ></span>\n</ng-template>\n`, isInline: true, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: HeaderBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'header-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgTemplateOutlet\n                    ], template: `\n@switch (savedAction()) {\n  @case ('h1') {\n    <h1>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h1>\n  }\n  @case ('h2') {\n    <h2>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h2>\n  }\n  @case ('h3') {\n    <h3>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h3>\n  }\n  @case ('h4') {\n    <h4>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h4>\n  }\n  @case ('h5') {\n    <h5>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h5>\n  }\n  @case ('h6') {\n    <h6>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h6>\n  }\n}\n\n<ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n  <span\n    controlAccessor\n    cleanPasteData\n    contentEditable\n    toolbarFab\n    [defaultValue]=\"formGroup().get(formControlName())?.value\"\n    [actionCallback]=\"actionCallbackBind\"\n    [blockOptionActions]=\"blockOptionActions()\"\n    [autofocus]=\"autofocus()\"\n    [formControlName]=\"formControlName()\"\n    [componentContextPositionIndex]=\"sortIndex()\"\n  ></span>\n</ng-template>\n`, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"] }]\n        }] });\n\nclass ParagraphBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'ParagraphBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'small', icon: 'density_small' },\n        { action: 'medium', icon: 'density_medium' },\n        { action: 'large', icon: 'density_large' },\n        { action: 'title-small', text: 'TS' },\n        { action: 'title-medium', text: 'TM' },\n        { action: 'title-large', text: 'TL' },\n    ]);\n    savedAction = signal('medium');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(action) {\n        this.savedAction.update(() => action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ParagraphBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ParagraphBlockComponent, isStandalone: true, selector: \"paragraph-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, isInline: true, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ParagraphBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'paragraph-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgClass,\n                    ], template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"] }]\n        }] });\n\nconst NGX_EDITORJS_OPTIONS = new InjectionToken('NGX_EDITORJS_OPTIONS');\nclass NgxEditorJs2Service {\n    editorJsService = inject(EditorJsService);\n    consumerSupportedBlocks = new BehaviorSubject(inject(NGX_EDITORJS_OPTIONS, { optional: true })?.consumerSupportedBlocks ??\n        []);\n    internalSupportedBlocks = new BehaviorSubject([\n        {\n            name: 'Paragraph',\n            component: ParagraphBlockComponent,\n            componentInstanceName: 'ParagraphBlockComponent',\n        },\n        {\n            name: 'Header',\n            component: HeaderBlockComponent,\n            componentInstanceName: 'HeaderBlockComponent',\n        },\n    ]);\n    supportedBlocks$ = combineLatest([\n        this.internalSupportedBlocks.asObservable(),\n        this.consumerSupportedBlocks.asObservable(),\n    ]).pipe(map(([internal, consumer]) => [...internal, ...consumer]));\n    blocksToLoad = new BehaviorSubject([]);\n    loadBlocks$ = this.blocksToLoad.asObservable().pipe(delay(0), exhaustMap((blocks) => this.clearBlocksFromEditorJs(blocks)), map(([blocks]) => this.determineToloadDefaultBlocks(blocks)), map((blocks) => this.removeDuplicateBlocksWithSameIds(blocks)), map((blocks) => this.sortBlocks(blocks)), switchMap((blocks) => this.combineSupportBlocks(blocks)), map(([blocks, supportedBlocks]) => this.createALookupMapForSupportedBlocks(blocks, supportedBlocks)), map(({ blocks, supportedBlocksMap }) => this.findAndMarshalBlocksComponent(blocks, supportedBlocksMap)), mergeMap((blocks) => this.addBlocksToEditorJs(blocks).pipe(map(() => blocks))));\n    clearBlocksFromEditorJs(blocks) {\n        return forkJoin([of(blocks), this.editorJsService.clearBlocks()]);\n    }\n    determineToloadDefaultBlocks(blocks) {\n        return blocks.length > 0 ? blocks : this.loadDefaultBlocks();\n    }\n    loadDefaultBlocks() {\n        return [\n            {\n                blockId: 'tmdjr',\n                sortIndex: 0,\n                componentInstanceName: 'HeaderBlockComponent',\n                dataClean: \"Let's get started... 🚀\",\n                savedAction: 'h1',\n            },\n        ];\n    }\n    removeDuplicateBlocksWithSameIds(blocks) {\n        return Array.from(new Map(blocks.map((block) => [block.blockId, block])).values());\n    }\n    sortBlocks(blocks) {\n        return blocks.sort((a, b) => a.sortIndex - b.sortIndex);\n    }\n    combineSupportBlocks(blocks) {\n        return combineLatest([of(blocks), this.supportedBlocks$]);\n    }\n    createALookupMapForSupportedBlocks(blocks, supportedBlocks) {\n        return {\n            blocks,\n            supportedBlocksMap: new Map(supportedBlocks.map((sb) => [sb.componentInstanceName, sb.component])),\n        };\n    }\n    findAndMarshalBlocksComponent(blocks, supportedBlocksMap) {\n        return blocks.map((block) => ({\n            ...block,\n            component: supportedBlocksMap.get(block.componentInstanceName) ??\n                HeaderBlockComponent,\n        }));\n    }\n    addBlocksToEditorJs(blocks) {\n        return combineLatest(blocks.map((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass EditorJsComponent {\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    bootstrapEditorJs = input();\n    blocks = input.required({\n        transform: (value) => this.ngxEditorJs2Service.blocksToLoad.next(value),\n    });\n    ngxEditor = viewChild.required('ngxEditor', { read: ViewContainerRef });\n    constructor() {\n        effect(() => {\n            this.editorJsService.setNgxEditor(this.ngxEditor());\n        });\n    }\n    // * DEBUGGING\n    // ngOnInit() {\n    //   this.editorJsService.formGroup.valueChanges.subscribe((value) => {\n    //     console.log('[formGroup.value] : ', value);\n    //   });\n    //   this.editorJsService.blockComponents$.subscribe((components) => {\n    //     console.log('[components] : ', components);\n    //   });\n    // }\n    drop(event) {\n        lastValueFrom(this.editorJsService.moveBlockComponentPosition(event.previousIndex, event.currentIndex)).then(() => {\n            // DRAG ANIMATION HOT FIX\n            // Wait for Angular to update the DOM, then remove the animation class\n            requestAnimationFrame(() => {\n                document.querySelectorAll('.cdk-drag-animating').forEach((el) => {\n                    const element = el;\n                    element.classList.remove('cdk-drag-animating'); // Ensure old class is removed\n                    void element.offsetWidth; // Force reflow\n                    element.classList.add('cdk-drag-animating'); // Re-add for next drag\n                });\n            });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.2.0\", version: \"20.0.4\", type: EditorJsComponent, isStandalone: true, selector: \"editor-js\", inputs: { bootstrapEditorJs: { classPropertyName: \"bootstrapEditorJs\", publicName: \"bootstrapEditorJs\", isSignal: true, isRequired: false, transformFunction: null }, blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: true, transformFunction: null } }, viewQueries: [{ propertyName: \"ngxEditor\", first: true, predicate: [\"ngxEditor\"], descendants: true, read: ViewContainerRef, isSignal: true }], ngImport: i0, template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, isInline: true, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\", \"cdkDropListElementContainer\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'editor-js', imports: [CdkDropList], template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nclass ToolbarInlineComponent {\n    // @Input() selection!: Selection;\n    selection = input.required();\n    closeOverlayEmitter = new EventEmitter();\n    renderer = inject(Renderer2);\n    url = '';\n    showURLInputField = signal(false);\n    savedRanges = [];\n    options = [\n        { icon: 'format_bold', action: 'bold' },\n        { icon: 'format_italic', action: 'italic' },\n        { icon: 'format_underlined', action: 'underline' },\n        { icon: 'strikethrough_s', action: 'strikethrough' },\n        { icon: 'format_list_bulleted', action: 'insertUnorderedList' },\n        { icon: 'format_list_numbered', action: 'insertOrderedList' },\n        { icon: 'highlight', action: 'highlightColor' },\n        { icon: 'format_align_left', action: 'justifyLeft' },\n        { icon: 'format_align_center', action: 'justifyCenter' },\n        { icon: 'format_align_right', action: 'justifyRight' },\n        { icon: 'format_align_justify', action: 'justifyFull' },\n    ];\n    addInlineTag(tag) {\n        // https://stackoverflow.com/questions/60581285/execcommand-is-now-obsolete-whats-the-alternative\n        document.execCommand(tag);\n        this.closeOverlayEmitter.emit();\n    }\n    addClassTag(tag, className) {\n        const range = this.selection().getRangeAt(0);\n        const element = this.renderer.createElement(tag);\n        element.className = className ?? '';\n        element.innerHTML = range.toString();\n        range.deleteContents();\n        range.insertNode(element);\n        this.closeOverlayEmitter.emit();\n    }\n    clearTags() {\n        document.execCommand('removeFormat');\n        document.execCommand('unlink');\n        this.closeOverlayEmitter.emit();\n    }\n    openUrlInput() {\n        this.savedRanges.push(this.selection().getRangeAt(0));\n        this.showURLInputField.set(true);\n    }\n    createLink() {\n        this.selection().removeAllRanges();\n        this.selection().addRange(this.savedRanges.pop());\n        document.execCommand('createLink', false, this.url);\n        this.closeOverlayEmitter.emit();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarInlineComponent, isStandalone: true, selector: \"toolbar-inline\", inputs: { selection: { classPropertyName: \"selection\", publicName: \"selection\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { closeOverlayEmitter: \"closeOverlay\" }, ngImport: i0, template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, isInline: true, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"], dependencies: [{ kind: \"ngmodule\", type: MatListModule }, { kind: \"ngmodule\", type: MatIconModule }, { kind: \"component\", type: i1$2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-inline', imports: [MatListModule, MatIconModule, FormsModule], template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"] }]\n        }], propDecorators: { closeOverlayEmitter: [{\n                type: Output,\n                args: ['closeOverlay']\n            }] } });\n\nclass ToolbarInlineService {\n    overlay = inject(Overlay);\n    overlayRef;\n    determineToDisplayInlineToolbarBlock(_event) {\n        return of(window.getSelection()).pipe(filter((selection) => selection !== null), filter((selection) => selection.rangeCount > 0), filter((selection) => selection.toString().length > 0), filter((selection) => selection.toString() !== ''), tap(() => this.overlayRef?.hasAttached() && this.overlayRef.dispose()), // So hacky tired to do this properly\n        map((selection) => ({\n            selection,\n            parant: this.getSelectionParent(selection),\n        })), filter(({ parant }) => this.isSelectionInABlock(parant)), exhaustMap(({ selection }) => this.attachInlineToolbar(selection)));\n    }\n    getSelectionParent(selection) {\n        const range = selection.getRangeAt(0);\n        return range.commonAncestorContainer.nodeType === Node.ELEMENT_NODE\n            ? range.commonAncestorContainer\n            : range.commonAncestorContainer.parentElement;\n    }\n    isSelectionInABlock(target) {\n        // ! TODO: This is a hacky way to determine if the selection is in a block\n        // ! Need to also check if the block wants to display the inline toolbar\n        return (!!target &&\n            (target.closest('.no-toolbar-inline') !== null\n                ? false\n                : target.closest('ngx-editor-js2') !== null\n                    ? true\n                    : false));\n    }\n    attachInlineToolbar(selection) {\n        return of(selection.getRangeAt(0)).pipe(map((range) => range.getBoundingClientRect()), map((selectionRect) => this.createOverlay(selectionRect)), \n        // So hacky tired to do this properly\n        // passing the refs down the pipe adds a bug\n        // user selects text with a drag\n        // (mousedown → mousemove → wait → mousemove → mouseup)\n        tap((overlayRef) => (this.overlayRef = overlayRef)), map((overlayRef) => {\n            const inlineToolbar = overlayRef.attach(new ComponentPortal(ToolbarInlineComponent));\n            inlineToolbar.setInput('selection', selection);\n            lastValueFrom(merge(overlayRef.backdropClick(), inlineToolbar.instance.closeOverlayEmitter).pipe(tap(() => overlayRef.dispose()), tap(() => selection.removeAllRanges())));\n            return true;\n        }));\n    }\n    createOverlay(selectionRect) {\n        return this.overlay.create({\n            hasBackdrop: true,\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            positionStrategy: this.overlay\n                .position()\n                .flexibleConnectedTo(selectionRect)\n                .withPositions([\n                {\n                    offsetY: 8,\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                },\n            ]),\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass NgxEditorJs2Component {\n    inlineToolbarSerivce = inject(ToolbarInlineService);\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    blocks = input([]);\n    blocksRequested = output();\n    requestBlocks = input.required({\n        transform: (value) => value && this.blocksRequested.emit(this.editorJsService.getBlocks$()),\n    });\n    bootstrapEditorJs$ = combineLatest([\n        inject(ToolFabService).toolbarComponentRef$,\n        this.ngxEditorJs2Service.loadBlocks$,\n        fromEvent(document, 'selectionchange').pipe(debounceTime(200), switchMap((event) => this.inlineToolbarSerivce.determineToDisplayInlineToolbarBlock(event)))\n    ]);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Component, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: NgxEditorJs2Component, isStandalone: true, selector: \"ngx-editor-js2\", inputs: { blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: false, transformFunction: null }, requestBlocks: { classPropertyName: \"requestBlocks\", publicName: \"requestBlocks\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { blocksRequested: \"blocksRequested\" }, ngImport: i0, template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `, isInline: true, dependencies: [{ kind: \"component\", type: EditorJsComponent, selector: \"editor-js\", inputs: [\"bootstrapEditorJs\", \"blocks\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Component, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-editor-js2',\n                    imports: [EditorJsComponent, AsyncPipe],\n                    template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `,\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-editor-js2\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofocusDirective, CleanPasteDataDirective, ControlAccessorDirective, NGX_EDITORJS_OPTIONS, NgxEditorJs2Component, NgxEditorJs2Service, ToolbarFabDirective };\n","import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nfunction normalizeLineEndings(str) {\n    if (!str) {\n        return str;\n    }\n    return str.replace(/\\r\\n|\\r/g, '\\n');\n}\nclass CodemirrorComponent {\n    _differs;\n    _ngZone;\n    /* class applied to the created textarea */\n    className = '';\n    /* name applied to the created textarea */\n    name = 'codemirror';\n    /* autofocus setting applied to the created textarea */\n    autoFocus = false;\n    /**\n     * set options for codemirror\n     * @link http://codemirror.net/doc/manual.html#config\n     */\n    set options(value) {\n        this._options = value;\n        if (!this._differ && value) {\n            this._differ = this._differs.find(value).create();\n        }\n    }\n    /* preserve previous scroll position after updating value */\n    preserveScrollPosition = false;\n    /* called when the text cursor is moved */\n    cursorActivity = new EventEmitter();\n    /* called when the editor is focused or loses focus */\n    focusChange = new EventEmitter();\n    /* called when the editor is scrolled */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    scroll = new EventEmitter();\n    /* called when file(s) are dropped */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    drop = new EventEmitter();\n    /* called when codeMirror instance is initiated on the component */\n    codeMirrorLoaded = new EventEmitter();\n    ref;\n    value = '';\n    disabled = false;\n    isFocused = false;\n    codeMirror;\n    /**\n     * either global variable or required library\n     */\n    _codeMirror;\n    _differ;\n    _options;\n    constructor(_differs, _ngZone) {\n        this._differs = _differs;\n        this._ngZone = _ngZone;\n    }\n    get codeMirrorGlobal() {\n        if (this._codeMirror) {\n            return this._codeMirror;\n        }\n        // in order to allow for universal rendering, we import Codemirror runtime with `require` to prevent node errors\n        this._codeMirror = typeof CodeMirror !== 'undefined' ? CodeMirror : import('codemirror');\n        return this._codeMirror;\n    }\n    ngAfterViewInit() {\n        this._ngZone.runOutsideAngular(async () => {\n            const codeMirrorObj = await this.codeMirrorGlobal;\n            const codeMirror = codeMirrorObj?.default ? codeMirrorObj.default : codeMirrorObj;\n            this.codeMirror = codeMirror.fromTextArea(this.ref.nativeElement, this._options);\n            this.codeMirror.on('cursorActivity', cm => this._ngZone.run(() => this.cursorActive(cm)));\n            this.codeMirror.on('scroll', this.scrollChanged.bind(this));\n            this.codeMirror.on('blur', () => this._ngZone.run(() => this.focusChanged(false)));\n            this.codeMirror.on('focus', () => this._ngZone.run(() => this.focusChanged(true)));\n            this.codeMirror.on('change', (cm, change) => this._ngZone.run(() => this.codemirrorValueChanged(cm, change)));\n            this.codeMirror.on('drop', (cm, e) => {\n                this._ngZone.run(() => this.dropFiles(cm, e));\n            });\n            this.codeMirror.setValue(this.value);\n            this.codeMirrorLoaded.emit(this);\n        });\n    }\n    ngDoCheck() {\n        if (!this._differ) {\n            return;\n        }\n        // check options have not changed\n        const changes = this._differ.diff(this._options);\n        if (changes) {\n            changes.forEachChangedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n            changes.forEachAddedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n            changes.forEachRemovedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n        }\n    }\n    ngOnDestroy() {\n        // is there a lighter-weight way to remove the cm instance?\n        if (this.codeMirror) {\n            this.codeMirror.toTextArea();\n        }\n    }\n    codemirrorValueChanged(cm, change) {\n        const cmVal = cm.getValue();\n        if (this.value !== cmVal) {\n            this.value = cmVal;\n            this.onChange(this.value);\n        }\n    }\n    setOptionIfChanged(optionName, newValue) {\n        if (!this.codeMirror) {\n            return;\n        }\n        // cast to any to handle strictly typed option names\n        // could possibly import settings strings available in the future\n        this.codeMirror.setOption(optionName, newValue);\n    }\n    focusChanged(focused) {\n        this.onTouched();\n        this.isFocused = focused;\n        this.focusChange.emit(focused);\n    }\n    scrollChanged(cm) {\n        this.scroll.emit(cm.getScrollInfo());\n    }\n    cursorActive(cm) {\n        this.cursorActivity.emit(cm);\n    }\n    dropFiles(cm, e) {\n        this.drop.emit([cm, e]);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        if (value === null || value === undefined) {\n            return;\n        }\n        if (!this.codeMirror) {\n            this.value = value;\n            return;\n        }\n        const cur = this.codeMirror.getValue();\n        if (value !== cur && normalizeLineEndings(cur) !== normalizeLineEndings(value)) {\n            this.value = value;\n            if (this.preserveScrollPosition) {\n                const prevScrollPosition = this.codeMirror.getScrollInfo();\n                this.codeMirror.setValue(this.value);\n                this.codeMirror.scrollTo(prevScrollPosition.left, prevScrollPosition.top);\n            }\n            else {\n                this.codeMirror.setValue(this.value);\n            }\n        }\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.setOptionIfChanged('readOnly', this.disabled);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    onChange = (_) => { };\n    /** Implemented as part of ControlValueAccessor. */\n    onTouched = () => { };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorComponent, deps: [{ token: i0.KeyValueDiffers }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.1\", type: CodemirrorComponent, selector: \"ngx-codemirror\", inputs: { className: \"className\", name: \"name\", autoFocus: \"autoFocus\", options: \"options\", preserveScrollPosition: \"preserveScrollPosition\" }, outputs: { cursorActivity: \"cursorActivity\", focusChange: \"focusChange\", scroll: \"scroll\", drop: \"drop\", codeMirrorLoaded: \"codeMirrorLoaded\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => CodemirrorComponent),\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"ref\", first: true, predicate: [\"ref\"], descendants: true }], ngImport: i0, template: `\n    <textarea\n      [name]=\"name\"\n      class=\"ngx-codemirror {{ className }}\"\n      [class.ngx-codemirror--focused]=\"isFocused\"\n      autocomplete=\"off\"\n      [autofocus]=\"autoFocus\"\n      #ref\n    >\n    </textarea>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-codemirror',\n                    template: `\n    <textarea\n      [name]=\"name\"\n      class=\"ngx-codemirror {{ className }}\"\n      [class.ngx-codemirror--focused]=\"isFocused\"\n      autocomplete=\"off\"\n      [autofocus]=\"autoFocus\"\n      #ref\n    >\n    </textarea>\n  `,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => CodemirrorComponent),\n                            multi: true,\n                        },\n                    ],\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.KeyValueDiffers }, { type: i0.NgZone }]; }, propDecorators: { className: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], preserveScrollPosition: [{\n                type: Input\n            }], cursorActivity: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], scroll: [{\n                type: Output\n            }], drop: [{\n                type: Output\n            }], codeMirrorLoaded: [{\n                type: Output\n            }], ref: [{\n                type: ViewChild,\n                args: ['ref']\n            }] } });\n\nclass CodemirrorModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, declarations: [CodemirrorComponent], exports: [CodemirrorComponent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CodemirrorComponent],\n                    declarations: [CodemirrorComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CodemirrorComponent, CodemirrorModule };\n","import { Component, input, signal } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CdkDrag } from '@angular/cdk/drag-drop';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\nimport {\n  AutofocusDirective,\n  BlockComponent,\n  BlockOptionAction,\n  ControlAccessorDirective,\n  ToolbarFabDirective,\n} from '@tmdjr/ngx-editor-js2';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'ngx-editor-js2-codemirror',\n  host: { class: 'cdk-drag-animating no-toolbar-inline' },\n  hostDirectives: [CdkDrag],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    ControlAccessorDirective,\n    AutofocusDirective,\n    ToolbarFabDirective,\n    CodemirrorModule,\n  ],\n  template: `\n  @if( waitForAnimation() ) {\n    <ng-container [formGroup]=\"formGroup()\">\n      <span controlAccessor [autofocus]=\"autofocus()\"></span>\n      <ngx-codemirror\n        class=\"fade-in\"\n        toolbarFab\n        [actionCallback]=\"actionCallbackBind\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n        [options]=\"codeMirrorOptions()\"\n      ></ngx-codemirror>\n    </ng-container>\n  }\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        position: relative;\n        margin: 1.5rem 0;\n        .codemirror-container-overlay {\n          display: flex;\n          height: 100%;\n          width: 100%;\n          position: absolute;\n        }\n      }\n\n      :host ::ng-deep .CodeMirror {\n        font-family: Cascadia Code, Fira Code, Menlo, Monaco, 'Courier New',\n          monospace;\n        font-size: 16px;\n        font-weight: 400;\n        line-height: 32px;\n        letter-spacing: 0.5px;\n        height: 100%;\n      }\n    `,\n  ],\n})\nexport class NgxEditorJs2CodemirrorComponent implements BlockComponent {\n  sortIndex = input<number>(0);\n  componentInstanceName = 'NgxEditorJs2CodemirrorComponent';\n  autofocus = input<boolean>(true);\n  formGroup = input.required<FormGroup>();\n  formControlName = input.required<string>();\n  blockOptionActions = input<BlockOptionAction[]>([\n    { action: 'text/typescript', icon: 'javascript' },\n    { action: 'css', icon: 'css' },\n    { action: 'xml', icon: 'html' },\n  ]);\n\n  codeMirrorOptions = signal({\n    lineNumbers: true,\n    theme: 'material-palenight',\n    mode: 'text/typescript',\n    extraKeys: { 'Ctrl-Space': 'autocomplete' },\n    styleActiveLine: true, // Highlight active line\n    matchBrackets: true,\n    indentUnit: 2,\n    tabSize: 2,\n    cursorScrollMargin: 5,\n  });\n\n  savedAction = signal<string>('display-large');\n  actionCallbackBind = this.actionCallback.bind(this);\n\n  actionCallback(action: string) {\n    this.codeMirrorOptions.update((prev) => ({ ...prev, mode: action }));\n    this.savedAction.update(() => action);\n  }\n\n  // ! Hotfix for perspective: 2500px;\n  // Need create a delay to wait for the animation to finish before showing the component\n  waitForAnimation = signal<boolean>(false);\n  constructor() {\n    setTimeout(() => {\n      this.waitForAnimation.update(() => true);\n    }, 500);\n  }\n}\n","/*\n * Public API Surface of ngx-editor-js2-codemirror\n */\n\nexport * from './lib/ngx-editor-js2-codemirror.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nexport { _asyncToGenerator as default };"],"names":["i0","inject","ElementRef","input","forwardRef","HostListener","Directive","output","Component","signal","Injectable","ViewContainerRef","effect","InjectionToken","viewChild","EventEmitter","Renderer2","Output","i2","NG_VALUE_ACCESSOR","FormControl","ReactiveFormsModule","FormBuilder","FormsModule","startWith","combineLatest","map","firstValueFrom","of","from","tap","filter","defaultIfEmpty","Observable","lastValueFrom","forkJoin","iif","switchMap","mergeMap","BehaviorSubject","distinctUntilChanged","delay","exhaustMap","merge","fromEvent","debounceTime","MatRipple","i1$1","CdkDragHandle","CdkDrag","CdkDropList","i1","OverlayModule","Overlay","i1$2","MatIcon","MatIconModule","AsyncPipe","NgTemplateOutlet","NgClass","toObservable","MatFormField","MatLabel","MatInput","MatList","MatListItem","MatListModule","ComponentPortal","ToolbarBlockOptionsComponent_For_11_Conditional_1_Template","rf","ctx","ɵɵtext","blockOptionAction_r2","ɵɵnextContext","$implicit","ɵɵtextInterpolate1","text","ToolbarBlockOptionsComponent_For_11_Conditional_2_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","icon","ToolbarBlockOptionsComponent_For_11_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","ToolbarBlockOptionsComponent_For_11_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵresetView","handleAction","action","ɵɵconditionalCreate","ɵɵconditional","ToolbarBlocksComponent_Conditional_5_Conditional_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template_mat_list_item_click_0_listener","block_r2","addBlock","name","ToolbarBlocksComponent_Conditional_5_Conditional_2_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIndex","filteredBlocks_r4","ɵɵrepeater","ToolbarBlocksComponent_Conditional_5_Template","length","ToolbarComponent_ng_template_9_Template","_r2","ToolbarComponent_ng_template_9_Template_toolbar_blocks_addBlock_0_listener","$event","ɵɵproperty","supportedBlocks","ToolbarComponent_ng_template_10_Template","_r4","ToolbarComponent_ng_template_10_Template_toolbar_block_options_handleAction_0_listener","ToolbarComponent_ng_template_10_Template_toolbar_block_options_moveBlockPosition_0_listener","moveBlockPosition","blockOptionActions","HeaderBlockComponent_Case_0_ng_container_1_Template","ɵɵelementContainer","HeaderBlockComponent_Case_0_Template","ɵɵtemplate","sharedHeaderTemplate_r1","ɵɵreference","HeaderBlockComponent_Case_1_ng_container_1_Template","HeaderBlockComponent_Case_1_Template","HeaderBlockComponent_Case_2_ng_container_1_Template","HeaderBlockComponent_Case_2_Template","HeaderBlockComponent_Case_3_ng_container_1_Template","HeaderBlockComponent_Case_3_Template","HeaderBlockComponent_Case_4_ng_container_1_Template","HeaderBlockComponent_Case_4_Template","HeaderBlockComponent_Case_5_ng_container_1_Template","HeaderBlockComponent_Case_5_Template","HeaderBlockComponent_ng_template_6_Template","ɵɵelement","tmp_2_0","ctx_r1","formGroup","get","formControlName","value","actionCallbackBind","autofocus","sortIndex","_c0","ToolbarInlineComponent_For_2_Template","ToolbarInlineComponent_For_2_Template_div_click_0_listener","item_r2","addInlineTag","ToolbarInlineComponent_Conditional_12_Template","ɵɵtwoWayListener","ToolbarInlineComponent_Conditional_12_Template_input_ngModelChange_1_listener","ɵɵtwoWayBindingSet","url","ToolbarInlineComponent_Conditional_12_Template_div_click_2_listener","createLink","ɵɵtwoWayProperty","ControlAccessorDirective","elementRef","defaultValue","onChange","onTouched","writeValue","nativeElement","innerHTML","registerOnChange","fn","registerOnTouched","onBlur","onInput","ɵfac","ControlAccessorDirective_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","hostBindings","ControlAccessorDirective_HostBindings","ControlAccessorDirective_blur_HostBindingHandler","ControlAccessorDirective_input_HostBindingHandler","inputs","features","ɵɵProvidersFeature","provide","useExisting","multi","ngDevMode","AutofocusDirective","ngAfterContentInit","focus","AutofocusDirective_Factory","MovePositionActions","ToolbarBlockOptionsComponent","Position","handleActionEmitter","alias","moveBlockPositionEmitter","movePosition","emit","ToolbarBlockOptionsComponent_Factory","ɵcmp","ɵɵdefineComponent","outputs","decls","vars","consts","template","ToolbarBlockOptionsComponent_Template","ToolbarBlockOptionsComponent_Template_div_click_1_listener","UP","ToolbarBlockOptionsComponent_Template_div_click_4_listener","DELETE","ToolbarBlockOptionsComponent_Template_div_click_7_listener","DOWN","dependencies","styles","ToolbarBlocksComponent","addBlockEmitter","supportedBlocks$","blockCtrl","filter$","valueChanges","pipe","filteredBlocks$","blocks","filterString","replace","pattern","split","v","join","regex","RegExp","block","match","component","ToolbarBlocksComponent_Factory","ToolbarBlocksComponent_Template","ɵɵpipe","ɵɵpipeBind1","DefaultValueAccessor","NgControlStatus","FormControlDirective","ToolbarComponent","componentContextPositionIndex","required","actionCallback","addBlockCallback","moveBlockPositionCallback","openBlocks","openBlocksOption","openBlocksList","update","prev","openBlockOptionList","closeLists","set","ToolbarComponent_Factory","ToolbarComponent_Template","ToolbarComponent_Template_div_click_1_listener","ToolbarComponent_Template_div_click_5_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_9_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_10_listener","blockListTigger_r5","blockOptionListTigger_r6","CdkConnectedOverlay","CdkOverlayOrigin","BlockMovementService","componentRefMap","Map","clearComponentRefs","clear","getNgxEditorJsBlocks","Array","values","newComponentAttached","componentRef","instance","updateComponentIndices","ngxEditor","setInput","indexOf","hostView","moveBlockComponentPosition","index","componentRefs","find","totalComponents","currentIndex","newIndex","Math","max","min","move","removeBlockComponent","delete","successful","remove","BlockMovementService_Factory","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","createUID","random","toString","substring","EditorJsService","formBuilder","blockMovementService","group","setNgxEditor","getBlocks$","observer","blockId","componentInstanceName","savedAction","dataClean","sort","a","b","then","next","complete","createNgxEditorJsBlockWithComponent","blockComponent","addBlockComponent","ngxEditorJsBlock","createFormGroupControl","attachComponent","control","formControl","addControl","controlName","createComponent","determineMovePositionAction","previousIndex","viewRef","removeControl","clearBlocks","EditorJsService_Factory","ToolFabService","ngxEditorJs2Service","NgxEditorJs2Service","editorJsService","componentContext","toolbarComponentRef$","asObservable","previous","current","viewContainerRef","bind","movePositionAction","ToolFabService_Factory","ToolbarFabDirective","toolFabService","onMouseEnter","constructor","ToolbarFabDirective_Factory","ToolbarFabDirective_HostBindings","ToolbarFabDirective_mouseenter_HostBindingHandler","CleanPasteDataDirective","onPaste","event","preventDefault","clipboardData","getData","document","execCommand","CleanPasteDataDirective_Factory","CleanPasteDataDirective_HostBindings","CleanPasteDataDirective_paste_HostBindingHandler","HeaderBlockComponent","selectedAction","HeaderBlockComponent_Factory","hostAttrs","ɵɵHostDirectivesFeature","HeaderBlockComponent_Template","ɵɵtemplateRefExtractor","tmp_1_0","NgControlStatusGroup","FormGroupDirective","FormControlName","ParagraphBlockComponent","ParagraphBlockComponent_Factory","ParagraphBlockComponent_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","NGX_EDITORJS_OPTIONS","consumerSupportedBlocks","optional","internalSupportedBlocks","internal","consumer","blocksToLoad","loadBlocks$","clearBlocksFromEditorJs","determineToloadDefaultBlocks","removeDuplicateBlocksWithSameIds","sortBlocks","combineSupportBlocks","createALookupMapForSupportedBlocks","supportedBlocksMap","findAndMarshalBlocksComponent","addBlocksToEditorJs","loadDefaultBlocks","sb","NgxEditorJs2Service_Factory","EditorJsComponent","bootstrapEditorJs","transform","read","drop","requestAnimationFrame","querySelectorAll","forEach","el","element","classList","offsetWidth","add","EditorJsComponent_Factory","viewQuery","EditorJsComponent_Query","ɵɵviewQuerySignal","ɵɵqueryAdvance","EditorJsComponent_Template","EditorJsComponent_Template_div_cdkDropListDropped_0_listener","ToolbarInlineComponent","selection","closeOverlayEmitter","renderer","showURLInputField","savedRanges","options","tag","addClassTag","className","range","getRangeAt","createElement","deleteContents","insertNode","clearTags","openUrlInput","push","removeAllRanges","addRange","pop","ToolbarInlineComponent_Factory","ToolbarInlineComponent_Template","ToolbarInlineComponent_Template_div_click_3_listener","ToolbarInlineComponent_Template_div_click_6_listener","ToolbarInlineComponent_Template_div_click_9_listener","NgModel","ToolbarInlineService","overlay","overlayRef","determineToDisplayInlineToolbarBlock","_event","window","getSelection","rangeCount","hasAttached","dispose","parant","getSelectionParent","isSelectionInABlock","attachInlineToolbar","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","parentElement","target","closest","getBoundingClientRect","selectionRect","createOverlay","inlineToolbar","attach","backdropClick","create","hasBackdrop","backdropClass","positionStrategy","position","flexibleConnectedTo","withPositions","offsetY","originX","originY","overlayX","overlayY","ToolbarInlineService_Factory","NgxEditorJs2Component","inlineToolbarSerivce","blocksRequested","requestBlocks","bootstrapEditorJs$","NgxEditorJs2Component_Factory","NgxEditorJs2Component_Template","encapsulation","ChangeDetectionStrategy","Input","ViewChild","NgModule","normalizeLineEndings","str","CodemirrorComponent","_differs","_ngZone","autoFocus","_options","_differ","preserveScrollPosition","cursorActivity","focusChange","scroll","codeMirrorLoaded","ref","disabled","isFocused","codeMirror","_codeMirror","codeMirrorGlobal","CodeMirror","ngAfterViewInit","_this","runOutsideAngular","_asyncToGenerator","codeMirrorObj","default","fromTextArea","on","cm","run","cursorActive","scrollChanged","focusChanged","change","codemirrorValueChanged","e","dropFiles","setValue","ngDoCheck","changes","diff","forEachChangedItem","option","setOptionIfChanged","key","currentValue","forEachAddedItem","forEachRemovedItem","ngOnDestroy","toTextArea","cmVal","getValue","optionName","newValue","setOption","focused","getScrollInfo","undefined","cur","prevScrollPosition","scrollTo","left","top","setDisabledState","isDisabled","_","CodemirrorComponent_Factory","ɵɵdirectiveInject","KeyValueDiffers","NgZone","CodemirrorComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","standalone","CodemirrorComponent_Template","ɵɵclassMap","ɵɵinterpolate1","ɵɵclassProp","changeDetection","CodemirrorModule","CodemirrorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","NgxEditorJs2CodemirrorComponent","debugName","codeMirrorOptions","lineNumbers","theme","mode","extraKeys","styleActiveLine","matchBrackets","indentUnit","tabSize","cursorScrollMargin","waitForAnimation","setTimeout","NgxEditorJs2CodemirrorComponent_Template","CommonModule","i3"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,5]}