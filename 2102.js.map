{"version":3,"file":"2102.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/fake-event-detection-DWOdFTFz.mjs","./node_modules/@angular/cdk/fesm2022/keycodes-CpHkExLC.mjs","./node_modules/@angular/cdk/fesm2022/platform-DNDzkVcI.mjs","./node_modules/@angular/cdk/fesm2022/private.mjs","./node_modules/@angular/cdk/fesm2022/list-key-manager-C7tp3RbG.mjs","./node_modules/@angular/cdk/fesm2022/coercion/private.mjs","./node_modules/@angular/cdk/fesm2022/observers.mjs","./node_modules/@angular/cdk/fesm2022/focus-key-manager-CPmlyB_c.mjs","./node_modules/@angular/cdk/fesm2022/id-generator-LuoRZSid.mjs","./node_modules/@angular/cdk/fesm2022/activedescendant-key-manager-CZAE5aFC.mjs","./node_modules/@angular/cdk/fesm2022/shadow-dom-B0oHn41l.mjs","./node_modules/@angular/cdk/fesm2022/typeahead-9ZW4Dtsf.mjs","./node_modules/@angular/cdk/fesm2022/a11y.mjs","./node_modules/@angular/cdk/fesm2022/keycodes.mjs","./node_modules/@angular/cdk/fesm2022/focus-monitor-DUe99AIS.mjs","./node_modules/@angular/cdk/fesm2022/breakpoints-observer-QutrMj4x.mjs","./node_modules/@angular/cdk/fesm2022/style-loader-B2sGQXxD.mjs","./node_modules/@angular/cdk/fesm2022/tree-key-manager-KnCoIkIC.mjs","./node_modules/@angular/cdk/fesm2022/passive-listeners-esHZRgIN.mjs","./node_modules/@angular/cdk/fesm2022/element-x4z00URv.mjs","./node_modules/@angular/cdk/fesm2022/a11y-module-BPzgKr79.mjs","./node_modules/@angular/cdk/fesm2022/array-I1yfCXUO.mjs"],"sourcesContent":["/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n    // `event.detail` is zero depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `detail` works on Chrome, but fails on Firefox.\n    return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\nexport { isFakeTouchstartFromScreenReader as a, isFakeMousedownFromScreenReader as i };\n","const MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\nexport { FF_EQUALS as $, A, BACKSPACE as B, CONTROL as C, DOWN_ARROW as D, END as E, F1 as F, PRINT_SCREEN as G, HOME as H, INSERT as I, TWO as J, THREE as K, LEFT_ARROW as L, MAC_META as M, NINE as N, ONE as O, PAGE_DOWN as P, FOUR as Q, RIGHT_ARROW as R, SPACE as S, TAB as T, UP_ARROW as U, FIVE as V, SIX as W, SEVEN as X, EIGHT as Y, Z, FF_SEMICOLON as _, PAGE_UP as a, CLOSE_SQUARE_BRACKET as a$, QUESTION_MARK as a0, AT_SIGN as a1, B as a2, C as a3, D as a4, E as a5, F as a6, G as a7, H as a8, I as a9, NUMPAD_SEVEN as aA, NUMPAD_EIGHT as aB, NUMPAD_NINE as aC, NUMPAD_MULTIPLY as aD, NUMPAD_PLUS as aE, NUMPAD_MINUS as aF, NUMPAD_PERIOD as aG, NUMPAD_DIVIDE as aH, NUM_LOCK as aI, SCROLL_LOCK as aJ, FIRST_MEDIA as aK, FF_MINUS as aL, MUTE as aM, VOLUME_DOWN as aN, VOLUME_UP as aO, FF_MUTE as aP, FF_VOLUME_DOWN as aQ, LAST_MEDIA as aR, FF_VOLUME_UP as aS, SEMICOLON as aT, EQUALS as aU, DASH as aV, SLASH as aW, APOSTROPHE as aX, TILDE as aY, OPEN_SQUARE_BRACKET as aZ, BACKSLASH as a_, J as aa, K as ab, L as ac, M as ad, N as ae, O as af, P as ag, Q as ah, R as ai, S as aj, T as ak, U as al, V as am, W as an, X as ao, Y as ap, MAC_WK_CMD_LEFT as aq, MAC_WK_CMD_RIGHT as ar, CONTEXT_MENU as as, NUMPAD_ZERO as at, NUMPAD_ONE as au, NUMPAD_TWO as av, NUMPAD_THREE as aw, NUMPAD_FOUR as ax, NUMPAD_FIVE as ay, NUMPAD_SIX as az, ZERO as b, SINGLE_QUOTE as b0, ENTER as c, ALT as d, META as e, SHIFT as f, ESCAPE as g, PERIOD as h, DELETE as i, F2 as j, F3 as k, F4 as l, F5 as m, F6 as n, F7 as o, F8 as p, F9 as q, F10 as r, F11 as s, F12 as t, COMMA as u, MAC_ENTER as v, NUM_CENTER as w, PAUSE as x, CAPS_LOCK as y, PLUS_SIGN as z };\n","import * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    _platformId = inject(PLATFORM_ID);\n    // We want to use the Angular platform check because if the Document is shimmed\n    // without the navigator, the following checks will fail. This is preferred because\n    // sometimes the Document may be shimmed without the user's knowledge or intention\n    /** Whether the Angular application is being rendered in the browser. */\n    isBrowser = this._platformId\n        ? isPlatformBrowser(this._platformId)\n        : typeof document === 'object' && !!document;\n    /** Whether the current browser is Microsoft Edge. */\n    EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n    /** Whether the current rendering engine is Microsoft Trident. */\n    TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n    // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n    /** Whether the current rendering engine is Blink. */\n    BLINK = this.isBrowser &&\n        !!(window.chrome || hasV8BreakIterator) &&\n        typeof CSS !== 'undefined' &&\n        !this.EDGE &&\n        !this.TRIDENT;\n    // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n    // ensure that Webkit runs standalone and is not used as another engine's base.\n    /** Whether the current rendering engine is WebKit. */\n    WEBKIT = this.isBrowser &&\n        /AppleWebKit/i.test(navigator.userAgent) &&\n        !this.BLINK &&\n        !this.EDGE &&\n        !this.TRIDENT;\n    /** Whether the current platform is Apple iOS. */\n    IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n    // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n    // them self as Gecko-like browsers and modify the userAgent's according to that.\n    // Since we only cover one explicit Firefox case, we can simply check for Firefox\n    // instead of having an unstable check for Gecko.\n    /** Whether the current browser is Firefox. */\n    FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n    /** Whether the current platform is Android. */\n    // Trident on mobile adds the android platform to the userAgent to trick detections.\n    ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n    // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n    // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n    // Safari browser should also use Webkit as its layout engine.\n    /** Whether the current browser is Safari. */\n    SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { Platform as P };\n","export { _ as _CdkPrivateStyleLoader } from './style-loader-B2sGQXxD.mjs';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Component used to load the .cdk-visually-hidden styles.\n * @docs-private\n */\nclass _VisuallyHiddenLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _VisuallyHiddenLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _VisuallyHiddenLoader, isStandalone: true, selector: \"ng-component\", exportAs: [\"cdkVisuallyHidden\"], ngImport: i0, template: '', isInline: true, styles: [\".cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none;left:0}[dir=rtl] .cdk-visually-hidden{left:auto;right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _VisuallyHiddenLoader, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'cdkVisuallyHidden', encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none;left:0}[dir=rtl] .cdk-visually-hidden{left:auto;right:0}\\n\"] }]\n        }] });\n\nexport { _VisuallyHiddenLoader };\n","import { signal, QueryList, isSignal, effect } from '@angular/core';\nimport { Subscription, Subject } from 'rxjs';\nimport { T as Typeahead } from './typeahead-9ZW4Dtsf.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { P as PAGE_DOWN, a as PAGE_UP, E as END, H as HOME, L as LEFT_ARROW, R as RIGHT_ARROW, U as UP_ARROW, D as DOWN_ARROW, T as TAB } from './keycodes-CpHkExLC.mjs';\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    _items;\n    _activeItemIndex = signal(-1);\n    _activeItem = signal(null);\n    _wrap = false;\n    _typeaheadSubscription = Subscription.EMPTY;\n    _itemChangesSubscription;\n    _vertical = true;\n    _horizontal;\n    _allowedModifierKeys = [];\n    _homeAndEnd = false;\n    _pageUpAndDown = { enabled: false, delta: 10 };\n    _effectRef;\n    _typeahead;\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     */\n    _skipPredicateFn = (item) => item.disabled;\n    constructor(_items, injector) {\n        this._items = _items;\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => this._itemsChanged(newItems.toArray()));\n        }\n        else if (isSignal(_items)) {\n            if (!injector && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('ListKeyManager constructed with a signal must receive an injector');\n            }\n            this._effectRef = effect(() => this._itemsChanged(_items()), { injector });\n        }\n    }\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     */\n    tabOut = new Subject();\n    /** Stream that emits whenever the active item of the list manager changes. */\n    change = new Subject();\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const items = this._getItemsArray();\n            if (items.length > 0 && items.some(item => typeof item.getLabel !== 'function')) {\n                throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n            }\n        }\n        this._typeaheadSubscription.unsubscribe();\n        const items = this._getItemsArray();\n        this._typeahead = new Typeahead(items, {\n            debounceInterval: typeof debounceInterval === 'number' ? debounceInterval : undefined,\n            skipPredicate: item => this._skipPredicateFn(item),\n        });\n        this._typeaheadSubscription = this._typeahead.selectedItem.subscribe(item => {\n            this.setActiveItem(item);\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._typeahead?.reset();\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem();\n        this.updateActiveItem(item);\n        if (this._activeItem() !== previousActiveItem) {\n            this.change.next(this._activeItemIndex());\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex() - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex() + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    this._typeahead?.handleKey(event);\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._typeahead?.reset();\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex();\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem();\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return !!this._typeahead && this._typeahead.isTyping();\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._getItemsArray().length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex() < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex() < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem.set(activeItem == null ? null : activeItem);\n        this._activeItemIndex.set(index);\n        this._typeahead?.setCurrentSelectedItemIndex(index);\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._effectRef?.destroy();\n        this._typeahead?.destroy();\n        this.tabOut.complete();\n        this.change.complete();\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex() + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex() + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        if (isSignal(this._items)) {\n            return this._items();\n        }\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n    /** Callback for when the items have changed. */\n    _itemsChanged(newItems) {\n        this._typeahead?.setItems(newItems);\n        const activeItem = this._activeItem();\n        if (activeItem) {\n            const newIndex = newItems.indexOf(activeItem);\n            if (newIndex > -1 && newIndex !== this._activeItemIndex()) {\n                this._activeItemIndex.set(newIndex);\n                this._typeahead?.setCurrentSelectedItemIndex(newIndex);\n            }\n        }\n    }\n}\n\nexport { ListKeyManager as L };\n","import { isObservable, of } from 'rxjs';\n\n/**\n * Given either an Observable or non-Observable value, returns either the original\n * Observable, or wraps it in an Observable that emits the non-Observable value.\n */\nfunction coerceObservable(data) {\n    if (!isObservable(data)) {\n        return of(data);\n    }\n    return data;\n}\n\nexport { coerceObservable };\n","import * as i0 from '@angular/core';\nimport { Injectable, inject, NgZone, ElementRef, EventEmitter, booleanAttribute, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, filter, debounceTime } from 'rxjs/operators';\nimport { c as coerceNumberProperty, a as coerceElement } from './element-x4z00URv.mjs';\n\n// Angular may add, remove, or edit comment nodes during change detection. We don't care about\n// these changes because they don't affect the user-preceived content, and worse it can cause\n// infinite change detection cycles where the change detection updates a comment, triggering the\n// MutationObserver, triggering another change detection and kicking the cycle off again.\nfunction shouldIgnoreRecord(record) {\n    // Ignore changes to comment text.\n    if (record.type === 'characterData' && record.target instanceof Comment) {\n        return true;\n    }\n    // Ignore addition / removal of comments.\n    if (record.type === 'childList') {\n        for (let i = 0; i < record.addedNodes.length; i++) {\n            if (!(record.addedNodes[i] instanceof Comment)) {\n                return false;\n            }\n        }\n        for (let i = 0; i < record.removedNodes.length; i++) {\n            if (!(record.removedNodes[i] instanceof Comment)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Observe everything else.\n    return false;\n}\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    _mutationObserverFactory = inject(MutationObserverFactory);\n    /** Keeps track of the existing MutationObservers so they can be reused. */\n    _observedElements = new Map();\n    _ngZone = inject(NgZone);\n    constructor() { }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream\n                .pipe(map(records => records.filter(record => !shouldIgnoreRecord(record))), filter(records => !!records.length))\n                .subscribe(records => {\n                this._ngZone.run(() => {\n                    observer.next(records);\n                });\n            });\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._observedElements.has(element)) {\n                const stream = new Subject();\n                const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n                if (observer) {\n                    observer.observe(element, {\n                        characterData: true,\n                        childList: true,\n                        subtree: true,\n                    });\n                }\n                this._observedElements.set(element, { observer, stream, count: 1 });\n            }\n            else {\n                this._observedElements.get(element).count++;\n            }\n            return this._observedElements.get(element).stream;\n        });\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ContentObserver, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ContentObserver, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    _contentObserver = inject(ContentObserver);\n    _elementRef = inject(ElementRef);\n    /** Event emitted for each change in the element's content. */\n    event = new EventEmitter();\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    _disabled = false;\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    _debounce;\n    _currentSubscription = null;\n    constructor() { }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkObserveContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkObserveContent, isStandalone: true, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\", booleanAttribute], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: () => [], propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkObserveContentDisabled', transform: booleanAttribute }]\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: ObserversModule, imports: [CdkObserveContent], exports: [CdkObserveContent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkObserveContent],\n                    exports: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import { L as ListKeyManager } from './list-key-manager-C7tp3RbG.mjs';\n\nclass FocusKeyManager extends ListKeyManager {\n    _origin = 'program';\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\nexport { FocusKeyManager as F };\n","import * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable } from '@angular/core';\n\n/**\n * Keeps track of the ID count per prefix. This helps us make the IDs a bit more deterministic\n * like they were before the service was introduced. Note that ideally we wouldn't have to do\n * this, but there are some internal tests that rely on the IDs.\n */\nconst counters = {};\n/** Service that generates unique IDs for DOM nodes. */\nclass _IdGenerator {\n    _appId = inject(APP_ID);\n    /**\n     * Generates a unique ID with a specific prefix.\n     * @param prefix Prefix to add to the ID.\n     */\n    getId(prefix) {\n        // Omit the app ID if it's the default `ng`. Since the vast majority of pages have one\n        // Angular app on them, we can reduce the amount of breakages by not adding it.\n        if (this._appId !== 'ng') {\n            prefix += this._appId;\n        }\n        if (!counters.hasOwnProperty(prefix)) {\n            counters[prefix] = 0;\n        }\n        return `${prefix}${counters[prefix]++}`;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { _IdGenerator as _ };\n","import { L as ListKeyManager } from './list-key-manager-C7tp3RbG.mjs';\n\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\nexport { ActiveDescendantKeyManager as A };\n","let shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\nexport { _getEventTarget as _, _getShadowRoot as a, _supportsShadowDom as b, _getFocusedElementPierceShadowDom as c };\n","import { Subject } from 'rxjs';\nimport { tap, debounceTime, filter, map } from 'rxjs/operators';\nimport { A, Z, b as ZERO, N as NINE } from './keycodes-CpHkExLC.mjs';\n\nconst DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL_MS = 200;\n/**\n * Selects items based on keyboard inputs. Implements the typeahead functionality of\n * `role=\"listbox\"` or `role=\"tree\"` and other related roles.\n */\nclass Typeahead {\n    _letterKeyStream = new Subject();\n    _items = [];\n    _selectedItemIndex = -1;\n    /** Buffer for the letters that the user has pressed */\n    _pressedLetters = [];\n    _skipPredicateFn;\n    _selectedItem = new Subject();\n    selectedItem = this._selectedItem;\n    constructor(initialItems, config) {\n        const typeAheadInterval = typeof config?.debounceInterval === 'number'\n            ? config.debounceInterval\n            : DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL_MS;\n        if (config?.skipPredicate) {\n            this._skipPredicateFn = config.skipPredicate;\n        }\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            initialItems.length &&\n            initialItems.some(item => typeof item.getLabel !== 'function')) {\n            throw new Error('KeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this.setItems(initialItems);\n        this._setupKeyHandler(typeAheadInterval);\n    }\n    destroy() {\n        this._pressedLetters = [];\n        this._letterKeyStream.complete();\n        this._selectedItem.complete();\n    }\n    setCurrentSelectedItemIndex(index) {\n        this._selectedItemIndex = index;\n    }\n    setItems(items) {\n        this._items = items;\n    }\n    handleKey(event) {\n        const keyCode = event.keyCode;\n        // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n        // otherwise fall back to resolving alphanumeric characters via the keyCode.\n        if (event.key && event.key.length === 1) {\n            this._letterKeyStream.next(event.key.toLocaleUpperCase());\n        }\n        else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n            this._letterKeyStream.next(String.fromCharCode(keyCode));\n        }\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Resets the currently stored sequence of typed letters. */\n    reset() {\n        this._pressedLetters = [];\n    }\n    _setupKeyHandler(typeAheadInterval) {\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(typeAheadInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('').toLocaleUpperCase()))\n            .subscribe(inputString => {\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < this._items.length + 1; i++) {\n                const index = (this._selectedItemIndex + i) % this._items.length;\n                const item = this._items[index];\n                if (!this._skipPredicateFn?.(item) &&\n                    item.getLabel?.().toLocaleUpperCase().trim().indexOf(inputString) === 0) {\n                    this._selectedItem.next(item);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n    }\n}\n\nexport { Typeahead as T };\n","export { C as CdkMonitorFocus, d as FOCUS_MONITOR_DEFAULT_OPTIONS, F as FocusMonitor, c as FocusMonitorDetectionMode, a as INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, b as INPUT_MODALITY_DETECTOR_OPTIONS, I as InputModalityDetector } from './focus-monitor-DUe99AIS.mjs';\nimport { a as FocusTrap, I as InteractivityChecker } from './a11y-module-BPzgKr79.mjs';\nexport { A as A11yModule, d as CdkAriaLive, C as CdkTrapFocus, F as FocusTrapFactory, b as HighContrastMode, H as HighContrastModeDetector, c as IsFocusableConfig, g as LIVE_ANNOUNCER_DEFAULT_OPTIONS, e as LIVE_ANNOUNCER_ELEMENT_TOKEN, f as LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, L as LiveAnnouncer } from './a11y-module-BPzgKr79.mjs';\nexport { _ as _IdGenerator } from './id-generator-LuoRZSid.mjs';\nimport * as i0 from '@angular/core';\nimport { inject, DOCUMENT, APP_ID, Injectable, InjectionToken, NgZone, Injector } from '@angular/core';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-B2sGQXxD.mjs';\nimport { _VisuallyHiddenLoader } from './private.mjs';\nexport { A as ActiveDescendantKeyManager } from './activedescendant-key-manager-CZAE5aFC.mjs';\nexport { F as FocusKeyManager } from './focus-key-manager-CPmlyB_c.mjs';\nexport { L as ListKeyManager } from './list-key-manager-C7tp3RbG.mjs';\nimport { Subject } from 'rxjs';\nimport { T as TREE_KEY_MANAGER } from './tree-key-manager-KnCoIkIC.mjs';\nexport { b as TREE_KEY_MANAGER_FACTORY, c as TREE_KEY_MANAGER_FACTORY_PROVIDER, a as TreeKeyManager } from './tree-key-manager-KnCoIkIC.mjs';\nexport { i as isFakeMousedownFromScreenReader, a as isFakeTouchstartFromScreenReader } from './fake-event-detection-DWOdFTFz.mjs';\nimport 'rxjs/operators';\nimport './keycodes-CpHkExLC.mjs';\nimport './shadow-dom-B0oHn41l.mjs';\nimport './passive-listeners-esHZRgIN.mjs';\nimport './element-x4z00URv.mjs';\nimport './breakpoints-observer-QutrMj4x.mjs';\nimport './array-I1yfCXUO.mjs';\nimport './observers.mjs';\nimport '@angular/common';\nimport './typeahead-9ZW4Dtsf.mjs';\nimport './keycodes.mjs';\nimport './coercion/private.mjs';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    id = id.trim();\n    if (ids.some(existingId => existingId.trim() === id)) {\n        return;\n    }\n    ids.push(id);\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    id = id.trim();\n    const filteredIds = ids.filter(val => val !== id);\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    const attrValue = el.getAttribute(attr);\n    return attrValue?.match(/\\S+/g) ?? [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    _platform = inject(Platform);\n    _document = inject(DOCUMENT);\n    /** Map of all registered message elements that have been placed into the document. */\n    _messageRegistry = new Map();\n    /** Container for all registered messages. */\n    _messagesContainer = null;\n    /** Unique ID for the service. */\n    _id = `${nextId++}`;\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_VisuallyHiddenLoader);\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        if (!this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: AriaDescriber, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: AriaDescriber, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n// NoopTreeKeyManager is a \"noop\" implementation of TreeKeyMangerStrategy. Methods are noops. Does\n// not emit to streams.\n//\n// Used for applications built before TreeKeyManager to opt-out of TreeKeyManager and revert to\n// legacy behavior.\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nclass NoopTreeKeyManager {\n    _isNoopTreeKeyManager = true;\n    // Provide change as required by TreeKeyManagerStrategy. NoopTreeKeyManager is a \"noop\"\n    // implementation that does not emit to streams.\n    change = new Subject();\n    destroy() {\n        this.change.complete();\n    }\n    onKeydown() {\n        // noop\n    }\n    getActiveItemIndex() {\n        // Always return null. NoopTreeKeyManager is a \"noop\" implementation that does not maintain\n        // the active item.\n        return null;\n    }\n    getActiveItem() {\n        // Always return null. NoopTreeKeyManager is a \"noop\" implementation that does not maintain\n        // the active item.\n        return null;\n    }\n    focusItem() {\n        // noop\n    }\n}\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nfunction NOOP_TREE_KEY_MANAGER_FACTORY() {\n    return () => new NoopTreeKeyManager();\n}\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nconst NOOP_TREE_KEY_MANAGER_FACTORY_PROVIDER = {\n    provide: TREE_KEY_MANAGER,\n    useFactory: NOOP_TREE_KEY_MANAGER_FACTORY,\n};\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    _focusTrapManager;\n    _inertStrategy;\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config, injector) {\n        super(_element, _checker, _ngZone, _document, config.defer, injector);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    /** Focus event handler. */\n    _listener = null;\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    // A stack of the FocusTraps on the page. Only the FocusTrap at the\n    // top of the stack is active.\n    _focusTrapStack = [];\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    _checker = inject(InteractivityChecker);\n    _ngZone = inject(NgZone);\n    _focusTrapManager = inject(FocusTrapManager);\n    _document = inject(DOCUMENT);\n    _inertStrategy;\n    _injector = inject(Injector);\n    constructor() {\n        const inertStrategy = inject(FOCUS_TRAP_INERT_STRATEGY, { optional: true });\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject, this._injector);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_TRAP_INERT_STRATEGY, FocusTrap, InteractivityChecker, MESSAGES_CONTAINER_ID, NOOP_TREE_KEY_MANAGER_FACTORY, NOOP_TREE_KEY_MANAGER_FACTORY_PROVIDER, NoopTreeKeyManager, TREE_KEY_MANAGER, addAriaReferencedId, getAriaReferenceIds, removeAriaReferencedId };\n","export { A, d as ALT, aX as APOSTROPHE, a1 as AT_SIGN, a2 as B, a_ as BACKSLASH, B as BACKSPACE, a3 as C, y as CAPS_LOCK, a$ as CLOSE_SQUARE_BRACKET, u as COMMA, as as CONTEXT_MENU, C as CONTROL, a4 as D, aV as DASH, i as DELETE, D as DOWN_ARROW, a5 as E, Y as EIGHT, E as END, c as ENTER, aU as EQUALS, g as ESCAPE, a6 as F, F as F1, r as F10, s as F11, t as F12, j as F2, k as F3, l as F4, m as F5, n as F6, o as F7, p as F8, q as F9, $ as FF_EQUALS, aL as FF_MINUS, aP as FF_MUTE, _ as FF_SEMICOLON, aQ as FF_VOLUME_DOWN, aS as FF_VOLUME_UP, aK as FIRST_MEDIA, V as FIVE, Q as FOUR, a7 as G, a8 as H, H as HOME, a9 as I, I as INSERT, aa as J, ab as K, ac as L, aR as LAST_MEDIA, L as LEFT_ARROW, ad as M, v as MAC_ENTER, M as MAC_META, aq as MAC_WK_CMD_LEFT, ar as MAC_WK_CMD_RIGHT, e as META, aM as MUTE, ae as N, N as NINE, aH as NUMPAD_DIVIDE, aB as NUMPAD_EIGHT, ay as NUMPAD_FIVE, ax as NUMPAD_FOUR, aF as NUMPAD_MINUS, aD as NUMPAD_MULTIPLY, aC as NUMPAD_NINE, au as NUMPAD_ONE, aG as NUMPAD_PERIOD, aE as NUMPAD_PLUS, aA as NUMPAD_SEVEN, az as NUMPAD_SIX, aw as NUMPAD_THREE, av as NUMPAD_TWO, at as NUMPAD_ZERO, w as NUM_CENTER, aI as NUM_LOCK, af as O, O as ONE, aZ as OPEN_SQUARE_BRACKET, ag as P, P as PAGE_DOWN, a as PAGE_UP, x as PAUSE, h as PERIOD, z as PLUS_SIGN, G as PRINT_SCREEN, ah as Q, a0 as QUESTION_MARK, ai as R, R as RIGHT_ARROW, aj as S, aJ as SCROLL_LOCK, aT as SEMICOLON, X as SEVEN, f as SHIFT, b0 as SINGLE_QUOTE, W as SIX, aW as SLASH, S as SPACE, ak as T, T as TAB, K as THREE, aY as TILDE, J as TWO, al as U, U as UP_ARROW, am as V, aN as VOLUME_DOWN, aO as VOLUME_UP, an as W, ao as X, ap as Y, Z, b as ZERO } from './keycodes-CpHkExLC.mjs';\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\nexport { hasModifierKey };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgZone, DOCUMENT, RendererFactory2, Injectable, ElementRef, EventEmitter, Directive, Output } from '@angular/core';\nimport { BehaviorSubject, Subject, of } from 'rxjs';\nimport { skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { i as isFakeMousedownFromScreenReader, a as isFakeTouchstartFromScreenReader } from './fake-event-detection-DWOdFTFz.mjs';\nimport { d as ALT, C as CONTROL, M as MAC_META, e as META, f as SHIFT } from './keycodes-CpHkExLC.mjs';\nimport { _ as _getEventTarget, a as _getShadowRoot } from './shadow-dom-B0oHn41l.mjs';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { n as normalizePassiveListenerOptions } from './passive-listeners-esHZRgIN.mjs';\nimport { a as coerceElement } from './element-x4z00URv.mjs';\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = {\n    passive: true,\n    capture: true,\n};\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    _platform = inject(Platform);\n    _listenerCleanups;\n    /** Emits whenever an input modality is detected. */\n    modalityDetected;\n    /** Emits when the input modality changes. */\n    modalityChanged;\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    /**\n     * The most recently detected input modality event target. Is null if no input modality has been\n     * detected or if the associated event target is null for some unknown reason.\n     */\n    _mostRecentTarget = null;\n    /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n    _modality = new BehaviorSubject(null);\n    /** Options for this InputModalityDetector. */\n    _options;\n    /**\n     * The timestamp of the last touch input modality. Used to determine whether mousedown events\n     * should be attributed to mouse or touch.\n     */\n    _lastTouchMs = 0;\n    /**\n     * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n     * bound.\n     */\n    _onKeydown = (event) => {\n        // If this is one of the keys we should ignore, then ignore it and don't update the input\n        // modality to keyboard.\n        if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n            return;\n        }\n        this._modality.next('keyboard');\n        this._mostRecentTarget = _getEventTarget(event);\n    };\n    /**\n     * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n     * gets bound.\n     */\n    _onMousedown = (event) => {\n        // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n        // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n        // after the previous touch event.\n        if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n            return;\n        }\n        // Fake mousedown events are fired by some screen readers when controls are activated by the\n        // screen reader. Attribute them to keyboard input modality.\n        this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n        this._mostRecentTarget = _getEventTarget(event);\n    };\n    /**\n     * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n     * gets bound.\n     */\n    _onTouchstart = (event) => {\n        // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n        // events are fired. Again, attribute to keyboard input modality.\n        if (isFakeTouchstartFromScreenReader(event)) {\n            this._modality.next('keyboard');\n            return;\n        }\n        // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n        // triggered via mouse vs touch.\n        this._lastTouchMs = Date.now();\n        this._modality.next('touch');\n        this._mostRecentTarget = _getEventTarget(event);\n    };\n    constructor() {\n        const ngZone = inject(NgZone);\n        const document = inject(DOCUMENT);\n        const options = inject(INPUT_MODALITY_DETECTOR_OPTIONS, { optional: true });\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (this._platform.isBrowser) {\n            const renderer = inject(RendererFactory2).createRenderer(null, null);\n            this._listenerCleanups = ngZone.runOutsideAngular(() => {\n                return [\n                    renderer.listen(document, 'keydown', this._onKeydown, modalityEventListenerOptions),\n                    renderer.listen(document, 'mousedown', this._onMousedown, modalityEventListenerOptions),\n                    renderer.listen(document, 'touchstart', this._onTouchstart, modalityEventListenerOptions),\n                ];\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        this._listenerCleanups?.forEach(cleanup => cleanup());\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InputModalityDetector, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/** Detection mode used for attributing the origin of a focus event. */\nvar FocusMonitorDetectionMode;\n(function (FocusMonitorDetectionMode) {\n    /**\n     * Any mousedown, keydown, or touchstart event that happened in the previous\n     * tick or the current tick will be used to assign a focus event's origin (to\n     * either mouse, keyboard, or touch). This is the default option.\n     */\n    FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n    /**\n     * A focus event's origin is always attributed to the last corresponding\n     * mousedown, keydown, or touchstart event, no matter how long ago it occurred.\n     */\n    FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"EVENTUAL\"] = 1] = \"EVENTUAL\";\n})(FocusMonitorDetectionMode || (FocusMonitorDetectionMode = {}));\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _inputModalityDetector = inject(InputModalityDetector);\n    /** The focus origin that the next focus event is a result of. */\n    _origin = null;\n    /** The FocusOrigin of the last focus event tracked by the FocusMonitor. */\n    _lastFocusOrigin;\n    /** Whether the window has just been focused. */\n    _windowFocused = false;\n    /** The timeout id of the window focus timeout. */\n    _windowFocusTimeoutId;\n    /** The timeout id of the origin clearing timeout. */\n    _originTimeoutId;\n    /**\n     * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n     * focus events to touch interactions requires special logic.\n     */\n    _originFromTouchInteraction = false;\n    /** Map of elements being monitored to their info. */\n    _elementInfo = new Map();\n    /** The number of elements currently being monitored. */\n    _monitoredElementCount = 0;\n    /**\n     * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n     * as well as the number of monitored elements that they contain. We have to treat focus/blur\n     * handlers differently from the rest of the events, because the browser won't emit events\n     * to the document when focus moves inside of a shadow root.\n     */\n    _rootNodeFocusListenerCount = new Map();\n    /**\n     * The specified detection mode, used for attributing the origin of a focus\n     * event.\n     */\n    _detectionMode;\n    /**\n     * Event listener for `focus` events on the window.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     */\n    _windowFocusListener = () => {\n        // Make a note of when the window regains focus, so we can\n        // restore the origin info for the focused element.\n        this._windowFocused = true;\n        this._windowFocusTimeoutId = setTimeout(() => (this._windowFocused = false));\n    };\n    /** Used to reference correct document/window */\n    _document = inject(DOCUMENT);\n    /** Subject for stopping our InputModalityDetector subscription. */\n    _stopInputModalityDetector = new Subject();\n    constructor() {\n        const options = inject(FOCUS_MONITOR_DEFAULT_OPTIONS, {\n            optional: true,\n        });\n        this._detectionMode = options?.detectionMode || FocusMonitorDetectionMode.IMMEDIATE;\n    }\n    /**\n     * Event listener for `focus` and 'blur' events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     */\n    _rootNodeFocusAndBlurListener = (event) => {\n        const target = _getEventTarget(event);\n        // We need to walk up the ancestor chain in order to support `checkChildren`.\n        for (let element = target; element; element = element.parentElement) {\n            if (event.type === 'focus') {\n                this._onFocus(event, element);\n            }\n            else {\n                this._onBlur(event, element);\n            }\n        }\n    };\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            // Note: we don't want the observable to emit at all so we don't pass any parameters.\n            return of();\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._document;\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._document.activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        // If the interaction is coming from an input label, we consider it a mouse interactions.\n        // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n        // our detection, because all our assumptions are for `mousedown`. We need to handle this\n        // special case, because it's very common for checkboxes and radio buttons.\n        if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n            return 'mouse';\n        }\n        return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === FocusMonitorDetectionMode.EVENTUAL ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === FocusMonitorDetectionMode.IMMEDIATE) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n        if (info.subject.observers.length) {\n            this._ngZone.run(() => info.subject.next(origin));\n        }\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n        const { _mostRecentTarget: mostRecentTarget, mostRecentModality } = this._inputModalityDetector;\n        // If the last interaction used the mouse on an element contained by one of the labels\n        // of an `input`/`textarea` that is currently focused, it is very likely that the\n        // user redirected focus using the label.\n        if (mostRecentModality !== 'mouse' ||\n            !mostRecentTarget ||\n            mostRecentTarget === focusEventTarget ||\n            (focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA') ||\n            focusEventTarget.disabled) {\n            return false;\n        }\n        const labels = focusEventTarget.labels;\n        if (labels) {\n            for (let i = 0; i < labels.length; i++) {\n                if (labels[i].contains(mostRecentTarget)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusMonitor, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusMonitor, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    _elementRef = inject(ElementRef);\n    _focusMonitor = inject(FocusMonitor);\n    _monitorSubscription;\n    _focusOrigin = null;\n    cdkFocusChange = new EventEmitter();\n    constructor() { }\n    get focusOrigin() {\n        return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => {\n            this._focusOrigin = origin;\n            this.cdkFocusChange.emit(origin);\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkMonitorFocus, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkMonitorFocus, isStandalone: true, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, exportAs: [\"cdkMonitorFocus\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                    exportAs: 'cdkMonitorFocus',\n                }]\n        }], ctorParameters: () => [], propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\nexport { CdkMonitorFocus as C, FocusMonitor as F, InputModalityDetector as I, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS as a, INPUT_MODALITY_DETECTOR_OPTIONS as b, FocusMonitorDetectionMode as c, FOCUS_MONITOR_DEFAULT_OPTIONS as d };\n","import * as i0 from '@angular/core';\nimport { inject, CSP_NONCE, Injectable, NgZone } from '@angular/core';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { c as coerceArray } from './array-I1yfCXUO.mjs';\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    _platform = inject(Platform);\n    _nonce = inject(CSP_NONCE, { optional: true });\n    /** The internal matchMedia method to return back a MediaQueryList like object. */\n    _matchMedia;\n    constructor() {\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query, this._nonce);\n        }\n        return this._matchMedia(query);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MediaMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MediaMatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            if (nonce) {\n                mediaQueryStyleNode.setAttribute('nonce', nonce);\n            }\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/** Utility for checking the matching state of `@media` queries. */\nclass BreakpointObserver {\n    _mediaMatcher = inject(MediaMatcher);\n    _zone = inject(NgZone);\n    /**  A map of all media queries currently being listened for. */\n    _queries = new Map();\n    /** A subject for all other observables to takeUntil based on. */\n    _destroySubject = new Subject();\n    constructor() { }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BreakpointObserver, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\nexport { BreakpointObserver as B, MediaMatcher as M };\n","import * as i0 from '@angular/core';\nimport { inject, Injector, EnvironmentInjector, ApplicationRef, createComponent, Injectable } from '@angular/core';\n\n/** Apps in which we've loaded styles. */\nconst appsWithLoaders = new WeakMap();\n/**\n * Service that loads structural styles dynamically\n * and ensures that they're only loaded once per app.\n */\nclass _CdkPrivateStyleLoader {\n    _appRef;\n    _injector = inject(Injector);\n    _environmentInjector = inject(EnvironmentInjector);\n    /**\n     * Loads a set of styles.\n     * @param loader Component which will be instantiated to load the styles.\n     */\n    load(loader) {\n        // Resolve the app ref lazily to avoid circular dependency errors if this is called too early.\n        const appRef = (this._appRef = this._appRef || this._injector.get(ApplicationRef));\n        let data = appsWithLoaders.get(appRef);\n        // If we haven't loaded for this app before, we have to initialize it.\n        if (!data) {\n            data = { loaders: new Set(), refs: [] };\n            appsWithLoaders.set(appRef, data);\n            // When the app is destroyed, we need to clean up all the related loaders.\n            appRef.onDestroy(() => {\n                appsWithLoaders.get(appRef)?.refs.forEach(ref => ref.destroy());\n                appsWithLoaders.delete(appRef);\n            });\n        }\n        // If the loader hasn't been loaded before, we need to instatiate it.\n        if (!data.loaders.has(loader)) {\n            data.loaders.add(loader);\n            data.refs.push(createComponent(loader, { environmentInjector: this._environmentInjector }));\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkPrivateStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkPrivateStyleLoader, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _CdkPrivateStyleLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { _CdkPrivateStyleLoader as _ };\n","import { QueryList, InjectionToken } from '@angular/core';\nimport { Subscription, isObservable, Subject, of } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { T as Typeahead } from './typeahead-9ZW4Dtsf.mjs';\nimport { coerceObservable } from './coercion/private.mjs';\n\n/**\n * This class manages keyboard events for trees. If you pass it a QueryList or other list of tree\n * items, it will set the active item, focus, handle expansion and typeahead correctly when\n * keyboard events occur.\n */\nclass TreeKeyManager {\n    /** The index of the currently active (focused) item. */\n    _activeItemIndex = -1;\n    /** The currently active (focused) item. */\n    _activeItem = null;\n    /** Whether or not we activate the item when it's focused. */\n    _shouldActivationFollowFocus = false;\n    /**\n     * The orientation that the tree is laid out in. In `rtl` mode, the behavior of Left and\n     * Right arrow are switched.\n     */\n    _horizontalOrientation = 'ltr';\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager.\n     *\n     * The default value for this doesn't skip any elements in order to keep tree items focusable\n     * when disabled. This aligns with ARIA guidelines:\n     * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#focusabilityofdisabledcontrols.\n     */\n    _skipPredicateFn = (_item) => false;\n    /** Function to determine equivalent items. */\n    _trackByFn = (item) => item;\n    /** Synchronous cache of the items to manage. */\n    _items = [];\n    _typeahead;\n    _typeaheadSubscription = Subscription.EMPTY;\n    _hasInitialFocused = false;\n    _initializeFocus() {\n        if (this._hasInitialFocused || this._items.length === 0) {\n            return;\n        }\n        let activeIndex = 0;\n        for (let i = 0; i < this._items.length; i++) {\n            if (!this._skipPredicateFn(this._items[i]) && !this._isItemDisabled(this._items[i])) {\n                activeIndex = i;\n                break;\n            }\n        }\n        const activeItem = this._items[activeIndex];\n        // Use `makeFocusable` here, because we want the item to just be focusable, not actually\n        // capture the focus since the user isn't interacting with it. See #29628.\n        if (activeItem.makeFocusable) {\n            this._activeItem?.unfocus();\n            this._activeItemIndex = activeIndex;\n            this._activeItem = activeItem;\n            this._typeahead?.setCurrentSelectedItemIndex(activeIndex);\n            activeItem.makeFocusable();\n        }\n        else {\n            // Backwards compatibility for items that don't implement `makeFocusable`.\n            this.focusItem(activeIndex);\n        }\n        this._hasInitialFocused = true;\n    }\n    /**\n     *\n     * @param items List of TreeKeyManager options. Can be synchronous or asynchronous.\n     * @param config Optional configuration options. By default, use 'ltr' horizontal orientation. By\n     * default, do not skip any nodes. By default, key manager only calls `focus` method when items\n     * are focused and does not call `activate`. If `typeaheadDefaultInterval` is `true`, use a\n     * default interval of 200ms.\n     */\n    constructor(items, config) {\n        // We allow for the items to be an array or Observable because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (items instanceof QueryList) {\n            this._items = items.toArray();\n            items.changes.subscribe((newItems) => {\n                this._items = newItems.toArray();\n                this._typeahead?.setItems(this._items);\n                this._updateActiveItemIndex(this._items);\n                this._initializeFocus();\n            });\n        }\n        else if (isObservable(items)) {\n            items.subscribe(newItems => {\n                this._items = newItems;\n                this._typeahead?.setItems(newItems);\n                this._updateActiveItemIndex(newItems);\n                this._initializeFocus();\n            });\n        }\n        else {\n            this._items = items;\n            this._initializeFocus();\n        }\n        if (typeof config.shouldActivationFollowFocus === 'boolean') {\n            this._shouldActivationFollowFocus = config.shouldActivationFollowFocus;\n        }\n        if (config.horizontalOrientation) {\n            this._horizontalOrientation = config.horizontalOrientation;\n        }\n        if (config.skipPredicate) {\n            this._skipPredicateFn = config.skipPredicate;\n        }\n        if (config.trackBy) {\n            this._trackByFn = config.trackBy;\n        }\n        if (typeof config.typeAheadDebounceInterval !== 'undefined') {\n            this._setTypeAhead(config.typeAheadDebounceInterval);\n        }\n    }\n    /** Stream that emits any time the focused item changes. */\n    change = new Subject();\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._typeahead?.destroy();\n        this.change.complete();\n    }\n    /**\n     * Handles a keyboard event on the tree.\n     * @param event Keyboard event that represents the user interaction with the tree.\n     */\n    onKeydown(event) {\n        const key = event.key;\n        switch (key) {\n            case 'Tab':\n                // Return early here, in order to allow Tab to actually tab out of the tree\n                return;\n            case 'ArrowDown':\n                this._focusNextItem();\n                break;\n            case 'ArrowUp':\n                this._focusPreviousItem();\n                break;\n            case 'ArrowRight':\n                this._horizontalOrientation === 'rtl'\n                    ? this._collapseCurrentItem()\n                    : this._expandCurrentItem();\n                break;\n            case 'ArrowLeft':\n                this._horizontalOrientation === 'rtl'\n                    ? this._expandCurrentItem()\n                    : this._collapseCurrentItem();\n                break;\n            case 'Home':\n                this._focusFirstItem();\n                break;\n            case 'End':\n                this._focusLastItem();\n                break;\n            case 'Enter':\n            case ' ':\n                this._activateCurrentItem();\n                break;\n            default:\n                if (event.key === '*') {\n                    this._expandAllItemsAtCurrentItemLevel();\n                    break;\n                }\n                this._typeahead?.handleKey(event);\n                // Return here, in order to avoid preventing the default action of non-navigational\n                // keys or resetting the buffer of pressed letters.\n                return;\n        }\n        // Reset the typeahead since the user has used a navigational key.\n        this._typeahead?.reset();\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    getActiveItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The currently active item. */\n    getActiveItem() {\n        return this._activeItem;\n    }\n    /** Focus the first available item. */\n    _focusFirstItem() {\n        this.focusItem(this._findNextAvailableItemIndex(-1));\n    }\n    /** Focus the last available item. */\n    _focusLastItem() {\n        this.focusItem(this._findPreviousAvailableItemIndex(this._items.length));\n    }\n    /** Focus the next available item. */\n    _focusNextItem() {\n        this.focusItem(this._findNextAvailableItemIndex(this._activeItemIndex));\n    }\n    /** Focus the previous available item. */\n    _focusPreviousItem() {\n        this.focusItem(this._findPreviousAvailableItemIndex(this._activeItemIndex));\n    }\n    focusItem(itemOrIndex, options = {}) {\n        // Set default options\n        options.emitChangeEvent ??= true;\n        let index = typeof itemOrIndex === 'number'\n            ? itemOrIndex\n            : this._items.findIndex(item => this._trackByFn(item) === this._trackByFn(itemOrIndex));\n        if (index < 0 || index >= this._items.length) {\n            return;\n        }\n        const activeItem = this._items[index];\n        // If we're just setting the same item, don't re-call activate or focus\n        if (this._activeItem !== null &&\n            this._trackByFn(activeItem) === this._trackByFn(this._activeItem)) {\n            return;\n        }\n        const previousActiveItem = this._activeItem;\n        this._activeItem = activeItem ?? null;\n        this._activeItemIndex = index;\n        this._typeahead?.setCurrentSelectedItemIndex(index);\n        this._activeItem?.focus();\n        previousActiveItem?.unfocus();\n        if (options.emitChangeEvent) {\n            this.change.next(this._activeItem);\n        }\n        if (this._shouldActivationFollowFocus) {\n            this._activateCurrentItem();\n        }\n    }\n    _updateActiveItemIndex(newItems) {\n        const activeItem = this._activeItem;\n        if (!activeItem) {\n            return;\n        }\n        const newIndex = newItems.findIndex(item => this._trackByFn(item) === this._trackByFn(activeItem));\n        if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n            this._activeItemIndex = newIndex;\n            this._typeahead?.setCurrentSelectedItemIndex(newIndex);\n        }\n    }\n    _setTypeAhead(debounceInterval) {\n        this._typeahead = new Typeahead(this._items, {\n            debounceInterval: typeof debounceInterval === 'number' ? debounceInterval : undefined,\n            skipPredicate: item => this._skipPredicateFn(item),\n        });\n        this._typeaheadSubscription = this._typeahead.selectedItem.subscribe(item => {\n            this.focusItem(item);\n        });\n    }\n    _findNextAvailableItemIndex(startingIndex) {\n        for (let i = startingIndex + 1; i < this._items.length; i++) {\n            if (!this._skipPredicateFn(this._items[i])) {\n                return i;\n            }\n        }\n        return startingIndex;\n    }\n    _findPreviousAvailableItemIndex(startingIndex) {\n        for (let i = startingIndex - 1; i >= 0; i--) {\n            if (!this._skipPredicateFn(this._items[i])) {\n                return i;\n            }\n        }\n        return startingIndex;\n    }\n    /**\n     * If the item is already expanded, we collapse the item. Otherwise, we will focus the parent.\n     */\n    _collapseCurrentItem() {\n        if (!this._activeItem) {\n            return;\n        }\n        if (this._isCurrentItemExpanded()) {\n            this._activeItem.collapse();\n        }\n        else {\n            const parent = this._activeItem.getParent();\n            if (!parent || this._skipPredicateFn(parent)) {\n                return;\n            }\n            this.focusItem(parent);\n        }\n    }\n    /**\n     * If the item is already collapsed, we expand the item. Otherwise, we will focus the first child.\n     */\n    _expandCurrentItem() {\n        if (!this._activeItem) {\n            return;\n        }\n        if (!this._isCurrentItemExpanded()) {\n            this._activeItem.expand();\n        }\n        else {\n            coerceObservable(this._activeItem.getChildren())\n                .pipe(take(1))\n                .subscribe(children => {\n                const firstChild = children.find(child => !this._skipPredicateFn(child));\n                if (!firstChild) {\n                    return;\n                }\n                this.focusItem(firstChild);\n            });\n        }\n    }\n    _isCurrentItemExpanded() {\n        if (!this._activeItem) {\n            return false;\n        }\n        return typeof this._activeItem.isExpanded === 'boolean'\n            ? this._activeItem.isExpanded\n            : this._activeItem.isExpanded();\n    }\n    _isItemDisabled(item) {\n        return typeof item.isDisabled === 'boolean' ? item.isDisabled : item.isDisabled?.();\n    }\n    /** For all items that are the same level as the current item, we expand those items. */\n    _expandAllItemsAtCurrentItemLevel() {\n        if (!this._activeItem) {\n            return;\n        }\n        const parent = this._activeItem.getParent();\n        let itemsToExpand;\n        if (!parent) {\n            itemsToExpand = of(this._items.filter(item => item.getParent() === null));\n        }\n        else {\n            itemsToExpand = coerceObservable(parent.getChildren());\n        }\n        itemsToExpand.pipe(take(1)).subscribe(items => {\n            for (const item of items) {\n                item.expand();\n            }\n        });\n    }\n    _activateCurrentItem() {\n        this._activeItem?.activate();\n    }\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction TREE_KEY_MANAGER_FACTORY() {\n    return (items, options) => new TreeKeyManager(items, options);\n}\n/** Injection token that determines the key manager to use. */\nconst TREE_KEY_MANAGER = new InjectionToken('tree-key-manager', {\n    providedIn: 'root',\n    factory: TREE_KEY_MANAGER_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst TREE_KEY_MANAGER_FACTORY_PROVIDER = {\n    provide: TREE_KEY_MANAGER,\n    useFactory: TREE_KEY_MANAGER_FACTORY,\n};\n\nexport { TREE_KEY_MANAGER as T, TreeKeyManager as a, TREE_KEY_MANAGER_FACTORY as b, TREE_KEY_MANAGER_FACTORY_PROVIDER as c };\n","/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\nexport { normalizePassiveListenerOptions as n, supportsPassiveEventListeners as s };\n","import { ElementRef } from '@angular/core';\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    if (_isNumberValue(value)) {\n        return Number(value);\n    }\n    return arguments.length === 2 ? fallbackValue : 0;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\nexport { _isNumberValue as _, coerceElement as a, coerceNumberProperty as c };\n","import * as i0 from '@angular/core';\nimport { inject, Injectable, afterNextRender, NgZone, DOCUMENT, Injector, ElementRef, booleanAttribute, Directive, Input, InjectionToken, NgModule } from '@angular/core';\nimport { C as CdkMonitorFocus } from './focus-monitor-DUe99AIS.mjs';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { c as _getFocusedElementPierceShadowDom } from './shadow-dom-B0oHn41l.mjs';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-B2sGQXxD.mjs';\nimport { _VisuallyHiddenLoader } from './private.mjs';\nimport { B as BreakpointObserver } from './breakpoints-observer-QutrMj4x.mjs';\nimport { ContentObserver, ObserversModule } from './observers.mjs';\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    /**\n     * Whether to count an element as focusable even if it is not currently visible.\n     */\n    ignoreVisibility = false;\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether it is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    _platform = inject(Platform);\n    constructor() { }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InteractivityChecker, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n */\nclass FocusTrap {\n    _element;\n    _checker;\n    _ngZone;\n    _document;\n    _injector;\n    _startAnchor;\n    _endAnchor;\n    _hasAttached = false;\n    // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n    startAnchorListener = () => this.focusLastTabbableElement();\n    endAnchorListener = () => this.focusFirstTabbableElement();\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    _enabled = true;\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false, \n    /** @breaking-change 20.0.0 param to become required */\n    _injector) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._injector = _injector;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        // TODO: remove this conditional when injector is required in the constructor.\n        if (this._injector) {\n            afterNextRender(fn, { injector: this._injector });\n        }\n        else {\n            setTimeout(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nclass FocusTrapFactory {\n    _checker = inject(InteractivityChecker);\n    _ngZone = inject(NgZone);\n    _document = inject(DOCUMENT);\n    _injector = inject(Injector);\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_VisuallyHiddenLoader);\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements, this._injector);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    _elementRef = inject(ElementRef);\n    _focusTrapFactory = inject(FocusTrapFactory);\n    /** Underlying FocusTrap instance. */\n    focusTrap;\n    /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n    _previouslyFocusedElement = null;\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap?.enabled || false;\n    }\n    set enabled(value) {\n        if (this.focusTrap) {\n            this.focusTrap.enabled = value;\n        }\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    autoCapture;\n    constructor() {\n        const platform = inject(Platform);\n        if (platform.isBrowser) {\n            this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n        }\n    }\n    ngOnDestroy() {\n        this.focusTrap?.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap?.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (this.focusTrap && !this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap?.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap?.focusInitialElementWhenReady();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTrapFocus, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkTrapFocus, isStandalone: true, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\", booleanAttribute], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\", booleanAttribute] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: () => [], propDecorators: { enabled: [{\n                type: Input,\n                args: [{ alias: 'cdkTrapFocus', transform: booleanAttribute }]\n            }], autoCapture: [{\n                type: Input,\n                args: [{ alias: 'cdkTrapFocusAutoCapture', transform: booleanAttribute }]\n            }] } });\n\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n    _ngZone = inject(NgZone);\n    _defaultOptions = inject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    _liveElement;\n    _document = inject(DOCUMENT);\n    _previousTimeout;\n    _currentPromise;\n    _currentResolve;\n    constructor() {\n        const elementToken = inject(LIVE_ANNOUNCER_ELEMENT_TOKEN, { optional: true });\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        if (this._liveElement.id) {\n            this._exposeAnnouncerToModals(this._liveElement.id);\n        }\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                // For some reason in tests this can be undefined\n                // Probably related to ZoneJS and every other thing that patches browser APIs in tests\n                this._currentResolve?.();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `SnakBarContainer` and other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LiveAnnouncer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    _elementRef = inject(ElementRef);\n    _liveAnnouncer = inject(LiveAnnouncer);\n    _contentObserver = inject(ContentObserver);\n    _ngZone = inject(NgZone);\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    _politeness = 'polite';\n    /** Time in milliseconds after which to clear out the announcer element. */\n    duration;\n    _previousAnnouncedText;\n    _subscription;\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_VisuallyHiddenLoader);\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAriaLive, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkAriaLive, isStandalone: true, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"], duration: [\"cdkAriaLiveDuration\", \"duration\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: () => [], propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }], duration: [{\n                type: Input,\n                args: ['cdkAriaLiveDuration']\n            }] } });\n\n/** Set of possible high-contrast mode backgrounds. */\nvar HighContrastMode;\n(function (HighContrastMode) {\n    HighContrastMode[HighContrastMode[\"NONE\"] = 0] = \"NONE\";\n    HighContrastMode[HighContrastMode[\"BLACK_ON_WHITE\"] = 1] = \"BLACK_ON_WHITE\";\n    HighContrastMode[HighContrastMode[\"WHITE_ON_BLACK\"] = 2] = \"WHITE_ON_BLACK\";\n})(HighContrastMode || (HighContrastMode = {}));\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    _platform = inject(Platform);\n    /**\n     * Figuring out the high contrast mode and adding the body classes can cause\n     * some expensive layouts. This flag is used to ensure that we only do it once.\n     */\n    _hasCheckedHighContrastMode;\n    _document = inject(DOCUMENT);\n    _breakpointSubscription;\n    constructor() {\n        this._breakpointSubscription = inject(BreakpointObserver)\n            .observe('(forced-colors: active)')\n            .subscribe(() => {\n            if (this._hasCheckedHighContrastMode) {\n                this._hasCheckedHighContrastMode = false;\n                this._applyBodyHighContrastModeCssClasses();\n            }\n        });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return HighContrastMode.NONE;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            // Pre Windows 11 dark theme.\n            case 'rgb(0,0,0)':\n            // Windows 11 dark themes.\n            case 'rgb(45,50,54)':\n            case 'rgb(32,32,32)':\n                return HighContrastMode.WHITE_ON_BLACK;\n            // Pre Windows 11 light theme.\n            case 'rgb(255,255,255)':\n            // Windows 11 light theme.\n            case 'rgb(255,250,239)':\n                return HighContrastMode.BLACK_ON_WHITE;\n        }\n        return HighContrastMode.NONE;\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === HighContrastMode.BLACK_ON_WHITE) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === HighContrastMode.WHITE_ON_BLACK) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: HighContrastModeDetector, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nclass A11yModule {\n    constructor() {\n        inject(HighContrastModeDetector)._applyBodyHighContrastModeCssClasses();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: A11yModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: A11yModule, imports: [ObserversModule, CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: A11yModule, imports: [ObserversModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule, CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: () => [] });\n\nexport { A11yModule as A, CdkTrapFocus as C, FocusTrapFactory as F, HighContrastModeDetector as H, InteractivityChecker as I, LiveAnnouncer as L, FocusTrap as a, HighContrastMode as b, IsFocusableConfig as c, CdkAriaLive as d, LIVE_ANNOUNCER_ELEMENT_TOKEN as e, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY as f, LIVE_ANNOUNCER_DEFAULT_OPTIONS as g };\n","function coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\nexport { coerceArray as c };\n"],"names":["isFakeMousedownFromScreenReader","event","buttons","detail","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","a","i","MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","PERIOD","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MAC_META","$","_","a$","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aA","aB","aC","aD","aE","aF","aG","aH","aI","aJ","aK","aL","aM","aN","aO","aP","aQ","aR","aS","aT","aU","aV","aW","aX","aY","aZ","a_","aa","ab","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","an","ao","ap","aq","ar","as","at","au","av","aw","ax","ay","az","b","b0","c","d","e","f","g","h","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","i0","inject","PLATFORM_ID","Injectable","isPlatformBrowser","hasV8BreakIterator","Intl","v8BreakIterator","Platform","_platformId","isBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","constructor","ɵfac","Platform_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","_CdkPrivateStyleLoader","Component","ViewEncapsulation","ChangeDetectionStrategy","_VisuallyHiddenLoader","_VisuallyHiddenLoader_Factory","ɵcmp","ɵɵdefineComponent","type","selectors","exportAs","decls","vars","template","_VisuallyHiddenLoader_Template","rf","ctx","styles","encapsulation","changeDetection","signal","QueryList","isSignal","effect","Subscription","Subject","Typeahead","hasModifierKey","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_typeaheadSubscription","EMPTY","_itemChangesSubscription","_vertical","_horizontal","_allowedModifierKeys","_homeAndEnd","_pageUpAndDown","enabled","delta","_effectRef","_typeahead","_skipPredicateFn","item","disabled","injector","changes","subscribe","newItems","_itemsChanged","toArray","Error","tabOut","change","skipPredicate","predicate","withWrap","shouldWrap","withVerticalOrientation","withHorizontalOrientation","direction","withAllowedModifierKeys","keys","withTypeAhead","debounceInterval","items","_getItemsArray","length","some","getLabel","unsubscribe","undefined","selectedItem","setActiveItem","cancelTypeahead","reset","withHomeAndEnd","withPageUpDown","previousActiveItem","updateActiveItem","next","onKeydown","keyCode","modifiers","isModifierAllowed","every","modifier","indexOf","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","targetIndex","_setActiveItemByIndex","itemsLength","handleKey","preventDefault","activeItemIndex","activeItem","isTyping","_setActiveItemByDelta","itemArray","index","set","setCurrentSelectedItemIndex","destroy","complete","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","setItems","newIndex","isObservable","of","coerceObservable","data","NgZone","ElementRef","EventEmitter","booleanAttribute","Directive","Output","Input","NgModule","Observable","map","filter","debounceTime","coerceNumberProperty","coerceElement","shouldIgnoreRecord","record","target","Comment","addedNodes","removedNodes","MutationObserverFactory","create","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","Map","_ngZone","ngOnDestroy","forEach","element","_cleanupObserver","observe","elementOrRef","observer","stream","_observeElement","subscription","pipe","records","run","_unobserveElement","runOutsideAngular","has","mutations","characterData","childList","subtree","count","get","disconnect","delete","ContentObserver_Factory","CdkObserveContent","_contentObserver","_elementRef","_disabled","value","_unsubscribe","_subscribe","debounce","_debounce","_currentSubscription","ngAfterContentInit","CdkObserveContent_Factory","ɵdir","ɵɵdefineDirective","inputs","outputs","ObserversModule","ObserversModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","FocusKeyManager","_origin","setFocusOrigin","origin","focus","APP_ID","counters","_IdGenerator","_appId","getId","prefix","hasOwnProperty","_IdGenerator_Factory","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","_getShadowRoot","rootNode","getRootNode","ShadowRoot","_getFocusedElementPierceShadowDom","activeElement","shadowRoot","newActiveElement","_getEventTarget","composedPath","tap","DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL_MS","_letterKeyStream","_selectedItemIndex","_pressedLetters","_selectedItem","initialItems","config","typeAheadInterval","_setupKeyHandler","key","toLocaleUpperCase","String","fromCharCode","letter","push","join","inputString","trim","CdkMonitorFocus","FOCUS_MONITOR_DEFAULT_OPTIONS","FocusMonitor","FocusMonitorDetectionMode","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","INPUT_MODALITY_DETECTOR_OPTIONS","InputModalityDetector","FocusTrap","InteractivityChecker","A11yModule","CdkAriaLive","CdkTrapFocus","FocusTrapFactory","HighContrastMode","HighContrastModeDetector","IsFocusableConfig","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LiveAnnouncer","DOCUMENT","InjectionToken","Injector","TREE_KEY_MANAGER","TREE_KEY_MANAGER_FACTORY","TREE_KEY_MANAGER_FACTORY_PROVIDER","TreeKeyManager","ID_DELIMITER","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","existingId","setAttribute","removeAriaReferencedId","filteredIds","val","removeAttribute","attrValue","getAttribute","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","AriaDescriber","_platform","_document","_messageRegistry","_messagesContainer","_id","load","describe","hostElement","message","role","_canBeDescribed","getKey","setMessageId","messageElement","referenceCount","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","_deleteMessageElement","childNodes","remove","describedElements","querySelectorAll","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","containerClassName","serverContainers","messagesContainer","style","visibility","classList","add","body","originalReferenceIds","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","AriaDescriber_Factory","serviceId","NoopTreeKeyManager","_isNoopTreeKeyManager","getActiveItemIndex","getActiveItem","focusItem","NOOP_TREE_KEY_MANAGER_FACTORY","NOOP_TREE_KEY_MANAGER_FACTORY_PROVIDER","provide","useFactory","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","_enabled","register","deregister","_element","_checker","defer","_enable","preventFocus","toggleAnchors","_disable","allowFocus","EventListenerFocusTrapInertStrategy","_listener","focusTrap","removeEventListener","_trapFocus","addEventListener","focusTrapRoot","contains","closest","setTimeout","focusFirstTabbableElement","FOCUS_TRAP_INERT_STRATEGY","FocusTrapManager","_focusTrapStack","ft","stack","splice","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","_injector","inertStrategy","optional","configObject","ConfigurableFocusTrapFactory_Factory","altKey","shiftKey","ctrlKey","metaKey","RendererFactory2","BehaviorSubject","skip","distinctUntilChanged","takeUntil","normalizePassiveListenerOptions","ignoreKeys","TOUCH_BUFFER_MS","modalityEventListenerOptions","passive","capture","_listenerCleanups","modalityDetected","modalityChanged","mostRecentModality","_modality","_mostRecentTarget","_options","_lastTouchMs","_onKeydown","_onMousedown","Date","now","_onTouchstart","ngZone","options","renderer","createRenderer","listen","cleanup","InputModalityDetector_Factory","captureEventListenerOptions","_inputModalityDetector","_lastFocusOrigin","_windowFocused","_windowFocusTimeoutId","_originTimeoutId","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_detectionMode","_windowFocusListener","_stopInputModalityDetector","detectionMode","IMMEDIATE","_rootNodeFocusAndBlurListener","parentElement","_onFocus","_onBlur","monitor","checkChildren","nativeElement","cachedInfo","subject","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","focusedElement","_getClosestElementsInfo","currentElement","_originChanged","_setOrigin","_info","_getWindow","defaultView","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_isLastInteractionFromInputLabel","EVENTUAL","toggle","isFromInteraction","clearTimeout","ms","relatedTarget","Node","_emitOrigin","observers","rootNodeFocusListeners","modality","results","mostRecentTarget","nodeName","labels","FocusMonitor_Factory","_focusMonitor","_monitorSubscription","_focusOrigin","cdkFocusChange","focusOrigin","ngAfterViewInit","hasAttribute","emit","CdkMonitorFocus_Factory","CSP_NONCE","combineLatest","concat","take","startWith","coerceArray","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_nonce","_matchMedia","matchMedia","bind","noopMatchMedia","query","createEmptyStyleRule","MediaMatcher_Factory","nonce","sheet","insertRule","console","error","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","_destroySubject","isMatched","queries","splitQueries","mediaQuery","_registerQuery","mql","observables","observable","stateObservable","breakpointStates","response","breakpoints","queryObservable","handler","output","BreakpointObserver_Factory","split","reduce","EnvironmentInjector","ApplicationRef","createComponent","appsWithLoaders","WeakMap","_appRef","_environmentInjector","loader","appRef","loaders","refs","onDestroy","ref","environmentInjector","_CdkPrivateStyleLoader_Factory","_shouldActivationFollowFocus","_horizontalOrientation","_item","_trackByFn","_hasInitialFocused","_initializeFocus","activeIndex","_isItemDisabled","makeFocusable","unfocus","_updateActiveItemIndex","shouldActivationFollowFocus","horizontalOrientation","trackBy","typeAheadDebounceInterval","_setTypeAhead","_focusNextItem","_focusPreviousItem","_collapseCurrentItem","_expandCurrentItem","_focusFirstItem","_focusLastItem","_activateCurrentItem","_expandAllItemsAtCurrentItemLevel","_findNextAvailableItemIndex","_findPreviousAvailableItemIndex","itemOrIndex","emitChangeEvent","findIndex","startingIndex","_isCurrentItemExpanded","collapse","parent","getParent","expand","getChildren","children","firstChild","find","child","isExpanded","isDisabled","itemsToExpand","activate","supportsPassiveEvents","supportsPassiveEventListeners","Object","defineProperty","fallbackValue","_isNumberValue","Number","arguments","isNaN","parseFloat","afterNextRender","ignoreVisibility","isVisible","hasGeometry","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","getTabIndexValue","toLowerCase","tabIndexValue","isPotentiallyTabbableIOS","tabIndex","isFocusable","isPotentiallyFocusable","InteractivityChecker_Factory","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","parseInt","inputType","node","ownerDocument","_startAnchor","_endAnchor","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","_toggleAnchorTabIndex","deferAnchors","attachAnchors","startAnchor","endAnchor","_createAnchor","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","hasAttached","root","tabbableChild","anchor","isEnabled","fn","deferCaptureElements","FocusTrapFactory_Factory","_focusTrapFactory","_previouslyFocusedElement","autoCapture","platform","_captureFocus","ngDoCheck","ngOnChanges","autoCaptureChange","firstChange","CdkTrapFocus_Factory","features","ɵɵNgOnChangesFeature","uniqueIds","_defaultOptions","_liveElement","_previousTimeout","_currentPromise","_currentResolve","elementToken","_createLiveElement","announce","args","defaultOptions","politeness","duration","_exposeAnnouncerToModals","elementClass","previousElements","getElementsByClassName","liveEl","modals","modal","ariaOwns","LiveAnnouncer_Factory","_liveAnnouncer","_politeness","_subscription","elementText","_previousAnnouncedText","CdkAriaLive_Factory","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","_hasCheckedHighContrastMode","_breakpointSubscription","_applyBodyHighContrastModeCssClasses","getHighContrastMode","NONE","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","WHITE_ON_BLACK","BLACK_ON_WHITE","bodyClasses","mode","HighContrastModeDetector_Factory","A11yModule_Factory","imports","Array","isArray"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]}