{"version":3,"file":"2015.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAASA,oBAAoBA,CAAA;EAC3B,OAAQC,OAAwB,IAAmC;IACjE,MAAMC,YAAY,GAAGD,OAAoB;IACzC,IAAIC,YAAY,CAACC,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;MACpC,OAAO;QAAEC,gBAAgB,EAAE;MAAI,CAAE;;IAEnC,OAAO,IAAI;EACb,CAAC;AACH;AAAA,IAGaC,0BAA0B;QAA1BA,0BAA0B;IACrCC,WAAW,GAAGC,qDAAM,CAACC,kEAAsB,CAAC;IAE5CC,eAAe;IACfC,qBAAqB;IAErBC,eAAe,GAAG,IAAIC,iDAAe,CAAa;MAChDC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,eAAe,EAAE,EAAE;MACnBC,iBAAiB,EAAE;IACpB,EAAC;IACFC,gBAAgB,GAAG,IAAI,CAACP,eAAe,CAACQ,YAAY,EAAE;IAEtDC,cAAc,GAAG,IAAIR,iDAAe,CAClC,IAAI,CAACN,WAAW,CAACe,KAAK,CAAC;MACrBC,aAAa,EAAE,IAAI,CAAChB,WAAW,CAACe,KAAK,CAAC;QACpCR,QAAQ,EAAE,IAAIU,uDAAW,CAAS,EAAE,EAAE,CAACC,sDAAU,CAACC,QAAQ,CAAC;OAC5D,CAAC;MACFC,mBAAmB,EAAE,IAAI,CAACpB,WAAW,CAACe,KAAK,CAAC;QAC1CN,OAAO,EAAE,IAAI,CAACT,WAAW,CAACqB,KAAK,CAAC,EAA2B,EAAE,CAC3D5B,oBAAoB,EAAE,CACvB;OACF,CAAC;MACF6B,WAAW,EAAE,IAAI,CAACtB,WAAW,CAACe,KAAK,CAAC;QAClCP,MAAM,EAAE,IAAIS,uDAAW,CAAS,EAAE,EAAE,CAACC,sDAAU,CAACC,QAAQ,CAAC;OAC1D,CAAC;MACFI,cAAc,EAAE,IAAI,CAACvB,WAAW,CAACe,KAAK,CAAC;QACrCL,eAAe,EAAE,IAAIO,uDAAW,CAAS,EAAE,EAAE,CAACC,sDAAU,CAACC,QAAQ,CAAC,CAAC;QACnER,iBAAiB,EAAE,IAAIM,uDAAW,CAAS,EAAE,EAAE,CAACC,sDAAU,CAACC,QAAQ,CAAC;OACrE;IACF,EAA8B,CAChC;IACDK,eAAe,GAAG,IAAI,CAACV,cAAc,CAACD,YAAY,EAAE;IAEpDY,kBAAkBA,CAACC,KAAiB;MAClC,IAAI,CAACrB,eAAe,CAACsB,IAAI,CAACD,KAAK,CAAC;MAChC,OAAOA,KAAK;;IAGdE,wBAAwBA,CAACF,KAAiB;MACxC,MAAMG,IAAI,GAAG,IAAI,CAACf,cAAc,CAACY,KAAK;MACtC,MAAMI,YAAY,GAAGD,IAAI,CAACE,GAAG,CAAC,6BAA6B,CAAc;MACzE,IAAI,CAACD,YAAY,IAAIA,YAAY,CAACjC,MAAM,KAAK,CAAC,EAAE;QAC9C6B,KAAK,CAACjB,OAAO,CAACuB,OAAO,CAAEC,MAAM,IAAI;UAC/BH,YAAY,CAACI,IAAI,CACf,IAAI,CAAClC,WAAW,CAACe,KAAK,CAAC;YACrBW,KAAK,EAAE,CAACO,MAAM,CAACP,KAAK,EAAE,CAACR,sDAAU,CAACC,QAAQ,CAAC;UAC5C,EAAC,CACH;QACH,CAAC,CAAC;;;MAGJgB,qBAAqB,CAAC,MAAK;QACzBN,IAAI,CAACO,QAAQ,CAAC,IAAI,CAACC,6BAA6B,CAACX,KAAK,CAAC,CAAC;MAC1D,CAAC,CAAC;MACF,OAAOG,IAAI;;IAGbQ,6BAA6BA,CAACX,KAAU;MACtC,OAAO;QACLJ,WAAW,EAAE;UACXd,MAAM,EAAEkB,KAAK,CAAClB;QACf;QACDY,mBAAmB,EAAE;UACnBX,OAAO,EAAEiB,KAAK,CAACjB;QAChB;QACDO,aAAa,EAAE;UACbT,QAAQ,EAAEmB,KAAK,CAACnB;QACjB;QACDgB,cAAc,EAAE;UACdb,eAAe,EAAEgB,KAAK,CAAChB,eAAe;UACtCC,iBAAiB,EAAEe,KAAK,CAACf;QAC1B;OACF;;IAGH2B,0BAA0BA,CAACZ,KAAiB;MAC1C,IAAI,CAACvB,eAAA,CACF4B,GAAG,CAAC,IAAI,CAAC3B,qBAAqB,GAC7BgC,QAAQ,CAACG,IAAI,CAACC,SAAS,CAACd,KAAK,CAAC,CAAC;;IAGrCe,6BAA6BA,CAACf,KAA4B;MACxD,OAAO;QACLnB,QAAQ,EAAEmB,KAAK,CAACV,aAAa,CAACT,QAAQ;QACtCC,MAAM,EAAEkB,KAAK,CAACJ,WAAW,CAACd,MAAM;QAChCC,OAAO,EAAEiB,KAAK,CAACN,mBAAmB,CAACX,OAAO;QAC1CC,eAAe,EAAEgB,KAAK,CAACH,cAAc,CAACb,eAAe;QACrDC,iBAAiB,EAAEe,KAAK,CAACH,cAAc,CAACZ;OACzC;;;uCA3FQZ,0BAA0B;IAAA;;aAA1BA,0BAA0B;MAAA2C,OAAA,EAA1B3C,0BAA0B,CAAA4C;IAAA;;SAA1B5C,0BAA0B;AAAA;;;;ICJ1B6C,iBAAiB;QAAjBA,iBAAiB;IAC5BC,iBAAiB,GAAGC,gDAAK,CAAC3B,QAAQ,KAAA4B,SAAA;MAAAC,SAAA;IAAA,SAAa;;uCADpCJ,iBAAiB;IAAA;IAAjB,OAAAK,IAAA,kB;YAAAL,iBAAiB;MAAAM,SAAA;MAAAC,MAAA;QAAAN,iBAAA;MAAA;MAAAO,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;qBAzC1BE,+DAAmB,EAAAC,4DAAA,EAAAA,gEAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,8DAAA,EAAAA,2DAAA,EACnBO,4EAAkB,EAAAC,sEAAA,EAAAA,kEAAA,EAAAA,kEAAA,EAClBI,6DAAQ,EACRC,qEAAc,EACdC,+DAAS;MAAAC,MAAA;IAAA;;SAqCA/B,iBAAiB;AAAA;;;;ICUjBgC,kBAAkB;QAAlBA,kBAAkB;IAC7BC,kBAAkB,GAAG/B,gDAAK,CAAC3B,QAAQ,KAAA4B,SAAA;MAAAC,SAAA;IAAA,SAAa;;uCADrC4B,kBAAkB;IAAA;IAAlB,OAAA3B,IAAA,kB;YAAA2B,kBAAkB;MAAA1B,SAAA;MAAAC,MAAA;QAAA0B,kBAAA;MAAA;MAAAzB,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAuB,4BAAArB,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAnD3BE,+DAAmB,EAAAC,4DAAA,EAAAA,gEAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,8DAAA,EAAAA,2DAAA,EACnBO,4EAAkB,EAAAC,sEAAA,EAAAA,kEAAA,EAAAA,kEAAA,EAClBI,6DAAQ,EACRC,qEAAc,EACdM,yEAAkB,EAClBL,+DAAS;MAAAC,MAAA;IAAA;;SA8CAC,kBAAkB;AAAA;;;;ICwDlBI,gBAAgB;QAAhBA,gBAAgB;IAC3BhF,WAAW,GAAGC,qDAAM,CAACgF,uDAAW,CAAC;IACjCC,cAAc,GAAGjF,qDAAM,CAACF,0BAA0B,CAAC;IACnDoF,gBAAgB,GAAGrC,gDAAK,CAAC3B,QAAQ,KAAA4B,SAAA;MAAAC,SAAA;MAC/BoC,SAAS,EAAG1D,KAAK,IAAI;QACnB,IAAI,CAAC2D,mBAAmB,CAAC1D,IAAI,CAACD,KAAK,CAAC;QACpC,OAAOA,KAAK;MACd;IAAC,MAJqD;MACtD0D,SAAS,EAAG1D,KAAK,IAAI;QACnB,IAAI,CAAC2D,mBAAmB,CAAC1D,IAAI,CAACD,KAAK,CAAC;QACpC,OAAOA,KAAK;;IAEf,IAAC;IAEF2D,mBAAmB,GAAG,IAAI/E,iDAAe,CACvC,IAAI,CAACN,WAAW,CAACe,KAAK,CAAC;MACrBN,OAAO,EAAE,IAAI,CAACT,WAAW,CAACqB,KAAK,CAAC,EAAE;IACnC,EAAC,CACH;IACDiE,iBAAiB,GAAG,IAAI,CAACD,mBAAmB,CAACxE,YAAY,EAAE;IAE3D0E,UAAU,GAAG,IAAI,CAACD,iBAAiB,CAACE,IAAI,CACtCC,yCAAG,CAAEC,SAAS,IAAKA,SAAS,CAAC3D,GAAG,CAAC,SAAS,CAAc,CAAC,CAC1D;IAED4D,cAAcA,CAAA;MACZ,MAAMlF,OAAO,GAAG,IAAI,CAAC0E,gBAAgB,EAAE,CAACpD,GAAG,CAAC,SAAS,CAAc;MACnEtB,OAAO,CAACyB,IAAI,CACV,IAAI,CAAClC,WAAW,CAACe,KAAK,CAAC;QACrBW,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,sDAAU,CAACC,QAAQ,CAAC;MAClC,EAAC,CACH;MACD,IAAI,CAACkE,mBAAmB,CAAC1D,IAAI,CAAC,IAAI,CAACwD,gBAAgB,EAAE,CAAC;;IAGxDS,iBAAiBA,CAACC,KAAa;MAC7B,MAAMpF,OAAO,GAAG,IAAI,CAAC0E,gBAAgB,EAAE,CAACpD,GAAG,CAAC,SAAS,CAAc;MACnEtB,OAAO,CAACqF,QAAQ,CAACD,KAAK,CAAC;MACvB,IAAI,CAACR,mBAAmB,CAAC1D,IAAI,CAAC,IAAI,CAACwD,gBAAgB,EAAE,CAAC;;;MAItD,IAAI,CAACD,cAAc,CAACpE,cAAc,CAACY,KAAK,CAAC9B,QAAQ,CAAC0B,WAAA,CAC/CS,GAAG,CAAC,QAAQ,GACXK,QAAQ,CAAC,EAAE,CAAC;;;uCAxCP4C,gBAAgB;IAAA;IAAhB,OAAA/B,IAAA,kB;YAAA+B,gBAAgB;MAAA9B,SAAA;MAAAC,MAAA;QAAAgC,gBAAA;MAAA;MAAA/B,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAwC,0BAAAtC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBA9FzBE,+DAAmB,EAAAC,4DAAA,EAAAA,gEAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,8DAAA,EAAAA,2DAAA,EAAAA,yDAAA,EAAAA,yDAAA,EACnBO,4EAAkB,EAAAC,sEAAA,EAAAA,kEAAA,EAAAA,kEAAA,EAClBI,6DAAQ,EACRC,qEAAc,EACdM,yEAAkB,EAClBmB,qEAAe,EAAAC,+DAAA,EAAAA,mEAAA,EACfE,4DAAO,EACPC,iEAAU,EACVC,oDAAO,EATPC,sDAAS;MAAA7B,MAAA;IAAA;;SA+FAK,gBAAgB;AAAA;;;;IC/ChByB,eAAe;QAAfA,eAAe;IAC1BC,eAAe,GAAG5D,gDAAK,CAAC3B,QAAQ,KAAA4B,SAAA;MAAAC,SAAA;IAAA,SAAa;IAC7C2D,QAAQ,GAAG1G,qDAAM,CAACF,0BAA0B,CAAC,CAACyB,eAAe,CAACgE,IAAI,CAChEC,yCAAG,CAAE5D,IAAI,IAAKA,IAAI,CAACjC,QAAQ,CAACwB,mBAAmB,CAACxB,QAAQ,CAACa,OAAO,CAAC,CAClE;;uCAJUgG,eAAe;IAAA;IAAf,OAAAxD,IAAA,kB;YAAAwD,eAAe;MAAAvD,SAAA;MAAAC,MAAA;QAAAuD,eAAA;MAAA;MAAAtD,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAqD,yBAAAnD,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;;;;;;;;qBAvDxBE,+DAAmB,EAAAC,4DAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,6DAAA,EAAAA,8DAAA,EAAAA,2DAAA,EACnBa,qEAAc,EACdM,yEAAkB,EAClBL,+DAAS,EACTP,4EAAkB,EAAAC,sEAAA,EAAAA,kEAAA,EAAAA,kEAAA,EAClB0C,8DAAS,EAETC,gEAAS,EARTP,sDAAS;MAAA7B,MAAA;IAAA;;SAwDA8B,eAAe;AAAA;;;;ICsBfO,gBAAgB;QAAhBA,gBAAgB;IAC3B9B,cAAc,GAAGjF,qDAAM,CAACF,0BAA0B,CAAC;IACnDkH,gBAAgB,GAAGnE,gDAAK,CAAC3B,QAAQ,KAAA4B,SAAA;MAAAC,SAAA;IAAA,SAAa;IAE9CuC,UAAU,GAAG,IAAI,CAACL,cAAc,CAAC1D,eAAe,CAACgE,IAAI,CACnD0B,+CAAS,CAAExB,SAAS,IAAKA,SAAS,CAACyB,YAAY,CAAC,EAChD1B,yCAAG,CAAE2B,SAAS,IACZ,IAAI,CAAClC,cAAc,CAACzC,6BAA6B,CAC/C2E,SAA6C,CAC9C,CACF,CACF;IAEDC,gBAAgBA,CAAA;MACd,IAAI,CAACnC,cAAc,CAAC5C,0BAA0B,CAC5C,IAAI,CAAC2E,gBAAgB,EAAE,CAACK,WAAW,EAAE,CACtC;;;uCAhBQN,gBAAgB;IAAA;IAAhB,OAAA/D,IAAA,kB;YAAA+D,gBAAgB;MAAA9D,SAAA;MAAAC,MAAA;QAAA8D,gBAAA;MAAA;MAAA7D,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAgE,0BAAA9D,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;qBA3EzBE,+DAAmB,EAAAC,4DAAA,EAAAA,gEAAA,EAAAA,8DAAA,EACnBmB,yEAAkB,EAClBL,+DAAS,EACT8C,oEAAc,EAAAC,mEAAA,EAAAA,oEAAA,EACdnB,iEAAU,EALVE,sDAAS;MAAA7B,MAAA;IAAA;;SA4EAqC,gBAAgB;AAAA;;;;ICLhBY,sBAAsB;QAAtBA,sBAAsB;IACjC1C,cAAc,GAAGjF,qDAAM,CAACF,0BAA0B,CAAC;IAEnDwF,UAAU,GAAGsC,mDAAa,CAAC;MACzBhG,IAAI,EAAE,IAAI,CAACqD,cAAc,CAAC1D,eAAe;MACzCE,KAAK,EAAE,IAAI,CAACwD,cAAc,CAACtE;IAC5B,EAAC,CAAC4E,IAAI,CACLC,yCAAG,CAAC,CAAC;MAAE/D;IAAK,CAAE,MAAM;MAClBG,IAAI,EAAE,IAAI,CAACqD,cAAc,CAACtD,wBAAwB,CAACF,KAAK,CAAC;MACzDA;IACD,EAAC,CAAC,EACH+D,yCAAG,CAAC,CAAC;MAAE5D,IAAI;MAAEH;IAAK,CAAE,MAAM;MACxBV,aAAa,EAAEa,IAAI,CAACE,GAAG,CAAC,eAAe,CAAkB;MACzDX,mBAAmB,EAAES,IAAI,CAACE,GAAG,CAC3B,qBAAqB,CACC;MACxBT,WAAW,EAAEO,IAAI,CAACE,GAAG,CAAC,aAAa,CAAgB;MACnDR,cAAc,EAAEM,IAAI,CAACE,GAAG,CAAC,gBAAgB,CAAmB;MAC5DjB,cAAc,EAAEe,IAAI;MACpBiG,aAAa,EAAEpG,KAAK,CAACnB,QAAQ,GAAG,CAAC,GAAG,CAAC;MACrCwH,SAAS,EAAErG,KAAK,CAACnB,QAAQ,GAAG,IAAI,GAAG;KACpC,CAAC,CAAC,CACJ;;uCAtBUqH,sBAAsB;IAAA;IAAtB,OAAA3E,IAAA,kB;YAAA2E,sBAAsB;MAAA1E,SAAA;MAAAE,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAyE,gCAAAvE,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;;;;;;;;qBAhE/BE,+DAAmB,EACnBsE,uEAAgB,EAAAC,8DAAA,EAAAA,mEAAA,EAAAA,iEAAA,EAChBtF,iBAAiB,EACjBgC,kBAAkB,EAClBI,gBAAgB,EAChByB,eAAe,EACfO,gBAAgB,EAPhBR,sDAAS;MAAA7B,MAAA;IAAA;;SAiEAiD,sBAAsB;AAAA;;;;IC7BtBU,4BAA4B;QAA5BA,4BAA4B;IACvCpD,cAAc,GAAGjF,qDAAM,CAACF,0BAA0B,CAAC;IACnDwI,SAAS,GAAGzF,oDAAK,CAAS,CAAC,MAAAC,SAAA;MAAAC,SAAA;IAAA,SAAC;IAC5BwF,qBAAqB,GAAG,8BAA8B;IACtDC,SAAS,GAAG3F,oDAAK,CAAU,IAAI,MAAAC,SAAA;MAAAC,SAAA;IAAA,SAAC;IAChC0C,SAAS,GAAG5C,gDAAK,CAAC3B,QAAQ,KAAA4B,SAAA;MAAAC,SAAA;MACxBoC,SAAS,EAAG1D,KAAK,IAAI;QACnB,IAAI,CAACwD,cAAc,CAAC/E,eAAe,GAAGuB,KAAK;QAC3C,OAAOA,KAAK;MACd;IAAC,MAJ8C;MAC/C0D,SAAS,EAAG1D,KAAK,IAAI;QACnB,IAAI,CAACwD,cAAc,CAAC/E,eAAe,GAAGuB,KAAK;QAC3C,OAAOA,KAAK;;IAEf,IAAC;IACFgH,eAAe,GAAG5F,gDAAK,CAAC3B,QAAQ,KAAA4B,SAAA;MAAAC,SAAA;MAC9BoC,SAAS,EAAG1D,KAAK,IAAI;QACnB,IAAI,CAACwD,cAAc,CAAC9E,qBAAqB,GAAGsB,KAAK;QACjD,OAAOA,KAAK;MACd;IAAC,MAJ8C;MAC/C0D,SAAS,EAAG1D,KAAK,IAAI;QACnB,IAAI,CAACwD,cAAc,CAAC9E,qBAAqB,GAAGsB,KAAK;QACjD,OAAOA,KAAK;;IAEf,IAAC;IACFiH,kBAAkB,GAAG7F,oDAAK,CAAsB,CAC9C;MAAE8F,MAAM,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAe,CAAE,EAC3C;MAAED,MAAM,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAgB,CAAE,EACnD;MAAED,MAAM,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAe,CAAE,CACnD,MAAA9F,SAAA;MAAAC,SAAA;IAAA,SAAC;IAEFtB,KAAK,GAAG,IAAI,CAACwD,cAAc,CAACtE,gBAAgB;IAC5CkI,WAAW,GAAGC,qDAAM,CAAS,eAAe,MAAAhG,SAAA;MAAAC,SAAA;IAAA,SAAC;IAC7CgG,kBAAkB,GAAG,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IAEnDC,QAAQA,CAAA;MACN,IAAI;QACF,MAAMC,kBAAkB,GAAG,IAAI,CAAC1D,SAAS,EAAE,CAAC3D,GAAG,CAAC,IAAI,CAAC2G,eAAe,EAAE,CAAC;QACvE,IAAI,CAACxD,cAAc,CAACzD,kBAAkB,CACpC2H,kBAAkB,EAAE9B,WAAW,KAC3B/E,IAAI,CAAC8G,KAAK,CAACD,kBAAkB,CAAC1H,KAAK,IACnC,IAAI,CAACwD,cAAc,CAAC7E,eAAe,CAACqB,KAAK,CAC9C;QACD,OAAO4H,KAAK,EAAE;QACdC,OAAO,CAACC,IAAI,CAAC,4BAA4B,EAAEF,KAAK,CAAC;;;IAIrDL,cAAcA,CAACL,MAAc;MAC3B,IAAI,CAACE,WAAW,CAACW,MAAM,CAAC,MAAMb,MAAM,CAAC;;;uCAzC5BN,4BAA4B;IAAA;IAA5B,OAAArF,IAAA,kB;YAAAqF,4BAA4B;MAAApF,SAAA;MAAAwG,SAAA;MAAAvG,MAAA;QAAAoF,SAAA;QAAAE,SAAA;QAAA/C,SAAA;QAAAgD,eAAA;QAAAC,kBAAA;MAAA;MAAAgB,QAAA,G,iEAjC5B,CAAC5J,0BAA0B,CAAC,G,uEAAA6J,2DAAA;MAAAxG,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAuG,sCAAArG,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;;;;;;;;;;qBANrCE,+DAAmB,EAAAC,2DAAA,EAAAA,gEAAA,EAAAA,8DAAA,EAAAA,2DAAA,EACnBmG,4EAAwB,EACxBC,sEAAkB,EAClBC,uEAAmB,EACnBrC,sBAAsB;MAAAjD,MAAA;IAAA;;SAmCb2D,4BAA4B;AAAA;;;;;AC1DzC;;AAEG;;ACFH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFiC;AACwL;AACvL;AAC0E;AACsJ;AAClN;AACJ;AAC8B;AAClC;AACmB;AACf;AACiB;AACO;AACb;AACY;AACnB;AAC0B;AACvB;AAAA,SAAA2E,2DAAAxJ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAsBuCyG,oDAAE,EAqFxF,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAAA,MAAA0J,oBAAA,GArFqFjD,2DAAE,GAAAmD,SAAA;IAAFnD,gEAAE,MAAAiD,oBAAA,CAAAI,IAAA,KAqFxF,CAAC;EAAA;AAAA;AAAA,SAAAC,2DAAA/J,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArFqFyG,4DAAE,cAsF9E,CAAC;IAtF2EA,oDAAE,EAsFlD,CAAC;IAtF+CA,0DAAE,CAsFvC,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAAA,MAAA0J,oBAAA,GAtFoCjD,2DAAE,GAAAmD,SAAA;IAAFnD,uDAAE,CAsFlD,CAAC;IAtF+CA,+DAAE,CAAAiD,oBAAA,CAAAtE,IAsFlD,CAAC;EAAA;AAAA;AAAA,SAAAgF,6CAAApK,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqK,GAAA,GAtF+C5D,8DAAE;IAAFA,4DAAE,YAkFzF,CAAC;IAlFsFA,wDAAE,mBAAA+D,kEAAA;MAAA,MAAAd,oBAAA,GAAFjD,2DAAE,CAAA4D,GAAA,EAAAT,SAAA;MAAA,MAAAc,MAAA,GAAFjE,2DAAE;MAAA,OAAFA,yDAAE,CAgF9EiE,MAAA,CAAAE,YAAA,CAAAlB,oBAAA,CAAAvE,MAAqC,CAAC;IAAA,EAAC;IAhFqCsB,iEAAE,IAAA+C,0DAAA,MAmF1D,CAAC,IAAAO,0DAAA,kBAEtB,CAAC;IArF4EtD,0DAAE,CAwFpF,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAAA,MAAA0J,oBAAA,GAAAzJ,GAAA,CAAA2J,SAAA;IAxFiFnD,uDAAE,CAuFvF,CAAC;IAvFoFA,2DAAE,CAAAiD,oBAAA,CAAAI,IAAA,QAuFvF,CAAC;EAAA;AAAA;AAAA,SAAAiB,4DAAA/K,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvFoFyG,4DAAE,sBA+JjD,CAAC;IA/J8CA,oDAAE,kBA+JrC,CAAC;IA/JkCA,0DAAE,CA+JrB,CAAC;EAAA;AAAA;AAAA,SAAAuE,kEAAAhL,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqK,GAAA,GA/JkB5D,8DAAE;IAAFA,4DAAE,sBAiKvB,CAAC;IAjKoBA,wDAAE,mBAAAwE,iGAAA;MAAA,MAAAC,QAAA,GAAFzE,2DAAE,CAAA4D,GAAA,EAAAT,SAAA;MAAA,MAAAc,MAAA,GAAFjE,2DAAE;MAAA,OAAFA,yDAAE,CAiKvCiE,MAAA,CAAAS,QAAA,CAAAD,QAAc,CAAC;IAAA,EAAC;IAjKqBzE,oDAAE,EAmKxF,CAAC;IAnKqFA,0DAAE,CAmKxE,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAAA,MAAAkL,QAAA,GAAAjL,GAAA,CAAA2J,SAAA;IAnKqEnD,uDAAE,CAmKxF,CAAC;IAnKqFA,gEAAE,MAAAyE,QAAA,CAAAE,IAAA,KAmKxF,CAAC;EAAA;AAAA;AAAA,SAAAC,4DAAArL,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnKqFyG,8DAAE,IAAAuE,iEAAA,4BAAFvE,oEAoKrF,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAAA,MAAAwL,iBAAA,GApKoF/E,2DAAE;IAAFA,wDAAE,CAAA+E,iBAoKvF,CAAC;EAAA;AAAA;AAAA,SAAAE,8CAAA1L,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IApKoFyG,4DAAE,iBA6JvD,CAAC;IA7JoDA,iEAAE,IAAAsE,2DAAA,0BA8JtD,CAAC,IAAAM,2DAAA,MAE1B,CAAC;IAhK4E5E,0DAAE,CAqK/E,CAAC;EAAA;EAAA,IAAAzG,EAAA;IArK4EyG,uDAAE,CAoKrF,CAAC;IApKkFA,2DAAE,CAAAxG,GAAA,CAAA7D,MAAA,aAoKrF,CAAC;EAAA;AAAA;AAAA,SAAAuP,wCAAA3L,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4L,GAAA,GApKkFnF,8DAAE;IAAFA,4DAAE,uBAoRzF,CAAC;IApRsFA,wDAAE,sBAAAoF,2EAAAC,MAAA;MAAFrF,2DAAE,CAAAmF,GAAA;MAAA,MAAAlB,MAAA,GAAFjE,2DAAE;MAAA,OAAFA,yDAAE,CAmR3EiE,MAAA,CAAAS,QAAA,CAAAW,MAAe,CAAC;IAAA,EAAC;IAnRwDrF,0DAAE,CAoRxE,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAAA,MAAA0K,MAAA,GApRqEjE,2DAAE;IAAFA,wDAAE,oBAAAiE,MAAA,CAAAsB,eAAA,EAkRnD,CAAC;EAAA;AAAA;AAAA,SAAAC,yCAAAjM,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkM,GAAA,GAlRgDzF,8DAAE;IAAFA,4DAAE,8BAsSzF,CAAC;IAtSsFA,wDAAE,0BAAA0F,uFAAAL,MAAA;MAAFrF,2DAAE,CAAAyF,GAAA;MAAA,MAAAxB,MAAA,GAAFjE,2DAAE;MAAA,OAAFA,yDAAE,CAoSvEiE,MAAA,CAAAE,YAAA,CAAAkB,MAAmB,CAAC;IAAA,EAAC,+BAAAM,4FAAAN,MAAA;MApSgDrF,2DAAE,CAAAyF,GAAA;MAAA,MAAAxB,MAAA,GAAFjE,2DAAE;MAAA,OAAFA,yDAAE,CAqSlEiE,MAAA,CAAA2B,iBAAA,CAAAP,MAAwB,CAAC;IAAA,EAAC;IArSsCrF,0DAAE,CAsSjE,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAAA,MAAA0K,MAAA,GAtS8DjE,2DAAE;IAAFA,wDAAE,uBAAAiE,MAAA,CAAAxF,kBAAA,EAmS7C,CAAC;EAAA;AAAA;AAAA,SAAAoH,oDAAAtM,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnS0CyG,gEAAE,EA4mBpB,CAAC;EAAA;AAAA;AAAA,SAAA+F,qCAAAxM,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5mBiByG,4DAAE,QA2mBxF,CAAC;IA3mBqFA,wDAAE,IAAA6F,mDAAA,yBA4mBnC,CAAC;IA5mBgC7F,0DAAE,CA6mBvF,CAAC;EAAA;EAAA,IAAAzG,EAAA;IA7mBoFyG,2DAAE;IAAA,MAAAiG,uBAAA,GAAFjG,yDAAE;IAAFA,uDAAE,CA4mBrC,CAAC;IA5mBkCA,wDAAE,qBAAAiG,uBA4mBrC,CAAC;EAAA;AAAA;AAAA,SAAAE,oDAAA5M,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5mBkCyG,gEAAE,EAinBpB,CAAC;EAAA;AAAA;AAAA,SAAAoG,qCAAA7M,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAjnBiByG,4DAAE,QAgnBxF,CAAC;IAhnBqFA,wDAAE,IAAAmG,mDAAA,yBAinBnC,CAAC;IAjnBgCnG,0DAAE,CAknBvF,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAlnBoFyG,2DAAE;IAAA,MAAAiG,uBAAA,GAAFjG,yDAAE;IAAFA,uDAAE,CAinBrC,CAAC;IAjnBkCA,wDAAE,qBAAAiG,uBAinBrC,CAAC;EAAA;AAAA;AAAA,SAAAI,oDAAA9M,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAjnBkCyG,gEAAE,EAsnBpB,CAAC;EAAA;AAAA;AAAA,SAAAsG,qCAAA/M,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtnBiByG,4DAAE,QAqnBxF,CAAC;IArnBqFA,wDAAE,IAAAqG,mDAAA,yBAsnBnC,CAAC;IAtnBgCrG,0DAAE,CAunBvF,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAvnBoFyG,2DAAE;IAAA,MAAAiG,uBAAA,GAAFjG,yDAAE;IAAFA,uDAAE,CAsnBrC,CAAC;IAtnBkCA,wDAAE,qBAAAiG,uBAsnBrC,CAAC;EAAA;AAAA;AAAA,SAAAM,oDAAAhN,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtnBkCyG,gEAAE,EA2nBpB,CAAC;EAAA;AAAA;AAAA,SAAAwG,qCAAAjN,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3nBiByG,4DAAE,QA0nBxF,CAAC;IA1nBqFA,wDAAE,IAAAuG,mDAAA,yBA2nBnC,CAAC;IA3nBgCvG,0DAAE,CA4nBvF,CAAC;EAAA;EAAA,IAAAzG,EAAA;IA5nBoFyG,2DAAE;IAAA,MAAAiG,uBAAA,GAAFjG,yDAAE;IAAFA,uDAAE,CA2nBrC,CAAC;IA3nBkCA,wDAAE,qBAAAiG,uBA2nBrC,CAAC;EAAA;AAAA;AAAA,SAAAQ,oDAAAlN,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3nBkCyG,gEAAE,EAgoBpB,CAAC;EAAA;AAAA;AAAA,SAAA0G,qCAAAnN,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhoBiByG,4DAAE,QA+nBxF,CAAC;IA/nBqFA,wDAAE,IAAAyG,mDAAA,yBAgoBnC,CAAC;IAhoBgCzG,0DAAE,CAioBvF,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAjoBoFyG,2DAAE;IAAA,MAAAiG,uBAAA,GAAFjG,yDAAE;IAAFA,uDAAE,CAgoBrC,CAAC;IAhoBkCA,wDAAE,qBAAAiG,uBAgoBrC,CAAC;EAAA;AAAA;AAAA,SAAAU,oDAAApN,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhoBkCyG,gEAAE,EAqoBpB,CAAC;EAAA;AAAA;AAAA,SAAA4G,qCAAArN,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAroBiByG,4DAAE,QAooBxF,CAAC;IApoBqFA,wDAAE,IAAA2G,mDAAA,yBAqoBnC,CAAC;IAroBgC3G,0DAAE,CAsoBvF,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAtoBoFyG,2DAAE;IAAA,MAAAiG,uBAAA,GAAFjG,yDAAE;IAAFA,uDAAE,CAqoBrC,CAAC;IAroBkCA,wDAAE,qBAAAiG,uBAqoBrC,CAAC;EAAA;AAAA;AAAA,SAAAY,4CAAAtN,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAroBkCyG,uDAAE,aAspBtF,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAAA,IAAAwN,OAAA;IAAA,MAAAC,MAAA,GAtpBmFhH,2DAAE;IAAFA,wDAAE,kBAAA+G,OAAA,GAAAC,MAAA,CAAAxL,SAAA,GAAA3D,GAAA,CAAAmP,MAAA,CAAAxI,eAAA,sBAAAuI,OAAA,CAAAvP,KAgpBlC,CAAC,mBAAAwP,MAAA,CAAAlI,kBACtB,CAAC,uBAAAkI,MAAA,CAAAvI,kBAAA,EACK,CAAC,cAAAuI,MAAA,CAAAzI,SAAA,EACnB,CAAC,oBAAAyI,MAAA,CAAAxI,eAAA,EACW,CAAC,kCAAAwI,MAAA,CAAA3I,SAAA,EACO,CAAC;EAAA;AAAA;AAAA,MAAA4I,GAAA;AAAA,SAAAC,sCAAA3N,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqK,GAAA,GArpB4C5D,8DAAE;IAAFA,4DAAE,YA68B3B,CAAC;IA78BwBA,wDAAE,mBAAAmH,2DAAA;MAAA,MAAAC,OAAA,GAAFpH,2DAAE,CAAA4D,GAAA,EAAAT,SAAA;MAAA,MAAAc,MAAA,GAAFjE,2DAAE;MAAA,OAAFA,yDAAE,CA68BrDiE,MAAA,CAAAoD,YAAA,CAAAD,OAAA,CAAA1I,MAAwB,CAAC;IAAA,EAAC;IA78ByBsB,4DAAE,cA88B9E,CAAC;IA98B2EA,oDAAE,EA88B/D,CAAC;IA98B4DA,0DAAE,CA88BpD,CAAC,CACjC,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAAA,MAAA6N,OAAA,GAAA5N,GAAA,CAAA2J,SAAA;IA/8BiFnD,uDAAE,EA88B/D,CAAC;IA98B4DA,+DAAE,CAAAoH,OAAA,CAAAzI,IA88B/D,CAAC;EAAA;AAAA;AAAA,SAAA2I,+CAAA/N,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkM,GAAA,GA98B4DzF,8DAAE;IAAFA,4DAAE,YA69BzE,CAAC,cAMhB,CAAC;IAn+BqFA,8DAAE,2BAAAwH,8EAAAnC,MAAA;MAAFrF,2DAAE,CAAAyF,GAAA;MAAA,MAAAxB,MAAA,GAAFjE,2DAAE;MAAFA,gEAAE,CAAAiE,MAAA,CAAAyD,GAAA,EAAArC,MAAA,MAAApB,MAAA,CAAAyD,GAAA,GAAArC,MAAA;MAAA,OAAFrF,yDAAE,CAAAqF,MAAA;IAAA,CAk+BvE,CAAC;IAl+BoErF,0DAAE,CAm+BxF,CAAC;IAn+BqFA,4DAAE,YAo+BxC,CAAC;IAp+BqCA,wDAAE,mBAAA2H,oEAAA;MAAF3H,2DAAE,CAAAyF,GAAA;MAAA,MAAAxB,MAAA,GAAFjE,2DAAE;MAAA,OAAFA,yDAAE,CAo+BrDiE,MAAA,CAAA2D,UAAA,CAAW,CAAC;IAAA,EAAC;IAp+BsC5H,4DAAE,cAq+B9E,CAAC;IAr+B2EA,oDAAE,SAq+B3E,CAAC;IAr+BwEA,0DAAE,CAq+BhE,CAAC,CACrB,CAAC,CACH,CAAC;EAAA;EAAA,IAAAzG,EAAA;IAAA,MAAA0K,MAAA,GAv+BmFjE,2DAAE;IAAFA,uDAAE,CAk+BvE,CAAC;IAl+BoEA,8DAAE,YAAAiE,MAAA,CAAAyD,GAk+BvE,CAAC;EAAA;AAAA;AAAA,IAt/BnB7H,wBAAwB;EAA9B,MAAMA,wBAAwB,CAAC;IAC3BiI,UAAU,GAAG/R,qDAAM,CAACkK,qDAAU,CAAC;IAC/B8H,YAAY,GAAGnP,oDAAK,CAAC,CAAC;IACtBoP,QAAQ,GAAGA,CAAA,KAAM,CAAE,CAAC;IACpBC,SAAS,GAAGA,CAAA,KAAM,CAAE,CAAC;IACrBC,UAAUA,CAAA,EAAG;MACT,IAAI,CAACJ,UAAU,CAACK,aAAa,CAACC,SAAS,GAAG,IAAI,CAACL,YAAY,CAAC,CAAC,IAAI,EAAE;IACvE;IACAM,gBAAgBA,CAACC,EAAE,EAAE;MACjB,IAAI,CAACN,QAAQ,GAAGM,EAAE;IACtB;IACAC,iBAAiBA,CAACD,EAAE,EAAE;MAClB,IAAI,CAACL,SAAS,GAAGK,EAAE;IACvB;IACAE,MAAMA,CAAA,EAAG;MACL,IAAI,CAACP,SAAS,CAAC,CAAC;IACpB;IACAQ,OAAOA,CAAA,EAAG;MACN,IAAI,CAACT,QAAQ,CAAC,IAAI,CAACF,UAAU,CAACK,aAAa,CAACC,SAAS,CAAC;IAC1D;IACA,OAAO3P,IAAI,YAAAiQ,iCAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAwF9I,wBAAwB;IAAA;IAC3H,OAAO+I,IAAI,kBAD8E5I,+DAAE;MAAA8I,IAAA,EACJjJ,wBAAwB;MAAA7G,SAAA;MAAA+P,YAAA,WAAAC,sCAAAzP,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UADtByG,wDAAE,kBAAAiJ,iDAAA;YAAA,OACJzP,GAAA,CAAAgP,MAAA,CAAO,CAAC;UAAA,CAAe,CAAC,mBAAAU,kDAAA;YAAA,OAAxB1P,GAAA,CAAAiP,OAAA,CAAQ,CAAC;UAAA,CAAc,CAAC;QAAA;MAAA;MAAAxP,MAAA;QAAA8O,YAAA;MAAA;MAAAtI,QAAA,GADtBO,gEAAE,CACgT,CACnY;QACIoJ,OAAO,EAAErI,6DAAiB;QAC1BsI,WAAW,EAAEnJ,yDAAU,CAAC,MAAML,wBAAwB,CAAC;QACvDyJ,KAAK,EAAE;MACX,CAAC,CACJ;IAAA;EACT;EAAC,OA5BKzJ,wBAAwB;AAAA;AA6B9B;EAAA,QAAAhH,SAAA,oBAAAA,SAAA;AAAA;AAkBoB,IAEdiH,kBAAkB;EAAxB,MAAMA,kBAAkB,CAAC;IACrBgI,UAAU,GAAG/R,qDAAM,CAACkK,qDAAU,CAAC;IAC/B1B,SAAS,GAAG3F,oDAAK,CAAC,KAAK,CAAC;IACxB2Q,kBAAkBA,CAAA,EAAG;MACjB,IAAI,CAAChL,SAAS,CAAC,CAAC,IAAI,IAAI,CAACuJ,UAAU,CAACK,aAAa,CAACqB,KAAK,GAAG,CAAC;IAC/D;IACA,OAAO/Q,IAAI,YAAAgR,2BAAAd,iBAAA;MAAA,YAAAA,iBAAA,IAAwF7I,kBAAkB;IAAA;IACrH,OAAO8I,IAAI,kBApC8E5I,+DAAE;MAAA8I,IAAA,EAoCJhJ,kBAAkB;MAAA9G,SAAA;MAAAC,MAAA;QAAAsF,SAAA;MAAA;IAAA;EAC7G;EAAC,OARKuB,kBAAkB;AAAA;AASxB;EAAA,QAAAjH,SAAA,oBAAAA,SAAA;AAAA;AAOA,IAAI6Q,mBAAmB,gBACtB,UAAUA,mBAAmB,EAAE;EAC5BA,mBAAmB,CAAC,IAAI,CAAC,GAAG,IAAI;EAChCA,mBAAmB,CAAC,MAAM,CAAC,GAAG,MAAM;EACpCA,mBAAmB,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAAC,OAHlCA,mBAAmB;AAI9B,CAAC,CAAEA,mBAAmB,IAA2B,CAAC,CAAE,CAL7B;AAAC,IAOlBC,4BAA4B;EAAlC,MAAMA,4BAA4B,CAAC;IAC/BC,QAAQ,GAAGF,mBAAmB;IAC9BjL,kBAAkB,GAAG7F,oDAAK,CAAC,CAAC;IAC5BiR,mBAAmB,GAAGxJ,qDAAM,CAAC;MAAEyJ,KAAK,EAAE;IAAe,CAAC,CAAC;IACvDC,wBAAwB,GAAG1J,qDAAM,CAAC;MAC9ByJ,KAAK,EAAE;IACX,CAAC,CAAC;IACFE,YAAYA,CAACtL,MAAM,EAAE;MACjB,IAAI,CAACqL,wBAAwB,CAACE,IAAI,CAACvL,MAAM,CAAC;IAC9C;IACAyF,YAAYA,CAACzF,MAAM,EAAE;MACjB,IAAI,CAACmL,mBAAmB,CAACI,IAAI,CAACvL,MAAM,CAAC;IACzC;IACA,OAAOjG,IAAI,YAAAyR,qCAAAvB,iBAAA;MAAA,YAAAA,iBAAA,IAAwFgB,4BAA4B;IAAA;IAC/H,OAAO5Q,IAAI,kBAlE8EiH,+DAAE;MAAA8I,IAAA,EAkEJa,4BAA4B;MAAA3Q,SAAA;MAAAC,MAAA;QAAAwF,kBAAA;MAAA;MAAA2L,OAAA;QAAAP,mBAAA;QAAAE,wBAAA;MAAA;MAAA7Q,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAgR,sCAAA9Q,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAlE1ByG,4DAAE,YAmEjE,CAAC,YAC4C,CAAC;UApEiBA,wDAAE,mBAAAsK,2DAAA;YAAA,OAoE9C9Q,GAAA,CAAAwQ,YAAA,CAAAxQ,GAAA,CAAAoQ,QAAA,CAAAW,EAAwB,CAAC;UAAA,EAAC;UApEkBvK,4DAAE,cAqE9E,CAAC;UArE2EA,oDAAE,kBAqElE,CAAC;UArE+DA,0DAAE,CAqEvD,CAAC,CAC9B,CAAC;UAtEiFA,4DAAE,YAuEhB,CAAC;UAvEaA,wDAAE,mBAAAwK,2DAAA;YAAA,OAuE9ChR,GAAA,CAAAwQ,YAAA,CAAAxQ,GAAA,CAAAoQ,QAAA,CAAAa,MAA4B,CAAC;UAAA,EAAC;UAvEczK,4DAAE,cAwE9E,CAAC;UAxE2EA,oDAAE,YAwExE,CAAC;UAxEqEA,0DAAE,CAwE7D,CAAC,CACxB,CAAC;UAzEiFA,4DAAE,YA0ElB,CAAC;UA1EeA,wDAAE,mBAAA0K,2DAAA;YAAA,OA0E9ClR,GAAA,CAAAwQ,YAAA,CAAAxQ,GAAA,CAAAoQ,QAAA,CAAAe,IAA0B,CAAC;UAAA,EAAC;UA1EgB3K,4DAAE,cA2E9E,CAAC;UA3E2EA,oDAAE,oBA2EhE,CAAC;UA3E6DA,0DAAE,CA2ErD,CAAC,CAChC,CAAC;UA5EiFA,8DAAE,KAAA2D,4CAAA,kBAAF3D,oEAyFvF,CAAC;UAzFsFA,0DAAE,CA0FtF,CAAC;QAAA;QAAA,IAAAzG,EAAA;UA1FmFyG,uDAAE,GAyFzF,CAAC;UAzFsFA,wDAAE,CA6EzFxG,GAAA,CAAAiF,kBAAA,CAAmB,CAYnB,CAAC;QAAA;MAAA;MAAAmM,YAAA,GAEgoBzO,2DAAO,EAA2IgG,6DAAS;MAAA1H,MAAA;IAAA;EAClyB;EAAC,OAxCKkP,4BAA4B;AAAA;AAyClC;EAAA,QAAA9Q,SAAA,oBAAAA,SAAA;AAAA;AA4Bc,IAERgS,sBAAsB;EAA5B,MAAMA,sBAAsB,CAAC;IACzBC,eAAe,GAAGzK,qDAAM,CAAC;MAAEyJ,KAAK,EAAE;IAAW,CAAC,CAAC;IAC/CvE,eAAe,GAAG3M,oDAAK,CAAC,EAAE,CAAC;IAC3BmS,gBAAgB,GAAGrI,wEAAY,CAAC,IAAI,CAAC6C,eAAe,CAAC;IACrDyF,SAAS,GAAG,IAAIjU,uDAAW,CAAC,EAAE,CAAC;IAC/BkU,OAAO,GAAG,IAAI,CAACD,SAAS,CAAC/N,YAAY,CAAC3B,IAAI,CAAC2F,+CAAS,CAAC,EAAE,CAAC,CAAC;IACzDiK,eAAe,GAAGvN,mDAAa,CAAC,CAAC,IAAI,CAACoN,gBAAgB,EAAE,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC3P,IAAI,CAACC,yCAAG,CAAC,CAAC,CAAC4P,MAAM,EAAEC,YAAY,CAAC,KAAK;MACxG,IAAI,OAAOA,YAAY,KAAK,QAAQ,EAChCA,YAAY,GAAG,EAAE;MACrBA,YAAY,GAAGA,YAAY,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;MAC9C,MAAMC,OAAO,GAAGF,YAAY,EACtBG,KAAK,CAAC,EAAE,CAAC,CACVhQ,GAAG,CAAEiQ,CAAC,IAAK,QAAQA,CAAC,GAAG,CAAC,CACxBC,IAAI,CAAC,EAAE,CAAC;MACb,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAC,GAAGL,OAAO,EAAE,EAAE,IAAI,CAAC;MAC5C;MACA,OAAOH,MAAM,CAAC7J,MAAM,CAAEsK,KAAK,IAAKA,KAAK,CAACjH,IAAI,CAACkH,KAAK,CAACH,KAAK,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IACHhH,QAAQA,CAACkH,KAAK,EAAE;MACZ,IAAI,CAACd,eAAe,CAACb,IAAI,CAAC2B,KAAK,EAAEE,SAAS,CAAC;IAC/C;IACA,OAAOrT,IAAI,YAAAsT,+BAAApD,iBAAA;MAAA,YAAAA,iBAAA,IAAwFkC,sBAAsB;IAAA;IACzH,OAAO9R,IAAI,kBAjJ8EiH,+DAAE;MAAA8I,IAAA,EAiJJ+B,sBAAsB;MAAA7R,SAAA;MAAAC,MAAA;QAAAsM,eAAA;MAAA;MAAA6E,OAAA;QAAAU,eAAA;MAAA;MAAA5R,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA2S,gCAAAzS,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAjJpByG,4DAAE,YAkJ1D,CAAC,uBACgB,CAAC,eACrC,CAAC;UApJ0EA,oDAAE,YAoJvE,CAAC;UApJoEA,0DAAE,CAoJ3D,CAAC;UApJwDA,uDAAE,cA0JtF,CAAC;UA1JmFA,0DAAE,CA2JzE,CAAC;UA3JsEA,iEAAE,IAAAiF,6CAAA,qBA4JzC,CAAC;UA5JsCjF,oDAAE;UAAFA,0DAAE,CAuKtF,CAAC;QAAA;QAAA,IAAAzG,EAAA;UAAA,IAAAwN,OAAA;UAvKmF/G,uDAAE,EAwJ7D,CAAC;UAxJ0DA,wDAAE,gBAAAxG,GAAA,CAAAwR,SAwJ7D,CAAC,kBACR,CAAC;UAzJiEhL,uDAAE,CAsKzF,CAAC;UAtKsFA,2DAAE,EAAA+G,OAAA,GAAF/G,yDAAE,OAAAxG,GAAA,CAAA0R,eAAA,aAAAnE,OAsKzF,CAAC;QAAA;MAAA;MAAA6D,YAAA,GAEulBzQ,sEAAY,EAA4LG,8DAAQ,EAAwVqI,4DAAO,EAA4EC,gEAAW,EAAqJT,6DAAS,EAAwP/H,kEAAQ,EAAqDX,+DAAmB,EAA+BS,gEAAuB,EAAyPA,2DAAkB,EAAsFA,gEAAuB,EAAuJoC,sDAAS;MAAA7B,MAAA;IAAA;EACxxE;EAAC,OA9CKoQ,sBAAsB;AAAA;AA+C5B;EAAA,QAAAhS,SAAA,oBAAAA,SAAA;AAAA;AAmCc,IAERuT,gBAAgB;EAAtB,MAAMA,gBAAgB,CAAC;IACnBC,6BAA6B,GAAGzT,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IAChDsO,eAAe,GAAG3M,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IAClCwH,kBAAkB,GAAG7F,oDAAK,CAAC,CAAC;IAC5BmG,cAAc,GAAGnG,oDAAK,CAAC,MAAM,MAAM,CAAE,CAAC,CAAC;IACvC4F,eAAe,GAAG5F,oDAAK,CAAC,CAAC;IACzB0T,gBAAgB,GAAG1T,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IACnCsV,yBAAyB,GAAG3T,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IAC5CuV,UAAU,GAAG3N,qDAAM,CAAC,KAAK,CAAC;IAC1B4N,gBAAgB,GAAG5N,qDAAM,CAAC,KAAK,CAAC;IAChC6N,cAAcA,CAAA,EAAG;MACb,IAAI,CAACF,UAAU,CAACjN,MAAM,CAAEoN,IAAI,IAAK,CAACA,IAAI,CAAC;IAC3C;IACAC,mBAAmBA,CAAA,EAAG;MAClB,IAAI,CAACH,gBAAgB,CAAClN,MAAM,CAAEoN,IAAI,IAAK,CAACA,IAAI,CAAC;IACjD;IACA/G,iBAAiBA,CAAClH,MAAM,EAAE;MACtB,IAAI,CAACmO,UAAU,CAAC,CAAC;MACjB,IAAI,CAACN,yBAAyB,CAAC,CAAC,CAAC7N,MAAM,EAAE,IAAI,CAAC2N,6BAA6B,CAAC,CAAC,CAAC;IAClF;IACAlI,YAAYA,CAACzF,MAAM,EAAE;MACjB,IAAI,CAACmO,UAAU,CAAC,CAAC;MACjB,IAAI,CAAC9N,cAAc,CAAC,CAAC,CAACL,MAAM,CAAC;IACjC;IACAgG,QAAQA,CAACkH,KAAK,EAAE;MACZ,IAAI,CAACiB,UAAU,CAAC,CAAC;MACjB3L,oDAAc,CAAC,IAAI,CAACoL,gBAAgB,CAAC,CAAC,CAACV,KAAK,EAAE,IAAI,CAACS,6BAA6B,CAAC,CAAC,CAAC,CAAC;IACxF;IACAQ,UAAUA,CAAA,EAAG;MACT,IAAI,CAACL,UAAU,CAACM,GAAG,CAAC,KAAK,CAAC;MAC1B,IAAI,CAACL,gBAAgB,CAACK,GAAG,CAAC,KAAK,CAAC;IACpC;IACA,OAAOrU,IAAI,YAAAsU,yBAAApE,iBAAA;MAAA,YAAAA,iBAAA,IAAwFyD,gBAAgB;IAAA;IACnH,OAAOrT,IAAI,kBAhP8EiH,+DAAE;MAAA8I,IAAA,EAgPJsD,gBAAgB;MAAApT,SAAA;MAAAC,MAAA;QAAAoT,6BAAA;QAAA9G,eAAA;QAAA9G,kBAAA;QAAAM,cAAA;QAAAP,eAAA;QAAA8N,gBAAA;QAAAC,yBAAA;MAAA;MAAArT,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA2T,0BAAAzT,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAA,MAAAqK,GAAA,GAhPd5D,8DAAE;UAAFA,4DAAE,YAiPrD,CAAC,eAOrC,CAAC;UAxPsFA,wDAAE,mBAAAiN,+CAAA;YAAFjN,2DAAE,CAAA4D,GAAA;YAAA,OAAF5D,yDAAE,CAuP9ExG,GAAA,CAAAkT,cAAA,CAAe,CAAC;UAAA,EAAC;UAvP2D1M,4DAAE,aAyP3D,CAAC;UAzPwDA,oDAAE,SAyPxD,CAAC;UAzPqDA,0DAAE,CAyPjD,CAAC,CACpC,CAAC;UA1PiFA,4DAAE,eAkQzF,CAAC;UAlQsFA,wDAAE,mBAAAkN,+CAAA;YAAFlN,2DAAE,CAAA4D,GAAA;YAAA,OAAF5D,yDAAE,CAiQ9ExG,GAAA,CAAAoT,mBAAA,CAAoB,CAAC;UAAA,EAAC;UAjQsD5M,4DAAE,aAmQ3D,CAAC;UAnQwDA,oDAAE,oBAmQ7C,CAAC;UAnQ0CA,0DAAE,CAmQtC,CAAC,CAC/C,CAAC,CACH,CAAC;UArQmFA,wDAAE,IAAAkF,uCAAA,wBAgR3F,CAAC;UAhRwFlF,wDAAE,iCAAAmN,qEAAA;YAAFnN,2DAAE,CAAA4D,GAAA;YAAA,OAAF5D,yDAAE,CA0QlExG,GAAA,CAAAgT,UAAA,CAAAM,GAAA,CAAe,KAAK,CAAC;UAAA,EAAC;UA1Q0C9M,wDAAE,KAAAwF,wCAAA,wBAiS3F,CAAC;UAjSwFxF,wDAAE,iCAAAoN,sEAAA;YAAFpN,2DAAE,CAAA4D,GAAA;YAAA,OAAF5D,yDAAE,CA0RlExG,GAAA,CAAAiT,gBAAA,CAAAK,GAAA,CAAqB,KAAK,CAAC;UAAA,EAAC;QAAA;QAAA,IAAAvT,EAAA;UAAA,MAAA8T,kBAAA,GA1RoCrN,yDAAE;UAAA,MAAAsN,wBAAA,GAAFtN,yDAAE;UAAFA,uDAAE,EA2Q7C,CAAC;UA3Q0CA,wDAAE,8BAAAqN,kBA2Q7C,CAAC,4BAAA7T,GAAA,CAAAgT,UAAA,EACN,CAAC,uCACF,CAAC,iCACP,CAAC,uEACqC,CAAC;UA/QgBxM,uDAAE,CA2RvC,CAAC;UA3RoCA,wDAAE,8BAAAsN,wBA2RvC,CAAC,4BAAA9T,GAAA,CAAAiT,gBAAA,EACN,CAAC,uCACR,CAAC,kCACN,CAAC,iCACF,CAAC,uEACqC,CAAC;QAAA;MAAA;MAAA7B,YAAA,GAQqjBxI,iEAAa,EAA+FD,6DAAS,EAAuPG,+DAAa,EAA+B5I,qEAAsB,EAA4+BA,kEAAmB,EAAuIiQ,4BAA4B,EAAkJkB,sBAAsB;MAAApQ,MAAA;IAAA;EAC13E;EAAC,OA1FK2R,gBAAgB;AAAA;AA2FtB;EAAA,QAAAvT,SAAA,oBAAAA,SAAA;AAAA;AAiEc,IAER4U,oBAAoB;EAA1B,MAAMA,oBAAoB,CAAC;IACvBC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC3BC,kBAAkBA,CAAA,EAAG;MACjB,IAAI,CAACF,eAAe,CAACG,KAAK,CAAC,CAAC;IAChC;IACAC,oBAAoBA,CAAA,EAAG;MACnB,OAAO3M,wCAAE,CAAC4M,KAAK,CAAC3M,IAAI,CAAC,IAAI,CAACsM,eAAe,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC;IACxD;IACAC,oBAAoBA,CAACC,YAAY,EAAE;MAC/B,IAAI,CAACR,eAAe,CAACZ,GAAG,CAACoB,YAAY,CAACC,QAAQ,EAAED,YAAY,CAAC;IACjE;IACAE,sBAAsBA,CAACC,SAAS,EAAE;MAC9B,OAAOjN,0CAAI,CAAC,IAAI,CAACsM,eAAe,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC1S,IAAI,CAAC+F,yCAAG,CAAE6M,YAAY,IAAKA,YAAY,CAACI,QAAQ,CAAC,WAAW,EAAED,SAAS,CAACE,OAAO,CAACL,YAAY,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxJ;IACAC,0BAA0BA,CAACJ,SAAS,EAAE3P,MAAM,EAAE/C,KAAK,EAAE;MACjD,OAAOwF,wCAAE,CAAC4M,KAAK,CAAC3M,IAAI,CAAC,IAAI,CAACsM,eAAe,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC1S,IAAI,CAACC,yCAAG,CAAEmT,aAAa,IAAKA,aAAa,CAACC,IAAI,CAAET,YAAY,IAAKG,SAAS,CAACE,OAAO,CAACL,YAAY,CAACM,QAAQ,CAAC,KAAK7S,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE2F,4CAAM,CAAE4M,YAAY,IAAK,CAAC,CAACA,YAAY,CAAC,EAAE3S,yCAAG,CAAE2S,YAAY,KAAM;QAC7OA,YAAY;QACZU,eAAe,EAAEP,SAAS,CAAC1Y,MAAM,GAAG,CAAC;QACrCkZ,YAAY,EAAER,SAAS,CAACE,OAAO,CAACL,YAAY,CAACM,QAAQ,CAAC;QACtDM,QAAQ,EAAGnT,KAAK,IAAK+C,MAAM,KAAKgL,mBAAmB,CAACa,EAAE,GAAG5O,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG;MACjF,CAAC,CAAC,CAAC,EAAEJ,yCAAG,CAAC,CAAC;QAAE2S,YAAY;QAAEU,eAAe;QAAEC,YAAY;QAAEC;MAAS,CAAC,MAAM;QACrEZ,YAAY;QACZW,YAAY;QACZC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAACH,QAAQ,CAACD,YAAY,CAAC,EAAED,eAAe,CAAC;MAC3E,CAAC,CAAC,CAAC,EAAEtN,4CAAM,CAAC,CAAC;QAAEuN,YAAY;QAAEC;MAAS,CAAC,KAAKD,YAAY,KAAKC,QAAQ,CAAC,EAAEzN,yCAAG,CAAC,CAAC;QAAE6M,YAAY;QAAEY;MAAS,CAAC,KAAK;QACxGT,SAAS,CAACa,IAAI,CAAChB,YAAY,CAACM,QAAQ,EAAEM,QAAQ,CAAC;QAC/CZ,YAAY,CAACI,QAAQ,CAAC,WAAW,EAAEQ,QAAQ,CAAC;QAC5CZ,YAAY,CAACI,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC;MAC5C,CAAC,CAAC,EAAE/M,oDAAc,CAAC,KAAK,CAAC,CAAC;IAC9B;IACA4N,oBAAoBA,CAACd,SAAS,EAAE1S,KAAK,EAAEkS,KAAK,GAAG,KAAK,EAAE;MAClD,OAAO1M,wCAAE,CAAC4M,KAAK,CAAC3M,IAAI,CAAC,IAAI,CAACsM,eAAe,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC1S,IAAI,CAACgG,4CAAM,CAAEoN,aAAa,IAAKb,KAAK,IAAIa,aAAa,CAAC/Y,MAAM,KAAK,CAAC,CAAC,EAAE4F,yCAAG,CAAEmT,aAAa,IAAKA,aAAa,CAACC,IAAI,CAAET,YAAY,IAAKG,SAAS,CAACE,OAAO,CAACL,YAAY,CAACM,QAAQ,CAAC,KAAK7S,KAAK,GAAG,CAAC,CAAC,CAAC,EAAEJ,yCAAG,CAAE2S,YAAY,IAAK,IAAI,CAACR,eAAe,CAAC0B,MAAM,CAAClB,YAAY,EAAEC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE9M,yCAAG,CAAEgO,UAAU,IAAKA,UAAU,IAAIhB,SAAS,CAACiB,MAAM,CAAC3T,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE4F,oDAAc,CAAC,KAAK,CAAC,CAAC;IAC5Z;IACA,OAAO9I,IAAI,YAAA8W,6BAAA5G,iBAAA;MAAA,YAAAA,iBAAA,IAAwF8E,oBAAoB;IAAA;IACvH,OAAO+B,KAAK,kBA/Y6ExP,gEAAE;MAAA0P,KAAA,EA+YYjC,oBAAoB;MAAAjV,OAAA,EAApBiV,oBAAoB,CAAAhV,IAAA;MAAAkX,UAAA,EAAc;IAAM;EACnJ;EAAC,OAnCKlC,oBAAoB;AAAA;AAoC1B;EAAA,QAAA5U,SAAA,oBAAAA,SAAA;AAAA;AAOA,MAAM+W,SAAS,GAAGA,CAAA,KAAMb,IAAI,CAACc,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;AAAC,IAC1DC,eAAe;EAArB,MAAMA,eAAe,CAAC;IAClBla,WAAW,GAAGC,qDAAM,CAACgF,uDAAW,CAAC;IACjCkV,oBAAoB,GAAGla,qDAAM,CAAC0X,oBAAoB,CAAC;IACnDC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC3BU,SAAS;IACT7S,SAAS,GAAG,IAAI,CAAC1F,WAAW,CAACe,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC;IACAqZ,YAAYA,CAAC7B,SAAS,EAAE;MACpB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC9B;IACA8B,UAAUA,CAAA,EAAG;MACT,OAAO,IAAI3O,4CAAU,CAAE4O,QAAQ,IAAK;QAChC3O,mDAAa,CAAC,IAAI,CAACwO,oBAAoB,CAACnC,oBAAoB,CAAC,CAAC,CAACxS,IAAI,CAACC,yCAAG,CAAEmT,aAAa,IAAKA,aAAa,CAACnT,GAAG,CAAC,CAAC;UAAE4S;QAAS,CAAC,MAAM;UAC5HkC,OAAO,EAAElC,QAAQ,CAAC3P,eAAe,CAAC,CAAC;UACnCH,SAAS,EAAE8P,QAAQ,CAAC9P,SAAS,CAAC,CAAC;UAC/BC,qBAAqB,EAAE6P,QAAQ,CAAC7P,qBAAqB;UACrDM,WAAW,EAAEuP,QAAQ,CAACvP,WAAW,CAAC,CAAC;UACnC0R,SAAS,EAAEnC,QAAQ,CAAC3S,SAAS,CAAC,CAAC,CAAC3D,GAAG,CAACsW,QAAQ,CAAC3P,eAAe,CAAC,CAAC,CAAC,EACzDhH;QACV,CAAC,CAAC,CAAC,CAAC,EAAE+D,yCAAG,CAAE4P,MAAM,IAAKA,MAAM,CAACoF,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACnS,SAAS,GAAGoS,CAAC,CAACpS,SAAS,CAAC,CAAC,CAAC,CAAC,CAACqS,IAAI,CAAEvF,MAAM,IAAK;UACvFiF,QAAQ,CAAC3Y,IAAI,CAAC0T,MAAM,CAAC;UACrBiF,QAAQ,CAACO,QAAQ,CAAC,CAAC;QACvB,CAAC,CAAC;MACN,CAAC,CAAC;IACN;IACAC,mCAAmCA,CAACC,cAAc,EAAExE,6BAA6B,EAAE;MAC/E,OAAOlL,wCAAE,CAAC;QACNkP,OAAO,EAAET,SAAS,CAAC,CAAC;QACpBvR,SAAS,EAAEgO,6BAA6B;QACxC/N,qBAAqB,EAAEuS,cAAc,CAAClM,IAAI;QAC1CmH,SAAS,EAAE+E,cAAc;QACzB;QACA;QACAP,SAAS,EAAE,EAAE;QACb/R,SAAS,EAAE;MACf,CAAC,CAAC;IACN;IACAuS,iBAAiBA,CAACC,gBAAgB,EAAE;MAChC,OAAOrP,8CAAQ,CAAC,CACZ,IAAI,CAACsP,sBAAsB,CAACD,gBAAgB,CAAC,EAC7C,IAAI,CAACE,eAAe,CAACF,gBAAgB,CAAC,EACtC,IAAI,CAACd,oBAAoB,CAAC7B,sBAAsB,CAAC,IAAI,CAACC,SAAS,CAAC,CACnE,CAAC,CAAC/S,IAAI,CAACC,yCAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;IAC9B;IACAyV,sBAAsBA,CAAC;MAAEX,OAAO;MAAEC;IAAW,CAAC,EAAE;MAC5C,OAAOnP,wCAAE,CAAC,IAAI,CAACrL,WAAW,CAACN,OAAO,CAAC8a,SAAS,EAAE,EAAE,CAAC,CAAC,CAAChV,IAAI,CAAC+F,yCAAG,CAAE6P,WAAW,IAAK,IAAI,CAAC1V,SAAS,CAAC2V,UAAU,CAACd,OAAO,EAAEa,WAAW,CAAC,CAAC,CAAC;IAClI;IACAD,eAAeA,CAAC;MAAEnF,SAAS;MAAEuE,OAAO;MAAE9R,SAAS;MAAEK,WAAW;MAAEP,SAAS,EAAE1C;IAAO,CAAC,EAAE;MAC/E,OAAOwF,wCAAE,CAACkP,OAAO,CAAC,CAAC/U,IAAI,CAACC,yCAAG,CAAE6V,WAAW,IAAK;QACzC,MAAMlD,YAAY,GAAG,IAAI,CAACG,SAAS,CAACgD,eAAe,CAACvF,SAAS,EAAE;UAC3DnQ;QACJ,CAAC,CAAC;QACFuS,YAAY,CAACI,QAAQ,CAAC,WAAW,EAAE3S,KAAK,CAAC;QACzCuS,YAAY,CAACI,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC9S,SAAS,CAAC;QAClD0S,YAAY,CAACI,QAAQ,CAAC,iBAAiB,EAAE8C,WAAW,CAAC;QACrDlD,YAAY,CAACI,QAAQ,CAAC,WAAW,EAAE/P,SAAS,CAAC;QAC7CK,WAAW,IAAIsP,YAAY,CAACC,QAAQ,CAACpP,cAAc,GAAGH,WAAW,CAAC;QAClE,IAAI,CAACqR,oBAAoB,CAAChC,oBAAoB,CAACC,YAAY,CAAC;QAC5D,OAAOA,YAAY;MACvB,CAAC,CAAC,CAAC;IACP;IACAoD,2BAA2BA,CAAC5S,MAAM,EAAE/C,KAAK,EAAE6C,eAAe,EAAE;MACxD,OAAOmD,yCAAG,CAAC,MAAMjD,MAAM,KAAKgL,mBAAmB,CAACe,MAAM,EAAE,IAAI,CAAC0E,oBAAoB,CAACxT,KAAK,EAAE6C,eAAe,CAAC,EAAE,IAAI,CAACyR,oBAAoB,CAACxB,0BAA0B,CAAC,IAAI,CAACJ,SAAS,EAAE3P,MAAM,EAAE/C,KAAK,CAAC,CAAC,CAACL,IAAI,CAAC0B,+CAAS,CAAC,MAAM,IAAI,CAACiT,oBAAoB,CAAC7B,sBAAsB,CAAC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;IAC3R;IACAI,0BAA0BA,CAAC8C,aAAa,EAAE1C,YAAY,EAAE;MACpD,OAAO1N,wCAAE,CAAC,IAAI,CAACkN,SAAS,CAACxW,GAAG,CAAC0Z,aAAa,CAAC,CAAC,CAACjW,IAAI,CAACgG,4CAAM,CAAEkQ,OAAO,IAAK,CAAC,CAACA,OAAO,CAAC,EAAEnQ,yCAAG,CAAEmQ,OAAO,IAAK;QAC/F,IAAI,CAACnD,SAAS,CAACa,IAAI,CAACsC,OAAO,EAAE3C,YAAY,CAAC;MAC9C,CAAC,CAAC,EAAE7R,+CAAS,CAAC,MAAM,IAAI,CAACiT,oBAAoB,CAAC7B,sBAAsB,CAAC,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE9M,oDAAc,CAAC,KAAK,CAAC,CAAC;IACjH;IACA4N,oBAAoBA,CAACxT,KAAK,EAAE6C,eAAe,EAAEqP,KAAK,GAAG,KAAK,EAAE;MACxD,OAAOlQ,mDAAa,CAAC,CACjB,IAAI,CAACsS,oBAAoB,CAACd,oBAAoB,CAAC,IAAI,CAACd,SAAS,EAAE1S,KAAK,EAAEkS,KAAK,CAAC,EAC5E1M,wCAAE,CAAC,IAAI,CAAC3F,SAAS,CAACiW,aAAa,CAACjT,eAAe,CAAC,CAAC,CACpD,CAAC;IACN;IACAkT,WAAWA,CAAA,EAAG;MACV,OAAO,IAAI,CAACzB,oBAAoB,CAACnC,oBAAoB,CAAC,CAAC,CAACxS,IAAI,CAACgG,4CAAM,CAAEoN,aAAa,IAAKA,aAAa,CAAC/Y,MAAM,GAAG,CAAC,CAAC,EAAE4F,yCAAG,CAAEmT,aAAa,IAAKA,aAAa,CAAC6B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACrC,QAAQ,CAAC9P,SAAS,CAAC,CAAC,GAAGoS,CAAC,CAACtC,QAAQ,CAAC9P,SAAS,CAAC,CAAC,CAAC,CAAC,EAAEuD,8CAAQ,CAAE8M,aAAa,IAAKhN,8CAAQ,CAACqM,KAAK,CAAC3M,IAAI,CAACsN,aAAa,CAACV,MAAM,CAAC,CAAC,CAAC,CAACzS,GAAG,CAAE2S,YAAY,IAAK,IAAI,CAACiB,oBAAoB,CAACjB,YAAY,CAACC,QAAQ,CAAC9P,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE6P,YAAY,CAACC,QAAQ,CAAC3P,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAExB,+CAAS,CAAC,MAAM,IAAI,CAACiT,oBAAoB,CAAC7B,sBAAsB,CAAC,IAAI,CAACC,SAAS,CAAC,CAAC,EAAEhN,yCAAG,CAAC,MAAM;QACpgB,IAAI,CAAC4O,oBAAoB,CAACrC,kBAAkB,CAAC,CAAC;QAC9C,IAAI,CAACS,SAAS,CAACR,KAAK,CAAC,CAAC;MAC1B,CAAC,CAAC,EAAEtM,oDAAc,CAAC,KAAK,CAAC,CAAC;IAC9B;IACA,OAAO9I,IAAI,YAAAkZ,wBAAAhJ,iBAAA;MAAA,YAAAA,iBAAA,IAAwFqH,eAAe;IAAA;IAClH,OAAOR,KAAK,kBA3e6ExP,gEAAE;MAAA0P,KAAA,EA2eYM,eAAe;MAAAxX,OAAA,EAAfwX,eAAe,CAAAvX,IAAA;MAAAkX,UAAA,EAAc;IAAM;EAC9I;EAAC,OAnFKK,eAAe;AAAA;AAoFrB;EAAA,QAAAnX,SAAA,oBAAAA,SAAA;AAAA;AAKc,IAER+Y,cAAc;EAApB,MAAMA,cAAc,CAAC;IACjBC,mBAAmB,GAAG9b,qDAAM,CAAC+b,mBAAmB,CAAC;IACjDC,eAAe,GAAGhc,qDAAM,CAACia,eAAe,CAAC;IACzC;IACAgC,gBAAgB,GAAG,IAAI5b,iDAAe,CAAC,IAAI,CAAC;IAC5C6b,oBAAoB,GAAGtU,mDAAa,CAAC;MACjCqU,gBAAgB,EAAE,IAAI,CAACA,gBAAgB,CAACrb,YAAY,CAAC,CAAC;MACtD4O,eAAe,EAAE,IAAI,CAACsM,mBAAmB,CAAC9G;IAC9C,CAAC,CAAC,CAACzP,IAAI,CAACgG,4CAAM,CAAC,CAAC;MAAE0Q;IAAiB,CAAC,KAAKA,gBAAgB,KAAK,IAAI,CAAC,EAAEnQ,0DAAoB,CAAC,CAAC;MAAEmQ,gBAAgB,EAAEE;IAAS,CAAC,EAAE;MAAEF,gBAAgB,EAAEG;IAAQ,CAAC,KAAKD,QAAQ,CAACvW,KAAK,KAAKwW,OAAO,CAACxW,KAAK,IACzLuW,QAAQ,CAACE,gBAAgB,KAAKD,OAAO,CAACC,gBAAgB,IACnDF,QAAQ,CAACE,gBAAgB,CAACvE,KAAK,CAAC,CAAC,EAAE,KAAK,IACzC,IAAI,CAAC,EAAEtS,yCAAG,CAAC,CAAC;MAAEyW,gBAAgB;MAAEzM;IAAgB,CAAC,KAAK;MACxD,MAAM;QAAE5J,KAAK;QAAEyW,gBAAgB;QAAE3T,kBAAkB;QAAEM,cAAc;QAAEP;MAAiB,CAAC,GAAGwT,gBAAgB;MAC1G;MACA,MAAM9D,YAAY,GAAGkE,gBAAgB,CAACf,eAAe,CAACjF,gBAAgB,CAAC;MACvE8B,YAAY,CAACI,QAAQ,CAAC,+BAA+B,EAAE3S,KAAK,GAAG,CAAC,CAAC;MACjEuS,YAAY,CAACI,QAAQ,CAAC,iBAAiB,EAAE/I,eAAe,CAAC;MACzD2I,YAAY,CAACI,QAAQ,CAAC,oBAAoB,EAAE7P,kBAAkB,CAAC;MAC/DyP,YAAY,CAACI,QAAQ,CAAC,gBAAgB,EAAEvP,cAAc,CAAC;MACvDmP,YAAY,CAACI,QAAQ,CAAC,iBAAiB,EAAE9P,eAAe,CAAC;MACzD0P,YAAY,CAACI,QAAQ,CAAC,kBAAkB,EAAE,IAAI,CAAC5J,QAAQ,CAAC1F,IAAI,CAAC,IAAI,CAAC,CAAC;MACnEkP,YAAY,CAACI,QAAQ,CAAC,2BAA2B,EAAE,IAAI,CAAC+D,kBAAkB,CAACrT,IAAI,CAAC,IAAI,CAAC,CAAC;MACtF,OAAOkP,YAAY;IACvB,CAAC,CAAC,CAAC;IACHxJ,QAAQA,CAACkH,KAAK,EAAEjQ,KAAK,EAAE;MACnB,OAAO,IAAI,CAACoW,eAAe,CACtBnB,mCAAmC,CAAChF,KAAK,EAAEjQ,KAAK,CAAC,CACjDL,IAAI,CAAC0B,+CAAS,CAAE4O,KAAK,IAAK,IAAI,CAACmG,eAAe,CAACjB,iBAAiB,CAAClF,KAAK,CAAC,CAAC,CAAC;IAClF;IACAyG,kBAAkBA,CAAC3T,MAAM,EAAE/C,KAAK,EAAE6C,eAAe,EAAE;MAC/C,OAAOiD,mDAAa,CAAC,IAAI,CAACsQ,eAAe,CAACT,2BAA2B,CAAC5S,MAAM,EAAE/C,KAAK,EAAE6C,eAAe,CAAC,CAAC;IAC1G;IACA,OAAO/F,IAAI,YAAA6Z,uBAAA3J,iBAAA;MAAA,YAAAA,iBAAA,IAAwFiJ,cAAc;IAAA;IACjH,OAAOpC,KAAK,kBArhB6ExP,gEAAE;MAAA0P,KAAA,EAqhBYkC,cAAc;MAAApZ,OAAA,EAAdoZ,cAAc,CAAAnZ,IAAA;MAAAkX,UAAA,EAAc;IAAM;EAC7I;EAAC,OAlCKiC,cAAc;AAAA;AAmCpB;EAAA,QAAA/Y,SAAA,oBAAAA,SAAA;AAAA;AAKc,IAERkH,mBAAmB;EAAzB,MAAMA,mBAAmB,CAAC;IACtBwS,cAAc,GAAGxc,qDAAM,CAAC6b,cAAc,CAAC;IACvCQ,gBAAgB,GAAGrc,qDAAM,CAACyK,2DAAgB,CAAC;IAC3CjC,SAAS,GAAG3F,oDAAK,CAAC,CAAC;IACnB6F,kBAAkB,GAAG7F,oDAAK,CAAC,CAAC;IAC5BmG,cAAc,GAAGnG,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IACjCoV,6BAA6B,GAAGzT,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IAChDuH,eAAe,GAAG5F,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IAClCub,YAAYA,CAAA,EAAG;MACX,IAAI,CAACD,cAAc,CAACP,gBAAgB,CAACva,IAAI,CAAC;QACtC2a,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;QACvC3T,kBAAkB,EAAE,IAAI,CAACA,kBAAkB,CAAC,CAAC,IAAI,EAAE;QACnDM,cAAc,EAAE,IAAI,CAACA,cAAc,CAAC,CAAC;QACrCpD,KAAK,EAAE,IAAI,CAAC0Q,6BAA6B,CAAC,CAAC;QAC3C7N,eAAe,EAAE,IAAI,CAACA,eAAe,CAAC;MAC1C,CAAC,CAAC;IACN;IACAiU,WAAWA,CAAA,EAAG;MACVhS,qDAAM,CAAC,MAAM;QACT,IAAI,CAAClC,SAAS,CAAC,CAAC,IAAI,IAAI,CAACiU,YAAY,CAAC,CAAC;MAC3C,CAAC,CAAC;IACN;IACA,OAAO/Z,IAAI,YAAAia,4BAAA/J,iBAAA;MAAA,YAAAA,iBAAA,IAAwF5I,mBAAmB;IAAA;IACtH,OAAO6I,IAAI,kBArjB8E5I,+DAAE;MAAA8I,IAAA,EAqjBJ/I,mBAAmB;MAAA/G,SAAA;MAAA+P,YAAA,WAAA4J,iCAAApZ,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UArjBjByG,wDAAE,wBAAA4S,kDAAA;YAAA,OAqjBJpZ,GAAA,CAAAgZ,YAAA,CAAa,CAAC;UAAA,CAAI,CAAC;QAAA;MAAA;MAAAvZ,MAAA;QAAAsF,SAAA;QAAAE,kBAAA;QAAAM,cAAA;QAAAsN,6BAAA;QAAA7N,eAAA;MAAA;IAAA;EAC9G;EAAC,OAxBKuB,mBAAmB;AAAA;AAyBzB;EAAA,QAAAlH,SAAA,oBAAAA,SAAA;AAAA;AAQoB,IAEdga,uBAAuB;EAA7B,MAAMA,uBAAuB,CAAC;IAC1BC,OAAOA,CAACC,KAAK,EAAE;MACXA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtB,MAAM3P,IAAI,GAAG0P,KAAK,CAACE,aAAa,EAAEC,OAAO,CAAC,YAAY,CAAC;MACvDC,QAAQ,CAACC,WAAW,CAAC,YAAY,EAAE,KAAK,EAAE/P,IAAI,CAAC;IACnD;IACA,OAAO5K,IAAI,YAAA4a,gCAAA1K,iBAAA;MAAA,YAAAA,iBAAA,IAAwFkK,uBAAuB;IAAA;IAC1H,OAAOjK,IAAI,kBAxkB8E5I,+DAAE;MAAA8I,IAAA,EAwkBJ+J,uBAAuB;MAAA7Z,SAAA;MAAA+P,YAAA,WAAAuK,qCAAA/Z,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAxkBrByG,wDAAE,mBAAAuT,iDAAAlO,MAAA;YAAA,OAwkBJ7L,GAAA,CAAAsZ,OAAA,CAAAzN,MAAc,CAAC;UAAA,CAAO,CAAC;QAAA;MAAA;IAAA;EAClH;EAAC,OARKwN,uBAAuB;AAAA;AAS7B;EAAA,QAAAha,SAAA,oBAAAA,SAAA;AAAA;AAQoB,IAEd2a,oBAAoB;EAA1B,MAAMA,oBAAoB,CAAC;IACvBnV,SAAS,GAAGzF,oDAAK,CAAC,CAAC,CAAC;IACpB0F,qBAAqB,GAAG,sBAAsB;IAC9CC,SAAS,GAAG3F,oDAAK,CAAC,IAAI,CAAC;IACvB4C,SAAS,GAAG5C,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IAC5BuH,eAAe,GAAG5F,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IAClCwH,kBAAkB,GAAG7F,oDAAK,CAAC,CACvB;MAAE8F,MAAM,EAAE,IAAI;MAAE2E,IAAI,EAAE;IAAK,CAAC,EAC5B;MAAE3E,MAAM,EAAE,IAAI;MAAE2E,IAAI,EAAE;IAAK,CAAC,EAC5B;MAAE3E,MAAM,EAAE,IAAI;MAAE2E,IAAI,EAAE;IAAK,CAAC,EAC5B;MAAE3E,MAAM,EAAE,IAAI;MAAE2E,IAAI,EAAE;IAAK,CAAC,EAC5B;MAAE3E,MAAM,EAAE,IAAI;MAAE2E,IAAI,EAAE;IAAK,CAAC,EAC5B;MAAE3E,MAAM,EAAE,IAAI;MAAE2E,IAAI,EAAE;IAAK,CAAC,CAC/B,CAAC;IACFzE,WAAW,GAAGC,qDAAM,CAAC,IAAI,CAAC;IAC1BC,kBAAkB,GAAG,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACnDD,cAAcA,CAAC0U,cAAc,EAAE;MAC3B,IAAI,CAAC7U,WAAW,CAACkO,GAAG,CAAC2G,cAAc,CAAC;IACxC;IACA,OAAOhb,IAAI,YAAAib,6BAAA/K,iBAAA;MAAA,YAAAA,iBAAA,IAAwF6K,oBAAoB;IAAA;IACvH,OAAOza,IAAI,kBAxmB8EiH,+DAAE;MAAA8I,IAAA,EAwmBJ0K,oBAAoB;MAAAxa,SAAA;MAAAwG,SAAA;MAAAvG,MAAA;QAAAoF,SAAA;QAAAE,SAAA;QAAA/C,SAAA;QAAAgD,eAAA;QAAAC,kBAAA;MAAA;MAAAgB,QAAA,GAxmBlBO,qEAAE,EAwmBy1BhC,2DAAY;MAAA9E,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAua,8BAAAra,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAxmBv2ByG,iEAAE,IAAA+F,oCAAA,YA0mBhF,CAAC,IAAAK,oCAAA,YAKD,CAAC,IAAAE,oCAAA,YAKD,CAAC,IAAAE,oCAAA,YAKD,CAAC,IAAAE,oCAAA,YAKD,CAAC,IAAAE,oCAAA,YAKD,CAAC;UAnoB6E5G,wDAAE,IAAA6G,2CAAA,6BAAF7G,oEA0oBjC,CAAC;QAAA;QAAA,IAAAzG,EAAA;UAAA,IAAAua,OAAA;UA1oBgC9T,2DAAE,EAAA8T,OAAA,GAAAta,GAAA,CAAAoF,WAAA,QAymB/F,IAAI,OAAAkV,OAAA,KAAJ,IAAI,OAAAA,OAAA,KAAJ,IAAI,OAAAA,OAAA,KAAJ,IAAI,OAAAA,OAAA,KAAJ,IAAI,OAAAA,OAAA,KAAJ,IAAI,SA+BJ,CAAC;UAxoB4F9T,uDAAE,EA0oB1D,CAAC;UA1oBuDA,wDAAE,cAAAxG,GAAA,CAAAgC,SAAA,EA0oB1D,CAAC;QAAA;MAAA;MAAAoP,YAAA,GAcycnR,+DAAmB,EAA+BS,2DAAkB,EAAsFA,gEAAuB,EAAqIA,8DAAqB,EAA4HA,2DAAkB,EAA8I2F,wBAAwB,EAAwFC,kBAAkB,EAA+EC,mBAAmB,EAA4K8S,uBAAuB,EAA6DpQ,6DAAgB;MAAAhI,MAAA;IAAA;EAC1kD;EAAC,OArEK+Y,oBAAoB;AAAA;AAsE1B;EAAA,QAAA3a,SAAA,oBAAAA,SAAA;AAAA;AA0Dc,IAERkb,uBAAuB;EAA7B,MAAMA,uBAAuB,CAAC;IAC1B1V,SAAS,GAAGzF,oDAAK,CAAC,CAAC,CAAC;IACpB0F,qBAAqB,GAAG,yBAAyB;IACjDC,SAAS,GAAG3F,oDAAK,CAAC,IAAI,CAAC;IACvB4C,SAAS,GAAG5C,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IAC5BuH,eAAe,GAAG5F,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IAClCwH,kBAAkB,GAAG7F,oDAAK,CAAC,CACvB;MAAE8F,MAAM,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAgB,CAAC,EAC1C;MAAED,MAAM,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAiB,CAAC,EAC5C;MAAED,MAAM,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAgB,CAAC,EAC1C;MAAED,MAAM,EAAE,aAAa;MAAE2E,IAAI,EAAE;IAAK,CAAC,EACrC;MAAE3E,MAAM,EAAE,cAAc;MAAE2E,IAAI,EAAE;IAAK,CAAC,EACtC;MAAE3E,MAAM,EAAE,aAAa;MAAE2E,IAAI,EAAE;IAAK,CAAC,CACxC,CAAC;IACFzE,WAAW,GAAGC,qDAAM,CAAC,QAAQ,CAAC;IAC9BC,kBAAkB,GAAG,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACnDD,cAAcA,CAACL,MAAM,EAAE;MACnB,IAAI,CAACE,WAAW,CAACW,MAAM,CAAC,MAAMb,MAAM,CAAC;IACzC;IACA,OAAOjG,IAAI,YAAAub,gCAAArL,iBAAA;MAAA,YAAAA,iBAAA,IAAwFoL,uBAAuB;IAAA;IAC1H,OAAOhb,IAAI,kBA1uB8EiH,+DAAE;MAAA8I,IAAA,EA0uBJiL,uBAAuB;MAAA/a,SAAA;MAAAwG,SAAA;MAAAvG,MAAA;QAAAoF,SAAA;QAAAE,SAAA;QAAA/C,SAAA;QAAAgD,eAAA;QAAAC,kBAAA;MAAA;MAAAgB,QAAA,GA1uBrBO,qEAAE,EA0uB+1BhC,2DAAY;MAAA9E,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA4a,iCAAA1a,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UA1uB72ByG,qEAAE,KA2uBpD,CAAC;UA3uBiDA,uDAAE,UAwvBrF,CAAC;UAxvBkFA,mEAAE;QAAA;QAAA,IAAAzG,EAAA;UAAA,IAAAwN,OAAA;UAAF/G,wDAAE,cAAAxG,GAAA,CAAAgC,SAAA,EA2uBrD,CAAC;UA3uBkDwE,uDAAE,CAivB/D,CAAC;UAjvB4DA,wDAAE,YAAAxG,GAAA,CAAAoF,WAAA,EAivB/D,CAAC,kBAAAmI,OAAA,GAAAvN,GAAA,CAAAgC,SAAA,GAAA3D,GAAA,CAAA2B,GAAA,CAAAgF,eAAA,sBAAAuI,OAAA,CAAAvP,KACgC,CAAC,mBAAAgC,GAAA,CAAAsF,kBACtB,CAAC,cAAAtF,GAAA,CAAA+E,SAAA,EACb,CAAC,uBAAA/E,GAAA,CAAAiF,kBAAA,EACiB,CAAC,oBAAAjF,GAAA,CAAAgF,eAAA,EACP,CAAC,kCAAAhF,GAAA,CAAA6E,SAAA,EACO,CAAC;QAAA;MAAA;MAAAuM,YAAA,GAGgWnR,+DAAmB,EAA+BS,2DAAkB,EAAsFA,gEAAuB,EAAqIA,8DAAqB,EAA4HA,2DAAkB,EAA8I2F,wBAAwB,EAAwFC,kBAAkB,EAA+EC,mBAAmB,EAA4K8S,uBAAuB,EAA6DxW,oDAAO;MAAA5B,MAAA;IAAA;EACv+C;EAAC,OArCKsZ,uBAAuB;AAAA;AAsC7B;EAAA,QAAAlb,SAAA,oBAAAA,SAAA;AAAA;AA4BA,MAAMub,oBAAoB,GAAG,IAAI1T,yDAAc,CAAC,sBAAsB,CAAC;AAAC,IAClEoR,mBAAmB;EAAzB,MAAMA,mBAAmB,CAAC;IACtBC,eAAe,GAAGhc,qDAAM,CAACia,eAAe,CAAC;IACzCqE,uBAAuB,GAAG,IAAIje,iDAAe,CAACL,qDAAM,CAACqe,oBAAoB,EAAE;MAAEE,QAAQ,EAAE;IAAK,CAAC,CAAC,EAAED,uBAAuB,IACnH,EAAE,CAAC;IACPE,uBAAuB,GAAG,IAAIne,iDAAe,CAAC,CAC1C;MACIuO,IAAI,EAAE,WAAW;MACjBmH,SAAS,EAAEiI,uBAAuB;MAClCzV,qBAAqB,EAAE;IAC3B,CAAC,EACD;MACIqG,IAAI,EAAE,QAAQ;MACdmH,SAAS,EAAE0H,oBAAoB;MAC/BlV,qBAAqB,EAAE;IAC3B,CAAC,CACJ,CAAC;IACFyM,gBAAgB,GAAGpN,mDAAa,CAAC,CAC7B,IAAI,CAAC4W,uBAAuB,CAAC5d,YAAY,CAAC,CAAC,EAC3C,IAAI,CAAC0d,uBAAuB,CAAC1d,YAAY,CAAC,CAAC,CAC9C,CAAC,CAAC2E,IAAI,CAACC,yCAAG,CAAC,CAAC,CAACiZ,QAAQ,EAAEC,QAAQ,CAAC,KAAK,CAAC,GAAGD,QAAQ,EAAE,GAAGC,QAAQ,CAAC,CAAC,CAAC;IAClEC,YAAY,GAAG,IAAIte,iDAAe,CAAC,EAAE,CAAC;IACtCue,WAAW,GAAG,IAAI,CAACD,YAAY,CAAC/d,YAAY,CAAC,CAAC,CAAC2E,IAAI,CAACwG,2CAAK,CAAC,CAAC,CAAC,EAAEC,gDAAU,CAAEoJ,MAAM,IAAK,IAAI,CAACyJ,uBAAuB,CAACzJ,MAAM,CAAC,CAAC,EAAE5P,yCAAG,CAAC,CAAC,CAAC4P,MAAM,CAAC,KAAK,IAAI,CAAC0J,4BAA4B,CAAC1J,MAAM,CAAC,CAAC,EAAE5P,yCAAG,CAAE4P,MAAM,IAAK,IAAI,CAAC2J,gCAAgC,CAAC3J,MAAM,CAAC,CAAC,EAAE5P,yCAAG,CAAE4P,MAAM,IAAK,IAAI,CAAC4J,UAAU,CAAC5J,MAAM,CAAC,CAAC,EAAEnO,+CAAS,CAAEmO,MAAM,IAAK,IAAI,CAAC6J,oBAAoB,CAAC7J,MAAM,CAAC,CAAC,EAAE5P,yCAAG,CAAC,CAAC,CAAC4P,MAAM,EAAE5F,eAAe,CAAC,KAAK,IAAI,CAAC0P,kCAAkC,CAAC9J,MAAM,EAAE5F,eAAe,CAAC,CAAC,EAAEhK,yCAAG,CAAC,CAAC;MAAE4P,MAAM;MAAE+J;IAAmB,CAAC,KAAK,IAAI,CAACC,6BAA6B,CAAChK,MAAM,EAAE+J,kBAAkB,CAAC,CAAC,EAAEtT,8CAAQ,CAAEuJ,MAAM,IAAK,IAAI,CAACiK,mBAAmB,CAACjK,MAAM,CAAC,CAAC7P,IAAI,CAACC,yCAAG,CAAC,MAAM4P,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5nByJ,uBAAuBA,CAACzJ,MAAM,EAAE;MAC5B,OAAOzJ,8CAAQ,CAAC,CAACP,wCAAE,CAACgK,MAAM,CAAC,EAAE,IAAI,CAAC4G,eAAe,CAACL,WAAW,CAAC,CAAC,CAAC,CAAC;IACrE;IACAmD,4BAA4BA,CAAC1J,MAAM,EAAE;MACjC,OAAOA,MAAM,CAACxV,MAAM,GAAG,CAAC,GAAGwV,MAAM,GAAG,IAAI,CAACkK,iBAAiB,CAAC,CAAC;IAChE;IACAA,iBAAiBA,CAAA,EAAG;MAChB,OAAO,CACH;QACIhF,OAAO,EAAE,OAAO;QAChBhS,SAAS,EAAE,CAAC;QACZC,qBAAqB,EAAE,sBAAsB;QAC7CgS,SAAS,EAAE,yBAAyB;QACpC1R,WAAW,EAAE;MACjB,CAAC,CACJ;IACL;IACAkW,gCAAgCA,CAAC3J,MAAM,EAAE;MACrC,OAAO4C,KAAK,CAAC3M,IAAI,CAAC,IAAIuM,GAAG,CAACxC,MAAM,CAAC5P,GAAG,CAAEqQ,KAAK,IAAK,CAACA,KAAK,CAACyE,OAAO,EAAEzE,KAAK,CAAC,CAAC,CAAC,CAACoC,MAAM,CAAC,CAAC,CAAC;IACtF;IACA+G,UAAUA,CAAC5J,MAAM,EAAE;MACf,OAAOA,MAAM,CAACoF,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACnS,SAAS,GAAGoS,CAAC,CAACpS,SAAS,CAAC;IAC3D;IACA2W,oBAAoBA,CAAC7J,MAAM,EAAE;MACzB,OAAOxN,mDAAa,CAAC,CAACwD,wCAAE,CAACgK,MAAM,CAAC,EAAE,IAAI,CAACJ,gBAAgB,CAAC,CAAC;IAC7D;IACAkK,kCAAkCA,CAAC9J,MAAM,EAAE5F,eAAe,EAAE;MACxD,OAAO;QACH4F,MAAM;QACN+J,kBAAkB,EAAE,IAAIvH,GAAG,CAACpI,eAAe,CAAChK,GAAG,CAAE+Z,EAAE,IAAK,CAACA,EAAE,CAAChX,qBAAqB,EAAEgX,EAAE,CAACxJ,SAAS,CAAC,CAAC;MACrG,CAAC;IACL;IACAqJ,6BAA6BA,CAAChK,MAAM,EAAE+J,kBAAkB,EAAE;MACtD,OAAO/J,MAAM,CAAC5P,GAAG,CAAEqQ,KAAK,KAAM;QAC1B,GAAGA,KAAK;QACRE,SAAS,EAAEoJ,kBAAkB,CAACrd,GAAG,CAAC+T,KAAK,CAACtN,qBAAqB,CAAC,IAC1DkV;MACR,CAAC,CAAC,CAAC;IACP;IACA4B,mBAAmBA,CAACjK,MAAM,EAAE;MACxB,OAAOxN,mDAAa,CAACwN,MAAM,CAAC5P,GAAG,CAAEqQ,KAAK,IAAK,IAAI,CAACmG,eAAe,CAACjB,iBAAiB,CAAClF,KAAK,CAAC,CAAC,CAAC;IAC9F;IACA,OAAOnT,IAAI,YAAA8c,4BAAA5M,iBAAA;MAAA,YAAAA,iBAAA,IAAwFmJ,mBAAmB;IAAA;IACtH,OAAOtC,KAAK,kBA11B6ExP,gEAAE;MAAA0P,KAAA,EA01BYoC,mBAAmB;MAAAtZ,OAAA,EAAnBsZ,mBAAmB,CAAArZ,IAAA;MAAAkX,UAAA,EAAc;IAAM;EAClJ;EAAC,OAlEKmC,mBAAmB;AAAA;AAmEzB;EAAA,QAAAjZ,SAAA,oBAAAA,SAAA;AAAA;AAKc,IAER2c,iBAAiB;EAAvB,MAAMA,iBAAiB,CAAC;IACpBzD,eAAe,GAAGhc,qDAAM,CAACia,eAAe,CAAC;IACzC6B,mBAAmB,GAAG9b,qDAAM,CAAC+b,mBAAmB,CAAC;IACjD2D,iBAAiB,GAAG7c,oDAAK,CAAC,CAAC;IAC3BuS,MAAM,GAAGvS,gDAAK,CAAC3B,QAAQ,CAAC;MACpBiE,SAAS,EAAG1D,KAAK,IAAK,IAAI,CAACqa,mBAAmB,CAAC6C,YAAY,CAACjd,IAAI,CAACD,KAAK;IAC1E,CAAC,CAAC;IACF6W,SAAS,GAAG1N,oDAAS,CAAC1J,QAAQ,CAAC,WAAW,EAAE;MAAEye,IAAI,EAAElV,2DAAgBA;IAAC,CAAC,CAAC;IACvEiS,WAAWA,CAAA,EAAG;MACVhS,qDAAM,CAAC,MAAM;QACT,IAAI,CAACsR,eAAe,CAAC7B,YAAY,CAAC,IAAI,CAAC7B,SAAS,CAAC,CAAC,CAAC;MACvD,CAAC,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAsH,IAAIA,CAAC5C,KAAK,EAAE;MACRtR,mDAAa,CAAC,IAAI,CAACsQ,eAAe,CAACtD,0BAA0B,CAACsE,KAAK,CAACxB,aAAa,EAAEwB,KAAK,CAAClE,YAAY,CAAC,CAAC,CAAC6B,IAAI,CAAC,MAAM;QAC/G;QACA;QACAzY,qBAAqB,CAAC,MAAM;UACxBkb,QAAQ,CAACyC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC9d,OAAO,CAAE+d,EAAE,IAAK;YAC7D,MAAMC,OAAO,GAAGD,EAAE;YAClBC,OAAO,CAACC,SAAS,CAACzG,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAChD,KAAKwG,OAAO,CAACE,WAAW,CAAC,CAAC;YAC1BF,OAAO,CAACC,SAAS,CAACE,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC;UACjD,CAAC,CAAC;QACN,CAAC,CAAC;MACN,CAAC,CAAC;IACN;IACA,OAAOxd,IAAI,YAAAyd,0BAAAvN,iBAAA;MAAA,YAAAA,iBAAA,IAAwF6M,iBAAiB;IAAA;IACpH,OAAOzc,IAAI,kBAx4B8EiH,+DAAE;MAAA8I,IAAA,EAw4BJ0M,iBAAiB;MAAAxc,SAAA;MAAAmd,SAAA,WAAAC,wBAAA7c,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAx4BfyG,+DAAE,CAAAxG,GAAA,CAAA6U,SAAA,EAAApH,GAAA,KAw4BuczG,2DAAgB;QAAA;QAAA,IAAAjH,EAAA;UAx4BzdyG,4DAAE;QAAA;MAAA;MAAA/G,MAAA;QAAAwc,iBAAA;QAAAtK,MAAA;MAAA;MAAAjS,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAkd,2BAAAhd,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAA,MAAAqK,GAAA,GAAF5D,8DAAE;UAAFA,4DAAE,YAy4BpB,CAAC;UAz4BiBA,wDAAE,gCAAAwW,6DAAAnR,MAAA;YAAFrF,2DAAE,CAAA4D,GAAA;YAAA,OAAF5D,yDAAE,CAy4BjCxG,GAAA,CAAAmc,IAAA,CAAAtQ,MAAW,CAAC;UAAA,EAAC;UAz4BkBrF,gEAAE,WA04BlD,CAAC;UA14B+CA,0DAAE,CA24BtF,CAAC;QAAA;MAAA;MAAA4K,YAAA,GAC2HvI,+DAAW;MAAA5H,MAAA;IAAA;EAChJ;EAAC,OA1CK+a,iBAAiB;AAAA;AA2CvB;EAAA,QAAA3c,SAAA,oBAAAA,SAAA;AAAA;AAOwC,IAElC4d,sBAAsB;EAA5B,MAAMA,sBAAsB,CAAC;IACzB;IACAC,SAAS,GAAG9d,gDAAK,CAAC3B,QAAQ,CAAC,CAAC;IAC5B0f,mBAAmB,GAAG,IAAI/V,uDAAY,CAAC,CAAC;IACxCgW,QAAQ,GAAG7gB,qDAAM,CAAC8K,oDAAS,CAAC;IAC5B6G,GAAG,GAAG,EAAE;IACRmP,iBAAiB,GAAGhY,qDAAM,CAAC,KAAK,CAAC;IACjCiY,WAAW,GAAG,EAAE;IAChBC,OAAO,GAAG,CACN;MAAEpY,IAAI,EAAE,aAAa;MAAED,MAAM,EAAE;IAAO,CAAC,EACvC;MAAEC,IAAI,EAAE,eAAe;MAAED,MAAM,EAAE;IAAS,CAAC,EAC3C;MAAEC,IAAI,EAAE,mBAAmB;MAAED,MAAM,EAAE;IAAY,CAAC,EAClD;MAAEC,IAAI,EAAE,iBAAiB;MAAED,MAAM,EAAE;IAAgB,CAAC,EACpD;MAAEC,IAAI,EAAE,sBAAsB;MAAED,MAAM,EAAE;IAAsB,CAAC,EAC/D;MAAEC,IAAI,EAAE,sBAAsB;MAAED,MAAM,EAAE;IAAoB,CAAC,EAC7D;MAAEC,IAAI,EAAE,WAAW;MAAED,MAAM,EAAE;IAAiB,CAAC,EAC/C;MAAEC,IAAI,EAAE,mBAAmB;MAAED,MAAM,EAAE;IAAc,CAAC,EACpD;MAAEC,IAAI,EAAE,qBAAqB;MAAED,MAAM,EAAE;IAAgB,CAAC,EACxD;MAAEC,IAAI,EAAE,oBAAoB;MAAED,MAAM,EAAE;IAAe,CAAC,EACtD;MAAEC,IAAI,EAAE,sBAAsB;MAAED,MAAM,EAAE;IAAc,CAAC,CAC1D;IACD2I,YAAYA,CAAC2P,GAAG,EAAE;MACd;MACA7D,QAAQ,CAACC,WAAW,CAAC4D,GAAG,CAAC;MACzB,IAAI,CAACL,mBAAmB,CAAC1M,IAAI,CAAC,CAAC;IACnC;IACAgN,WAAWA,CAACD,GAAG,EAAEE,SAAS,EAAE;MACxB,MAAMC,KAAK,GAAG,IAAI,CAACT,SAAS,CAAC,CAAC,CAACU,UAAU,CAAC,CAAC,CAAC;MAC5C,MAAMtB,OAAO,GAAG,IAAI,CAACc,QAAQ,CAACS,aAAa,CAACL,GAAG,CAAC;MAChDlB,OAAO,CAACoB,SAAS,GAAGA,SAAS,IAAI,EAAE;MACnCpB,OAAO,CAAC1N,SAAS,GAAG+O,KAAK,CAACrH,QAAQ,CAAC,CAAC;MACpCqH,KAAK,CAACG,cAAc,CAAC,CAAC;MACtBH,KAAK,CAACI,UAAU,CAACzB,OAAO,CAAC;MACzB,IAAI,CAACa,mBAAmB,CAAC1M,IAAI,CAAC,CAAC;IACnC;IACAuN,SAASA,CAAA,EAAG;MACRrE,QAAQ,CAACC,WAAW,CAAC,cAAc,CAAC;MACpCD,QAAQ,CAACC,WAAW,CAAC,QAAQ,CAAC;MAC9B,IAAI,CAACuD,mBAAmB,CAAC1M,IAAI,CAAC,CAAC;IACnC;IACAwN,YAAYA,CAAA,EAAG;MACX,IAAI,CAACX,WAAW,CAAC9e,IAAI,CAAC,IAAI,CAAC0e,SAAS,CAAC,CAAC,CAACU,UAAU,CAAC,CAAC,CAAC,CAAC;MACrD,IAAI,CAACP,iBAAiB,CAAC/J,GAAG,CAAC,IAAI,CAAC;IACpC;IACAlF,UAAUA,CAAA,EAAG;MACT,IAAI,CAAC8O,SAAS,CAAC,CAAC,CAACgB,eAAe,CAAC,CAAC;MAClC,IAAI,CAAChB,SAAS,CAAC,CAAC,CAACiB,QAAQ,CAAC,IAAI,CAACb,WAAW,CAACc,GAAG,CAAC,CAAC,CAAC;MACjDzE,QAAQ,CAACC,WAAW,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC1L,GAAG,CAAC;MACnD,IAAI,CAACiP,mBAAmB,CAAC1M,IAAI,CAAC,CAAC;IACnC;IACA,OAAOxR,IAAI,YAAAof,+BAAAlP,iBAAA;MAAA,YAAAA,iBAAA,IAAwF8N,sBAAsB;IAAA;IACzH,OAAO1d,IAAI,kBA18B8EiH,+DAAE;MAAA8I,IAAA,EA08BJ2N,sBAAsB;MAAAzd,SAAA;MAAAC,MAAA;QAAAyd,SAAA;MAAA;MAAAtM,OAAA;QAAAuM,mBAAA;MAAA;MAAAzd,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAye,gCAAAve,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UA18BpByG,4DAAE,YA28BzE,CAAC;UA38BsEA,8DAAE,IAAAkH,qCAAA,kBAAFlH,oEAg9BvF,CAAC;UAh9BsFA,4DAAE,YAi9BlB,CAAC;UAj9BeA,wDAAE,mBAAA+X,qDAAA;YAAA,OAi9BrDve,GAAA,CAAAyd,WAAA,CAAY,MAAM,EAAE,aAAa,CAAC;UAAA,EAAC;UAj9BgBjX,4DAAE,cAk9B9E,CAAC;UAl9B2EA,oDAAE,UAk9B1E,CAAC;UAl9BuEA,0DAAE,CAk9B/D,CAAC,CACtB,CAAC;UAn9BiFA,4DAAE,YAo9BtC,CAAC;UAp9BmCA,wDAAE,mBAAAgY,qDAAA;YAAA,OAo9BrDxe,GAAA,CAAAie,YAAA,CAAa,CAAC;UAAA,EAAC;UAp9BoCzX,4DAAE,cAq9B9E,CAAC;UAr9B2EA,oDAAE,iBAq9BnE,CAAC;UAr9BgEA,0DAAE,CAq9BxD,CAAC,CAC7B,CAAC;UAt9BiFA,4DAAE,YAu9BzC,CAAC;UAv9BsCA,wDAAE,mBAAAiY,qDAAA;YAAA,OAu9BrDze,GAAA,CAAAge,SAAA,CAAU,CAAC;UAAA,EAAC;UAv9BuCxX,4DAAE,eAw9B9E,CAAC;UAx9B2EA,oDAAE,mBAw9BlE,CAAC;UAx9B+DA,0DAAE,CAw9BvD,CAAC,CAC9B,CAAC,CACH,CAAC;UA19BmFA,iEAAE,KAAAsH,8CAAA,gBA49BlE,CAAC;QAAA;QAAA,IAAA/N,EAAA;UA59B+DyG,uDAAE,CAg9BzF,CAAC;UAh9BsFA,wDAAE,CAAAxG,GAAA,CAAAud,OAg9BzF,CAAC;UAh9BsF/W,uDAAE,GAw+B3F,CAAC;UAx+BwFA,2DAAE,CAAAxG,GAAA,CAAAqd,iBAAA,YAw+B3F,CAAC;QAAA;MAAA;MAAAjM,YAAA,GACuhB/H,kEAAa,EAA8BL,iEAAa,EAA+B9C,2DAAY,EAA0IsB,uDAAW,EAA+B9G,gEAAuB,EAAyPA,2DAAkB,EAAsFA,mDAAU;MAAAO,MAAA;IAAA;EACrrC;EAAC,OAnFKgc,sBAAsB;AAAA;AAoF5B;EAAA,QAAA5d,SAAA,oBAAAA,SAAA;AAAA;AAqCoB,IAEdsf,oBAAoB;EAA1B,MAAMA,oBAAoB,CAAC;IACvBC,OAAO,GAAGriB,qDAAM,CAACwM,yDAAO,CAAC;IACzB8V,UAAU;IACVC,oCAAoCA,CAACC,MAAM,EAAE;MACzC,OAAOpX,wCAAE,CAACqX,MAAM,CAACC,YAAY,CAAC,CAAC,CAAC,CAACnd,IAAI,CAACgG,4CAAM,CAAEoV,SAAS,IAAKA,SAAS,KAAK,IAAI,CAAC,EAAEpV,4CAAM,CAAEoV,SAAS,IAAKA,SAAS,CAACgC,UAAU,GAAG,CAAC,CAAC,EAAEpX,4CAAM,CAAEoV,SAAS,IAAKA,SAAS,CAAC5G,QAAQ,CAAC,CAAC,CAACna,MAAM,GAAG,CAAC,CAAC,EAAE2L,4CAAM,CAAEoV,SAAS,IAAKA,SAAS,CAAC5G,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC,EAAEzO,yCAAG,CAAC,MAAM,IAAI,CAACgX,UAAU,EAAEM,WAAW,CAAC,CAAC,IAAI,IAAI,CAACN,UAAU,CAACO,OAAO,CAAC,CAAC,CAAC;MAAE;MACtTrd,yCAAG,CAAEmb,SAAS,KAAM;QAChBA,SAAS;QACTmC,MAAM,EAAE,IAAI,CAACC,kBAAkB,CAACpC,SAAS;MAC7C,CAAC,CAAC,CAAC,EAAEpV,4CAAM,CAAC,CAAC;QAAEuX;MAAO,CAAC,KAAK,IAAI,CAACE,mBAAmB,CAACF,MAAM,CAAC,CAAC,EAAE9W,gDAAU,CAAC,CAAC;QAAE2U;MAAU,CAAC,KAAK,IAAI,CAACsC,mBAAmB,CAACtC,SAAS,CAAC,CAAC,CAAC;IACtI;IACAoC,kBAAkBA,CAACpC,SAAS,EAAE;MAC1B,MAAMS,KAAK,GAAGT,SAAS,CAACU,UAAU,CAAC,CAAC,CAAC;MACrC,OAAOD,KAAK,CAAC8B,uBAAuB,CAACC,QAAQ,KAAKC,IAAI,CAACC,YAAY,GAC7DjC,KAAK,CAAC8B,uBAAuB,GAC7B9B,KAAK,CAAC8B,uBAAuB,CAACI,aAAa;IACrD;IACAN,mBAAmBA,CAACO,MAAM,EAAE;MACxB;MACA;MACA,OAAQ,CAAC,CAACA,MAAM,KACXA,MAAM,CAACC,OAAO,CAAC,oBAAoB,CAAC,KAAK,IAAI,GACxC,KAAK,GACLD,MAAM,CAACC,OAAO,CAAC,gBAAgB,CAAC,KAAK,IAAI,GACrC,IAAI,GACJ,KAAK,CAAC;IACxB;IACAP,mBAAmBA,CAACtC,SAAS,EAAE;MAC3B,OAAOvV,wCAAE,CAACuV,SAAS,CAACU,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC9b,IAAI,CAACC,yCAAG,CAAE4b,KAAK,IAAKA,KAAK,CAACqC,qBAAqB,CAAC,CAAC,CAAC,EAAEje,yCAAG,CAAEke,aAAa,IAAK,IAAI,CAACC,aAAa,CAACD,aAAa,CAAC,CAAC;MAChJ;MACA;MACA;MACA;MACApY,yCAAG,CAAEgX,UAAU,IAAM,IAAI,CAACA,UAAU,GAAGA,UAAW,CAAC,EAAE9c,yCAAG,CAAE8c,UAAU,IAAK;QACrE,MAAMsB,aAAa,GAAGtB,UAAU,CAACuB,MAAM,CAAC,IAAI9W,iEAAe,CAAC2T,sBAAsB,CAAC,CAAC;QACpFkD,aAAa,CAACrL,QAAQ,CAAC,WAAW,EAAEoI,SAAS,CAAC;QAC9CjV,mDAAa,CAACO,2CAAK,CAACqW,UAAU,CAACwB,aAAa,CAAC,CAAC,EAAEF,aAAa,CAACxL,QAAQ,CAACwI,mBAAmB,CAAC,CAACrb,IAAI,CAAC+F,yCAAG,CAAC,MAAMgX,UAAU,CAACO,OAAO,CAAC,CAAC,CAAC,EAAEvX,yCAAG,CAAC,MAAMqV,SAAS,CAACgB,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1K,OAAO,IAAI;MACf,CAAC,CAAC,CAAC;IACP;IACAgC,aAAaA,CAACD,aAAa,EAAE;MACzB,OAAO,IAAI,CAACrB,OAAO,CAAC0B,MAAM,CAAC;QACvBC,WAAW,EAAE,IAAI;QACjBC,aAAa,EAAE,kCAAkC;QACjDC,gBAAgB,EAAE,IAAI,CAAC7B,OAAO,CACzB8B,QAAQ,CAAC,CAAC,CACVC,mBAAmB,CAACV,aAAa,CAAC,CAClCW,aAAa,CAAC,CACf;UACIC,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,OAAO;UAChBC,OAAO,EAAE,QAAQ;UACjBC,QAAQ,EAAE,OAAO;UACjBC,QAAQ,EAAE;QACd,CAAC,CACJ;MACL,CAAC,CAAC;IACN;IACA,OAAOhiB,IAAI,YAAAiiB,6BAAA/R,iBAAA;MAAA,YAAAA,iBAAA,IAAwFwP,oBAAoB;IAAA;IACvH,OAAO3I,KAAK,kBA5kC6ExP,gEAAE;MAAA0P,KAAA,EA4kCYyI,oBAAoB;MAAA3f,OAAA,EAApB2f,oBAAoB,CAAA1f,IAAA;MAAAkX,UAAA,EAAc;IAAM;EACnJ;EAAC,OA3DKwI,oBAAoB;AAAA;AA4D1B;EAAA,QAAAtf,SAAA,oBAAAA,SAAA;AAAA;AAKc,IAER8hB,qBAAqB;EAA3B,MAAMA,qBAAqB,CAAC;IACxBC,oBAAoB,GAAG7kB,qDAAM,CAACoiB,oBAAoB,CAAC;IACnDpG,eAAe,GAAGhc,qDAAM,CAACia,eAAe,CAAC;IACzC6B,mBAAmB,GAAG9b,qDAAM,CAAC+b,mBAAmB,CAAC;IACjD3G,MAAM,GAAGvS,oDAAK,CAAC,EAAE,CAAC;IAClBiiB,eAAe,GAAGxa,qDAAM,CAAC,CAAC;IAC1Bya,aAAa,GAAGliB,gDAAK,CAAC3B,QAAQ,CAAC;MAC3BiE,SAAS,EAAG1D,KAAK,IAAKA,KAAK,IAAI,IAAI,CAACqjB,eAAe,CAAC5Q,IAAI,CAAC,IAAI,CAAC8H,eAAe,CAAC5B,UAAU,CAAC,CAAC;IAC9F,CAAC,CAAC;IACF4K,kBAAkB,GAAGpd,mDAAa,CAAC,CAC/B5H,qDAAM,CAAC6b,cAAc,CAAC,CAACK,oBAAoB,EAC3C,IAAI,CAACJ,mBAAmB,CAAC8C,WAAW,EACpC1S,+CAAS,CAACkR,QAAQ,EAAE,iBAAiB,CAAC,CAAC7X,IAAI,CAAC4G,kDAAY,CAAC,GAAG,CAAC,EAAElF,+CAAS,CAAE+V,KAAK,IAAK,IAAI,CAAC6H,oBAAoB,CAACtC,oCAAoC,CAACvF,KAAK,CAAC,CAAC,CAAC,CAC9J,CAAC;IACF,OAAOta,IAAI,YAAAuiB,8BAAArS,iBAAA;MAAA,YAAAA,iBAAA,IAAwFgS,qBAAqB;IAAA;IACxH,OAAO5hB,IAAI,kBApmC8EiH,+DAAE;MAAA8I,IAAA,EAomCJ6R,qBAAqB;MAAA3hB,SAAA;MAAAC,MAAA;QAAAkS,MAAA;QAAA2P,aAAA;MAAA;MAAA1Q,OAAA;QAAAyQ,eAAA;MAAA;MAAA3hB,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA4hB,+BAAA1hB,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UApmCnByG,uDAAE,kBAwmC/E,CAAC;UAxmC4EA,oDAAE;QAAA;QAAA,IAAAzG,EAAA;UAAFyG,wDAAE,WAAAxG,GAAA,CAAA2R,MAAA,EAsmCvE,CAAC,sBAtmCoEnL,yDAAE,OAAAxG,GAAA,CAAAuhB,kBAAA,CAumC1C,CAAC;QAAA;MAAA;MAAAnQ,YAAA,GAES4K,iBAAiB,EAA0FlZ,sDAAS;MAAA4e,aAAA;IAAA;EACnL;EAAC,OArBKP,qBAAqB;AAAA;AAsB3B;EAAA,QAAA9hB,SAAA,oBAAAA,SAAA;AAAA;;AAcA;AACA;AACA;;AAEA;AACA;AACA","sources":["./projects/ngx-editor-js2-pop-quiz/src/lib/ngx-editor-js2-pop-quiz.service.ts","./projects/ngx-editor-js2-pop-quiz/src/lib/pop-quiz-config/steps/question.component.ts","./projects/ngx-editor-js2-pop-quiz/src/lib/pop-quiz-config/steps/responses.component.ts","./projects/ngx-editor-js2-pop-quiz/src/lib/pop-quiz-config/steps/choices.component.ts","./projects/ngx-editor-js2-pop-quiz/src/lib/pop-quiz-config/steps/answer.component.ts","./projects/ngx-editor-js2-pop-quiz/src/lib/pop-quiz-config/steps/results.component.ts","./projects/ngx-editor-js2-pop-quiz/src/lib/pop-quiz-config/pop-quiz-config.component.ts","./projects/ngx-editor-js2-pop-quiz/src/lib/ngx-editor-js2-pop-quiz.component.ts","./projects/ngx-editor-js2-pop-quiz/src/public-api.ts","./projects/ngx-editor-js2-pop-quiz/src/tmdjr-ngx-editor-js2-pop-quiz.ts","./node_modules/@tmdjr/ngx-editor-js2/fesm2022/tmdjr-ngx-editor-js2.mjs"],"sourcesContent":["import { inject, Injectable } from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup,\n  NonNullableFormBuilder,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface QuizConfig {\n  question: string;\n  choices: { value: string }[];\n  answer: string;\n  correctResponse: string;\n  incorrectResponse: string;\n}\n\nexport interface QuizConfigFormRawData {\n  questionGroup: { question: string };\n  choicesOptionsGroup: { choices: { value: string }[] };\n  answerGroup: { answer: string };\n  responsesGroup: { correctResponse: string; incorrectResponse: string };\n}\n\nexport interface QuizConfigForm {\n  questionGroup: QuestionGroup;\n  choicesOptionsGroup: ChoicesOptionsGroup;\n  answerGroup: AnswerGroup;\n  responsesGroup: ResponsesGroup;\n}\n\nexport type QuestionGroup = FormGroup<{ question: FormControl<string> }>;\nexport type ChoicesOptionsGroup = FormGroup<{\n  choices: FormArray<FormControl<string>>;\n}>;\nexport type AnswerGroup = FormGroup<{ answer: FormControl<string> }>;\nexport type ResponsesGroup = FormGroup<{\n  correctResponse: FormControl<string>;\n  incorrectResponse: FormControl<string>;\n}>;\n\nfunction validateRatioOptions(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const optionsArray = control as FormArray;\n    if (optionsArray.controls.length < 2) {\n      return { notEnoughOptions: true };\n    }\n    return null;\n  };\n}\n\n@Injectable()\nexport class NgxEditorJs2PopQuizService {\n  formBuilder = inject(NonNullableFormBuilder);\n\n  parentFormGroup!: FormGroup;\n  parentFormControlName!: string;\n\n  quizConfigValue = new BehaviorSubject<QuizConfig>({\n    question: '',\n    answer: '',\n    choices: [],\n    correctResponse: '',\n    incorrectResponse: '',\n  });\n  quizConfigValue$ = this.quizConfigValue.asObservable();\n\n  quizConfigForm = new BehaviorSubject<FormGroup<QuizConfigForm>>(\n    this.formBuilder.group({\n      questionGroup: this.formBuilder.group({\n        question: new FormControl<string>('', [Validators.required]),\n      }),\n      choicesOptionsGroup: this.formBuilder.group({\n        choices: this.formBuilder.array([] as FormControl<string>[], [\n          validateRatioOptions(),\n        ]),\n      }),\n      answerGroup: this.formBuilder.group({\n        answer: new FormControl<string>('', [Validators.required]),\n      }),\n      responsesGroup: this.formBuilder.group({\n        correctResponse: new FormControl<string>('', [Validators.required]),\n        incorrectResponse: new FormControl<string>('', [Validators.required]),\n      }),\n    }) as FormGroup<QuizConfigForm>\n  );\n  quizConfigForm$ = this.quizConfigForm.asObservable();\n\n  setQuizConfigValue(value: QuizConfig) {\n    this.quizConfigValue.next(value);\n    return value;\n  }\n\n  initializeQuizConfigForm(value: QuizConfig) {\n    const form = this.quizConfigForm.value;\n    const choicesArray = form.get('choicesOptionsGroup.choices') as FormArray;\n    if (!choicesArray || choicesArray.length === 0) {\n      value.choices.forEach((choice) => {\n        choicesArray.push(\n          this.formBuilder.group({\n            value: [choice.value, [Validators.required]],\n          })\n        );\n      });\n    }\n    // ! Hack because the Result component has not subscribed to the form value change yet\n    requestAnimationFrame(() => {\n      form.setValue(this.marshalFormValueIntoFormGroup(value));\n    });\n    return form;\n  }\n\n  marshalFormValueIntoFormGroup(value: any) {\n    return {\n      answerGroup: {\n        answer: value.answer,\n      },\n      choicesOptionsGroup: {\n        choices: value.choices,\n      },\n      questionGroup: {\n        question: value.question,\n      },\n      responsesGroup: {\n        correctResponse: value.correctResponse,\n        incorrectResponse: value.incorrectResponse,\n      },\n    };\n  }\n\n  updateParentFormGroupValue(value: QuizConfig) {\n    this.parentFormGroup\n      .get(this.parentFormControlName)\n      ?.setValue(JSON.stringify(value));\n  }\n\n  marshalFormGroupIntoFormValue(value: QuizConfigFormRawData): QuizConfig {\n    return {\n      question: value.questionGroup.question,\n      answer: value.answerGroup.answer,\n      choices: value.choicesOptionsGroup.choices,\n      correctResponse: value.responsesGroup.correctResponse,\n      incorrectResponse: value.responsesGroup.incorrectResponse,\n    };\n  }\n}\n","import { Component, input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatStepperNext } from '@angular/material/stepper';\n\n@Component({\n  selector: 'pop-quiz-question',\n  imports: [\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInput,\n    MatStepperNext,\n    MatButton,\n  ],\n  template: `\n    <form [formGroup]=\"questionFormGroup()\">\n      <h3>Create a Question to ask the User</h3>\n      <mat-form-field>\n        <mat-label>Create a Question to ask.</mat-label>\n        <textarea matInput [formControlName]=\"'question'\"></textarea>\n        @if(questionFormGroup().get('question')?.hasError('required')) {\n        <mat-error> Question is required </mat-error>\n        }\n      </mat-form-field>\n      <div class=\"action-group\">\n        <button mat-flat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  `,\n  styles: [\n    `\n      :host {\n        form {\n          display: flex;\n          flex-direction: column;\n          .action-group {\n            display: flex;\n            justify-content: flex-end;\n            margin-top: 1rem;\n          }\n          h3 {\n            font: var(--mat-sys-headline-small);\n            font-weight: 100;\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class QuestionComponent {\n  questionFormGroup = input.required<FormGroup>();\n}\n","import { Component, input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatStepperNext, MatStepperPrevious } from '@angular/material/stepper';\n\n@Component({\n  selector: 'pop-quiz-responses',\n  imports: [\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInput,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatButton,\n  ],\n  template: `\n    <form [formGroup]=\"responsesFormGroup()\">\n      <h3>Create a Response when the User is Correct</h3>\n      <mat-form-field>\n        <mat-label>Create a Response when the User is Correct</mat-label>\n        <textarea matInput [formControlName]=\"'correctResponse'\"></textarea>\n        @if(responsesFormGroup().get('correctResponse')?.hasError('required')) {\n        <mat-error> Question is required </mat-error>\n        }\n      </mat-form-field>\n      <h3>Create a Response when the User is Incorrect</h3>\n      <mat-form-field>\n        <mat-label>Create a Response when the User is Incorrect</mat-label>\n        <textarea matInput [formControlName]=\"'incorrectResponse'\"></textarea>\n        @if(responsesFormGroup().get('incorrectResponse')?.hasError('required')) {\n        <mat-error> Question is required </mat-error>\n        }\n      </mat-form-field>\n      <div class=\"action-group\">\n        <button mat-flat-button matStepperPrevious>Previous</button>\n        <button mat-flat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  `,\n  styles: [\n    `\n      :host {\n        form {\n          display: flex;\n          flex-direction: column;\n          .action-group {\n            display: flex;\n            justify-content: space-between;\n            margin-top: 1rem;\n          }\n          h3 {\n            font: var(--mat-sys-headline-small);\n            font-weight: 100;\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class ResponsesComponent {\n  responsesFormGroup = input.required<FormGroup>();\n}\n","import { AsyncPipe, NgClass } from '@angular/common';\nimport { Component, inject, input } from '@angular/core';\n\nimport {\n  FormArray,\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDivider } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatInput } from '@angular/material/input';\nimport { MatStepperNext, MatStepperPrevious } from '@angular/material/stepper';\nimport { BehaviorSubject, map } from 'rxjs';\nimport { NgxEditorJs2PopQuizService } from '../../ngx-editor-js2-pop-quiz.service';\n\n@Component({\n  selector: 'pop-quiz-choices',\n  imports: [\n    AsyncPipe,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInput,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatButtonModule,\n    MatIcon,\n    MatDivider,\n    NgClass,\n  ],\n  template: `\n    <form [formGroup]=\"choicesFormGroup()\">\n      <h3>\n        Create the Possible Answers\n        <span\n          [ngClass]=\"{\n            error: this.choicesFormGroup()\n              .get('choices')\n              ?.hasError('notEnoughOptions')\n          }\"\n          >(Create at least 2 choices)</span\n        >\n      </h3>\n      <ng-container formArrayName=\"choices\">\n        @for (option of (viewModel$ | async)!.controls; track option) {\n        <ng-container [formGroupName]=\"$index\">\n          <div class=\"choices-radio-option-container\">\n            <mat-form-field>\n              <mat-label>Option {{ $index + 1 }}</mat-label>\n              <textarea matInput formControlName=\"value\"></textarea>\n              @if((this.choicesFormGroup().get('choices'))?.get($index.toString()))\n              {\n              <mat-error> Question is required </mat-error>\n              }\n            </mat-form-field>\n            <button mat-icon-button (click)=\"removeRatioOption($index)\">\n              <mat-icon class=\"delete\">delete</mat-icon>\n            </button>\n          </div>\n        </ng-container>\n        }\n        <div class=\"choices-action-group\">\n          <button mat-button type=\"button\" (click)=\"addRatioOption()\">\n            <mat-icon>add</mat-icon>Add a Choice\n          </button>\n        </div>\n      </ng-container>\n      <mat-divider></mat-divider>\n      <div class=\"action-group\">\n        <button mat-flat-button matStepperPrevious>Previous</button>\n        <button mat-flat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  `,\n  styles: [\n    `\n      :host {\n        form {\n          display: flex;\n          flex-direction: column;\n          .error {\n            color: var(--mat-sys-error);\n          }\n          .choices-radio-option-container {\n            display: flex;\n            align-items: center;\n            gap: 1rem;\n            mat-form-field {\n              width: 100%;\n            }\n            .delete {\n              color: var(--mat-sys-error);\n            }\n          }\n          .choices-action-group {\n            margin-bottom: 1.7rem;\n          }\n          .action-group {\n            display: flex;\n            justify-content: space-between;\n            margin-top: 1rem;\n          }\n          h3 {\n            font: var(--mat-sys-headline-small);\n            font-weight: 100;\n            span {\n              font: var(--mat-sys-body-small);\n            }\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class ChoicesComponent {\n  formBuilder = inject(FormBuilder);\n  popQuizService = inject(NgxEditorJs2PopQuizService);\n  choicesFormGroup = input.required<FormGroup, FormGroup>({\n    transform: (value) => {\n      this.choicesFormGroupSub.next(value);\n      return value;\n    },\n  });\n\n  choicesFormGroupSub = new BehaviorSubject<FormGroup>(\n    this.formBuilder.group({\n      choices: this.formBuilder.array([]),\n    })\n  );\n  choicesFormGroup$ = this.choicesFormGroupSub.asObservable();\n\n  viewModel$ = this.choicesFormGroup$.pipe(\n    map((formGroup) => formGroup.get('choices') as FormArray)\n  );\n\n  addRatioOption() {\n    const choices = this.choicesFormGroup().get('choices') as FormArray;\n    choices.push(\n      this.formBuilder.group({\n        value: ['', [Validators.required]],\n      })\n    );\n    this.choicesFormGroupSub.next(this.choicesFormGroup());\n  }\n\n  removeRatioOption(index: number) {\n    const choices = this.choicesFormGroup().get('choices') as FormArray;\n    choices.removeAt(index);\n    this.choicesFormGroupSub.next(this.choicesFormGroup());\n\n    // ! better way to do this invalidation on the prefill answer\n    // ! Buggy\n    this.popQuizService.quizConfigForm.value.controls.answerGroup\n      .get('answer')\n      ?.setValue('');\n  }\n}\n","import { AsyncPipe } from '@angular/common';\nimport { Component, inject, input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField, MatFormFieldModule, MatLabel } from '@angular/material/form-field';\nimport { MatStepperNext, MatStepperPrevious } from '@angular/material/stepper';\nimport { NgxEditorJs2PopQuizService } from '../../ngx-editor-js2-pop-quiz.service';\nimport { map } from 'rxjs';\nimport { MatSelect } from '@angular/material/select';\n\n@Component({\n  selector: 'pop-quiz-answer',\n  imports: [\n    AsyncPipe,\n    ReactiveFormsModule,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatButton,\n    MatFormFieldModule,\n    MatOption,\n    MatLabel,\n    MatSelect,\n  ],\n  template: `\n    @if (choices$ | async; as choices) {\n    <form [formGroup]=\"answerFormGroup()\">\n      <h3>Select the Correct Answer</h3>\n      <mat-form-field class=\"answer-select\">\n        <mat-label>Answer</mat-label>\n        <mat-select formControlName=\"answer\" required>\n          @for (choice of choices.controls; track $index) {\n          <mat-option [value]=\"choice.get('value')?.value\">\n            {{ choice.get('value')?.value }}\n          </mat-option>\n          }\n        </mat-select>\n        @if (answerFormGroup().get('answer')?.hasError('required')) {\n        <mat-error>Please choose an answer</mat-error>\n        }\n      </mat-form-field>\n      <div class=\"action-group\">\n        <button mat-flat-button matStepperPrevious>Previous</button>\n        <button mat-flat-button matStepperNext>Next</button>\n      </div>\n    </form>\n    }\n  `,\n  styles: [\n    `\n      :host {\n        form {\n          display: flex;\n          flex-direction: column;\n          mat-form-field {\n            margin-bottom: 1.5rem;\n          }\n          .action-group {\n            display: flex;\n            justify-content: space-between;\n          }\n          h3 {\n            font: var(--mat-sys-headline-small);\n            font-weight: 100;\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class AnswerComponent {\n  answerFormGroup = input.required<FormGroup>();\n  choices$ = inject(NgxEditorJs2PopQuizService).quizConfigForm$.pipe(\n    map((form) => form.controls.choicesOptionsGroup.controls.choices)\n  );\n}\n","import { Component, inject, input } from '@angular/core';\nimport { AsyncPipe } from '@angular/common';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatStepperPrevious } from '@angular/material/stepper';\nimport { MatDivider } from '@angular/material/divider';\nimport {\n  NgxEditorJs2PopQuizService,\n  QuizConfigFormRawData,\n} from '../../ngx-editor-js2-pop-quiz.service';\nimport { map, switchMap } from 'rxjs';\n\n@Component({\n  selector: 'pop-quiz-results',\n  imports: [\n    AsyncPipe,\n    ReactiveFormsModule,\n    MatStepperPrevious,\n    MatButton,\n    MatRadioModule,\n    MatDivider,\n  ],\n  template: `\n    <form [formGroup]=\"resultsFormGroup()\">\n      <h3>Preview of the Pop-Quiz</h3>\n      <mat-divider></mat-divider>\n      @if(viewModel$ | async; as formPreview) {\n      <div class=\"preview-container\">\n        <div class=\"preview\">\n          <h1>Quiz</h1>\n          <p>{{ formPreview.question }}</p>\n          <mat-radio-group [value]=\"formPreview.answer\">\n            @for(option of formPreview.choices; track $index) {\n            <mat-radio-button [value]=\"option.value\">{{\n              option.value\n            }}</mat-radio-button>\n            }\n          </mat-radio-group>\n        </div>\n        <div class=\"preview-action-group\">\n          <button mat-button type=\"button\">Submit</button>\n        </div>\n      </div>\n      }\n      <mat-divider></mat-divider>\n      <div class=\"action-group\">\n        <button mat-flat-button matStepperPrevious>Back</button>\n        <button mat-flat-button (click)=\"emitNewFormValue()\">Save</button>\n      </div>\n    </form>\n  `,\n  styles: [\n    `\n      :host {\n        form {\n          display: flex;\n          flex-direction: column;\n          .action-group {\n            display: flex;\n            justify-content: space-between;\n            margin-top: 1rem;\n          }\n          h3 {\n            font: var(--mat-sys-headline-small);\n            font-weight: 100;\n          }\n\n\n          mat-radio-button {\n            display: block;\n          }\n\n          .preview-container {\n            display: flex;\n            gap: 1.5rem;\n            flex-direction: column;\n            align-items: flex-end;\n            margin-bottom: 1.5rem;\n            .preview {\n              width: 100%;\n            }\n            .preview-action-group {\n              display: flex;\n              flex-direction: row-reverse;\n            }\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class ResultsComponent {\n  popQuizService = inject(NgxEditorJs2PopQuizService);\n  resultsFormGroup = input.required<FormGroup>();\n\n  viewModel$ = this.popQuizService.quizConfigForm$.pipe(\n    switchMap((formGroup) => formGroup.valueChanges),\n    map((formValue) =>\n      this.popQuizService.marshalFormGroupIntoFormValue(\n        formValue as unknown as QuizConfigFormRawData\n      )\n    ),\n  );\n\n  emitNewFormValue() {\n    this.popQuizService.updateParentFormGroupValue(\n      this.resultsFormGroup().getRawValue()\n    );\n  }\n}\n","import { Component, inject } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatStepperModule } from '@angular/material/stepper';\n\nimport {\n  AnswerGroup,\n  ChoicesOptionsGroup,\n  NgxEditorJs2PopQuizService,\n  QuestionGroup,\n  ResponsesGroup,\n} from '../ngx-editor-js2-pop-quiz.service';\nimport { QuestionComponent } from './steps/question.component';\nimport { ResponsesComponent } from './steps/responses.component';\nimport { ChoicesComponent } from './steps/choices.component';\nimport { AnswerComponent } from './steps/answer.component';\nimport { ResultsComponent } from './steps/results.component';\nimport { combineLatest, map, tap } from 'rxjs';\nimport { AsyncPipe } from '@angular/common';\n\n@Component({\n  selector: 'pop-quiz-config',\n  imports: [\n    AsyncPipe,\n    ReactiveFormsModule,\n    MatStepperModule,\n    QuestionComponent,\n    ResponsesComponent,\n    ChoicesComponent,\n    AnswerComponent,\n    ResultsComponent,\n  ],\n  template: `\n    @if (viewModel$ | async; as vm) {\n    <mat-stepper class=\"mat-stepper\" linear [selectedIndex]=\"vm.selectedIndex\">\n      <mat-step [stepControl]=\"vm.questionGroup\" [completed]=\"vm.completed\">\n        <ng-template matStepLabel>Question?</ng-template>\n        <pop-quiz-question\n          [questionFormGroup]=\"vm.questionGroup\"\n        ></pop-quiz-question>\n      </mat-step>\n      <mat-step\n        [stepControl]=\"vm.choicesOptionsGroup\"\n        [completed]=\"vm.completed\"\n      >\n        <ng-template matStepLabel>Choices</ng-template>\n        <pop-quiz-choices\n          [choicesFormGroup]=\"vm.choicesOptionsGroup\"\n        ></pop-quiz-choices>\n      </mat-step>\n      <mat-step [stepControl]=\"vm.answerGroup\" [completed]=\"vm.completed\">\n        <ng-template matStepLabel>Answer</ng-template>\n        <pop-quiz-answer [answerFormGroup]=\"vm.answerGroup\"></pop-quiz-answer>\n      </mat-step>\n      <mat-step [stepControl]=\"vm.responsesGroup\" [completed]=\"vm.completed\">\n        <ng-template matStepLabel>Responses</ng-template>\n        <pop-quiz-responses\n          [responsesFormGroup]=\"vm.responsesGroup\"\n        ></pop-quiz-responses>\n      </mat-step>\n      <mat-step [stepControl]=\"vm.quizConfigForm\" [completed]=\"vm.completed\">\n        <ng-template matStepLabel>Results</ng-template>\n        <pop-quiz-results\n          [resultsFormGroup]=\"vm.quizConfigForm\"\n        ></pop-quiz-results>\n      </mat-step>\n    </mat-stepper>\n    }\n  `,\n  styles: [\n    `\n      :host {\n        border: 1px solid #ccc;\n        border-radius: var(\n          --mat-card-outlined-container-shape,\n          var(--mat-sys-corner-medium)\n        );\n        pop-quiz-question {\n          padding-top: 1rem;\n        }\n        mat-stepper.mat-stepper-vertical,\n        mat-stepper.mat-stepper-horizontal {\n          background: none;\n        }\n      }\n    `,\n  ],\n})\nexport class PopQuizConfigComponent {\n  popQuizService = inject(NgxEditorJs2PopQuizService);\n\n  viewModel$ = combineLatest({\n    form: this.popQuizService.quizConfigForm$,\n    value: this.popQuizService.quizConfigValue$,\n  }).pipe(\n    map(({ value }) => ({\n      form: this.popQuizService.initializeQuizConfigForm(value),\n      value,\n    })),\n    map(({ form, value }) => ({\n      questionGroup: form.get('questionGroup') as QuestionGroup,\n      choicesOptionsGroup: form.get(\n        'choicesOptionsGroup'\n      ) as ChoicesOptionsGroup,\n      answerGroup: form.get('answerGroup') as AnswerGroup,\n      responsesGroup: form.get('responsesGroup') as ResponsesGroup,\n      quizConfigForm: form,\n      selectedIndex: value.question ? 4 : 0,\n      completed: value.question ? true : false,\n    }))\n  );\n}\n","import { Component, inject, input, signal } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CdkDrag } from '@angular/cdk/drag-drop';\n\nimport {\n  AutofocusDirective,\n  BlockComponent,\n  BlockOptionAction,\n  ControlAccessorDirective,\n  ToolbarFabDirective,\n} from '@tmdjr/ngx-editor-js2';\nimport { PopQuizConfigComponent } from './pop-quiz-config/pop-quiz-config.component';\nimport { NgxEditorJs2PopQuizService } from './ngx-editor-js2-pop-quiz.service';\n\n@Component({\n  selector: 'ngx-editor-js2-pop-quiz',\n  host: { class: 'cdk-drag-animating no-toolbar-inline' },\n  hostDirectives: [CdkDrag],\n  imports: [\n    ReactiveFormsModule,\n    ControlAccessorDirective,\n    AutofocusDirective,\n    ToolbarFabDirective,\n    PopQuizConfigComponent,\n  ],\n  providers: [NgxEditorJs2PopQuizService],\n  template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <span\n        controlAccessor\n        toolbarFab\n        class=\"pop-quiz-container-overlay\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></span>\n      <pop-quiz-config></pop-quiz-config>\n    </ng-container>\n  `,\n  styles: [\n    `\n      :host {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        margin: 1.5rem 0;\n        .pop-quiz-container-overlay {\n          display: flex;\n          height: 100%;\n          width: 100%;\n          position: absolute;\n        }\n      }\n    `,\n  ],\n})\nexport class NgxEditorJs2PopQuizComponent implements BlockComponent {\n  popQuizService = inject(NgxEditorJs2PopQuizService);\n  sortIndex = input<number>(0);\n  componentInstanceName = 'NgxEditorJs2PopQuizComponent';\n  autofocus = input<boolean>(true);\n  formGroup = input.required<FormGroup, FormGroup>({\n    transform: (value) => {\n      this.popQuizService.parentFormGroup = value;\n      return value;\n    },\n  });\n  formControlName = input.required<string, string>({\n    transform: (value) => {\n      this.popQuizService.parentFormControlName = value;\n      return value;\n    },\n  });\n  blockOptionActions = input<BlockOptionAction[]>([\n    { action: 'medium', icon: 'density_small' },\n    { action: 'display-small', icon: 'density_medium' },\n    { action: 'display-large', icon: 'density_large' },\n  ]);\n\n  value = this.popQuizService.quizConfigValue$;\n  savedAction = signal<string>('display-large');\n  actionCallbackBind = this.actionCallback.bind(this);\n\n  ngOnInit() {\n    try {\n      const possibleSavedValue = this.formGroup().get(this.formControlName());\n      this.popQuizService.setQuizConfigValue(\n        possibleSavedValue?.getRawValue()\n          ? JSON.parse(possibleSavedValue.value)\n          : this.popQuizService.quizConfigValue.value\n      );\n    } catch (error) {\n      console.warn('Error parseing Quiz values', error);\n    }\n  }\n\n  actionCallback(action: string) {\n    this.savedAction.update(() => action);\n  }\n}\n","/*\n * Public API Surface of ngx-editor-js2-pop-quiz\n */\n\nexport * from './lib/ngx-editor-js2-pop-quiz.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import * as i0 from '@angular/core';\nimport { inject, ElementRef, input, forwardRef, HostListener, Directive, output, Component, signal, Injectable, ViewContainerRef, effect, InjectionToken, viewChild, EventEmitter, Renderer2, Output } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormControl, ReactiveFormsModule, FormBuilder, FormsModule } from '@angular/forms';\nimport { startWith, combineLatest, map, firstValueFrom, of, from, tap, filter, defaultIfEmpty, Observable, lastValueFrom, forkJoin, iif, switchMap, mergeMap, BehaviorSubject, distinctUntilChanged, delay, exhaustMap, merge, fromEvent, debounceTime } from 'rxjs';\nimport { MatRipple } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/drag-drop';\nimport { CdkDragHandle, CdkDrag, CdkDropList } from '@angular/cdk/drag-drop';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule, Overlay } from '@angular/cdk/overlay';\nimport * as i1$2 from '@angular/material/icon';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport { AsyncPipe, NgTemplateOutlet, NgClass } from '@angular/common';\nimport { toObservable } from '@angular/core/rxjs-interop';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatList, MatListItem, MatListModule } from '@angular/material/list';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\nclass ControlAccessorDirective {\n    elementRef = inject(ElementRef);\n    defaultValue = input();\n    onChange = () => { };\n    onTouched = () => { };\n    writeValue() {\n        this.elementRef.nativeElement.innerHTML = this.defaultValue() || '';\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onBlur() {\n        this.onTouched();\n    }\n    onInput() {\n        this.onChange(this.elementRef.nativeElement.innerHTML);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ControlAccessorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ControlAccessorDirective, isStandalone: true, selector: \"[controlAccessor]\", inputs: { defaultValue: { classPropertyName: \"defaultValue\", publicName: \"defaultValue\", isSignal: true, isRequired: false, transformFunction: null } }, host: { listeners: { \"blur\": \"onBlur()\", \"input\": \"onInput()\" } }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => ControlAccessorDirective),\n                multi: true,\n            },\n        ], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ControlAccessorDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[controlAccessor]',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => ControlAccessorDirective),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], propDecorators: { onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onInput: [{\n                type: HostListener,\n                args: ['input']\n            }] } });\n\nclass AutofocusDirective {\n    elementRef = inject(ElementRef);\n    autofocus = input(false);\n    ngAfterContentInit() {\n        this.autofocus() && this.elementRef.nativeElement.focus?.();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: AutofocusDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: AutofocusDirective, isStandalone: true, selector: \"[autofocus]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: AutofocusDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[autofocus]',\n                }]\n        }] });\n\nvar MovePositionActions;\n(function (MovePositionActions) {\n    MovePositionActions[\"UP\"] = \"UP\";\n    MovePositionActions[\"DOWN\"] = \"DOWN\";\n    MovePositionActions[\"DELETE\"] = \"DELETE\";\n})(MovePositionActions || (MovePositionActions = {}));\n\nclass ToolbarBlockOptionsComponent {\n    Position = MovePositionActions;\n    blockOptionActions = input();\n    handleActionEmitter = output({ alias: 'handleAction' });\n    moveBlockPositionEmitter = output({\n        alias: 'moveBlockPosition',\n    });\n    movePosition(action) {\n        this.moveBlockPositionEmitter.emit(action);\n    }\n    handleAction(action) {\n        this.handleActionEmitter.emit(action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlockOptionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarBlockOptionsComponent, isStandalone: true, selector: \"toolbar-block-options\", inputs: { blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { handleActionEmitter: \"handleAction\", moveBlockPositionEmitter: \"moveBlockPosition\" }, ngImport: i0, template: `\n    <div class=\"actions-panel\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:hover,:host .actions-panel .action-btn:focus{color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"], dependencies: [{ kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlockOptionsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-block-options', imports: [MatIcon, MatRipple], template: `\n    <div class=\"actions-panel\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:hover,:host .actions-panel .action-btn:focus{color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"] }]\n        }] });\n\nclass ToolbarBlocksComponent {\n    addBlockEmitter = output({ alias: 'addBlock' });\n    supportedBlocks = input([]);\n    supportedBlocks$ = toObservable(this.supportedBlocks);\n    blockCtrl = new FormControl([]);\n    filter$ = this.blockCtrl.valueChanges.pipe(startWith(''));\n    filteredBlocks$ = combineLatest([this.supportedBlocks$, this.filter$]).pipe(map(([blocks, filterString]) => {\n        if (typeof filterString !== 'string')\n            filterString = '';\n        filterString = filterString.replace(/\\\\/g, '');\n        const pattern = filterString\n            ?.split('')\n            .map((v) => `(?=.*${v})`)\n            .join('');\n        const regex = new RegExp(`${pattern}`, 'gi');\n        // return blocks.filter(block => regex.exec(block));\n        return blocks.filter((block) => block.name.match(regex));\n    }));\n    addBlock(block) {\n        this.addBlockEmitter.emit(block?.component);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlocksComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarBlocksComponent, isStandalone: true, selector: \"toolbar-blocks\", inputs: { supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { addBlockEmitter: \"addBlock\" }, ngImport: i0, template: `\n    <div class=\"block-list-container\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{border-radius:4px;background:var(--mat-sys-secondary-container);box-shadow:var(--mat-sys-level5)}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:hover,:host mat-list-item:focus{background:var(--mat-sys-surface-bright)}\\n\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"directive\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\", \"disabledInteractive\"], exportAs: [\"matInput\"] }, { kind: \"component\", type: MatList, selector: \"mat-list\", exportAs: [\"matList\"] }, { kind: \"component\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: [\"activated\"], exportAs: [\"matListItem\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatLabel, selector: \"mat-label\" }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlocksComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-blocks', imports: [\n                        MatFormField,\n                        MatInput,\n                        MatList,\n                        MatListItem,\n                        MatRipple,\n                        MatLabel,\n                        ReactiveFormsModule,\n                        AsyncPipe,\n                    ], template: `\n    <div class=\"block-list-container\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{border-radius:4px;background:var(--mat-sys-secondary-container);box-shadow:var(--mat-sys-level5)}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:hover,:host mat-list-item:focus{background:var(--mat-sys-surface-bright)}\\n\"] }]\n        }] });\n\nclass ToolbarComponent {\n    componentContextPositionIndex = input.required();\n    supportedBlocks = input.required();\n    blockOptionActions = input();\n    actionCallback = input(() => () => { });\n    formControlName = input();\n    addBlockCallback = input.required();\n    moveBlockPositionCallback = input.required();\n    openBlocks = signal(false);\n    openBlocksOption = signal(false);\n    openBlocksList() {\n        this.openBlocks.update((prev) => !prev);\n    }\n    openBlockOptionList() {\n        this.openBlocksOption.update((prev) => !prev);\n    }\n    moveBlockPosition(action) {\n        this.closeLists();\n        this.moveBlockPositionCallback()(action, this.componentContextPositionIndex());\n    }\n    handleAction(action) {\n        this.closeLists();\n        this.actionCallback()(action);\n    }\n    addBlock(block) {\n        this.closeLists();\n        firstValueFrom(this.addBlockCallback()(block, this.componentContextPositionIndex()));\n    }\n    closeLists() {\n        this.openBlocks.set(false);\n        this.openBlocksOption.set(false);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ToolbarComponent, isStandalone: true, selector: \"toolbar\", inputs: { componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: false, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: false, transformFunction: null }, addBlockCallback: { classPropertyName: \"addBlockCallback\", publicName: \"addBlockCallback\", isSignal: true, isRequired: true, transformFunction: null }, moveBlockPositionCallback: { classPropertyName: \"moveBlockPositionCallback\", publicName: \"moveBlockPositionCallback\", isSignal: true, isRequired: true, transformFunction: null } }, ngImport: i0, template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, isInline: true, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container);box-shadow:var(--mat-sys-level2)}:host .toolbar-buttons:hover,:host .toolbar-buttons:focus{background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"ngmodule\", type: OverlayModule }, { kind: \"directive\", type: i1.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\", \"cdkConnectedOverlayDisposeOnNavigation\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i1.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"component\", type: ToolbarBlockOptionsComponent, selector: \"toolbar-block-options\", inputs: [\"blockOptionActions\"], outputs: [\"handleAction\", \"moveBlockPosition\"] }, { kind: \"component\", type: ToolbarBlocksComponent, selector: \"toolbar-blocks\", inputs: [\"supportedBlocks\"], outputs: [\"addBlock\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar', imports: [\n                        CdkDragHandle,\n                        MatRipple,\n                        OverlayModule,\n                        ToolbarBlockOptionsComponent,\n                        ToolbarBlocksComponent,\n                    ], template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container);box-shadow:var(--mat-sys-level2)}:host .toolbar-buttons:hover,:host .toolbar-buttons:focus{background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"] }]\n        }] });\n\nclass BlockMovementService {\n    componentRefMap = new Map();\n    clearComponentRefs() {\n        this.componentRefMap.clear();\n    }\n    getNgxEditorJsBlocks() {\n        return of(Array.from(this.componentRefMap.values()));\n    }\n    newComponentAttached(componentRef) {\n        this.componentRefMap.set(componentRef.instance, componentRef);\n    }\n    updateComponentIndices(ngxEditor) {\n        return from(this.componentRefMap.values()).pipe(tap((componentRef) => componentRef.setInput('sortIndex', ngxEditor.indexOf(componentRef.hostView))));\n    }\n    moveBlockComponentPosition(ngxEditor, action, index) {\n        return of(Array.from(this.componentRefMap.values())).pipe(map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), filter((componentRef) => !!componentRef), map((componentRef) => ({\n            componentRef,\n            totalComponents: ngxEditor.length - 1,\n            currentIndex: ngxEditor.indexOf(componentRef.hostView),\n            newIndex: (index) => action === MovePositionActions.UP ? index - 1 : index + 1,\n        })), map(({ componentRef, totalComponents, currentIndex, newIndex }) => ({\n            componentRef,\n            currentIndex,\n            newIndex: Math.max(0, Math.min(newIndex(currentIndex), totalComponents)),\n        })), filter(({ currentIndex, newIndex }) => currentIndex !== newIndex), tap(({ componentRef, newIndex }) => {\n            ngxEditor.move(componentRef.hostView, newIndex);\n            componentRef.setInput('sortIndex', newIndex);\n            componentRef.setInput('autofocus', true);\n        }), defaultIfEmpty(false));\n    }\n    removeBlockComponent(ngxEditor, index, clear = false) {\n        return of(Array.from(this.componentRefMap.values())).pipe(filter((componentRefs) => clear || componentRefs.length !== 1), map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), map((componentRef) => this.componentRefMap.delete(componentRef?.instance ?? {})), tap((successful) => successful && ngxEditor.remove(index - 1)), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nconst createUID = () => Math.random().toString(36).substring(7);\nclass EditorJsService {\n    formBuilder = inject(FormBuilder);\n    blockMovementService = inject(BlockMovementService);\n    componentRefMap = new Map();\n    ngxEditor;\n    formGroup = this.formBuilder.group({});\n    // TODO - Handle this idiomatically\n    setNgxEditor(ngxEditor) {\n        this.ngxEditor = ngxEditor;\n    }\n    getBlocks$() {\n        return new Observable((observer) => {\n            lastValueFrom(this.blockMovementService.getNgxEditorJsBlocks().pipe(map((componentRefs) => componentRefs.map(({ instance }) => ({\n                blockId: instance.formControlName(),\n                sortIndex: instance.sortIndex(),\n                componentInstanceName: instance.componentInstanceName,\n                savedAction: instance.savedAction(),\n                dataClean: instance.formGroup().get(instance.formControlName())\n                    ?.value,\n            }))), map((blocks) => blocks.sort((a, b) => a.sortIndex - b.sortIndex)))).then((blocks) => {\n                observer.next(blocks);\n                observer.complete();\n            });\n        });\n    }\n    createNgxEditorJsBlockWithComponent(blockComponent, componentContextPositionIndex) {\n        return of({\n            blockId: createUID(),\n            sortIndex: componentContextPositionIndex,\n            componentInstanceName: blockComponent.name,\n            component: blockComponent,\n            // TODO - Force content-type for dataClean? JSON, HTML, etc.\n            // TODO - And maybe rename dataClean to just data?\n            dataClean: '',\n            autofocus: true,\n        });\n    }\n    addBlockComponent(ngxEditorJsBlock) {\n        return forkJoin([\n            this.createFormGroupControl(ngxEditorJsBlock),\n            this.attachComponent(ngxEditorJsBlock),\n            this.blockMovementService.updateComponentIndices(this.ngxEditor),\n        ]).pipe(map(() => void 0));\n    }\n    createFormGroupControl({ blockId, dataClean, }) {\n        return of(this.formBuilder.control(dataClean, [])).pipe(tap((formControl) => this.formGroup.addControl(blockId, formControl)));\n    }\n    attachComponent({ component, blockId, autofocus, savedAction, sortIndex: index, }) {\n        return of(blockId).pipe(map((controlName) => {\n            const componentRef = this.ngxEditor.createComponent(component, {\n                index,\n            });\n            componentRef.setInput('sortIndex', index);\n            componentRef.setInput('formGroup', this.formGroup);\n            componentRef.setInput('formControlName', controlName);\n            componentRef.setInput('autofocus', autofocus);\n            savedAction && componentRef.instance.actionCallback?.(savedAction);\n            this.blockMovementService.newComponentAttached(componentRef);\n            return componentRef;\n        }));\n    }\n    determineMovePositionAction(action, index, formControlName) {\n        return iif(() => action === MovePositionActions.DELETE, this.removeBlockComponent(index, formControlName), this.blockMovementService.moveBlockComponentPosition(this.ngxEditor, action, index)).pipe(switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)));\n    }\n    moveBlockComponentPosition(previousIndex, currentIndex) {\n        return of(this.ngxEditor.get(previousIndex)).pipe(filter((viewRef) => !!viewRef), tap((viewRef) => {\n            this.ngxEditor.move(viewRef, currentIndex);\n        }), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), defaultIfEmpty(false));\n    }\n    removeBlockComponent(index, formControlName, clear = false) {\n        return combineLatest([\n            this.blockMovementService.removeBlockComponent(this.ngxEditor, index, clear),\n            of(this.formGroup.removeControl(formControlName)),\n        ]);\n    }\n    clearBlocks() {\n        return this.blockMovementService.getNgxEditorJsBlocks().pipe(filter((componentRefs) => componentRefs.length > 0), map((componentRefs) => componentRefs.sort((a, b) => a.instance.sortIndex() - b.instance.sortIndex())), mergeMap((componentRefs) => forkJoin(Array.from(componentRefs.values()).map((componentRef) => this.removeBlockComponent(componentRef.instance.sortIndex() + 1, componentRef.instance.formControlName(), true)))), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), tap(() => {\n            this.blockMovementService.clearComponentRefs();\n            this.ngxEditor.clear();\n        }), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolFabService {\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    editorJsService = inject(EditorJsService);\n    // I need to explain this in detail so the future me can understand this.\n    componentContext = new BehaviorSubject(null);\n    toolbarComponentRef$ = combineLatest({\n        componentContext: this.componentContext.asObservable(),\n        supportedBlocks: this.ngxEditorJs2Service.supportedBlocks$,\n    }).pipe(filter(({ componentContext }) => componentContext !== null), distinctUntilChanged(({ componentContext: previous }, { componentContext: current }) => previous.index !== current.index ||\n        previous.viewContainerRef !== current.viewContainerRef\n        ? (previous.viewContainerRef.clear(), false)\n        : true), map(({ componentContext, supportedBlocks }) => {\n        const { index, viewContainerRef, blockOptionActions, actionCallback, formControlName, } = componentContext;\n        // TODO We will need to create a ToolbarBottomRailComponent to handle the mobile view\n        const componentRef = viewContainerRef.createComponent(ToolbarComponent);\n        componentRef.setInput('componentContextPositionIndex', index + 1);\n        componentRef.setInput('supportedBlocks', supportedBlocks);\n        componentRef.setInput('blockOptionActions', blockOptionActions);\n        componentRef.setInput('actionCallback', actionCallback);\n        componentRef.setInput('formControlName', formControlName);\n        componentRef.setInput('addBlockCallback', this.addBlock.bind(this));\n        componentRef.setInput('moveBlockPositionCallback', this.movePositionAction.bind(this));\n        return componentRef;\n    }));\n    addBlock(block, index) {\n        return this.editorJsService\n            .createNgxEditorJsBlockWithComponent(block, index)\n            .pipe(switchMap((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    movePositionAction(action, index, formControlName) {\n        return lastValueFrom(this.editorJsService.determineMovePositionAction(action, index, formControlName));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolbarFabDirective {\n    toolFabService = inject(ToolFabService);\n    viewContainerRef = inject(ViewContainerRef);\n    autofocus = input();\n    blockOptionActions = input();\n    actionCallback = input.required();\n    componentContextPositionIndex = input.required();\n    formControlName = input.required();\n    onMouseEnter() {\n        this.toolFabService.componentContext.next({\n            viewContainerRef: this.viewContainerRef,\n            blockOptionActions: this.blockOptionActions() ?? [],\n            actionCallback: this.actionCallback(),\n            index: this.componentContextPositionIndex(),\n            formControlName: this.formControlName(),\n        });\n    }\n    constructor() {\n        effect(() => {\n            this.autofocus() && this.onMouseEnter();\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarFabDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ToolbarFabDirective, isStandalone: true, selector: \"[toolbarFab]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: true, transformFunction: null }, componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null } }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarFabDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[toolbarFab]',\n                }]\n        }], ctorParameters: () => [], propDecorators: { onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }] } });\n\nclass CleanPasteDataDirective {\n    onPaste(event) {\n        event.preventDefault();\n        const text = event.clipboardData?.getData('text/plain');\n        document.execCommand('insertText', false, text);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: CleanPasteDataDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.4\", type: CleanPasteDataDirective, isStandalone: true, selector: \"[cleanPasteData]\", host: { listeners: { \"paste\": \"onPaste($event)\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: CleanPasteDataDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cleanPasteData]',\n                }]\n        }], propDecorators: { onPaste: [{\n                type: HostListener,\n                args: ['paste', ['$event']]\n            }] } });\n\nclass HeaderBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'HeaderBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'h1', text: 'H1' },\n        { action: 'h2', text: 'H2' },\n        { action: 'h3', text: 'H3' },\n        { action: 'h4', text: 'H4' },\n        { action: 'h5', text: 'H5' },\n        { action: 'h6', text: 'H6' },\n    ]);\n    savedAction = signal('h1');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(selectedAction) {\n        this.savedAction.set(selectedAction);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: HeaderBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: HeaderBlockComponent, isStandalone: true, selector: \"header-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n@switch (savedAction()) {\n  @case ('h1') {\n    <h1>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h1>\n  }\n  @case ('h2') {\n    <h2>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h2>\n  }\n  @case ('h3') {\n    <h3>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h3>\n  }\n  @case ('h4') {\n    <h4>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h4>\n  }\n  @case ('h5') {\n    <h5>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h5>\n  }\n  @case ('h6') {\n    <h6>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h6>\n  }\n}\n\n<ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n  <span\n    controlAccessor\n    cleanPasteData\n    contentEditable\n    toolbarFab\n    [defaultValue]=\"formGroup().get(formControlName())?.value\"\n    [actionCallback]=\"actionCallbackBind\"\n    [blockOptionActions]=\"blockOptionActions()\"\n    [autofocus]=\"autofocus()\"\n    [formControlName]=\"formControlName()\"\n    [componentContextPositionIndex]=\"sortIndex()\"\n  ></span>\n</ng-template>\n`, isInline: true, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: HeaderBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'header-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgTemplateOutlet\n                    ], template: `\n@switch (savedAction()) {\n  @case ('h1') {\n    <h1>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h1>\n  }\n  @case ('h2') {\n    <h2>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h2>\n  }\n  @case ('h3') {\n    <h3>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h3>\n  }\n  @case ('h4') {\n    <h4>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h4>\n  }\n  @case ('h5') {\n    <h5>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h5>\n  }\n  @case ('h6') {\n    <h6>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h6>\n  }\n}\n\n<ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n  <span\n    controlAccessor\n    cleanPasteData\n    contentEditable\n    toolbarFab\n    [defaultValue]=\"formGroup().get(formControlName())?.value\"\n    [actionCallback]=\"actionCallbackBind\"\n    [blockOptionActions]=\"blockOptionActions()\"\n    [autofocus]=\"autofocus()\"\n    [formControlName]=\"formControlName()\"\n    [componentContextPositionIndex]=\"sortIndex()\"\n  ></span>\n</ng-template>\n`, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"] }]\n        }] });\n\nclass ParagraphBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'ParagraphBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'small', icon: 'density_small' },\n        { action: 'medium', icon: 'density_medium' },\n        { action: 'large', icon: 'density_large' },\n        { action: 'title-small', text: 'TS' },\n        { action: 'title-medium', text: 'TM' },\n        { action: 'title-large', text: 'TL' },\n    ]);\n    savedAction = signal('medium');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(action) {\n        this.savedAction.update(() => action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ParagraphBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ParagraphBlockComponent, isStandalone: true, selector: \"paragraph-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, isInline: true, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ParagraphBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'paragraph-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgClass,\n                    ], template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"] }]\n        }] });\n\nconst NGX_EDITORJS_OPTIONS = new InjectionToken('NGX_EDITORJS_OPTIONS');\nclass NgxEditorJs2Service {\n    editorJsService = inject(EditorJsService);\n    consumerSupportedBlocks = new BehaviorSubject(inject(NGX_EDITORJS_OPTIONS, { optional: true })?.consumerSupportedBlocks ??\n        []);\n    internalSupportedBlocks = new BehaviorSubject([\n        {\n            name: 'Paragraph',\n            component: ParagraphBlockComponent,\n            componentInstanceName: 'ParagraphBlockComponent',\n        },\n        {\n            name: 'Header',\n            component: HeaderBlockComponent,\n            componentInstanceName: 'HeaderBlockComponent',\n        },\n    ]);\n    supportedBlocks$ = combineLatest([\n        this.internalSupportedBlocks.asObservable(),\n        this.consumerSupportedBlocks.asObservable(),\n    ]).pipe(map(([internal, consumer]) => [...internal, ...consumer]));\n    blocksToLoad = new BehaviorSubject([]);\n    loadBlocks$ = this.blocksToLoad.asObservable().pipe(delay(0), exhaustMap((blocks) => this.clearBlocksFromEditorJs(blocks)), map(([blocks]) => this.determineToloadDefaultBlocks(blocks)), map((blocks) => this.removeDuplicateBlocksWithSameIds(blocks)), map((blocks) => this.sortBlocks(blocks)), switchMap((blocks) => this.combineSupportBlocks(blocks)), map(([blocks, supportedBlocks]) => this.createALookupMapForSupportedBlocks(blocks, supportedBlocks)), map(({ blocks, supportedBlocksMap }) => this.findAndMarshalBlocksComponent(blocks, supportedBlocksMap)), mergeMap((blocks) => this.addBlocksToEditorJs(blocks).pipe(map(() => blocks))));\n    clearBlocksFromEditorJs(blocks) {\n        return forkJoin([of(blocks), this.editorJsService.clearBlocks()]);\n    }\n    determineToloadDefaultBlocks(blocks) {\n        return blocks.length > 0 ? blocks : this.loadDefaultBlocks();\n    }\n    loadDefaultBlocks() {\n        return [\n            {\n                blockId: 'tmdjr',\n                sortIndex: 0,\n                componentInstanceName: 'HeaderBlockComponent',\n                dataClean: \"Let's get started... 🚀\",\n                savedAction: 'h1',\n            },\n        ];\n    }\n    removeDuplicateBlocksWithSameIds(blocks) {\n        return Array.from(new Map(blocks.map((block) => [block.blockId, block])).values());\n    }\n    sortBlocks(blocks) {\n        return blocks.sort((a, b) => a.sortIndex - b.sortIndex);\n    }\n    combineSupportBlocks(blocks) {\n        return combineLatest([of(blocks), this.supportedBlocks$]);\n    }\n    createALookupMapForSupportedBlocks(blocks, supportedBlocks) {\n        return {\n            blocks,\n            supportedBlocksMap: new Map(supportedBlocks.map((sb) => [sb.componentInstanceName, sb.component])),\n        };\n    }\n    findAndMarshalBlocksComponent(blocks, supportedBlocksMap) {\n        return blocks.map((block) => ({\n            ...block,\n            component: supportedBlocksMap.get(block.componentInstanceName) ??\n                HeaderBlockComponent,\n        }));\n    }\n    addBlocksToEditorJs(blocks) {\n        return combineLatest(blocks.map((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass EditorJsComponent {\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    bootstrapEditorJs = input();\n    blocks = input.required({\n        transform: (value) => this.ngxEditorJs2Service.blocksToLoad.next(value),\n    });\n    ngxEditor = viewChild.required('ngxEditor', { read: ViewContainerRef });\n    constructor() {\n        effect(() => {\n            this.editorJsService.setNgxEditor(this.ngxEditor());\n        });\n    }\n    // * DEBUGGING\n    // ngOnInit() {\n    //   this.editorJsService.formGroup.valueChanges.subscribe((value) => {\n    //     console.log('[formGroup.value] : ', value);\n    //   });\n    //   this.editorJsService.blockComponents$.subscribe((components) => {\n    //     console.log('[components] : ', components);\n    //   });\n    // }\n    drop(event) {\n        lastValueFrom(this.editorJsService.moveBlockComponentPosition(event.previousIndex, event.currentIndex)).then(() => {\n            // DRAG ANIMATION HOT FIX\n            // Wait for Angular to update the DOM, then remove the animation class\n            requestAnimationFrame(() => {\n                document.querySelectorAll('.cdk-drag-animating').forEach((el) => {\n                    const element = el;\n                    element.classList.remove('cdk-drag-animating'); // Ensure old class is removed\n                    void element.offsetWidth; // Force reflow\n                    element.classList.add('cdk-drag-animating'); // Re-add for next drag\n                });\n            });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.2.0\", version: \"20.0.4\", type: EditorJsComponent, isStandalone: true, selector: \"editor-js\", inputs: { bootstrapEditorJs: { classPropertyName: \"bootstrapEditorJs\", publicName: \"bootstrapEditorJs\", isSignal: true, isRequired: false, transformFunction: null }, blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: true, transformFunction: null } }, viewQueries: [{ propertyName: \"ngxEditor\", first: true, predicate: [\"ngxEditor\"], descendants: true, read: ViewContainerRef, isSignal: true }], ngImport: i0, template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, isInline: true, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\", \"cdkDropListElementContainer\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'editor-js', imports: [CdkDropList], template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nclass ToolbarInlineComponent {\n    // @Input() selection!: Selection;\n    selection = input.required();\n    closeOverlayEmitter = new EventEmitter();\n    renderer = inject(Renderer2);\n    url = '';\n    showURLInputField = signal(false);\n    savedRanges = [];\n    options = [\n        { icon: 'format_bold', action: 'bold' },\n        { icon: 'format_italic', action: 'italic' },\n        { icon: 'format_underlined', action: 'underline' },\n        { icon: 'strikethrough_s', action: 'strikethrough' },\n        { icon: 'format_list_bulleted', action: 'insertUnorderedList' },\n        { icon: 'format_list_numbered', action: 'insertOrderedList' },\n        { icon: 'highlight', action: 'highlightColor' },\n        { icon: 'format_align_left', action: 'justifyLeft' },\n        { icon: 'format_align_center', action: 'justifyCenter' },\n        { icon: 'format_align_right', action: 'justifyRight' },\n        { icon: 'format_align_justify', action: 'justifyFull' },\n    ];\n    addInlineTag(tag) {\n        // https://stackoverflow.com/questions/60581285/execcommand-is-now-obsolete-whats-the-alternative\n        document.execCommand(tag);\n        this.closeOverlayEmitter.emit();\n    }\n    addClassTag(tag, className) {\n        const range = this.selection().getRangeAt(0);\n        const element = this.renderer.createElement(tag);\n        element.className = className ?? '';\n        element.innerHTML = range.toString();\n        range.deleteContents();\n        range.insertNode(element);\n        this.closeOverlayEmitter.emit();\n    }\n    clearTags() {\n        document.execCommand('removeFormat');\n        document.execCommand('unlink');\n        this.closeOverlayEmitter.emit();\n    }\n    openUrlInput() {\n        this.savedRanges.push(this.selection().getRangeAt(0));\n        this.showURLInputField.set(true);\n    }\n    createLink() {\n        this.selection().removeAllRanges();\n        this.selection().addRange(this.savedRanges.pop());\n        document.execCommand('createLink', false, this.url);\n        this.closeOverlayEmitter.emit();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarInlineComponent, isStandalone: true, selector: \"toolbar-inline\", inputs: { selection: { classPropertyName: \"selection\", publicName: \"selection\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { closeOverlayEmitter: \"closeOverlay\" }, ngImport: i0, template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, isInline: true, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"], dependencies: [{ kind: \"ngmodule\", type: MatListModule }, { kind: \"ngmodule\", type: MatIconModule }, { kind: \"component\", type: i1$2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-inline', imports: [MatListModule, MatIconModule, FormsModule], template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"] }]\n        }], propDecorators: { closeOverlayEmitter: [{\n                type: Output,\n                args: ['closeOverlay']\n            }] } });\n\nclass ToolbarInlineService {\n    overlay = inject(Overlay);\n    overlayRef;\n    determineToDisplayInlineToolbarBlock(_event) {\n        return of(window.getSelection()).pipe(filter((selection) => selection !== null), filter((selection) => selection.rangeCount > 0), filter((selection) => selection.toString().length > 0), filter((selection) => selection.toString() !== ''), tap(() => this.overlayRef?.hasAttached() && this.overlayRef.dispose()), // So hacky tired to do this properly\n        map((selection) => ({\n            selection,\n            parant: this.getSelectionParent(selection),\n        })), filter(({ parant }) => this.isSelectionInABlock(parant)), exhaustMap(({ selection }) => this.attachInlineToolbar(selection)));\n    }\n    getSelectionParent(selection) {\n        const range = selection.getRangeAt(0);\n        return range.commonAncestorContainer.nodeType === Node.ELEMENT_NODE\n            ? range.commonAncestorContainer\n            : range.commonAncestorContainer.parentElement;\n    }\n    isSelectionInABlock(target) {\n        // ! TODO: This is a hacky way to determine if the selection is in a block\n        // ! Need to also check if the block wants to display the inline toolbar\n        return (!!target &&\n            (target.closest('.no-toolbar-inline') !== null\n                ? false\n                : target.closest('ngx-editor-js2') !== null\n                    ? true\n                    : false));\n    }\n    attachInlineToolbar(selection) {\n        return of(selection.getRangeAt(0)).pipe(map((range) => range.getBoundingClientRect()), map((selectionRect) => this.createOverlay(selectionRect)), \n        // So hacky tired to do this properly\n        // passing the refs down the pipe adds a bug\n        // user selects text with a drag\n        // (mousedown → mousemove → wait → mousemove → mouseup)\n        tap((overlayRef) => (this.overlayRef = overlayRef)), map((overlayRef) => {\n            const inlineToolbar = overlayRef.attach(new ComponentPortal(ToolbarInlineComponent));\n            inlineToolbar.setInput('selection', selection);\n            lastValueFrom(merge(overlayRef.backdropClick(), inlineToolbar.instance.closeOverlayEmitter).pipe(tap(() => overlayRef.dispose()), tap(() => selection.removeAllRanges())));\n            return true;\n        }));\n    }\n    createOverlay(selectionRect) {\n        return this.overlay.create({\n            hasBackdrop: true,\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            positionStrategy: this.overlay\n                .position()\n                .flexibleConnectedTo(selectionRect)\n                .withPositions([\n                {\n                    offsetY: 8,\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                },\n            ]),\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass NgxEditorJs2Component {\n    inlineToolbarSerivce = inject(ToolbarInlineService);\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    blocks = input([]);\n    blocksRequested = output();\n    requestBlocks = input.required({\n        transform: (value) => value && this.blocksRequested.emit(this.editorJsService.getBlocks$()),\n    });\n    bootstrapEditorJs$ = combineLatest([\n        inject(ToolFabService).toolbarComponentRef$,\n        this.ngxEditorJs2Service.loadBlocks$,\n        fromEvent(document, 'selectionchange').pipe(debounceTime(200), switchMap((event) => this.inlineToolbarSerivce.determineToDisplayInlineToolbarBlock(event)))\n    ]);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Component, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: NgxEditorJs2Component, isStandalone: true, selector: \"ngx-editor-js2\", inputs: { blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: false, transformFunction: null }, requestBlocks: { classPropertyName: \"requestBlocks\", publicName: \"requestBlocks\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { blocksRequested: \"blocksRequested\" }, ngImport: i0, template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `, isInline: true, dependencies: [{ kind: \"component\", type: EditorJsComponent, selector: \"editor-js\", inputs: [\"bootstrapEditorJs\", \"blocks\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Component, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-editor-js2',\n                    imports: [EditorJsComponent, AsyncPipe],\n                    template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `,\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-editor-js2\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofocusDirective, CleanPasteDataDirective, ControlAccessorDirective, NGX_EDITORJS_OPTIONS, NgxEditorJs2Component, NgxEditorJs2Service, ToolbarFabDirective };\n"],"names":["validateRatioOptions","control","optionsArray","controls","length","notEnoughOptions","NgxEditorJs2PopQuizService","formBuilder","inject","NonNullableFormBuilder","parentFormGroup","parentFormControlName","quizConfigValue","BehaviorSubject","question","answer","choices","correctResponse","incorrectResponse","quizConfigValue$","asObservable","quizConfigForm","group","questionGroup","FormControl","Validators","required","choicesOptionsGroup","array","answerGroup","responsesGroup","quizConfigForm$","setQuizConfigValue","value","next","initializeQuizConfigForm","form","choicesArray","get","forEach","choice","push","requestAnimationFrame","setValue","marshalFormValueIntoFormGroup","updateParentFormGroupValue","JSON","stringify","marshalFormGroupIntoFormValue","factory","ɵfac","QuestionComponent","questionFormGroup","input","ngDevMode","debugName","ɵcmp","selectors","inputs","decls","vars","consts","template","QuestionComponent_Template","rf","ctx","ReactiveFormsModule","i1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","MatFormFieldModule","i2","MatFormField","MatLabel","MatError","MatInput","MatStepperNext","MatButton","styles","ResponsesComponent","responsesFormGroup","ResponsesComponent_Template","MatStepperPrevious","ChoicesComponent","FormBuilder","popQuizService","choicesFormGroup","transform","choicesFormGroupSub","choicesFormGroup$","viewModel$","pipe","map","formGroup","addRatioOption","removeRatioOption","index","removeAt","ChoicesComponent_Template","FormGroupName","FormArrayName","MatButtonModule","i3","MatIconButton","MatIcon","MatDivider","NgClass","AsyncPipe","AnswerComponent","answerFormGroup","choices$","AnswerComponent_Template","RequiredValidator","MatOption","MatSelect","ResultsComponent","resultsFormGroup","switchMap","valueChanges","formValue","emitNewFormValue","getRawValue","ResultsComponent_Template","MatRadioModule","i2$1","MatRadioGroup","MatRadioButton","PopQuizConfigComponent","combineLatest","selectedIndex","completed","PopQuizConfigComponent_Template","MatStepperModule","i1$1","MatStep","MatStepLabel","MatStepper","NgxEditorJs2PopQuizComponent","sortIndex","componentInstanceName","autofocus","formControlName","blockOptionActions","action","icon","savedAction","signal","actionCallbackBind","actionCallback","bind","ngOnInit","possibleSavedValue","parse","error","console","warn","update","hostAttrs","features","i1$2","CdkDrag","NgxEditorJs2PopQuizComponent_Template","ControlAccessorDirective","AutofocusDirective","ToolbarFabDirective","i0","ElementRef","forwardRef","HostListener","Directive","output","Component","Injectable","ViewContainerRef","effect","InjectionToken","viewChild","EventEmitter","Renderer2","Output","NG_VALUE_ACCESSOR","FormsModule","startWith","firstValueFrom","of","from","tap","filter","defaultIfEmpty","Observable","lastValueFrom","forkJoin","iif","mergeMap","distinctUntilChanged","delay","exhaustMap","merge","fromEvent","debounceTime","MatRipple","CdkDragHandle","CdkDropList","OverlayModule","Overlay","MatIconModule","NgTemplateOutlet","toObservable","MatList","MatListItem","MatListModule","ComponentPortal","ToolbarBlockOptionsComponent_For_11_Conditional_1_Template","ɵɵtext","blockOptionAction_r2","ɵɵnextContext","$implicit","ɵɵtextInterpolate1","text","ToolbarBlockOptionsComponent_For_11_Conditional_2_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ToolbarBlockOptionsComponent_For_11_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","ToolbarBlockOptionsComponent_For_11_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵresetView","handleAction","ɵɵconditionalCreate","ɵɵconditional","ToolbarBlocksComponent_Conditional_5_Conditional_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template_mat_list_item_click_0_listener","block_r2","addBlock","name","ToolbarBlocksComponent_Conditional_5_Conditional_2_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIndex","filteredBlocks_r4","ɵɵrepeater","ToolbarBlocksComponent_Conditional_5_Template","ToolbarComponent_ng_template_9_Template","_r2","ToolbarComponent_ng_template_9_Template_toolbar_blocks_addBlock_0_listener","$event","ɵɵproperty","supportedBlocks","ToolbarComponent_ng_template_10_Template","_r4","ToolbarComponent_ng_template_10_Template_toolbar_block_options_handleAction_0_listener","ToolbarComponent_ng_template_10_Template_toolbar_block_options_moveBlockPosition_0_listener","moveBlockPosition","HeaderBlockComponent_Case_0_ng_container_1_Template","ɵɵelementContainer","HeaderBlockComponent_Case_0_Template","ɵɵtemplate","sharedHeaderTemplate_r1","ɵɵreference","HeaderBlockComponent_Case_1_ng_container_1_Template","HeaderBlockComponent_Case_1_Template","HeaderBlockComponent_Case_2_ng_container_1_Template","HeaderBlockComponent_Case_2_Template","HeaderBlockComponent_Case_3_ng_container_1_Template","HeaderBlockComponent_Case_3_Template","HeaderBlockComponent_Case_4_ng_container_1_Template","HeaderBlockComponent_Case_4_Template","HeaderBlockComponent_Case_5_ng_container_1_Template","HeaderBlockComponent_Case_5_Template","HeaderBlockComponent_ng_template_6_Template","ɵɵelement","tmp_2_0","ctx_r1","_c0","ToolbarInlineComponent_For_2_Template","ToolbarInlineComponent_For_2_Template_div_click_0_listener","item_r2","addInlineTag","ToolbarInlineComponent_Conditional_12_Template","ɵɵtwoWayListener","ToolbarInlineComponent_Conditional_12_Template_input_ngModelChange_1_listener","ɵɵtwoWayBindingSet","url","ToolbarInlineComponent_Conditional_12_Template_div_click_2_listener","createLink","ɵɵtwoWayProperty","elementRef","defaultValue","onChange","onTouched","writeValue","nativeElement","innerHTML","registerOnChange","fn","registerOnTouched","onBlur","onInput","ControlAccessorDirective_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","hostBindings","ControlAccessorDirective_HostBindings","ControlAccessorDirective_blur_HostBindingHandler","ControlAccessorDirective_input_HostBindingHandler","ɵɵProvidersFeature","provide","useExisting","multi","ngAfterContentInit","focus","AutofocusDirective_Factory","MovePositionActions","ToolbarBlockOptionsComponent","Position","handleActionEmitter","alias","moveBlockPositionEmitter","movePosition","emit","ToolbarBlockOptionsComponent_Factory","ɵɵdefineComponent","outputs","ToolbarBlockOptionsComponent_Template","ToolbarBlockOptionsComponent_Template_div_click_1_listener","UP","ToolbarBlockOptionsComponent_Template_div_click_4_listener","DELETE","ToolbarBlockOptionsComponent_Template_div_click_7_listener","DOWN","dependencies","ToolbarBlocksComponent","addBlockEmitter","supportedBlocks$","blockCtrl","filter$","filteredBlocks$","blocks","filterString","replace","pattern","split","v","join","regex","RegExp","block","match","component","ToolbarBlocksComponent_Factory","ToolbarBlocksComponent_Template","ɵɵpipe","ɵɵpipeBind1","FormControlDirective","ToolbarComponent","componentContextPositionIndex","addBlockCallback","moveBlockPositionCallback","openBlocks","openBlocksOption","openBlocksList","prev","openBlockOptionList","closeLists","set","ToolbarComponent_Factory","ToolbarComponent_Template","ToolbarComponent_Template_div_click_1_listener","ToolbarComponent_Template_div_click_5_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_9_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_10_listener","blockListTigger_r5","blockOptionListTigger_r6","CdkConnectedOverlay","CdkOverlayOrigin","BlockMovementService","componentRefMap","Map","clearComponentRefs","clear","getNgxEditorJsBlocks","Array","values","newComponentAttached","componentRef","instance","updateComponentIndices","ngxEditor","setInput","indexOf","hostView","moveBlockComponentPosition","componentRefs","find","totalComponents","currentIndex","newIndex","Math","max","min","move","removeBlockComponent","delete","successful","remove","BlockMovementService_Factory","ɵprov","ɵɵdefineInjectable","token","providedIn","createUID","random","toString","substring","EditorJsService","blockMovementService","setNgxEditor","getBlocks$","observer","blockId","dataClean","sort","a","b","then","complete","createNgxEditorJsBlockWithComponent","blockComponent","addBlockComponent","ngxEditorJsBlock","createFormGroupControl","attachComponent","formControl","addControl","controlName","createComponent","determineMovePositionAction","previousIndex","viewRef","removeControl","clearBlocks","EditorJsService_Factory","ToolFabService","ngxEditorJs2Service","NgxEditorJs2Service","editorJsService","componentContext","toolbarComponentRef$","previous","current","viewContainerRef","movePositionAction","ToolFabService_Factory","toolFabService","onMouseEnter","constructor","ToolbarFabDirective_Factory","ToolbarFabDirective_HostBindings","ToolbarFabDirective_mouseenter_HostBindingHandler","CleanPasteDataDirective","onPaste","event","preventDefault","clipboardData","getData","document","execCommand","CleanPasteDataDirective_Factory","CleanPasteDataDirective_HostBindings","CleanPasteDataDirective_paste_HostBindingHandler","HeaderBlockComponent","selectedAction","HeaderBlockComponent_Factory","ɵɵHostDirectivesFeature","HeaderBlockComponent_Template","ɵɵtemplateRefExtractor","tmp_1_0","ParagraphBlockComponent","ParagraphBlockComponent_Factory","ParagraphBlockComponent_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","NGX_EDITORJS_OPTIONS","consumerSupportedBlocks","optional","internalSupportedBlocks","internal","consumer","blocksToLoad","loadBlocks$","clearBlocksFromEditorJs","determineToloadDefaultBlocks","removeDuplicateBlocksWithSameIds","sortBlocks","combineSupportBlocks","createALookupMapForSupportedBlocks","supportedBlocksMap","findAndMarshalBlocksComponent","addBlocksToEditorJs","loadDefaultBlocks","sb","NgxEditorJs2Service_Factory","EditorJsComponent","bootstrapEditorJs","read","drop","querySelectorAll","el","element","classList","offsetWidth","add","EditorJsComponent_Factory","viewQuery","EditorJsComponent_Query","ɵɵviewQuerySignal","ɵɵqueryAdvance","EditorJsComponent_Template","EditorJsComponent_Template_div_cdkDropListDropped_0_listener","ToolbarInlineComponent","selection","closeOverlayEmitter","renderer","showURLInputField","savedRanges","options","tag","addClassTag","className","range","getRangeAt","createElement","deleteContents","insertNode","clearTags","openUrlInput","removeAllRanges","addRange","pop","ToolbarInlineComponent_Factory","ToolbarInlineComponent_Template","ToolbarInlineComponent_Template_div_click_3_listener","ToolbarInlineComponent_Template_div_click_6_listener","ToolbarInlineComponent_Template_div_click_9_listener","NgModel","ToolbarInlineService","overlay","overlayRef","determineToDisplayInlineToolbarBlock","_event","window","getSelection","rangeCount","hasAttached","dispose","parant","getSelectionParent","isSelectionInABlock","attachInlineToolbar","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","parentElement","target","closest","getBoundingClientRect","selectionRect","createOverlay","inlineToolbar","attach","backdropClick","create","hasBackdrop","backdropClass","positionStrategy","position","flexibleConnectedTo","withPositions","offsetY","originX","originY","overlayX","overlayY","ToolbarInlineService_Factory","NgxEditorJs2Component","inlineToolbarSerivce","blocksRequested","requestBlocks","bootstrapEditorJs$","NgxEditorJs2Component_Factory","NgxEditorJs2Component_Template","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[10]}