{"version":3,"file":"1299.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/directionality-CChdj3az.mjs","./node_modules/@angular/cdk/fesm2022/bidi.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, DOCUMENT, signal, EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /** The current 'ltr' or 'rtl' value. */\n    get value() {\n        return this.valueSignal();\n    }\n    /**\n     * The current 'ltr' or 'rtl' value.\n     */\n    valueSignal = signal('ltr');\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n    change = new EventEmitter();\n    constructor() {\n        const _document = inject(DIR_DOCUMENT, { optional: true });\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.valueSignal.set(_resolveDirectionality(bodyDir || htmlDir || 'ltr'));\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { Directionality as D, _resolveDirectionality as _, DIR_DOCUMENT as a };\n","import { _ as _resolveDirectionality, D as Directionality } from './directionality-CChdj3az.mjs';\nexport { a as DIR_DOCUMENT } from './directionality-CChdj3az.mjs';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, signal, Directive, Output, Input, NgModule } from '@angular/core';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    /** Whether the `value` has been set to its initial value. */\n    _isInitialized = false;\n    /** Direction as passed in by the consumer. */\n    _rawDir;\n    /** Event emitted when the direction changes. */\n    change = new EventEmitter();\n    /** @docs-private */\n    get dir() {\n        return this.valueSignal();\n    }\n    set dir(value) {\n        const previousValue = this.valueSignal();\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this.valueSignal.set(_resolveDirectionality(value));\n        this._rawDir = value;\n        if (previousValue !== this.valueSignal() && this._isInitialized) {\n            this.change.emit(this.valueSignal());\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    valueSignal = signal('ltr');\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: Dir, isStandalone: true, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass BidiModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, imports: [Dir], exports: [Dir] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Dir],\n                    exports: [Dir],\n                }]\n        }] });\n\nexport { BidiModule, Dir, Directionality };\n"],"names":["i0","InjectionToken","inject","DOCUMENT","signal","EventEmitter","Injectable","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","value","toLowerCase","navigator","language","test","Directionality","valueSignal","change","constructor","_document","optional","bodyDir","body","dir","htmlDir","documentElement","set","ngOnDestroy","complete","ɵfac","Directionality_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","ngDevMode","D","_","a","Directive","Output","Input","NgModule","Dir","_isInitialized","_rawDir","previousValue","emit","ngAfterContentInit","Dir_Factory","ɵdir","ɵɵdefineDirective","type","selectors","hostVars","hostBindings","Dir_HostBindings","rf","ctx","ɵɵattribute","inputs","outputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","BidiModule","BidiModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}