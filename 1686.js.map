{"version":3,"file":"1686.js","mappings":"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","sources":["./projects/ngx-editor-js2-codemirror/src/lib/ngx-editor-js2-codemirror.component.ts","./projects/ngx-editor-js2-codemirror/src/public-api.ts","./projects/ngx-editor-js2-codemirror/src/tmdjr-ngx-editor-js2-codemirror.ts","./node_modules/@ctrl/ngx-codemirror/fesm2022/ctrl-ngx-codemirror.mjs"],"sourcesContent":["import { Component, input, signal } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CdkDrag } from '@angular/cdk/drag-drop';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\nimport {\n  AutofocusDirective,\n  BlockComponent,\n  BlockOptionAction,\n  ControlAccessorDirective,\n  ToolbarFabDirective,\n} from '@tmdjr/ngx-editor-js2';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'ngx-editor-js2-codemirror',\n  host: { class: 'cdk-drag-animating no-toolbar-inline' },\n  hostDirectives: [CdkDrag],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    ControlAccessorDirective,\n    AutofocusDirective,\n    ToolbarFabDirective,\n    CodemirrorModule,\n  ],\n  template: `\n  @if( waitForAnimation() ) {\n    <ng-container [formGroup]=\"formGroup()\">\n      <span controlAccessor [autofocus]=\"autofocus()\"></span>\n      <ngx-codemirror\n        class=\"fade-in\"\n        toolbarFab\n        [actionCallback]=\"actionCallbackBind\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n        [options]=\"codeMirrorOptions()\"\n      ></ngx-codemirror>\n    </ng-container>\n  }\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        position: relative;\n        margin: 1.5rem 0;\n        .codemirror-container-overlay {\n          display: flex;\n          height: 100%;\n          width: 100%;\n          position: absolute;\n        }\n      }\n\n      :host .fade-in {\n        animation: fadeIn 0.25s ease-in-out;\n      }\n\n      @keyframes fadeIn {\n        from {\n          opacity: 0;\n        }\n        to {\n          opacity: 1;\n        }\n      }\n\n      :host ::ng-deep .CodeMirror {\n        font-family: Cascadia Code, Fira Code, Menlo, Monaco, 'Courier New',\n          monospace;\n        font-size: 16px;\n        font-weight: 400;\n        line-height: 32px;\n        letter-spacing: 0.5px;\n        height: 100%;\n      }\n    `,\n  ],\n})\nexport class NgxEditorJs2CodemirrorComponent implements BlockComponent {\n  sortIndex = input<number>(0);\n  componentInstanceName = 'NgxEditorJs2CodemirrorComponent';\n  autofocus = input<boolean>(true);\n  formGroup = input.required<FormGroup>();\n  formControlName = input.required<string>();\n  blockOptionActions = input<BlockOptionAction[]>([\n    { action: 'text/typescript', icon: 'javascript' },\n    { action: 'css', icon: 'css' },\n    { action: 'xml', icon: 'html' },\n  ]);\n\n  codeMirrorOptions = signal({\n    lineNumbers: true,\n    theme: 'material-palenight',\n    mode: 'text/typescript',\n    extraKeys: { 'Ctrl-Space': 'autocomplete' },\n    styleActiveLine: true, // Highlight active line\n    matchBrackets: true,\n    indentUnit: 2,\n    tabSize: 2,\n    cursorScrollMargin: 5,\n  });\n\n  savedAction = signal<string>('display-large');\n  actionCallbackBind = this.actionCallback.bind(this);\n\n  actionCallback(action: string) {\n    this.codeMirrorOptions.update((prev) => ({ ...prev, mode: action }));\n    this.savedAction.update(() => action);\n  }\n\n  // ! Hotfix for perspective: 2500px;\n  // Need create a delay to wait for the animation to finish before showing the component\n  waitForAnimation = signal<boolean>(false);\n  constructor() {\n    setTimeout(() => {\n      this.waitForAnimation.update(() => true);\n    }, 500);\n  }\n}\n","/*\n * Public API Surface of ngx-editor-js2-codemirror\n */\n\nexport * from './lib/ngx-editor-js2-codemirror.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nfunction normalizeLineEndings(str) {\n    if (!str) {\n        return str;\n    }\n    return str.replace(/\\r\\n|\\r/g, '\\n');\n}\nclass CodemirrorComponent {\n    _differs;\n    _ngZone;\n    /* class applied to the created textarea */\n    className = '';\n    /* name applied to the created textarea */\n    name = 'codemirror';\n    /* autofocus setting applied to the created textarea */\n    autoFocus = false;\n    /**\n     * set options for codemirror\n     * @link http://codemirror.net/doc/manual.html#config\n     */\n    set options(value) {\n        this._options = value;\n        if (!this._differ && value) {\n            this._differ = this._differs.find(value).create();\n        }\n    }\n    /* preserve previous scroll position after updating value */\n    preserveScrollPosition = false;\n    /* called when the text cursor is moved */\n    cursorActivity = new EventEmitter();\n    /* called when the editor is focused or loses focus */\n    focusChange = new EventEmitter();\n    /* called when the editor is scrolled */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    scroll = new EventEmitter();\n    /* called when file(s) are dropped */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    drop = new EventEmitter();\n    /* called when codeMirror instance is initiated on the component */\n    codeMirrorLoaded = new EventEmitter();\n    ref;\n    value = '';\n    disabled = false;\n    isFocused = false;\n    codeMirror;\n    /**\n     * either global variable or required library\n     */\n    _codeMirror;\n    _differ;\n    _options;\n    constructor(_differs, _ngZone) {\n        this._differs = _differs;\n        this._ngZone = _ngZone;\n    }\n    get codeMirrorGlobal() {\n        if (this._codeMirror) {\n            return this._codeMirror;\n        }\n        // in order to allow for universal rendering, we import Codemirror runtime with `require` to prevent node errors\n        this._codeMirror = typeof CodeMirror !== 'undefined' ? CodeMirror : import('codemirror');\n        return this._codeMirror;\n    }\n    ngAfterViewInit() {\n        this._ngZone.runOutsideAngular(async () => {\n            const codeMirrorObj = await this.codeMirrorGlobal;\n            const codeMirror = codeMirrorObj?.default ? codeMirrorObj.default : codeMirrorObj;\n            this.codeMirror = codeMirror.fromTextArea(this.ref.nativeElement, this._options);\n            this.codeMirror.on('cursorActivity', cm => this._ngZone.run(() => this.cursorActive(cm)));\n            this.codeMirror.on('scroll', this.scrollChanged.bind(this));\n            this.codeMirror.on('blur', () => this._ngZone.run(() => this.focusChanged(false)));\n            this.codeMirror.on('focus', () => this._ngZone.run(() => this.focusChanged(true)));\n            this.codeMirror.on('change', (cm, change) => this._ngZone.run(() => this.codemirrorValueChanged(cm, change)));\n            this.codeMirror.on('drop', (cm, e) => {\n                this._ngZone.run(() => this.dropFiles(cm, e));\n            });\n            this.codeMirror.setValue(this.value);\n            this.codeMirrorLoaded.emit(this);\n        });\n    }\n    ngDoCheck() {\n        if (!this._differ) {\n            return;\n        }\n        // check options have not changed\n        const changes = this._differ.diff(this._options);\n        if (changes) {\n            changes.forEachChangedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n            changes.forEachAddedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n            changes.forEachRemovedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n        }\n    }\n    ngOnDestroy() {\n        // is there a lighter-weight way to remove the cm instance?\n        if (this.codeMirror) {\n            this.codeMirror.toTextArea();\n        }\n    }\n    codemirrorValueChanged(cm, change) {\n        const cmVal = cm.getValue();\n        if (this.value !== cmVal) {\n            this.value = cmVal;\n            this.onChange(this.value);\n        }\n    }\n    setOptionIfChanged(optionName, newValue) {\n        if (!this.codeMirror) {\n            return;\n        }\n        // cast to any to handle strictly typed option names\n        // could possibly import settings strings available in the future\n        this.codeMirror.setOption(optionName, newValue);\n    }\n    focusChanged(focused) {\n        this.onTouched();\n        this.isFocused = focused;\n        this.focusChange.emit(focused);\n    }\n    scrollChanged(cm) {\n        this.scroll.emit(cm.getScrollInfo());\n    }\n    cursorActive(cm) {\n        this.cursorActivity.emit(cm);\n    }\n    dropFiles(cm, e) {\n        this.drop.emit([cm, e]);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        if (value === null || value === undefined) {\n            return;\n        }\n        if (!this.codeMirror) {\n            this.value = value;\n            return;\n        }\n        const cur = this.codeMirror.getValue();\n        if (value !== cur && normalizeLineEndings(cur) !== normalizeLineEndings(value)) {\n            this.value = value;\n            if (this.preserveScrollPosition) {\n                const prevScrollPosition = this.codeMirror.getScrollInfo();\n                this.codeMirror.setValue(this.value);\n                this.codeMirror.scrollTo(prevScrollPosition.left, prevScrollPosition.top);\n            }\n            else {\n                this.codeMirror.setValue(this.value);\n            }\n        }\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.setOptionIfChanged('readOnly', this.disabled);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    onChange = (_) => { };\n    /** Implemented as part of ControlValueAccessor. */\n    onTouched = () => { };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorComponent, deps: [{ token: i0.KeyValueDiffers }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.1\", type: CodemirrorComponent, selector: \"ngx-codemirror\", inputs: { className: \"className\", name: \"name\", autoFocus: \"autoFocus\", options: \"options\", preserveScrollPosition: \"preserveScrollPosition\" }, outputs: { cursorActivity: \"cursorActivity\", focusChange: \"focusChange\", scroll: \"scroll\", drop: \"drop\", codeMirrorLoaded: \"codeMirrorLoaded\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => CodemirrorComponent),\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"ref\", first: true, predicate: [\"ref\"], descendants: true }], ngImport: i0, template: `\n    <textarea\n      [name]=\"name\"\n      class=\"ngx-codemirror {{ className }}\"\n      [class.ngx-codemirror--focused]=\"isFocused\"\n      autocomplete=\"off\"\n      [autofocus]=\"autoFocus\"\n      #ref\n    >\n    </textarea>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-codemirror',\n                    template: `\n    <textarea\n      [name]=\"name\"\n      class=\"ngx-codemirror {{ className }}\"\n      [class.ngx-codemirror--focused]=\"isFocused\"\n      autocomplete=\"off\"\n      [autofocus]=\"autoFocus\"\n      #ref\n    >\n    </textarea>\n  `,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => CodemirrorComponent),\n                            multi: true,\n                        },\n                    ],\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.KeyValueDiffers }, { type: i0.NgZone }]; }, propDecorators: { className: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], preserveScrollPosition: [{\n                type: Input\n            }], cursorActivity: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], scroll: [{\n                type: Output\n            }], drop: [{\n                type: Output\n            }], codeMirrorLoaded: [{\n                type: Output\n            }], ref: [{\n                type: ViewChild,\n                args: ['ref']\n            }] } });\n\nclass CodemirrorModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, declarations: [CodemirrorComponent], exports: [CodemirrorComponent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CodemirrorComponent],\n                    declarations: [CodemirrorComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CodemirrorComponent, CodemirrorModule };\n"],"names":["NgxEditorJs2CodemirrorComponent","sortIndex","input","componentInstanceName","autofocus","formGroup","required","formControlName","blockOptionActions","action","icon","codeMirrorOptions","signal","lineNumbers","theme","mode","extraKeys","styleActiveLine","matchBrackets","indentUnit","tabSize","cursorScrollMargin","savedAction","actionCallbackBind","actionCallback","bind","update","prev","waitForAnimation","constructor","setTimeout","ɵcmp","selectors","hostAttrs","inputs","features","i1","CdkDrag","decls","vars","consts","template","NgxEditorJs2CodemirrorComponent_Template","rf","ctx","CommonModule","ReactiveFormsModule","i2","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","ControlAccessorDirective","AutofocusDirective","ToolbarFabDirective","CodemirrorModule","i3","CodemirrorComponent","styles","i0","EventEmitter","forwardRef","Component","ChangeDetectionStrategy","Input","Output","ViewChild","NgModule","NG_VALUE_ACCESSOR","_c0","normalizeLineEndings","str","replace","_differs","_ngZone","className","name","autoFocus","options","value","_options","_differ","find","create","preserveScrollPosition","cursorActivity","focusChange","scroll","drop","codeMirrorLoaded","ref","disabled","isFocused","codeMirror","_codeMirror","codeMirrorGlobal","CodeMirror","ngAfterViewInit","_this","runOutsideAngular","_asyncToGenerator","codeMirrorObj","default","fromTextArea","nativeElement","on","cm","run","cursorActive","scrollChanged","focusChanged","change","codemirrorValueChanged","e","dropFiles","setValue","emit","ngDoCheck","changes","diff","forEachChangedItem","option","setOptionIfChanged","key","currentValue","forEachAddedItem","forEachRemovedItem","ngOnDestroy","toTextArea","cmVal","getValue","onChange","optionName","newValue","setOption","focused","onTouched","getScrollInfo","writeValue","undefined","cur","prevScrollPosition","scrollTo","left","top","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_","ɵfac","CodemirrorComponent_Factory","__ngFactoryType__","ɵɵdirectiveInject","KeyValueDiffers","NgZone","ɵɵdefineComponent","type","viewQuery","CodemirrorComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","outputs","standalone","ɵɵProvidersFeature","provide","useExisting","multi","CodemirrorComponent_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassMapInterpolate1","ɵɵclassProp","ɵɵproperty","encapsulation","changeDetection","ngDevMode","CodemirrorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[3]}