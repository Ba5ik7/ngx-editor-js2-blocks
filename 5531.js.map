{"version":3,"file":"5531.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/platform-DNDzkVcI.mjs","./node_modules/@angular/cdk/fesm2022/breakpoints-observer-QutrMj4x.mjs","./node_modules/@angular/cdk/fesm2022/layout.mjs","./node_modules/@angular/cdk/fesm2022/array-I1yfCXUO.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    _platformId = inject(PLATFORM_ID);\n    // We want to use the Angular platform check because if the Document is shimmed\n    // without the navigator, the following checks will fail. This is preferred because\n    // sometimes the Document may be shimmed without the user's knowledge or intention\n    /** Whether the Angular application is being rendered in the browser. */\n    isBrowser = this._platformId\n        ? isPlatformBrowser(this._platformId)\n        : typeof document === 'object' && !!document;\n    /** Whether the current browser is Microsoft Edge. */\n    EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n    /** Whether the current rendering engine is Microsoft Trident. */\n    TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n    // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n    /** Whether the current rendering engine is Blink. */\n    BLINK = this.isBrowser &&\n        !!(window.chrome || hasV8BreakIterator) &&\n        typeof CSS !== 'undefined' &&\n        !this.EDGE &&\n        !this.TRIDENT;\n    // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n    // ensure that Webkit runs standalone and is not used as another engine's base.\n    /** Whether the current rendering engine is WebKit. */\n    WEBKIT = this.isBrowser &&\n        /AppleWebKit/i.test(navigator.userAgent) &&\n        !this.BLINK &&\n        !this.EDGE &&\n        !this.TRIDENT;\n    /** Whether the current platform is Apple iOS. */\n    IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n    // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n    // them self as Gecko-like browsers and modify the userAgent's according to that.\n    // Since we only cover one explicit Firefox case, we can simply check for Firefox\n    // instead of having an unstable check for Gecko.\n    /** Whether the current browser is Firefox. */\n    FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n    /** Whether the current platform is Android. */\n    // Trident on mobile adds the android platform to the userAgent to trick detections.\n    ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n    // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n    // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n    // Safari browser should also use Webkit as its layout engine.\n    /** Whether the current browser is Safari. */\n    SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { Platform as P };\n","import * as i0 from '@angular/core';\nimport { inject, CSP_NONCE, Injectable, NgZone } from '@angular/core';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { c as coerceArray } from './array-I1yfCXUO.mjs';\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    _platform = inject(Platform);\n    _nonce = inject(CSP_NONCE, { optional: true });\n    /** The internal matchMedia method to return back a MediaQueryList like object. */\n    _matchMedia;\n    constructor() {\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query, this._nonce);\n        }\n        return this._matchMedia(query);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MediaMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MediaMatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            if (nonce) {\n                mediaQueryStyleNode.setAttribute('nonce', nonce);\n            }\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/** Utility for checking the matching state of `@media` queries. */\nclass BreakpointObserver {\n    _mediaMatcher = inject(MediaMatcher);\n    _zone = inject(NgZone);\n    /**  A map of all media queries currently being listened for. */\n    _queries = new Map();\n    /** A subject for all other observables to takeUntil based on. */\n    _destroySubject = new Subject();\n    constructor() { }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BreakpointObserver, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\nexport { BreakpointObserver as B, MediaMatcher as M };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nexport { B as BreakpointObserver, M as MediaMatcher } from './breakpoints-observer-QutrMj4x.mjs';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport './platform-DNDzkVcI.mjs';\nimport '@angular/common';\nimport './array-I1yfCXUO.mjs';\n\nclass LayoutModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: LayoutModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LayoutModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\nexport { Breakpoints, LayoutModule };\n","function coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\nexport { coerceArray as c };\n"],"names":["i0","inject","PLATFORM_ID","Injectable","isPlatformBrowser","hasV8BreakIterator","Intl","v8BreakIterator","Platform","_platformId","isBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","constructor","ɵfac","Platform_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","P","CSP_NONCE","NgZone","Subject","combineLatest","concat","Observable","take","skip","debounceTime","map","startWith","takeUntil","c","coerceArray","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_nonce","optional","_matchMedia","matchMedia","bind","noopMatchMedia","query","createEmptyStyleRule","MediaMatcher_Factory","nonce","has","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","ngOnDestroy","next","complete","isMatched","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observe","observables","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","get","queryObservable","observer","handler","run","output","set","BreakpointObserver_Factory","split","reduce","a1","a2","trim","B","M","NgModule","LayoutModule","LayoutModule_Factory","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","Array","isArray"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3]}