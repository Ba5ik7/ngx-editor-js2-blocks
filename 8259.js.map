{"version":3,"file":"8259.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/common-module-cKSwHniA.mjs","./node_modules/@angular/material/fesm2022/module-CWxMD37a.mjs","./node_modules/@angular/material/fesm2022/animation-DfMFjxHu.mjs","./node_modules/@angular/material/fesm2022/tooltip.mjs"],"sourcesContent":["import { HighContrastModeDetector } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgModule } from '@angular/core';\n\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @deprecated No longer used and will be removed.\n * @breaking-change 21.0.0\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: () => true,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n * @deprecated No longer used and will be removed.\n * @breaking-change 21.0.0\n */\nclass MatCommonModule {\n    constructor() {\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        inject(HighContrastModeDetector)._applyBodyHighContrastModeCssClasses();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule, BidiModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: () => [] });\n\nexport { MatCommonModule as M, MATERIAL_SANITY_CHECKS as a };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, ElementRef, NgZone, ViewContainerRef, afterNextRender, DOCUMENT, Directive, Input, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { createRepositionScrollStrategy, ScrollDispatcher, createFlexibleConnectedPositionStrategy, createOverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NgClass } from '@angular/common';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(Injector);\n        return () => createRepositionScrollStrategy(injector, { scrollThrottle: SCROLL_THROTTLE_MS });\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(_overlay) {\n    const injector = inject(Injector);\n    return () => createRepositionScrollStrategy(injector, { scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _ariaDescriber = inject(AriaDescriber);\n    _focusMonitor = inject(FocusMonitor);\n    _dir = inject(Directionality);\n    _injector = inject(Injector);\n    _viewContainerRef = inject(ViewContainerRef);\n    _animationsDisabled = _animationsDisabled();\n    _defaultOptions = inject(MAT_TOOLTIP_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    _overlayRef;\n    _tooltipInstance;\n    _overlayPanelClass; // Used for styling internally.\n    _portal;\n    _position = 'below';\n    _positionAtOrigin = false;\n    _disabled = false;\n    _tooltipClass;\n    _viewInitialized = false;\n    _pointerExitEventsInitialized = false;\n    _tooltipComponent = TooltipComponent;\n    _viewportMargin = 8;\n    _currentPosition;\n    _cssClassPrefix = 'mat-mdc';\n    _ariaDescriptionPending;\n    _dirSubscribed = false;\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        const isDisabled = coerceBooleanProperty(value);\n        if (this._disabled !== isDisabled) {\n            this._disabled = isDisabled;\n            // If tooltip is disabled, hide immediately.\n            if (isDisabled) {\n                this.hide(0);\n            }\n            else {\n                this._setupPointerEnterEventsIfNeeded();\n            }\n            this._syncAriaDescription(this.message);\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    _showDelay;\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    _hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     */\n    touchGestures = 'auto';\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        const oldMessage = this._message;\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n        }\n        this._syncAriaDescription(oldMessage);\n    }\n    _message = '';\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /** Manually-bound passive event listeners. */\n    _passiveListeners = [];\n    /** Timer started at the last `touchstart` event. */\n    _touchstartTimeout = null;\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Whether ngOnDestroyed has been called. */\n    _isDestroyed = false;\n    constructor() {\n        const defaultOptions = this._defaultOptions;\n        if (defaultOptions) {\n            this._showDelay = defaultOptions.showDelay;\n            this._hideDelay = defaultOptions.hideDelay;\n            if (defaultOptions.position) {\n                this.position = defaultOptions.position;\n            }\n            if (defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = defaultOptions.positionAtOrigin;\n            }\n            if (defaultOptions.touchGestures) {\n                this.touchGestures = defaultOptions.touchGestures;\n            }\n            if (defaultOptions.tooltipClass) {\n                this.tooltipClass = defaultOptions.tooltipClass;\n            }\n        }\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        // Optimization: Do not call clearTimeout unless there is an active timer.\n        if (this._touchstartTimeout) {\n            clearTimeout(this._touchstartTimeout);\n        }\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._injector\n            .get(ScrollDispatcher)\n            .getAncestorScrollContainers(this._elementRef);\n        const panelClass = `${this._cssClassPrefix}-${PANEL_CLASS}`;\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = createFlexibleConnectedPositionStrategy(this._injector, this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = createOverlayRef(this._injector, {\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: this._overlayPanelClass ? [...this._overlayPanelClass, panelClass] : panelClass,\n            scrollStrategy: this._injector.get(MAT_TOOLTIP_SCROLL_STRATEGY)(),\n            disableAnimations: this._animationsDisabled,\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        if (!this._dirSubscribed) {\n            this._dirSubscribed = true;\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._overlayRef) {\n                    this._updatePosition(this._overlayRef);\n                }\n            });\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            afterNextRender(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            }, {\n                injector: this._injector,\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    if (this._touchstartTimeout) {\n                        clearTimeout(this._touchstartTimeout);\n                    }\n                    const DEFAULT_LONGPRESS_DELAY = 500;\n                    this._touchstartTimeout = setTimeout(() => {\n                        this._touchstartTimeout = null;\n                        this.show(undefined, origin);\n                    }, this._defaultOptions?.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                if (this._touchstartTimeout) {\n                    clearTimeout(this._touchstartTimeout);\n                }\n                this.hide(this._defaultOptions?.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._injector\n                .get(DOCUMENT)\n                .elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    /** Updates the tooltip's ARIA description based on it current state. */\n    _syncAriaDescription(oldMessage) {\n        if (this._ariaDescriptionPending) {\n            return;\n        }\n        this._ariaDescriptionPending = true;\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, oldMessage, 'tooltip');\n        // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n        // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n        // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n        // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n        if (!this._isDestroyed) {\n            afterNextRender({\n                write: () => {\n                    this._ariaDescriptionPending = false;\n                    if (this.message && !this.disabled) {\n                        this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                    }\n                },\n            }, { injector: this._injector });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltip, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatTooltip, isStandalone: true, selector: \"[matTooltip]\", inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, host: { properties: { \"class.mat-mdc-tooltip-disabled\": \"disabled\" }, classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                        '[class.mat-mdc-tooltip-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    /* Whether the tooltip text overflows to multiple lines */\n    _isMultiline = false;\n    /** Message to display in the tooltip */\n    message;\n    /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n    tooltipClass;\n    /** The timeout ID of any current timer set to show the tooltip */\n    _showTimeoutId;\n    /** The timeout ID of any current timer set to hide the tooltip */\n    _hideTimeoutId;\n    /** Element that caused the tooltip to open. */\n    _triggerElement;\n    /** Amount of milliseconds to delay the closing sequence. */\n    _mouseLeaveHideDelay;\n    /** Whether animations are currently disabled. */\n    _animationsDisabled = _animationsDisabled();\n    /** Reference to the internal tooltip element. */\n    _tooltip;\n    /** Whether interactions on the page should close the tooltip */\n    _closeOnInteraction = false;\n    /** Whether the tooltip is currently visible. */\n    _isVisible = false;\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    _onHide = new Subject();\n    /** Name of the show animation and the class that toggles it. */\n    _showAnimation = 'mat-mdc-tooltip-show';\n    /** Name of the hide animation and the class that toggles it. */\n    _hideAnimation = 'mat-mdc-tooltip-hide';\n    constructor() { }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        if (this._isVisible !== isVisible) {\n            this._isVisible = isVisible;\n            this._changeDetectorRef.markForCheck();\n        }\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TooltipComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: TooltipComponent, isStandalone: true, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mat-mdc-tooltip-surface mdc-tooltip__surface\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mat-tooltip-container-color, var(--mat-sys-inverse-surface));color:var(--mat-tooltip-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mat-tooltip-container-shape, var(--mat-sys-corner-extra-small));font-family:var(--mat-tooltip-supporting-text-font, var(--mat-sys-body-small-font));font-size:var(--mat-tooltip-supporting-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-tooltip-supporting-text-weight, var(--mat-sys-body-small-weight));line-height:var(--mat-tooltip-supporting-text-line-height, var(--mat-sys-body-small-line-height));letter-spacing:var(--mat-tooltip-supporting-text-tracking, var(--mat-sys-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel{line-height:normal}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\\n\"], dependencies: [{ kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, imports: [NgClass], template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mat-mdc-tooltip-surface mdc-tooltip__surface\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mat-tooltip-container-color, var(--mat-sys-inverse-surface));color:var(--mat-tooltip-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mat-tooltip-container-shape, var(--mat-sys-corner-extra-small));font-family:var(--mat-tooltip-supporting-text-font, var(--mat-sys-body-small-font));font-size:var(--mat-tooltip-supporting-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-tooltip-supporting-text-weight, var(--mat-sys-body-small-weight));line-height:var(--mat-tooltip-supporting-text-line-height, var(--mat-sys-body-small-line-height));letter-spacing:var(--mat-tooltip-supporting-text-tracking, var(--mat-sys-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel{line-height:normal}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\nclass MatTooltipModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, imports: [A11yModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\nexport { MAT_TOOLTIP_SCROLL_STRATEGY as M, SCROLL_THROTTLE_MS as S, TOOLTIP_PANEL_CLASS as T, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY as a, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER as b, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY as c, MAT_TOOLTIP_DEFAULT_OPTIONS as d, MatTooltip as e, TooltipComponent as f, getMatTooltipInvalidPositionError as g, MatTooltipModule as h };\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { InjectionToken, inject, ANIMATION_MODULE_TYPE } from '@angular/core';\n\n/** Injection token used to configure the animations in Angular Material. */\nconst MATERIAL_ANIMATIONS = new InjectionToken('MATERIAL_ANIMATIONS');\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationCurves {\n    static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationDurations {\n    static COMPLEX = '375ms';\n    static ENTERING = '225ms';\n    static EXITING = '195ms';\n}\n/**\n * Returns whether animations have been disabled by DI. Must be called in a DI context.\n * @docs-private\n */\nfunction _animationsDisabled() {\n    if (inject(MATERIAL_ANIMATIONS, { optional: true })?.animationsDisabled ||\n        inject(ANIMATION_MODULE_TYPE, { optional: true }) === 'NoopAnimations') {\n        return true;\n    }\n    const mediaMatcher = inject(MediaMatcher);\n    return mediaMatcher.matchMedia('(prefers-reduced-motion)').matches;\n}\n\nexport { AnimationCurves as A, MATERIAL_ANIMATIONS as M, _animationsDisabled as _, AnimationDurations as a };\n","export { d as MAT_TOOLTIP_DEFAULT_OPTIONS, c as MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, M as MAT_TOOLTIP_SCROLL_STRATEGY, a as MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, b as MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, e as MatTooltip, h as MatTooltipModule, S as SCROLL_THROTTLE_MS, T as TOOLTIP_PANEL_CLASS, f as TooltipComponent, g as getMatTooltipInvalidPositionError } from './module-CWxMD37a.mjs';\nimport '@angular/core';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/overlay';\nimport '@angular/cdk/scrolling';\nimport 'rxjs/operators';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/keycodes';\nimport '@angular/common';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/bidi';\nimport '@angular/cdk/portal';\nimport 'rxjs';\nimport './animation-DfMFjxHu.mjs';\nimport '@angular/cdk/layout';\nimport './common-module-cKSwHniA.mjs';\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n * @deprecated No longer being used, to be removed.\n * @breaking-change 21.0.0\n */\nconst matTooltipAnimations = {\n    // Represents:\n    // trigger('state', [\n    //   state('initial, void, hidden', style({opacity: 0, transform: 'scale(0.8)'})),\n    //   state('visible', style({transform: 'scale(1)'})),\n    //   transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n    //   transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n    // ])\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: {\n        type: 7,\n        name: 'state',\n        definitions: [\n            {\n                type: 0,\n                name: 'initial, void, hidden',\n                styles: { type: 6, styles: { opacity: 0, transform: 'scale(0.8)' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'visible',\n                styles: { type: 6, styles: { transform: 'scale(1)' }, offset: null },\n            },\n            {\n                type: 1,\n                expr: '* => visible',\n                animation: { type: 4, styles: null, timings: '150ms cubic-bezier(0, 0, 0.2, 1)' },\n                options: null,\n            },\n            {\n                type: 1,\n                expr: '* => hidden',\n                animation: { type: 4, styles: null, timings: '75ms cubic-bezier(0.4, 0, 1, 1)' },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { matTooltipAnimations };\n"],"names":["HighContrastModeDetector","BidiModule","i0","InjectionToken","inject","NgModule","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","constructor","_applyBodyHighContrastModeCssClasses","ɵfac","MatCommonModule_Factory","__ngFactoryType__","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ngDevMode","M","a","Injector","ElementRef","NgZone","ViewContainerRef","afterNextRender","DOCUMENT","Directive","Input","ChangeDetectorRef","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","AriaDescriber","FocusMonitor","A11yModule","createRepositionScrollStrategy","ScrollDispatcher","createFlexibleConnectedPositionStrategy","createOverlayRef","OverlayModule","CdkScrollableModule","takeUntil","coerceBooleanProperty","coerceNumberProperty","ESCAPE","hasModifierKey","NgClass","normalizePassiveListenerOptions","Platform","Directionality","ComponentPortal","Subject","_","_animationsDisabled","_c0","SCROLL_THROTTLE_MS","getMatTooltipInvalidPositionError","position","Error","MAT_TOOLTIP_SCROLL_STRATEGY","injector","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","_overlay","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","useFactory","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MAT_TOOLTIP_DEFAULT_OPTIONS","TOOLTIP_PANEL_CLASS","PANEL_CLASS","passiveListenerOptions","passive","MIN_VIEWPORT_TOOLTIP_THRESHOLD","UNBOUNDED_ANCHOR_GAP","MIN_HEIGHT","MAX_WIDTH","MatTooltip","_elementRef","_ngZone","_platform","_ariaDescriber","_focusMonitor","_dir","_injector","_viewContainerRef","_defaultOptions","optional","_overlayRef","_tooltipInstance","_overlayPanelClass","_portal","_position","_positionAtOrigin","_disabled","_tooltipClass","_viewInitialized","_pointerExitEventsInitialized","_tooltipComponent","TooltipComponent","_viewportMargin","_currentPosition","_cssClassPrefix","_ariaDescriptionPending","_dirSubscribed","value","_updatePosition","show","updatePosition","positionAtOrigin","_detach","disabled","isDisabled","hide","_setupPointerEnterEventsIfNeeded","_syncAriaDescription","message","_showDelay","_hideDelay","_mouseLeaveHideDelay","touchGestures","_message","oldMessage","String","trim","_isTooltipVisible","_updateTooltipMessage","tooltipClass","_setTooltipClass","_passiveListeners","_touchstartTimeout","_destroyed","_isDestroyed","defaultOptions","ngAfterViewInit","monitor","pipe","subscribe","origin","run","ngOnDestroy","nativeElement","clearTimeout","dispose","forEach","event","listener","removeEventListener","length","next","complete","removeDescription","stopMonitoring","delay","_cancelPendingAnimations","overlayRef","_createOverlay","instance","attach","_triggerElement","afterHidden","isVisible","toggle","undefined","existingStrategy","getConfig","positionStrategy","_origin","scrollableAncestors","get","getAncestorScrollContainers","panelClass","strategy","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","change","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","direction","scrollStrategy","disableAnimations","detachments","outsidePointerEvents","_handleBodyInteraction","keydownEvents","keyCode","preventDefault","stopPropagation","disableTooltipInteractivity","addPanelClass","hasAttached","detach","_getOrigin","overlay","_getOverlayPosition","withPositions","_addOffset","main","fallback","offset","isLtr","originY","offsetY","originX","offsetX","originPosition","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","newPosition","classPrefix","removePanelClass","_platformSupportsMouseEvents","push","_setupPointerExitEventsIfNeeded","point","_disableNativeGesturesIfNecessary","touch","targetTouches","clientX","clientY","DEFAULT_LONGPRESS_DELAY","setTimeout","touchLongPressShowDelay","_addListeners","exitListeners","newTarget","relatedTarget","overlayElement","contains","_wheelListener","touchendListener","listeners","addEventListener","IOS","ANDROID","elementUnderPointer","elementFromPoint","element","gestures","style","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","write","describe","MatTooltip_Factory","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","hostVars","hostBindings","MatTooltip_HostBindings","rf","ctx","ɵɵclassProp","inputs","exportAs","_changeDetectorRef","_isMultiline","_showTimeoutId","_hideTimeoutId","_tooltip","_closeOnInteraction","_isVisible","_onHide","_showAnimation","_hideAnimation","_toggleVisibility","markForCheck","_handleMouseLeave","_finalizeAnimation","_onShow","_isTooltipMultiline","rect","getBoundingClientRect","height","width","_handleAnimationEnd","animationName","toVisible","tooltip","showClass","hideClass","classList","remove","add","getComputedStyle","styles","getPropertyValue","TooltipComponent_Factory","ɵcmp","ɵɵdefineComponent","viewQuery","TooltipComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","TooltipComponent_HostBindings","ɵɵlistener","TooltipComponent_mouseleave_HostBindingHandler","$event","decls","vars","consts","template","TooltipComponent_Template","_r1","ɵɵgetCurrentView","ɵɵelementStart","TooltipComponent_Template_div_animationend_0_listener","ɵɵrestoreView","ɵɵresetView","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","dependencies","encapsulation","changeDetection","MatTooltipModule","MatTooltipModule_Factory","providers","S","T","b","c","d","e","f","g","h","MediaMatcher","ANIMATION_MODULE_TYPE","MATERIAL_ANIMATIONS","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","animationsDisabled","mediaMatcher","matchMedia","matches","A","matTooltipAnimations","tooltipState","name","definitions","opacity","transform","expr","animation","timings","options"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3]}