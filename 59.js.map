{"version":3,"file":"59.js","mappings":"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","sources":["./projects/ngx-editor-js2-mermaidjs/src/lib/mermaidjs-config/mermaidjs-config.component.ts","./projects/ngx-editor-js2-mermaidjs/src/lib/ngx-editor-js2-mermaidjs.component.ts","./projects/ngx-editor-js2-mermaidjs/src/public-api.ts","./projects/ngx-editor-js2-mermaidjs/src/tmdjr-ngx-editor-js2-mermaidjs.ts","./node_modules/@ctrl/ngx-codemirror/fesm2022/ctrl-ngx-codemirror.mjs","./node_modules/@tmdjr/ngx-editor-js2/fesm2022/tmdjr-ngx-editor-js2.mjs","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Component, effect, model, output, signal } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\n@Component({\n  selector: 'mermaidjs-config',\n  imports: [\n    MatButton,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    CodemirrorModule,\n  ],\n  template: `\n    <div class=\"mermaidjs-block-modal\">\n        <h2 mat-dialog-title>MermaidJs Configurations</h2>\n        <ngx-codemirror\n          [(ngModel)]=\"value\"\n          [options]=\"codeMirrorOptions()\">\n        </ngx-codemirror>\n        <div class=\"action-group\">\n          <button type=\"button\" mat-raised-button (click)=\"closeConfig()\">\n            Update\n          </button>\n        </div>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        position: relative;\n        margin: 1.5rem 0;\n        border: 0.5px solid #ccc;\n        border-radius: 4px;\n        padding: 20px;\n\n          .action-group {\n            display: flex;\n            justify-content: flex-end;\n            gap: 10px;\n          }\n        }\n\n      :host .fade-in {\n        animation: fadeIn 0.25s ease-in-out;\n      }\n\n      @keyframes fadeIn {\n        from {\n          opacity: 0;\n        }\n        to {\n          opacity: 1;\n        }\n      }\n\n      :host ::ng-deep .CodeMirror {\n        font-family: Cascadia Code, Fira Code, Menlo, Monaco, 'Courier New',\n          monospace;\n        font-size: 16px;\n        font-weight: 400;\n        line-height: 32px;\n        letter-spacing: 0.5px;\n        height: 100%;\n      }\n    `,\n  ],\n})\nexport class MermaidjsConfigComponent {\n  updateConfig = output<void>();\n  value = model<string>();\n  codeMirrorOptions = signal({\n    lineNumbers: true,\n    theme: 'material-palenight',\n    mode: 'text/typescript',\n    extraKeys: { 'Ctrl-Space': 'autocomplete' },\n    styleActiveLine: true, // Highlight active line\n    matchBrackets: true,\n    indentUnit: 2,\n    tabSize: 2,\n    cursorScrollMargin: 5,\n  });\n\n  closeConfig() {\n    this.updateConfig.emit();\n  }\n}\n","import { CdkDrag } from '@angular/cdk/drag-drop';\nimport { NgClass } from '@angular/common';\nimport {\n  Component,\n  inject,\n  input,\n  NgZone,\n  Pipe,\n  PipeTransform,\n  signal,\n} from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { MatFabButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport {\n  ControlAccessorDirective,\n  AutofocusDirective,\n  ToolbarFabDirective,\n  BlockOptionAction,\n} from '@tmdjr/ngx-editor-js2';\nimport mermaid, { Mermaid } from 'mermaid';\nimport { MermaidjsConfigComponent } from './mermaidjs-config/mermaidjs-config.component';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'safeHtml', standalone: true })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitized: DomSanitizer) {}\n  transform(value: string) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n\nmermaid.parseError = function (err: any, hash: any) {\n  console.warn(`Error parsing mermaid diagram: ${err} ${hash}`);\n};\n\n@Component({\n  selector: 'ngx-editor-js2-mermaidjs',\n  host: { class: 'cdk-drag-animating no-toolbar-inline' },\n  hostDirectives: [CdkDrag],\n  imports: [\n    ReactiveFormsModule,\n    ControlAccessorDirective,\n    AutofocusDirective,\n    ToolbarFabDirective,\n    MatFabButton,\n    MatIcon,\n    NgClass,\n    MermaidjsConfigComponent,\n    SafeHtmlPipe,\n  ],\n  template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <span\n        controlAccessor\n        toolbarFab\n        class=\"mermaidjs-container-overlay\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></span>\n      @if (!openOverlay()) {\n      <div class=\"mermaidjs-container\">\n        <div\n          #mermaidContainer\n          [ngClass]=\"savedAction()\"\n          [innerHTML]=\"mermaidDiagramSVG | safeHtml\"\n          class=\"mermaid\"\n        ></div>\n        <button\n          mat-fab\n          class=\"mermaidjs-block-button\"\n          (click)=\"openEditOverlay()\"\n        >\n          <mat-icon>edit</mat-icon>\n        </button>\n      </div>\n      } @else {\n      <mermaidjs-config\n        [(value)]=\"value\"\n        (updateConfig)=\"updateMermaidDiagram()\"\n      >\n      </mermaidjs-config>\n      }\n    </ng-container>\n  `,\n  styles: `\n      :host {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        margin: 1.5rem 0;\n\n        .flex-start {\n          justify-content: flex-start;\n        }\n        .flex-end {\n          justify-content: flex-end;\n        }\n        .center {\n          justify-content: center;\n        }\n        .stretch img {\n          width: 100%;\n        }\n\n        .mermaid { width: 100%; display: flex; }\n        .mermaidjs-container-overlay {\n          display: flex;\n          height: 100%;\n          width: 100%;\n          position: absolute;\n        }\n\n        .mermaid:hover ~ .mermaid-block-button, .mermaid-block-button:hover,\n        .mermaidjs-container-overlay:hover ~ .mermaidjs-container .mermaidjs-block-button,\n        .mermaidjs-block-button:hover {\n          display: block;\n        }\n        .mermaidjs-container {\n          display: flex;\n          .mermaidjs-block {\n            min-width: 0;\n          }\n\n          .mermaidjs-block-button {\n            position: absolute;\n            top: 6px;\n            left: 6px;\n            display: none;\n          }\n        }\n      }\n  `,\n})\nexport class NgxEditorJs2MermaidjsComponent {\n  ngZone = inject(NgZone);\n  mermaid = (mermaid as unknown as any).default as Mermaid;\n\n  sortIndex = input<number>(0);\n  componentInstanceName = 'NgxEditorJs2MermaidjsComponent';\n  autofocus = input<boolean>(true);\n  formGroup = input.required<FormGroup>();\n  formControlName = input.required<string>();\n  blockOptionActions = input<BlockOptionAction[]>([\n    { action: 'flex-start', icon: 'format_align_left' },\n    { action: 'center', icon: 'format_align_center' },\n    { action: 'flex-end', icon: 'format_align_right' },\n    { action: 'stretch', icon: 'format_align_justify' },\n  ]);\n\n  savedAction = signal<string>('flex-start');\n  actionCallbackBind = this.actionCallback.bind(this);\n\n  mermaidDiagramSVG = '';\n  value = `flowchart TD\n    A[Christmas] -->|Get money| B(Go shopping)\n    B --> C{Let me think}\n    C -->|One| D[Laptop]\n    C -->|Two| E[iPhone]\n    C -->|Three| F[fa:fa-car Car]`;\n\n  openOverlay = signal<boolean>(false);\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      this.mermaid.initialize({ startOnLoad: false });\n    });\n    const possibleSavedValue = this.formGroup().get(this.formControlName());\n    this.value = possibleSavedValue?.value\n      ? possibleSavedValue.value\n      : this.value;\n    this.renderMermaidDiagram(this.value);\n  }\n\n  renderMermaidDiagram(mermaidDiagram: string): void {\n    const uniqueId = `mermaid-${Date.now()}-${Math.floor(\n      Math.random() * 1000\n    )}`;\n    this.ngZone.runOutsideAngular(() => {\n      this.mermaid.render(uniqueId, mermaidDiagram).then(\n        (data) => this.ngZone.run(() => (this.mermaidDiagramSVG = data.svg)),\n        (error) => console.warn(`Error: ${error}`)\n      );\n    });\n  }\n\n  actionCallback(action: string) {\n    this.savedAction.update(() => action);\n  }\n\n  openEditOverlay() {\n    this.openOverlay.set(true);\n  }\n\n  updateMermaidDiagram() {\n    this.formGroup().get(this.formControlName())?.setValue(this.value);\n    this.openOverlay.set(false);\n  }\n}\n","/*\n * Public API Surface of ngx-editor-js2-mermaidjs\n */\n\nexport * from './lib/ngx-editor-js2-mermaidjs.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nfunction normalizeLineEndings(str) {\n    if (!str) {\n        return str;\n    }\n    return str.replace(/\\r\\n|\\r/g, '\\n');\n}\nclass CodemirrorComponent {\n    _differs;\n    _ngZone;\n    /* class applied to the created textarea */\n    className = '';\n    /* name applied to the created textarea */\n    name = 'codemirror';\n    /* autofocus setting applied to the created textarea */\n    autoFocus = false;\n    /**\n     * set options for codemirror\n     * @link http://codemirror.net/doc/manual.html#config\n     */\n    set options(value) {\n        this._options = value;\n        if (!this._differ && value) {\n            this._differ = this._differs.find(value).create();\n        }\n    }\n    /* preserve previous scroll position after updating value */\n    preserveScrollPosition = false;\n    /* called when the text cursor is moved */\n    cursorActivity = new EventEmitter();\n    /* called when the editor is focused or loses focus */\n    focusChange = new EventEmitter();\n    /* called when the editor is scrolled */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    scroll = new EventEmitter();\n    /* called when file(s) are dropped */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    drop = new EventEmitter();\n    /* called when codeMirror instance is initiated on the component */\n    codeMirrorLoaded = new EventEmitter();\n    ref;\n    value = '';\n    disabled = false;\n    isFocused = false;\n    codeMirror;\n    /**\n     * either global variable or required library\n     */\n    _codeMirror;\n    _differ;\n    _options;\n    constructor(_differs, _ngZone) {\n        this._differs = _differs;\n        this._ngZone = _ngZone;\n    }\n    get codeMirrorGlobal() {\n        if (this._codeMirror) {\n            return this._codeMirror;\n        }\n        // in order to allow for universal rendering, we import Codemirror runtime with `require` to prevent node errors\n        this._codeMirror = typeof CodeMirror !== 'undefined' ? CodeMirror : import('codemirror');\n        return this._codeMirror;\n    }\n    ngAfterViewInit() {\n        this._ngZone.runOutsideAngular(async () => {\n            const codeMirrorObj = await this.codeMirrorGlobal;\n            const codeMirror = codeMirrorObj?.default ? codeMirrorObj.default : codeMirrorObj;\n            this.codeMirror = codeMirror.fromTextArea(this.ref.nativeElement, this._options);\n            this.codeMirror.on('cursorActivity', cm => this._ngZone.run(() => this.cursorActive(cm)));\n            this.codeMirror.on('scroll', this.scrollChanged.bind(this));\n            this.codeMirror.on('blur', () => this._ngZone.run(() => this.focusChanged(false)));\n            this.codeMirror.on('focus', () => this._ngZone.run(() => this.focusChanged(true)));\n            this.codeMirror.on('change', (cm, change) => this._ngZone.run(() => this.codemirrorValueChanged(cm, change)));\n            this.codeMirror.on('drop', (cm, e) => {\n                this._ngZone.run(() => this.dropFiles(cm, e));\n            });\n            this.codeMirror.setValue(this.value);\n            this.codeMirrorLoaded.emit(this);\n        });\n    }\n    ngDoCheck() {\n        if (!this._differ) {\n            return;\n        }\n        // check options have not changed\n        const changes = this._differ.diff(this._options);\n        if (changes) {\n            changes.forEachChangedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n            changes.forEachAddedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n            changes.forEachRemovedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n        }\n    }\n    ngOnDestroy() {\n        // is there a lighter-weight way to remove the cm instance?\n        if (this.codeMirror) {\n            this.codeMirror.toTextArea();\n        }\n    }\n    codemirrorValueChanged(cm, change) {\n        const cmVal = cm.getValue();\n        if (this.value !== cmVal) {\n            this.value = cmVal;\n            this.onChange(this.value);\n        }\n    }\n    setOptionIfChanged(optionName, newValue) {\n        if (!this.codeMirror) {\n            return;\n        }\n        // cast to any to handle strictly typed option names\n        // could possibly import settings strings available in the future\n        this.codeMirror.setOption(optionName, newValue);\n    }\n    focusChanged(focused) {\n        this.onTouched();\n        this.isFocused = focused;\n        this.focusChange.emit(focused);\n    }\n    scrollChanged(cm) {\n        this.scroll.emit(cm.getScrollInfo());\n    }\n    cursorActive(cm) {\n        this.cursorActivity.emit(cm);\n    }\n    dropFiles(cm, e) {\n        this.drop.emit([cm, e]);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        if (value === null || value === undefined) {\n            return;\n        }\n        if (!this.codeMirror) {\n            this.value = value;\n            return;\n        }\n        const cur = this.codeMirror.getValue();\n        if (value !== cur && normalizeLineEndings(cur) !== normalizeLineEndings(value)) {\n            this.value = value;\n            if (this.preserveScrollPosition) {\n                const prevScrollPosition = this.codeMirror.getScrollInfo();\n                this.codeMirror.setValue(this.value);\n                this.codeMirror.scrollTo(prevScrollPosition.left, prevScrollPosition.top);\n            }\n            else {\n                this.codeMirror.setValue(this.value);\n            }\n        }\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.setOptionIfChanged('readOnly', this.disabled);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    onChange = (_) => { };\n    /** Implemented as part of ControlValueAccessor. */\n    onTouched = () => { };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorComponent, deps: [{ token: i0.KeyValueDiffers }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.1\", type: CodemirrorComponent, selector: \"ngx-codemirror\", inputs: { className: \"className\", name: \"name\", autoFocus: \"autoFocus\", options: \"options\", preserveScrollPosition: \"preserveScrollPosition\" }, outputs: { cursorActivity: \"cursorActivity\", focusChange: \"focusChange\", scroll: \"scroll\", drop: \"drop\", codeMirrorLoaded: \"codeMirrorLoaded\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => CodemirrorComponent),\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"ref\", first: true, predicate: [\"ref\"], descendants: true }], ngImport: i0, template: `\n    <textarea\n      [name]=\"name\"\n      class=\"ngx-codemirror {{ className }}\"\n      [class.ngx-codemirror--focused]=\"isFocused\"\n      autocomplete=\"off\"\n      [autofocus]=\"autoFocus\"\n      #ref\n    >\n    </textarea>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-codemirror',\n                    template: `\n    <textarea\n      [name]=\"name\"\n      class=\"ngx-codemirror {{ className }}\"\n      [class.ngx-codemirror--focused]=\"isFocused\"\n      autocomplete=\"off\"\n      [autofocus]=\"autoFocus\"\n      #ref\n    >\n    </textarea>\n  `,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => CodemirrorComponent),\n                            multi: true,\n                        },\n                    ],\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.KeyValueDiffers }, { type: i0.NgZone }]; }, propDecorators: { className: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], preserveScrollPosition: [{\n                type: Input\n            }], cursorActivity: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], scroll: [{\n                type: Output\n            }], drop: [{\n                type: Output\n            }], codeMirrorLoaded: [{\n                type: Output\n            }], ref: [{\n                type: ViewChild,\n                args: ['ref']\n            }] } });\n\nclass CodemirrorModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, declarations: [CodemirrorComponent], exports: [CodemirrorComponent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CodemirrorComponent],\n                    declarations: [CodemirrorComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CodemirrorComponent, CodemirrorModule };\n","import * as i0 from '@angular/core';\nimport { inject, ElementRef, input, forwardRef, Directive, HostListener, output, Component, signal, Injectable, ViewContainerRef, effect, InjectionToken, viewChild, EventEmitter, Renderer2, Output } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormControl, ReactiveFormsModule, FormBuilder, FormsModule } from '@angular/forms';\nimport { startWith, combineLatest, map, firstValueFrom, of, from, tap, filter, defaultIfEmpty, Observable, lastValueFrom, forkJoin, iif, switchMap, mergeMap, BehaviorSubject, distinctUntilChanged, delay, exhaustMap, merge, fromEvent, debounceTime } from 'rxjs';\nimport { MatRipple } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/drag-drop';\nimport { CdkDragHandle, CdkDrag, CdkDropList } from '@angular/cdk/drag-drop';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule, Overlay } from '@angular/cdk/overlay';\nimport * as i1$2 from '@angular/material/icon';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport { AsyncPipe, NgSwitch, NgSwitchCase, NgTemplateOutlet, NgClass } from '@angular/common';\nimport { toObservable } from '@angular/core/rxjs-interop';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatList, MatListItem, MatListModule } from '@angular/material/list';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\nclass ControlAccessorDirective {\n    elementRef = inject(ElementRef);\n    defaultValue = input();\n    onChange = () => { };\n    onTouched = () => { };\n    writeValue() {\n        this.elementRef.nativeElement.innerHTML = this.defaultValue() || '';\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onBlur() {\n        this.onTouched();\n    }\n    onInput() {\n        this.onChange(this.elementRef.nativeElement.innerHTML);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ControlAccessorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ControlAccessorDirective, isStandalone: true, selector: \"[controlAccessor]\", inputs: { defaultValue: { classPropertyName: \"defaultValue\", publicName: \"defaultValue\", isSignal: true, isRequired: false, transformFunction: null } }, host: { listeners: { \"blur\": \"onBlur()\", \"input\": \"onInput()\" } }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => ControlAccessorDirective),\n                multi: true,\n            },\n        ], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ControlAccessorDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[controlAccessor]',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => ControlAccessorDirective),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], propDecorators: { onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onInput: [{\n                type: HostListener,\n                args: ['input']\n            }] } });\n\nclass AutofocusDirective {\n    elementRef = inject(ElementRef);\n    autofocus = input(false);\n    ngAfterContentInit() {\n        this.autofocus() && this.elementRef.nativeElement.focus?.();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: AutofocusDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"19.1.5\", type: AutofocusDirective, isStandalone: true, selector: \"[autofocus]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: AutofocusDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[autofocus]',\n                }]\n        }] });\n\nvar MovePositionActions;\n(function (MovePositionActions) {\n    MovePositionActions[\"UP\"] = \"UP\";\n    MovePositionActions[\"DOWN\"] = \"DOWN\";\n    MovePositionActions[\"DELETE\"] = \"DELETE\";\n})(MovePositionActions || (MovePositionActions = {}));\n\nclass ToolbarBlockOptionsComponent {\n    Position = MovePositionActions;\n    blockOptionActions = input();\n    handleActionEmitter = output({ alias: 'handleAction' });\n    moveBlockPositionEmitter = output({\n        alias: 'moveBlockPosition',\n    });\n    movePosition(action) {\n        this.moveBlockPositionEmitter.emit(action);\n    }\n    handleAction(action) {\n        this.handleActionEmitter.emit(action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlockOptionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.1.5\", type: ToolbarBlockOptionsComponent, isStandalone: true, selector: \"toolbar-block-options\", inputs: { blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { handleActionEmitter: \"handleAction\", moveBlockPositionEmitter: \"moveBlockPosition\" }, ngImport: i0, template: `\n    <div class=\"actions-panel mat-elevation-z24\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:is(:hover,:focus){color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"], dependencies: [{ kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlockOptionsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-block-options', imports: [MatIcon, MatRipple], template: `\n    <div class=\"actions-panel mat-elevation-z24\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:is(:hover,:focus){color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"] }]\n        }] });\n\nclass ToolbarBlocksComponent {\n    addBlockEmitter = output({ alias: 'addBlock' });\n    supportedBlocks = input([]);\n    supportedBlocks$ = toObservable(this.supportedBlocks);\n    blockCtrl = new FormControl([]);\n    filter$ = this.blockCtrl.valueChanges.pipe(startWith(''));\n    filteredBlocks$ = combineLatest([this.supportedBlocks$, this.filter$]).pipe(map(([blocks, filterString]) => {\n        if (typeof filterString !== 'string')\n            filterString = '';\n        filterString = filterString.replace(/\\\\/g, '');\n        const pattern = filterString\n            ?.split('')\n            .map((v) => `(?=.*${v})`)\n            .join('');\n        const regex = new RegExp(`${pattern}`, 'gi');\n        // return blocks.filter(block => regex.exec(block));\n        return blocks.filter((block) => block.name.match(regex));\n    }));\n    addBlock(block) {\n        this.addBlockEmitter.emit(block?.component);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlocksComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.1.5\", type: ToolbarBlocksComponent, isStandalone: true, selector: \"toolbar-blocks\", inputs: { supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { addBlockEmitter: \"addBlock\" }, ngImport: i0, template: `\n    <div class=\"block-list-container mat-elevation-z24\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{background:var(--mat-sys-secondary-container);border-radius:4px}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:is(:hover,:focus){background:var(--mat-sys-surface-bright)}\\n\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"directive\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\", \"disabledInteractive\"], exportAs: [\"matInput\"] }, { kind: \"component\", type: MatList, selector: \"mat-list\", exportAs: [\"matList\"] }, { kind: \"component\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: [\"activated\"], exportAs: [\"matListItem\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatLabel, selector: \"mat-label\" }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlocksComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-blocks', imports: [\n                        MatFormField,\n                        MatInput,\n                        MatList,\n                        MatListItem,\n                        MatRipple,\n                        MatLabel,\n                        ReactiveFormsModule,\n                        AsyncPipe,\n                    ], template: `\n    <div class=\"block-list-container mat-elevation-z24\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{background:var(--mat-sys-secondary-container);border-radius:4px}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:is(:hover,:focus){background:var(--mat-sys-surface-bright)}\\n\"] }]\n        }] });\n\nclass ToolbarComponent {\n    componentContextPositionIndex = input.required();\n    supportedBlocks = input.required();\n    blockOptionActions = input();\n    actionCallback = input(() => () => { });\n    formControlName = input();\n    addBlockCallback = input.required();\n    moveBlockPositionCallback = input.required();\n    openBlocks = signal(false);\n    openBlocksOption = signal(false);\n    openBlocksList() {\n        this.openBlocks.update((prev) => !prev);\n    }\n    openBlockOptionList() {\n        this.openBlocksOption.update((prev) => !prev);\n    }\n    moveBlockPosition(action) {\n        this.closeLists();\n        this.moveBlockPositionCallback()(action, this.componentContextPositionIndex());\n    }\n    handleAction(action) {\n        this.closeLists();\n        this.actionCallback()(action);\n    }\n    addBlock(block) {\n        this.closeLists();\n        firstValueFrom(this.addBlockCallback()(block, this.componentContextPositionIndex()));\n    }\n    closeLists() {\n        this.openBlocks.set(false);\n        this.openBlocksOption.set(false);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ToolbarComponent, isStandalone: true, selector: \"toolbar\", inputs: { componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: false, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: false, transformFunction: null }, addBlockCallback: { classPropertyName: \"addBlockCallback\", publicName: \"addBlockCallback\", isSignal: true, isRequired: true, transformFunction: null }, moveBlockPositionCallback: { classPropertyName: \"moveBlockPositionCallback\", publicName: \"moveBlockPositionCallback\", isSignal: true, isRequired: true, transformFunction: null } }, ngImport: i0, template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, isInline: true, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container)}:host .toolbar-buttons:is(:hover,:focus){background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"ngmodule\", type: OverlayModule }, { kind: \"directive\", type: i1.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\", \"cdkConnectedOverlayDisposeOnNavigation\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i1.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"component\", type: ToolbarBlockOptionsComponent, selector: \"toolbar-block-options\", inputs: [\"blockOptionActions\"], outputs: [\"handleAction\", \"moveBlockPosition\"] }, { kind: \"component\", type: ToolbarBlocksComponent, selector: \"toolbar-blocks\", inputs: [\"supportedBlocks\"], outputs: [\"addBlock\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar', imports: [\n                        CdkDragHandle,\n                        MatRipple,\n                        OverlayModule,\n                        ToolbarBlockOptionsComponent,\n                        ToolbarBlocksComponent,\n                    ], template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container)}:host .toolbar-buttons:is(:hover,:focus){background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"] }]\n        }] });\n\nclass BlockMovementService {\n    componentRefMap = new Map();\n    clearComponentRefs() {\n        this.componentRefMap.clear();\n    }\n    getNgxEditorJsBlocks() {\n        return of(Array.from(this.componentRefMap.values()));\n    }\n    newComponentAttached(componentRef) {\n        this.componentRefMap.set(componentRef.instance, componentRef);\n    }\n    updateComponentIndices(ngxEditor) {\n        return from(this.componentRefMap.values()).pipe(tap((componentRef) => componentRef.setInput('sortIndex', ngxEditor.indexOf(componentRef.hostView))));\n    }\n    moveBlockComponentPosition(ngxEditor, action, index) {\n        return of(Array.from(this.componentRefMap.values())).pipe(map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), filter((componentRef) => !!componentRef), map((componentRef) => ({\n            componentRef,\n            totalComponents: ngxEditor.length - 1,\n            currentIndex: ngxEditor.indexOf(componentRef.hostView),\n            newIndex: (index) => action === MovePositionActions.UP ? index - 1 : index + 1,\n        })), map(({ componentRef, totalComponents, currentIndex, newIndex }) => ({\n            componentRef,\n            currentIndex,\n            newIndex: Math.max(0, Math.min(newIndex(currentIndex), totalComponents)),\n        })), filter(({ currentIndex, newIndex }) => currentIndex !== newIndex), tap(({ componentRef, newIndex }) => {\n            ngxEditor.move(componentRef.hostView, newIndex);\n            componentRef.setInput('sortIndex', newIndex);\n            componentRef.setInput('autofocus', true);\n        }), defaultIfEmpty(false));\n    }\n    removeBlockComponent(ngxEditor, index, clear = false) {\n        return of(Array.from(this.componentRefMap.values())).pipe(filter((componentRefs) => clear || componentRefs.length !== 1), map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), map((componentRef) => this.componentRefMap.delete(componentRef?.instance ?? {})), tap((successful) => successful && ngxEditor.remove(index - 1)), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: BlockMovementService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: BlockMovementService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: BlockMovementService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nconst createUID = () => Math.random().toString(36).substring(7);\nclass EditorJsService {\n    formBuilder = inject(FormBuilder);\n    blockMovementService = inject(BlockMovementService);\n    componentRefMap = new Map();\n    ngxEditor;\n    formGroup = this.formBuilder.group({});\n    // TODO - Handle this idiomatically\n    setNgxEditor(ngxEditor) {\n        this.ngxEditor = ngxEditor;\n    }\n    getBlocks$() {\n        return new Observable((observer) => {\n            lastValueFrom(this.blockMovementService.getNgxEditorJsBlocks().pipe(map((componentRefs) => componentRefs.map(({ instance }) => ({\n                blockId: instance.formControlName(),\n                sortIndex: instance.sortIndex(),\n                componentInstanceName: instance.componentInstanceName,\n                savedAction: instance.savedAction(),\n                dataClean: instance.formGroup().get(instance.formControlName())\n                    ?.value,\n            }))), map((blocks) => blocks.sort((a, b) => a.sortIndex - b.sortIndex)))).then((blocks) => {\n                observer.next(blocks);\n                observer.complete();\n            });\n        });\n    }\n    createNgxEditorJsBlockWithComponent(blockComponent, componentContextPositionIndex) {\n        return of({\n            blockId: createUID(),\n            sortIndex: componentContextPositionIndex,\n            componentInstanceName: blockComponent.name,\n            component: blockComponent,\n            // TODO - Force content-type for dataClean? JSON, HTML, etc.\n            // TODO - And maybe rename dataClean to just data?\n            dataClean: '',\n            autofocus: true,\n        });\n    }\n    addBlockComponent(ngxEditorJsBlock) {\n        return forkJoin([\n            this.createFormGroupControl(ngxEditorJsBlock),\n            this.attachComponent(ngxEditorJsBlock),\n            this.blockMovementService.updateComponentIndices(this.ngxEditor),\n        ]).pipe(map(() => void 0));\n    }\n    createFormGroupControl({ blockId, dataClean, }) {\n        return of(this.formBuilder.control(dataClean, [])).pipe(tap((formControl) => this.formGroup.addControl(blockId, formControl)));\n    }\n    attachComponent({ component, blockId, autofocus, savedAction, sortIndex: index, }) {\n        return of(blockId).pipe(map((controlName) => {\n            const componentRef = this.ngxEditor.createComponent(component, {\n                index,\n            });\n            componentRef.setInput('sortIndex', index);\n            componentRef.setInput('formGroup', this.formGroup);\n            componentRef.setInput('formControlName', controlName);\n            componentRef.setInput('autofocus', autofocus);\n            savedAction && componentRef.instance.actionCallback?.(savedAction);\n            this.blockMovementService.newComponentAttached(componentRef);\n            return componentRef;\n        }));\n    }\n    determineMovePositionAction(action, index, formControlName) {\n        return iif(() => action === MovePositionActions.DELETE, this.removeBlockComponent(index, formControlName), this.blockMovementService.moveBlockComponentPosition(this.ngxEditor, action, index)).pipe(switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)));\n    }\n    moveBlockComponentPosition(previousIndex, currentIndex) {\n        return of(this.ngxEditor.get(previousIndex)).pipe(filter((viewRef) => !!viewRef), tap((viewRef) => {\n            this.ngxEditor.move(viewRef, currentIndex);\n        }), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), defaultIfEmpty(false));\n    }\n    removeBlockComponent(index, formControlName, clear = false) {\n        return combineLatest([\n            this.blockMovementService.removeBlockComponent(this.ngxEditor, index, clear),\n            of(this.formGroup.removeControl(formControlName)),\n        ]);\n    }\n    clearBlocks() {\n        return this.blockMovementService.getNgxEditorJsBlocks().pipe(filter((componentRefs) => componentRefs.length > 0), map((componentRefs) => componentRefs.sort((a, b) => a.instance.sortIndex() - b.instance.sortIndex())), mergeMap((componentRefs) => forkJoin(Array.from(componentRefs.values()).map((componentRef) => this.removeBlockComponent(componentRef.instance.sortIndex() + 1, componentRef.instance.formControlName(), true)))), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), tap(() => {\n            this.blockMovementService.clearComponentRefs();\n            this.ngxEditor.clear();\n        }), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolFabService {\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    editorJsService = inject(EditorJsService);\n    // I need to explain this in detail so the future me can understand this.\n    componentContext = new BehaviorSubject(null);\n    toolbarComponentRef$ = combineLatest({\n        componentContext: this.componentContext.asObservable(),\n        supportedBlocks: this.ngxEditorJs2Service.supportedBlocks$,\n    }).pipe(filter(({ componentContext }) => componentContext !== null), distinctUntilChanged(({ componentContext: previous }, { componentContext: current }) => previous.index !== current.index ||\n        previous.viewContainerRef !== current.viewContainerRef\n        ? (previous.viewContainerRef.clear(), false)\n        : true), map(({ componentContext, supportedBlocks }) => {\n        const { index, viewContainerRef, blockOptionActions, actionCallback, formControlName, } = componentContext;\n        // TODO We will need to create a ToolbarBottomRailComponent to handle the mobile view\n        const componentRef = viewContainerRef.createComponent(ToolbarComponent);\n        componentRef.setInput('componentContextPositionIndex', index + 1);\n        componentRef.setInput('supportedBlocks', supportedBlocks);\n        componentRef.setInput('blockOptionActions', blockOptionActions);\n        componentRef.setInput('actionCallback', actionCallback);\n        componentRef.setInput('formControlName', formControlName);\n        componentRef.setInput('addBlockCallback', this.addBlock.bind(this));\n        componentRef.setInput('moveBlockPositionCallback', this.movePositionAction.bind(this));\n        return componentRef;\n    }));\n    addBlock(block, index) {\n        return this.editorJsService\n            .createNgxEditorJsBlockWithComponent(block, index)\n            .pipe(switchMap((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    movePositionAction(action, index, formControlName) {\n        return lastValueFrom(this.editorJsService.determineMovePositionAction(action, index, formControlName));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolFabService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolFabService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolFabService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolbarFabDirective {\n    toolFabService = inject(ToolFabService);\n    viewContainerRef = inject(ViewContainerRef);\n    autofocus = input();\n    blockOptionActions = input();\n    actionCallback = input.required();\n    componentContextPositionIndex = input.required();\n    formControlName = input.required();\n    onMouseEnter() {\n        this.toolFabService.componentContext.next({\n            viewContainerRef: this.viewContainerRef,\n            blockOptionActions: this.blockOptionActions() ?? [],\n            actionCallback: this.actionCallback(),\n            index: this.componentContextPositionIndex(),\n            formControlName: this.formControlName(),\n        });\n    }\n    constructor() {\n        effect(() => {\n            this.autofocus() && this.onMouseEnter();\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarFabDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ToolbarFabDirective, isStandalone: true, selector: \"[toolbarFab]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: true, transformFunction: null }, componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null } }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarFabDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[toolbarFab]',\n                }]\n        }], ctorParameters: () => [], propDecorators: { onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }] } });\n\nclass CleanPasteDataDirective {\n    onPaste(event) {\n        event.preventDefault();\n        const text = event.clipboardData?.getData('text/plain');\n        document.execCommand('insertText', false, text);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: CleanPasteDataDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.1.5\", type: CleanPasteDataDirective, isStandalone: true, selector: \"[cleanPasteData]\", host: { listeners: { \"paste\": \"onPaste($event)\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: CleanPasteDataDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cleanPasteData]',\n                }]\n        }], propDecorators: { onPaste: [{\n                type: HostListener,\n                args: ['paste', ['$event']]\n            }] } });\n\nclass HeaderBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'HeaderBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'h1', text: 'H1' },\n        { action: 'h2', text: 'H2' },\n        { action: 'h3', text: 'H3' },\n        { action: 'h4', text: 'H4' },\n        { action: 'h5', text: 'H5' },\n        { action: 'h6', text: 'H6' },\n    ]);\n    savedAction = signal('h1');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(selectedAction) {\n        this.savedAction.set(selectedAction);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: HeaderBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: HeaderBlockComponent, isStandalone: true, selector: \"header-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n    <ng-container [ngSwitch]=\"savedAction()\">\n      <h1 *ngSwitchCase=\"'h1'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h1>\n      <h2 *ngSwitchCase=\"'h2'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h2>\n      <h3 *ngSwitchCase=\"'h3'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h3>\n      <h4 *ngSwitchCase=\"'h4'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h4>\n      <h5 *ngSwitchCase=\"'h5'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h5>\n      <h6 *ngSwitchCase=\"'h6'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h6>\n    </ng-container>\n\n    <ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n      <span\n        controlAccessor\n        cleanPasteData\n        contentEditable\n        toolbarFab\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [autofocus]=\"autofocus()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></span>\n    </ng-template>\n  `, isInline: true, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: HeaderBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'header-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgSwitch,\n                        NgSwitchCase,\n                        NgTemplateOutlet,\n                    ], template: `\n    <ng-container [ngSwitch]=\"savedAction()\">\n      <h1 *ngSwitchCase=\"'h1'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h1>\n      <h2 *ngSwitchCase=\"'h2'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h2>\n      <h3 *ngSwitchCase=\"'h3'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h3>\n      <h4 *ngSwitchCase=\"'h4'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h4>\n      <h5 *ngSwitchCase=\"'h5'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h5>\n      <h6 *ngSwitchCase=\"'h6'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h6>\n    </ng-container>\n\n    <ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n      <span\n        controlAccessor\n        cleanPasteData\n        contentEditable\n        toolbarFab\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [autofocus]=\"autofocus()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></span>\n    </ng-template>\n  `, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"] }]\n        }] });\n\nclass ParagraphBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'ParagraphBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'small', icon: 'density_small' },\n        { action: 'medium', icon: 'density_medium' },\n        { action: 'large', icon: 'density_large' },\n        { action: 'title-small', text: 'TS' },\n        { action: 'title-medium', text: 'TM' },\n        { action: 'title-large', text: 'TL' },\n    ]);\n    savedAction = signal('medium');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(action) {\n        this.savedAction.update(() => action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ParagraphBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ParagraphBlockComponent, isStandalone: true, selector: \"paragraph-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, isInline: true, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ParagraphBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'paragraph-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgClass,\n                    ], template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"] }]\n        }] });\n\nconst NGX_EDITORJS_OPTIONS = new InjectionToken('NGX_EDITORJS_OPTIONS');\nclass NgxEditorJs2Service {\n    editorJsService = inject(EditorJsService);\n    consumerSupportedBlocks = new BehaviorSubject(inject(NGX_EDITORJS_OPTIONS, { optional: true })?.consumerSupportedBlocks ??\n        []);\n    internalSupportedBlocks = new BehaviorSubject([\n        {\n            name: 'Paragraph',\n            component: ParagraphBlockComponent,\n            componentInstanceName: 'ParagraphBlockComponent',\n        },\n        {\n            name: 'Header',\n            component: HeaderBlockComponent,\n            componentInstanceName: 'HeaderBlockComponent',\n        },\n    ]);\n    supportedBlocks$ = combineLatest([\n        this.internalSupportedBlocks.asObservable(),\n        this.consumerSupportedBlocks.asObservable(),\n    ]).pipe(map(([internal, consumer]) => [...internal, ...consumer]));\n    blocksToLoad = new BehaviorSubject([]);\n    loadBlocks$ = this.blocksToLoad.asObservable().pipe(delay(0), exhaustMap((blocks) => this.clearBlocksFromEditorJs(blocks)), map(([blocks]) => this.determineToloadDefaultBlocks(blocks)), map((blocks) => this.removeDuplicateBlocksWithSameIds(blocks)), map((blocks) => this.sortBlocks(blocks)), switchMap((blocks) => this.combineSupportBlocks(blocks)), map(([blocks, supportedBlocks]) => this.createALookupMapForSupportedBlocks(blocks, supportedBlocks)), map(({ blocks, supportedBlocksMap }) => this.findAndMarshalBlocksComponent(blocks, supportedBlocksMap)), mergeMap((blocks) => this.addBlocksToEditorJs(blocks).pipe(map(() => blocks))));\n    clearBlocksFromEditorJs(blocks) {\n        return forkJoin([of(blocks), this.editorJsService.clearBlocks()]);\n    }\n    determineToloadDefaultBlocks(blocks) {\n        return blocks.length > 0 ? blocks : this.loadDefaultBlocks();\n    }\n    loadDefaultBlocks() {\n        return [\n            {\n                blockId: 'tmdjr',\n                sortIndex: 0,\n                componentInstanceName: 'HeaderBlockComponent',\n                dataClean: \"Let's get started... 🚀\",\n                savedAction: 'h1',\n            },\n        ];\n    }\n    removeDuplicateBlocksWithSameIds(blocks) {\n        return Array.from(new Map(blocks.map((block) => [block.blockId, block])).values());\n    }\n    sortBlocks(blocks) {\n        return blocks.sort((a, b) => a.sortIndex - b.sortIndex);\n    }\n    combineSupportBlocks(blocks) {\n        return combineLatest([of(blocks), this.supportedBlocks$]);\n    }\n    createALookupMapForSupportedBlocks(blocks, supportedBlocks) {\n        return {\n            blocks,\n            supportedBlocksMap: new Map(supportedBlocks.map((sb) => [sb.componentInstanceName, sb.component])),\n        };\n    }\n    findAndMarshalBlocksComponent(blocks, supportedBlocksMap) {\n        return blocks.map((block) => ({\n            ...block,\n            component: supportedBlocksMap.get(block.componentInstanceName) ??\n                HeaderBlockComponent,\n        }));\n    }\n    addBlocksToEditorJs(blocks) {\n        return combineLatest(blocks.map((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Service, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Service, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Service, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass EditorJsComponent {\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    bootstrapEditorJs = input();\n    blocks = input.required({\n        transform: (value) => this.ngxEditorJs2Service.blocksToLoad.next(value),\n    });\n    ngxEditor = viewChild.required('ngxEditor', { read: ViewContainerRef });\n    constructor() {\n        effect(() => {\n            this.editorJsService.setNgxEditor(this.ngxEditor());\n        });\n    }\n    // * DEBUGGING\n    // ngOnInit() {\n    //   this.editorJsService.formGroup.valueChanges.subscribe((value) => {\n    //     console.log('[formGroup.value] : ', value);\n    //   });\n    //   this.editorJsService.blockComponents$.subscribe((components) => {\n    //     console.log('[components] : ', components);\n    //   });\n    // }\n    drop(event) {\n        lastValueFrom(this.editorJsService.moveBlockComponentPosition(event.previousIndex, event.currentIndex)).then(() => {\n            // DRAG ANIMATION HOT FIX\n            // Wait for Angular to update the DOM, then remove the animation class\n            requestAnimationFrame(() => {\n                document.querySelectorAll('.cdk-drag-animating').forEach((el) => {\n                    const element = el;\n                    element.classList.remove('cdk-drag-animating'); // Ensure old class is removed\n                    void element.offsetWidth; // Force reflow\n                    element.classList.add('cdk-drag-animating'); // Re-add for next drag\n                });\n            });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.2.0\", version: \"19.1.5\", type: EditorJsComponent, isStandalone: true, selector: \"editor-js\", inputs: { bootstrapEditorJs: { classPropertyName: \"bootstrapEditorJs\", publicName: \"bootstrapEditorJs\", isSignal: true, isRequired: false, transformFunction: null }, blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: true, transformFunction: null } }, viewQueries: [{ propertyName: \"ngxEditor\", first: true, predicate: [\"ngxEditor\"], descendants: true, read: ViewContainerRef, isSignal: true }], ngImport: i0, template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, isInline: true, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\", \"cdkDropListElementContainer\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'editor-js', imports: [CdkDropList], template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nclass ToolbarInlineComponent {\n    // @Input() selection!: Selection;\n    selection = input.required();\n    closeOverlayEmitter = new EventEmitter();\n    renderer = inject(Renderer2);\n    url = '';\n    showURLInputField = signal(false);\n    savedRanges = [];\n    options = [\n        { icon: 'format_bold', action: 'bold' },\n        { icon: 'format_italic', action: 'italic' },\n        { icon: 'format_underlined', action: 'underline' },\n        { icon: 'strikethrough_s', action: 'strikethrough' },\n        { icon: 'format_list_bulleted', action: 'insertUnorderedList' },\n        { icon: 'format_list_numbered', action: 'insertOrderedList' },\n        { icon: 'highlight', action: 'highlightColor' },\n        { icon: 'format_align_left', action: 'justifyLeft' },\n        { icon: 'format_align_center', action: 'justifyCenter' },\n        { icon: 'format_align_right', action: 'justifyRight' },\n        { icon: 'format_align_justify', action: 'justifyFull' },\n    ];\n    addInlineTag(tag) {\n        // https://stackoverflow.com/questions/60581285/execcommand-is-now-obsolete-whats-the-alternative\n        document.execCommand(tag);\n        this.closeOverlayEmitter.emit();\n    }\n    addClassTag(tag, className) {\n        const range = this.selection().getRangeAt(0);\n        const element = this.renderer.createElement(tag);\n        element.className = className ?? '';\n        element.innerHTML = range.toString();\n        range.deleteContents();\n        range.insertNode(element);\n        this.closeOverlayEmitter.emit();\n    }\n    clearTags() {\n        document.execCommand('removeFormat');\n        document.execCommand('unlink');\n        this.closeOverlayEmitter.emit();\n    }\n    openUrlInput() {\n        this.savedRanges.push(this.selection().getRangeAt(0));\n        this.showURLInputField.set(true);\n    }\n    createLink() {\n        this.selection().removeAllRanges();\n        this.selection().addRange(this.savedRanges.pop());\n        document.execCommand('createLink', false, this.url);\n        this.closeOverlayEmitter.emit();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.1.5\", type: ToolbarInlineComponent, isStandalone: true, selector: \"toolbar-inline\", inputs: { selection: { classPropertyName: \"selection\", publicName: \"selection\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { closeOverlayEmitter: \"closeOverlay\" }, host: { classAttribute: \"mat-elevation-z24\" }, ngImport: i0, template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, isInline: true, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"], dependencies: [{ kind: \"ngmodule\", type: MatListModule }, { kind: \"ngmodule\", type: MatIconModule }, { kind: \"component\", type: i1$2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-inline', imports: [MatListModule, MatIconModule, FormsModule], host: { class: 'mat-elevation-z24' }, template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"] }]\n        }], propDecorators: { closeOverlayEmitter: [{\n                type: Output,\n                args: ['closeOverlay']\n            }] } });\n\nclass ToolbarInlineService {\n    overlay = inject(Overlay);\n    overlayRef;\n    determineToDisplayInlineToolbarBlock(_event) {\n        return of(window.getSelection()).pipe(filter((selection) => selection !== null), filter((selection) => selection.rangeCount > 0), filter((selection) => selection.toString().length > 0), filter((selection) => selection.toString() !== ''), tap(() => this.overlayRef?.hasAttached() && this.overlayRef.dispose()), // So hacky tired to do this properly\n        map((selection) => ({\n            selection,\n            parant: this.getSelectionParent(selection),\n        })), filter(({ parant }) => this.isSelectionInABlock(parant)), exhaustMap(({ selection }) => this.attachInlineToolbar(selection)));\n    }\n    getSelectionParent(selection) {\n        const range = selection.getRangeAt(0);\n        return range.commonAncestorContainer.nodeType === Node.ELEMENT_NODE\n            ? range.commonAncestorContainer\n            : range.commonAncestorContainer.parentElement;\n    }\n    isSelectionInABlock(target) {\n        // ! TODO: This is a hacky way to determine if the selection is in a block\n        // ! Need to also check if the block wants to display the inline toolbar\n        return (!!target &&\n            (target.closest('.no-toolbar-inline') !== null\n                ? false\n                : target.closest('ngx-editor-js2') !== null\n                    ? true\n                    : false));\n    }\n    attachInlineToolbar(selection) {\n        return of(selection.getRangeAt(0)).pipe(map((range) => range.getBoundingClientRect()), map((selectionRect) => this.createOverlay(selectionRect)), \n        // So hacky tired to do this properly\n        // passing the refs down the pipe adds a bug\n        // user selects text with a drag\n        // (mousedown → mousemove → wait → mousemove → mouseup)\n        tap((overlayRef) => (this.overlayRef = overlayRef)), map((overlayRef) => {\n            const inlineToolbar = overlayRef.attach(new ComponentPortal(ToolbarInlineComponent));\n            inlineToolbar.setInput('selection', selection);\n            lastValueFrom(merge(overlayRef.backdropClick(), inlineToolbar.instance.closeOverlayEmitter).pipe(tap(() => overlayRef.dispose()), tap(() => selection.removeAllRanges())));\n            return true;\n        }));\n    }\n    createOverlay(selectionRect) {\n        return this.overlay.create({\n            hasBackdrop: true,\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            positionStrategy: this.overlay\n                .position()\n                .flexibleConnectedTo(selectionRect)\n                .withPositions([\n                {\n                    offsetY: 8,\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                },\n            ]),\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass NgxEditorJs2Component {\n    inlineToolbarSerivce = inject(ToolbarInlineService);\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    blocks = input([]);\n    blocksRequested = output();\n    requestBlocks = input.required({\n        transform: (_v) => this.blocksRequested.emit(this.editorJsService.getBlocks$()),\n    });\n    bootstrapEditorJs$ = combineLatest([\n        inject(ToolFabService).toolbarComponentRef$,\n        this.ngxEditorJs2Service.loadBlocks$,\n        fromEvent(document, 'selectionchange').pipe(debounceTime(200), switchMap((event) => this.inlineToolbarSerivce.determineToDisplayInlineToolbarBlock(event)))\n    ]);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Component, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: NgxEditorJs2Component, isStandalone: true, selector: \"ngx-editor-js2\", inputs: { blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: false, transformFunction: null }, requestBlocks: { classPropertyName: \"requestBlocks\", publicName: \"requestBlocks\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { blocksRequested: \"blocksRequested\" }, ngImport: i0, template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `, isInline: true, dependencies: [{ kind: \"component\", type: EditorJsComponent, selector: \"editor-js\", inputs: [\"bootstrapEditorJs\", \"blocks\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Component, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-editor-js2',\n                    imports: [EditorJsComponent, AsyncPipe],\n                    template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `,\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-editor-js2\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofocusDirective, CleanPasteDataDirective, ControlAccessorDirective, NGX_EDITORJS_OPTIONS, NgxEditorJs2Component, NgxEditorJs2Service, ToolbarFabDirective };\n","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nexport { _asyncToGenerator as default };"],"names":["MermaidjsConfigComponent","updateConfig","output","value","model","codeMirrorOptions","signal","lineNumbers","theme","mode","extraKeys","styleActiveLine","matchBrackets","indentUnit","tabSize","cursorScrollMargin","closeConfig","emit","ɵcmp","selectors","inputs","outputs","decls","vars","consts","template","MermaidjsConfigComponent_Template","rf","ctx","MatButton","MatFormFieldModule","ReactiveFormsModule","i3","NgControlStatus","FormsModule","NgModel","CodemirrorModule","i2","CodemirrorComponent","styles","SafeHtmlPipe","sanitized","constructor","transform","bypassSecurityTrustHtml","i1","DomSanitizer","pure","mermaid","parseError","err","hash","console","warn","NgxEditorJs2MermaidjsComponent","ngZone","inject","NgZone","default","sortIndex","input","componentInstanceName","autofocus","formGroup","required","formControlName","blockOptionActions","action","icon","savedAction","actionCallbackBind","actionCallback","bind","mermaidDiagramSVG","openOverlay","ngOnInit","runOutsideAngular","initialize","startOnLoad","possibleSavedValue","get","renderMermaidDiagram","mermaidDiagram","uniqueId","Date","now","Math","floor","random","render","then","data","run","svg","error","update","openEditOverlay","set","updateMermaidDiagram","setValue","hostAttrs","features","i2$1","CdkDrag","NgxEditorJs2MermaidjsComponent_Template","NgControlStatusGroup","FormGroupDirective","FormControlName","ControlAccessorDirective","AutofocusDirective","ToolbarFabDirective","MatFabButton","MatIcon","NgClass","i0","EventEmitter","forwardRef","Component","ChangeDetectionStrategy","Input","Output","ViewChild","NgModule","NG_VALUE_ACCESSOR","_c0","normalizeLineEndings","str","replace","_differs","_ngZone","className","name","autoFocus","options","_options","_differ","find","create","preserveScrollPosition","cursorActivity","focusChange","scroll","drop","codeMirrorLoaded","ref","disabled","isFocused","codeMirror","_codeMirror","codeMirrorGlobal","CodeMirror","ngAfterViewInit","_this","_asyncToGenerator","codeMirrorObj","fromTextArea","nativeElement","on","cm","cursorActive","scrollChanged","focusChanged","change","codemirrorValueChanged","e","dropFiles","ngDoCheck","changes","diff","forEachChangedItem","option","setOptionIfChanged","key","currentValue","forEachAddedItem","forEachRemovedItem","ngOnDestroy","toTextArea","cmVal","getValue","onChange","optionName","newValue","setOption","focused","onTouched","getScrollInfo","writeValue","undefined","cur","prevScrollPosition","scrollTo","left","top","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_","ɵfac","CodemirrorComponent_Factory","__ngFactoryType__","ɵɵdirectiveInject","KeyValueDiffers","ɵɵdefineComponent","type","viewQuery","CodemirrorComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","standalone","ɵɵProvidersFeature","provide","useExisting","multi","CodemirrorComponent_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassMapInterpolate1","ɵɵclassProp","ɵɵproperty","encapsulation","changeDetection","ngDevMode","CodemirrorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ElementRef","Directive","HostListener","Injectable","ViewContainerRef","effect","InjectionToken","viewChild","Renderer2","FormControl","FormBuilder","startWith","combineLatest","map","firstValueFrom","of","from","tap","filter","defaultIfEmpty","Observable","lastValueFrom","forkJoin","iif","switchMap","mergeMap","BehaviorSubject","distinctUntilChanged","delay","exhaustMap","merge","fromEvent","debounceTime","MatRipple","i1$1","CdkDragHandle","CdkDropList","OverlayModule","Overlay","i1$2","MatIconModule","AsyncPipe","NgSwitch","NgSwitchCase","NgTemplateOutlet","toObservable","MatFormField","MatLabel","MatInput","MatList","MatListItem","MatListModule","ComponentPortal","ToolbarBlockOptionsComponent_For_11_Conditional_1_Template","blockOptionAction_r2","ɵɵnextContext","$implicit","ɵɵtextInterpolate1","text","ToolbarBlockOptionsComponent_For_11_Conditional_2_Template","ɵɵadvance","ɵɵtextInterpolate","ToolbarBlockOptionsComponent_For_11_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","ToolbarBlockOptionsComponent_For_11_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵresetView","handleAction","ɵɵtemplate","ɵɵconditional","ToolbarBlocksComponent_Conditional_5_Conditional_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template_mat_list_item_click_0_listener","block_r2","addBlock","ToolbarBlocksComponent_Conditional_5_Conditional_2_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIndex","filteredBlocks_r4","ɵɵrepeater","ToolbarBlocksComponent_Conditional_5_Template","length","ToolbarComponent_ng_template_9_Template","_r2","ToolbarComponent_ng_template_9_Template_toolbar_blocks_addBlock_0_listener","$event","supportedBlocks","ToolbarComponent_ng_template_10_Template","_r4","ToolbarComponent_ng_template_10_Template_toolbar_block_options_handleAction_0_listener","ToolbarComponent_ng_template_10_Template_toolbar_block_options_moveBlockPosition_0_listener","moveBlockPosition","HeaderBlockComponent_h1_1_ng_container_1_Template","ɵɵelementContainer","HeaderBlockComponent_h1_1_Template","sharedHeaderTemplate_r1","ɵɵreference","HeaderBlockComponent_h2_2_ng_container_1_Template","HeaderBlockComponent_h2_2_Template","HeaderBlockComponent_h3_3_ng_container_1_Template","HeaderBlockComponent_h3_3_Template","HeaderBlockComponent_h4_4_ng_container_1_Template","HeaderBlockComponent_h4_4_Template","HeaderBlockComponent_h5_5_ng_container_1_Template","HeaderBlockComponent_h5_5_Template","HeaderBlockComponent_h6_6_ng_container_1_Template","HeaderBlockComponent_h6_6_Template","HeaderBlockComponent_ng_template_7_Template","ɵɵelement","tmp_2_0","ctx_r1","ToolbarInlineComponent_For_2_Template","ToolbarInlineComponent_For_2_Template_div_click_0_listener","item_r2","addInlineTag","ToolbarInlineComponent_Conditional_12_Template","ɵɵtwoWayListener","ToolbarInlineComponent_Conditional_12_Template_input_ngModelChange_1_listener","ɵɵtwoWayBindingSet","url","ToolbarInlineComponent_Conditional_12_Template_div_click_2_listener","createLink","ɵɵtwoWayProperty","elementRef","defaultValue","innerHTML","onBlur","onInput","ControlAccessorDirective_Factory","ɵdir","ɵɵdefineDirective","hostBindings","ControlAccessorDirective_HostBindings","ControlAccessorDirective_blur_HostBindingHandler","ControlAccessorDirective_input_HostBindingHandler","ngAfterContentInit","focus","AutofocusDirective_Factory","MovePositionActions","ToolbarBlockOptionsComponent","Position","handleActionEmitter","alias","moveBlockPositionEmitter","movePosition","ToolbarBlockOptionsComponent_Factory","ToolbarBlockOptionsComponent_Template","ToolbarBlockOptionsComponent_Template_div_click_1_listener","UP","ToolbarBlockOptionsComponent_Template_div_click_4_listener","DELETE","ToolbarBlockOptionsComponent_Template_div_click_7_listener","DOWN","dependencies","ToolbarBlocksComponent","addBlockEmitter","supportedBlocks$","blockCtrl","filter$","valueChanges","pipe","filteredBlocks$","blocks","filterString","pattern","split","v","join","regex","RegExp","block","match","component","ToolbarBlocksComponent_Factory","ToolbarBlocksComponent_Template","ɵɵpipe","ɵɵpipeBind1","DefaultValueAccessor","FormControlDirective","ToolbarComponent","componentContextPositionIndex","addBlockCallback","moveBlockPositionCallback","openBlocks","openBlocksOption","openBlocksList","prev","openBlockOptionList","closeLists","ToolbarComponent_Factory","ToolbarComponent_Template","ToolbarComponent_Template_div_click_1_listener","ToolbarComponent_Template_div_click_5_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_9_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_10_listener","blockListTigger_r5","blockOptionListTigger_r6","CdkConnectedOverlay","CdkOverlayOrigin","BlockMovementService","componentRefMap","Map","clearComponentRefs","clear","getNgxEditorJsBlocks","Array","values","newComponentAttached","componentRef","instance","updateComponentIndices","ngxEditor","setInput","indexOf","hostView","moveBlockComponentPosition","index","componentRefs","totalComponents","currentIndex","newIndex","max","min","move","removeBlockComponent","delete","successful","remove","BlockMovementService_Factory","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","createUID","toString","substring","EditorJsService","formBuilder","blockMovementService","group","setNgxEditor","getBlocks$","observer","blockId","dataClean","sort","a","b","next","complete","createNgxEditorJsBlockWithComponent","blockComponent","addBlockComponent","ngxEditorJsBlock","createFormGroupControl","attachComponent","control","formControl","addControl","controlName","createComponent","determineMovePositionAction","previousIndex","viewRef","removeControl","clearBlocks","EditorJsService_Factory","ToolFabService","ngxEditorJs2Service","NgxEditorJs2Service","editorJsService","componentContext","toolbarComponentRef$","asObservable","previous","current","viewContainerRef","movePositionAction","ToolFabService_Factory","toolFabService","onMouseEnter","ToolbarFabDirective_Factory","ToolbarFabDirective_HostBindings","ToolbarFabDirective_mouseenter_HostBindingHandler","CleanPasteDataDirective","onPaste","event","preventDefault","clipboardData","getData","document","execCommand","CleanPasteDataDirective_Factory","CleanPasteDataDirective_HostBindings","CleanPasteDataDirective_paste_HostBindingHandler","HeaderBlockComponent","selectedAction","HeaderBlockComponent_Factory","ɵɵHostDirectivesFeature","HeaderBlockComponent_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵtemplateRefExtractor","ParagraphBlockComponent","ParagraphBlockComponent_Factory","ParagraphBlockComponent_Template","NGX_EDITORJS_OPTIONS","consumerSupportedBlocks","optional","internalSupportedBlocks","internal","consumer","blocksToLoad","loadBlocks$","clearBlocksFromEditorJs","determineToloadDefaultBlocks","removeDuplicateBlocksWithSameIds","sortBlocks","combineSupportBlocks","createALookupMapForSupportedBlocks","supportedBlocksMap","findAndMarshalBlocksComponent","addBlocksToEditorJs","loadDefaultBlocks","sb","NgxEditorJs2Service_Factory","EditorJsComponent","bootstrapEditorJs","read","requestAnimationFrame","querySelectorAll","forEach","el","element","classList","offsetWidth","add","EditorJsComponent_Factory","EditorJsComponent_Query","ɵɵviewQuerySignal","ɵɵqueryAdvance","EditorJsComponent_Template","EditorJsComponent_Template_div_cdkDropListDropped_0_listener","ToolbarInlineComponent","selection","closeOverlayEmitter","renderer","showURLInputField","savedRanges","tag","addClassTag","range","getRangeAt","createElement","deleteContents","insertNode","clearTags","openUrlInput","push","removeAllRanges","addRange","pop","ToolbarInlineComponent_Factory","ToolbarInlineComponent_Template","ToolbarInlineComponent_Template_div_click_3_listener","ToolbarInlineComponent_Template_div_click_6_listener","ToolbarInlineComponent_Template_div_click_9_listener","ToolbarInlineService","overlay","overlayRef","determineToDisplayInlineToolbarBlock","_event","window","getSelection","rangeCount","hasAttached","dispose","parant","getSelectionParent","isSelectionInABlock","attachInlineToolbar","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","parentElement","target","closest","getBoundingClientRect","selectionRect","createOverlay","inlineToolbar","attach","backdropClick","hasBackdrop","backdropClass","positionStrategy","position","flexibleConnectedTo","withPositions","offsetY","originX","originY","overlayX","overlayY","ToolbarInlineService_Factory","NgxEditorJs2Component","inlineToolbarSerivce","blocksRequested","requestBlocks","_v","bootstrapEditorJs$","NgxEditorJs2Component_Factory","NgxEditorJs2Component_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[4,5,6]}