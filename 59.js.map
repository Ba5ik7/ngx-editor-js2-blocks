{"version":3,"file":"59.js","mappings":"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","sources":["./projects/ngx-editor-js2-mermaidjs/src/lib/mermaidjs-config/mermaidjs-config.component.ts","./projects/ngx-editor-js2-mermaidjs/src/lib/ngx-editor-js2-mermaidjs.component.ts","./projects/ngx-editor-js2-mermaidjs/src/public-api.ts","./projects/ngx-editor-js2-mermaidjs/src/tmdjr-ngx-editor-js2-mermaidjs.ts","./node_modules/@tmdjr/ngx-editor-js2/fesm2022/tmdjr-ngx-editor-js2.mjs","./node_modules/@ctrl/ngx-codemirror/fesm2022/ctrl-ngx-codemirror.mjs","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Component, effect, model, output, signal } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\n@Component({\n  selector: 'mermaidjs-config',\n  imports: [\n    MatButton,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    CodemirrorModule,\n  ],\n  template: `\n    <div class=\"mermaidjs-block-modal\">\n      <h2 mat-dialog-title>MermaidJs Configurations</h2>\n      <ngx-codemirror [(ngModel)]=\"value\" [options]=\"codeMirrorOptions()\">\n      </ngx-codemirror>\n      <div class=\"action-group\">\n        <button type=\"button\" mat-flat-button (click)=\"closeConfig()\">\n          Update\n        </button>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        position: relative;\n        padding: 20px;\n        border: 1px solid #ccc;\n        border-radius: var(\n          --mat-card-outlined-container-shape,\n          var(--mat-sys-corner-medium)\n        );\n\n        .action-group {\n          margin-top: 20px;\n          display: flex;\n          justify-content: flex-end;\n        }\n      }\n\n      :host ::ng-deep .CodeMirror {\n        font-family: Cascadia Code, Fira Code, Menlo, Monaco, 'Courier New',\n          monospace;\n        font-size: 16px;\n        font-weight: 400;\n        line-height: 32px;\n        letter-spacing: 0.5px;\n        height: 100%;\n      }\n    `,\n  ],\n})\nexport class MermaidjsConfigComponent {\n  updateConfig = output<void>();\n  value = model<string>();\n  codeMirrorOptions = signal({\n    lineNumbers: true,\n    theme: 'material-palenight',\n    mode: 'text/typescript',\n    extraKeys: { 'Ctrl-Space': 'autocomplete' },\n    styleActiveLine: true, // Highlight active line\n    matchBrackets: true,\n    indentUnit: 2,\n    tabSize: 2,\n    cursorScrollMargin: 5,\n  });\n\n  closeConfig() {\n    this.updateConfig.emit();\n  }\n}\n","import { CdkDrag } from '@angular/cdk/drag-drop';\nimport { NgClass } from '@angular/common';\nimport {\n  Component,\n  inject,\n  input,\n  NgZone,\n  Pipe,\n  PipeTransform,\n  signal,\n} from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { MatFabButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport {\n  ControlAccessorDirective,\n  AutofocusDirective,\n  ToolbarFabDirective,\n  BlockOptionAction,\n} from '@tmdjr/ngx-editor-js2';\nimport MermaidImport from 'mermaid';\nimport type { Mermaid } from 'mermaid';\nimport { MermaidjsConfigComponent } from './mermaidjs-config/mermaidjs-config.component';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nconst mermaid: Mermaid = (MermaidImport as any).default ? (MermaidImport as any).default : MermaidImport;\n\n@Pipe({ name: 'safeHtml', standalone: true })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitized: DomSanitizer) {}\n  transform(value: string) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n\nmermaid.parseError = function (err: any, hash: any) {\n  console.warn(`Error parsing mermaid diagram: ${err} ${hash}`);\n};\n\n@Component({\n  selector: 'ngx-editor-js2-mermaidjs',\n  host: { class: 'cdk-drag-animating no-toolbar-inline' },\n  hostDirectives: [CdkDrag],\n  imports: [\n    ReactiveFormsModule,\n    ControlAccessorDirective,\n    AutofocusDirective,\n    ToolbarFabDirective,\n    MatFabButton,\n    MatIcon,\n    NgClass,\n    MermaidjsConfigComponent,\n    SafeHtmlPipe,\n  ],\n  template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <span\n        controlAccessor\n        toolbarFab\n        class=\"mermaidjs-container-overlay\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></span>\n      @if (!openOverlay()) {\n      <div class=\"mermaidjs-container\">\n        <div\n          #mermaidContainer\n          [ngClass]=\"savedAction()\"\n          [innerHTML]=\"mermaidDiagramSVG | safeHtml\"\n          class=\"mermaid\"\n        ></div>\n        <button\n          mat-fab\n          class=\"mermaidjs-block-button\"\n          (click)=\"openEditOverlay()\"\n        >\n          <mat-icon>edit</mat-icon>\n        </button>\n      </div>\n      } @else {\n      <mermaidjs-config\n        [(value)]=\"value\"\n        (updateConfig)=\"updateMermaidDiagram()\"\n      >\n      </mermaidjs-config>\n      }\n    </ng-container>\n  `,\n  styles: `\n      :host {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        margin: 1.5rem 0;\n\n        .flex-start {\n          justify-content: flex-start;\n        }\n        .flex-end {\n          justify-content: flex-end;\n        }\n        .center {\n          justify-content: center;\n        }\n        .stretch img {\n          width: 100%;\n        }\n\n        .mermaid { width: 100%; display: flex; }\n        .mermaidjs-container-overlay {\n          display: flex;\n          height: 100%;\n          width: 100%;\n          position: absolute;\n        }\n\n        .mermaid:hover ~ .mermaid-block-button, .mermaid-block-button:hover,\n        .mermaidjs-container-overlay:hover ~ .mermaidjs-container .mermaidjs-block-button,\n        .mermaidjs-block-button:hover {\n          display: block;\n        }\n        .mermaidjs-container {\n          display: flex;\n          .mermaidjs-block {\n            min-width: 0;\n          }\n        }\n\n        .mermaidjs-block-button {\n          position: absolute;\n          top: 6px;\n          left: 6px;\n          display: none;\n        }\n      }\n  `,\n})\nexport class NgxEditorJs2MermaidjsComponent {\n  ngZone = inject(NgZone);\n  mermaid = mermaid;\n\n  sortIndex = input<number>(0);\n  componentInstanceName = 'NgxEditorJs2MermaidjsComponent';\n  autofocus = input<boolean>(true);\n  formGroup = input.required<FormGroup>();\n  formControlName = input.required<string>();\n  blockOptionActions = input<BlockOptionAction[]>([\n    { action: 'flex-start', icon: 'format_align_left' },\n    { action: 'center', icon: 'format_align_center' },\n    { action: 'flex-end', icon: 'format_align_right' },\n    { action: 'stretch', icon: 'format_align_justify' },\n  ]);\n\n  savedAction = signal<string>('flex-start');\n  actionCallbackBind = this.actionCallback.bind(this);\n\n  mermaidDiagramSVG = '';\n  value = `flowchart TD\n    A[Christmas] -->|Get money| B(Go shopping)\n    B --> C{Let me think}\n    C -->|One| D[Laptop]\n    C -->|Two| E[iPhone]\n    C -->|Three| F[fa:fa-car Car]`;\n\n  openOverlay = signal<boolean>(false);\n\n  ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      this.mermaid.initialize({ startOnLoad: false });\n    });\n    const possibleSavedValue = this.formGroup().get(this.formControlName());\n    this.value = possibleSavedValue?.value\n      ? possibleSavedValue.value\n      : this.value;\n    this.renderMermaidDiagram(this.value);\n  }\n\n  renderMermaidDiagram(mermaidDiagram: string): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.mermaid.render(this.genUniqueId(), mermaidDiagram).then(\n        (data) => this.ngZone.run(() => (this.mermaidDiagramSVG = data.svg)),\n        (error) => console.warn(`Error: ${error}`)\n      );\n    });\n  }\n\n  actionCallback(action: string) {\n    this.savedAction.update(() => action);\n  }\n\n  openEditOverlay() {\n    this.openOverlay.set(true);\n  }\n\n  updateMermaidDiagram() {\n    this.renderMermaidDiagram(this.value);\n    this.formGroup().get(this.formControlName())?.setValue(this.value);\n    this.openOverlay.set(false);\n  }\n\n  genUniqueId() {\n    return `mermaid-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n  }\n}\n","/*\n * Public API Surface of ngx-editor-js2-mermaidjs\n */\n\nexport * from './lib/ngx-editor-js2-mermaidjs.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import * as i0 from '@angular/core';\nimport { inject, ElementRef, input, forwardRef, HostListener, Directive, output, Component, signal, Injectable, ViewContainerRef, effect, InjectionToken, viewChild, EventEmitter, Renderer2, Output } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormControl, ReactiveFormsModule, FormBuilder, FormsModule } from '@angular/forms';\nimport { startWith, combineLatest, map, firstValueFrom, of, from, tap, filter, defaultIfEmpty, Observable, lastValueFrom, forkJoin, iif, switchMap, mergeMap, BehaviorSubject, distinctUntilChanged, delay, exhaustMap, merge, fromEvent, debounceTime } from 'rxjs';\nimport { MatRipple } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/drag-drop';\nimport { CdkDragHandle, CdkDrag, CdkDropList } from '@angular/cdk/drag-drop';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule, Overlay } from '@angular/cdk/overlay';\nimport * as i1$2 from '@angular/material/icon';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport { AsyncPipe, NgTemplateOutlet, NgClass } from '@angular/common';\nimport { toObservable } from '@angular/core/rxjs-interop';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatList, MatListItem, MatListModule } from '@angular/material/list';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\nclass ControlAccessorDirective {\n    elementRef = inject(ElementRef);\n    defaultValue = input();\n    onChange = () => { };\n    onTouched = () => { };\n    writeValue() {\n        this.elementRef.nativeElement.innerHTML = this.defaultValue() || '';\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onBlur() {\n        this.onTouched();\n    }\n    onInput() {\n        this.onChange(this.elementRef.nativeElement.innerHTML);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ControlAccessorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ControlAccessorDirective, isStandalone: true, selector: \"[controlAccessor]\", inputs: { defaultValue: { classPropertyName: \"defaultValue\", publicName: \"defaultValue\", isSignal: true, isRequired: false, transformFunction: null } }, host: { listeners: { \"blur\": \"onBlur()\", \"input\": \"onInput()\" } }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => ControlAccessorDirective),\n                multi: true,\n            },\n        ], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ControlAccessorDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[controlAccessor]',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => ControlAccessorDirective),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], propDecorators: { onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onInput: [{\n                type: HostListener,\n                args: ['input']\n            }] } });\n\nclass AutofocusDirective {\n    elementRef = inject(ElementRef);\n    autofocus = input(false);\n    ngAfterContentInit() {\n        this.autofocus() && this.elementRef.nativeElement.focus?.();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: AutofocusDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: AutofocusDirective, isStandalone: true, selector: \"[autofocus]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: AutofocusDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[autofocus]',\n                }]\n        }] });\n\nvar MovePositionActions;\n(function (MovePositionActions) {\n    MovePositionActions[\"UP\"] = \"UP\";\n    MovePositionActions[\"DOWN\"] = \"DOWN\";\n    MovePositionActions[\"DELETE\"] = \"DELETE\";\n})(MovePositionActions || (MovePositionActions = {}));\n\nclass ToolbarBlockOptionsComponent {\n    Position = MovePositionActions;\n    blockOptionActions = input();\n    handleActionEmitter = output({ alias: 'handleAction' });\n    moveBlockPositionEmitter = output({\n        alias: 'moveBlockPosition',\n    });\n    movePosition(action) {\n        this.moveBlockPositionEmitter.emit(action);\n    }\n    handleAction(action) {\n        this.handleActionEmitter.emit(action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlockOptionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarBlockOptionsComponent, isStandalone: true, selector: \"toolbar-block-options\", inputs: { blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { handleActionEmitter: \"handleAction\", moveBlockPositionEmitter: \"moveBlockPosition\" }, ngImport: i0, template: `\n    <div class=\"actions-panel\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:hover,:host .actions-panel .action-btn:focus{color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"], dependencies: [{ kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlockOptionsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-block-options', imports: [MatIcon, MatRipple], template: `\n    <div class=\"actions-panel\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:hover,:host .actions-panel .action-btn:focus{color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"] }]\n        }] });\n\nclass ToolbarBlocksComponent {\n    addBlockEmitter = output({ alias: 'addBlock' });\n    supportedBlocks = input([]);\n    supportedBlocks$ = toObservable(this.supportedBlocks);\n    blockCtrl = new FormControl([]);\n    filter$ = this.blockCtrl.valueChanges.pipe(startWith(''));\n    filteredBlocks$ = combineLatest([this.supportedBlocks$, this.filter$]).pipe(map(([blocks, filterString]) => {\n        if (typeof filterString !== 'string')\n            filterString = '';\n        filterString = filterString.replace(/\\\\/g, '');\n        const pattern = filterString\n            ?.split('')\n            .map((v) => `(?=.*${v})`)\n            .join('');\n        const regex = new RegExp(`${pattern}`, 'gi');\n        // return blocks.filter(block => regex.exec(block));\n        return blocks.filter((block) => block.name.match(regex));\n    }));\n    addBlock(block) {\n        this.addBlockEmitter.emit(block?.component);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlocksComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarBlocksComponent, isStandalone: true, selector: \"toolbar-blocks\", inputs: { supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { addBlockEmitter: \"addBlock\" }, ngImport: i0, template: `\n    <div class=\"block-list-container\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{border-radius:4px;background:var(--mat-sys-secondary-container);box-shadow:var(--mat-sys-level5)}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:hover,:host mat-list-item:focus{background:var(--mat-sys-surface-bright)}\\n\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"directive\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\", \"disabledInteractive\"], exportAs: [\"matInput\"] }, { kind: \"component\", type: MatList, selector: \"mat-list\", exportAs: [\"matList\"] }, { kind: \"component\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: [\"activated\"], exportAs: [\"matListItem\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatLabel, selector: \"mat-label\" }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarBlocksComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-blocks', imports: [\n                        MatFormField,\n                        MatInput,\n                        MatList,\n                        MatListItem,\n                        MatRipple,\n                        MatLabel,\n                        ReactiveFormsModule,\n                        AsyncPipe,\n                    ], template: `\n    <div class=\"block-list-container\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{border-radius:4px;background:var(--mat-sys-secondary-container);box-shadow:var(--mat-sys-level5)}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:hover,:host mat-list-item:focus{background:var(--mat-sys-surface-bright)}\\n\"] }]\n        }] });\n\nclass ToolbarComponent {\n    componentContextPositionIndex = input.required();\n    supportedBlocks = input.required();\n    blockOptionActions = input();\n    actionCallback = input(() => () => { });\n    formControlName = input();\n    addBlockCallback = input.required();\n    moveBlockPositionCallback = input.required();\n    openBlocks = signal(false);\n    openBlocksOption = signal(false);\n    openBlocksList() {\n        this.openBlocks.update((prev) => !prev);\n    }\n    openBlockOptionList() {\n        this.openBlocksOption.update((prev) => !prev);\n    }\n    moveBlockPosition(action) {\n        this.closeLists();\n        this.moveBlockPositionCallback()(action, this.componentContextPositionIndex());\n    }\n    handleAction(action) {\n        this.closeLists();\n        this.actionCallback()(action);\n    }\n    addBlock(block) {\n        this.closeLists();\n        firstValueFrom(this.addBlockCallback()(block, this.componentContextPositionIndex()));\n    }\n    closeLists() {\n        this.openBlocks.set(false);\n        this.openBlocksOption.set(false);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ToolbarComponent, isStandalone: true, selector: \"toolbar\", inputs: { componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: false, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: false, transformFunction: null }, addBlockCallback: { classPropertyName: \"addBlockCallback\", publicName: \"addBlockCallback\", isSignal: true, isRequired: true, transformFunction: null }, moveBlockPositionCallback: { classPropertyName: \"moveBlockPositionCallback\", publicName: \"moveBlockPositionCallback\", isSignal: true, isRequired: true, transformFunction: null } }, ngImport: i0, template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, isInline: true, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container);box-shadow:var(--mat-sys-level2)}:host .toolbar-buttons:hover,:host .toolbar-buttons:focus{background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"ngmodule\", type: OverlayModule }, { kind: \"directive\", type: i1.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\", \"cdkConnectedOverlayDisposeOnNavigation\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i1.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"component\", type: ToolbarBlockOptionsComponent, selector: \"toolbar-block-options\", inputs: [\"blockOptionActions\"], outputs: [\"handleAction\", \"moveBlockPosition\"] }, { kind: \"component\", type: ToolbarBlocksComponent, selector: \"toolbar-blocks\", inputs: [\"supportedBlocks\"], outputs: [\"addBlock\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar', imports: [\n                        CdkDragHandle,\n                        MatRipple,\n                        OverlayModule,\n                        ToolbarBlockOptionsComponent,\n                        ToolbarBlocksComponent,\n                    ], template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container);box-shadow:var(--mat-sys-level2)}:host .toolbar-buttons:hover,:host .toolbar-buttons:focus{background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"] }]\n        }] });\n\nclass BlockMovementService {\n    componentRefMap = new Map();\n    clearComponentRefs() {\n        this.componentRefMap.clear();\n    }\n    getNgxEditorJsBlocks() {\n        return of(Array.from(this.componentRefMap.values()));\n    }\n    newComponentAttached(componentRef) {\n        this.componentRefMap.set(componentRef.instance, componentRef);\n    }\n    updateComponentIndices(ngxEditor) {\n        return from(this.componentRefMap.values()).pipe(tap((componentRef) => componentRef.setInput('sortIndex', ngxEditor.indexOf(componentRef.hostView))));\n    }\n    moveBlockComponentPosition(ngxEditor, action, index) {\n        return of(Array.from(this.componentRefMap.values())).pipe(map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), filter((componentRef) => !!componentRef), map((componentRef) => ({\n            componentRef,\n            totalComponents: ngxEditor.length - 1,\n            currentIndex: ngxEditor.indexOf(componentRef.hostView),\n            newIndex: (index) => action === MovePositionActions.UP ? index - 1 : index + 1,\n        })), map(({ componentRef, totalComponents, currentIndex, newIndex }) => ({\n            componentRef,\n            currentIndex,\n            newIndex: Math.max(0, Math.min(newIndex(currentIndex), totalComponents)),\n        })), filter(({ currentIndex, newIndex }) => currentIndex !== newIndex), tap(({ componentRef, newIndex }) => {\n            ngxEditor.move(componentRef.hostView, newIndex);\n            componentRef.setInput('sortIndex', newIndex);\n            componentRef.setInput('autofocus', true);\n        }), defaultIfEmpty(false));\n    }\n    removeBlockComponent(ngxEditor, index, clear = false) {\n        return of(Array.from(this.componentRefMap.values())).pipe(filter((componentRefs) => clear || componentRefs.length !== 1), map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), map((componentRef) => this.componentRefMap.delete(componentRef?.instance ?? {})), tap((successful) => successful && ngxEditor.remove(index - 1)), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: BlockMovementService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nconst createUID = () => Math.random().toString(36).substring(7);\nclass EditorJsService {\n    formBuilder = inject(FormBuilder);\n    blockMovementService = inject(BlockMovementService);\n    componentRefMap = new Map();\n    ngxEditor;\n    formGroup = this.formBuilder.group({});\n    // TODO - Handle this idiomatically\n    setNgxEditor(ngxEditor) {\n        this.ngxEditor = ngxEditor;\n    }\n    getBlocks$() {\n        return new Observable((observer) => {\n            lastValueFrom(this.blockMovementService.getNgxEditorJsBlocks().pipe(map((componentRefs) => componentRefs.map(({ instance }) => ({\n                blockId: instance.formControlName(),\n                sortIndex: instance.sortIndex(),\n                componentInstanceName: instance.componentInstanceName,\n                savedAction: instance.savedAction(),\n                dataClean: instance.formGroup().get(instance.formControlName())\n                    ?.value,\n            }))), map((blocks) => blocks.sort((a, b) => a.sortIndex - b.sortIndex)))).then((blocks) => {\n                observer.next(blocks);\n                observer.complete();\n            });\n        });\n    }\n    createNgxEditorJsBlockWithComponent(blockComponent, componentContextPositionIndex) {\n        return of({\n            blockId: createUID(),\n            sortIndex: componentContextPositionIndex,\n            componentInstanceName: blockComponent.name,\n            component: blockComponent,\n            // TODO - Force content-type for dataClean? JSON, HTML, etc.\n            // TODO - And maybe rename dataClean to just data?\n            dataClean: '',\n            autofocus: true,\n        });\n    }\n    addBlockComponent(ngxEditorJsBlock) {\n        return forkJoin([\n            this.createFormGroupControl(ngxEditorJsBlock),\n            this.attachComponent(ngxEditorJsBlock),\n            this.blockMovementService.updateComponentIndices(this.ngxEditor),\n        ]).pipe(map(() => void 0));\n    }\n    createFormGroupControl({ blockId, dataClean, }) {\n        return of(this.formBuilder.control(dataClean, [])).pipe(tap((formControl) => this.formGroup.addControl(blockId, formControl)));\n    }\n    attachComponent({ component, blockId, autofocus, savedAction, sortIndex: index, }) {\n        return of(blockId).pipe(map((controlName) => {\n            const componentRef = this.ngxEditor.createComponent(component, {\n                index,\n            });\n            componentRef.setInput('sortIndex', index);\n            componentRef.setInput('formGroup', this.formGroup);\n            componentRef.setInput('formControlName', controlName);\n            componentRef.setInput('autofocus', autofocus);\n            savedAction && componentRef.instance.actionCallback?.(savedAction);\n            this.blockMovementService.newComponentAttached(componentRef);\n            return componentRef;\n        }));\n    }\n    determineMovePositionAction(action, index, formControlName) {\n        return iif(() => action === MovePositionActions.DELETE, this.removeBlockComponent(index, formControlName), this.blockMovementService.moveBlockComponentPosition(this.ngxEditor, action, index)).pipe(switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)));\n    }\n    moveBlockComponentPosition(previousIndex, currentIndex) {\n        return of(this.ngxEditor.get(previousIndex)).pipe(filter((viewRef) => !!viewRef), tap((viewRef) => {\n            this.ngxEditor.move(viewRef, currentIndex);\n        }), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), defaultIfEmpty(false));\n    }\n    removeBlockComponent(index, formControlName, clear = false) {\n        return combineLatest([\n            this.blockMovementService.removeBlockComponent(this.ngxEditor, index, clear),\n            of(this.formGroup.removeControl(formControlName)),\n        ]);\n    }\n    clearBlocks() {\n        return this.blockMovementService.getNgxEditorJsBlocks().pipe(filter((componentRefs) => componentRefs.length > 0), map((componentRefs) => componentRefs.sort((a, b) => a.instance.sortIndex() - b.instance.sortIndex())), mergeMap((componentRefs) => forkJoin(Array.from(componentRefs.values()).map((componentRef) => this.removeBlockComponent(componentRef.instance.sortIndex() + 1, componentRef.instance.formControlName(), true)))), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), tap(() => {\n            this.blockMovementService.clearComponentRefs();\n            this.ngxEditor.clear();\n        }), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolFabService {\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    editorJsService = inject(EditorJsService);\n    // I need to explain this in detail so the future me can understand this.\n    componentContext = new BehaviorSubject(null);\n    toolbarComponentRef$ = combineLatest({\n        componentContext: this.componentContext.asObservable(),\n        supportedBlocks: this.ngxEditorJs2Service.supportedBlocks$,\n    }).pipe(filter(({ componentContext }) => componentContext !== null), distinctUntilChanged(({ componentContext: previous }, { componentContext: current }) => previous.index !== current.index ||\n        previous.viewContainerRef !== current.viewContainerRef\n        ? (previous.viewContainerRef.clear(), false)\n        : true), map(({ componentContext, supportedBlocks }) => {\n        const { index, viewContainerRef, blockOptionActions, actionCallback, formControlName, } = componentContext;\n        // TODO We will need to create a ToolbarBottomRailComponent to handle the mobile view\n        const componentRef = viewContainerRef.createComponent(ToolbarComponent);\n        componentRef.setInput('componentContextPositionIndex', index + 1);\n        componentRef.setInput('supportedBlocks', supportedBlocks);\n        componentRef.setInput('blockOptionActions', blockOptionActions);\n        componentRef.setInput('actionCallback', actionCallback);\n        componentRef.setInput('formControlName', formControlName);\n        componentRef.setInput('addBlockCallback', this.addBlock.bind(this));\n        componentRef.setInput('moveBlockPositionCallback', this.movePositionAction.bind(this));\n        return componentRef;\n    }));\n    addBlock(block, index) {\n        return this.editorJsService\n            .createNgxEditorJsBlockWithComponent(block, index)\n            .pipe(switchMap((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    movePositionAction(action, index, formControlName) {\n        return lastValueFrom(this.editorJsService.determineMovePositionAction(action, index, formControlName));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolFabService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolbarFabDirective {\n    toolFabService = inject(ToolFabService);\n    viewContainerRef = inject(ViewContainerRef);\n    autofocus = input();\n    blockOptionActions = input();\n    actionCallback = input.required();\n    componentContextPositionIndex = input.required();\n    formControlName = input.required();\n    onMouseEnter() {\n        this.toolFabService.componentContext.next({\n            viewContainerRef: this.viewContainerRef,\n            blockOptionActions: this.blockOptionActions() ?? [],\n            actionCallback: this.actionCallback(),\n            index: this.componentContextPositionIndex(),\n            formControlName: this.formControlName(),\n        });\n    }\n    constructor() {\n        effect(() => {\n            this.autofocus() && this.onMouseEnter();\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarFabDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ToolbarFabDirective, isStandalone: true, selector: \"[toolbarFab]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: true, transformFunction: null }, componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null } }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarFabDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[toolbarFab]',\n                }]\n        }], ctorParameters: () => [], propDecorators: { onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }] } });\n\nclass CleanPasteDataDirective {\n    onPaste(event) {\n        event.preventDefault();\n        const text = event.clipboardData?.getData('text/plain');\n        document.execCommand('insertText', false, text);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: CleanPasteDataDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.4\", type: CleanPasteDataDirective, isStandalone: true, selector: \"[cleanPasteData]\", host: { listeners: { \"paste\": \"onPaste($event)\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: CleanPasteDataDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cleanPasteData]',\n                }]\n        }], propDecorators: { onPaste: [{\n                type: HostListener,\n                args: ['paste', ['$event']]\n            }] } });\n\nclass HeaderBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'HeaderBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'h1', text: 'H1' },\n        { action: 'h2', text: 'H2' },\n        { action: 'h3', text: 'H3' },\n        { action: 'h4', text: 'H4' },\n        { action: 'h5', text: 'H5' },\n        { action: 'h6', text: 'H6' },\n    ]);\n    savedAction = signal('h1');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(selectedAction) {\n        this.savedAction.set(selectedAction);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: HeaderBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: HeaderBlockComponent, isStandalone: true, selector: \"header-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n@switch (savedAction()) {\n  @case ('h1') {\n    <h1>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h1>\n  }\n  @case ('h2') {\n    <h2>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h2>\n  }\n  @case ('h3') {\n    <h3>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h3>\n  }\n  @case ('h4') {\n    <h4>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h4>\n  }\n  @case ('h5') {\n    <h5>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h5>\n  }\n  @case ('h6') {\n    <h6>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h6>\n  }\n}\n\n<ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n  <span\n    controlAccessor\n    cleanPasteData\n    contentEditable\n    toolbarFab\n    [defaultValue]=\"formGroup().get(formControlName())?.value\"\n    [actionCallback]=\"actionCallbackBind\"\n    [blockOptionActions]=\"blockOptionActions()\"\n    [autofocus]=\"autofocus()\"\n    [formControlName]=\"formControlName()\"\n    [componentContextPositionIndex]=\"sortIndex()\"\n  ></span>\n</ng-template>\n`, isInline: true, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: HeaderBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'header-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgTemplateOutlet\n                    ], template: `\n@switch (savedAction()) {\n  @case ('h1') {\n    <h1>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h1>\n  }\n  @case ('h2') {\n    <h2>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h2>\n  }\n  @case ('h3') {\n    <h3>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h3>\n  }\n  @case ('h4') {\n    <h4>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h4>\n  }\n  @case ('h5') {\n    <h5>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h5>\n  }\n  @case ('h6') {\n    <h6>\n      <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n    </h6>\n  }\n}\n\n<ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n  <span\n    controlAccessor\n    cleanPasteData\n    contentEditable\n    toolbarFab\n    [defaultValue]=\"formGroup().get(formControlName())?.value\"\n    [actionCallback]=\"actionCallbackBind\"\n    [blockOptionActions]=\"blockOptionActions()\"\n    [autofocus]=\"autofocus()\"\n    [formControlName]=\"formControlName()\"\n    [componentContextPositionIndex]=\"sortIndex()\"\n  ></span>\n</ng-template>\n`, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"] }]\n        }] });\n\nclass ParagraphBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'ParagraphBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'small', icon: 'density_small' },\n        { action: 'medium', icon: 'density_medium' },\n        { action: 'large', icon: 'density_large' },\n        { action: 'title-small', text: 'TS' },\n        { action: 'title-medium', text: 'TM' },\n        { action: 'title-large', text: 'TL' },\n    ]);\n    savedAction = signal('medium');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(action) {\n        this.savedAction.update(() => action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ParagraphBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: ParagraphBlockComponent, isStandalone: true, selector: \"paragraph-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, isInline: true, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ParagraphBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'paragraph-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgClass,\n                    ], template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"] }]\n        }] });\n\nconst NGX_EDITORJS_OPTIONS = new InjectionToken('NGX_EDITORJS_OPTIONS');\nclass NgxEditorJs2Service {\n    editorJsService = inject(EditorJsService);\n    consumerSupportedBlocks = new BehaviorSubject(inject(NGX_EDITORJS_OPTIONS, { optional: true })?.consumerSupportedBlocks ??\n        []);\n    internalSupportedBlocks = new BehaviorSubject([\n        {\n            name: 'Paragraph',\n            component: ParagraphBlockComponent,\n            componentInstanceName: 'ParagraphBlockComponent',\n        },\n        {\n            name: 'Header',\n            component: HeaderBlockComponent,\n            componentInstanceName: 'HeaderBlockComponent',\n        },\n    ]);\n    supportedBlocks$ = combineLatest([\n        this.internalSupportedBlocks.asObservable(),\n        this.consumerSupportedBlocks.asObservable(),\n    ]).pipe(map(([internal, consumer]) => [...internal, ...consumer]));\n    blocksToLoad = new BehaviorSubject([]);\n    loadBlocks$ = this.blocksToLoad.asObservable().pipe(delay(0), exhaustMap((blocks) => this.clearBlocksFromEditorJs(blocks)), map(([blocks]) => this.determineToloadDefaultBlocks(blocks)), map((blocks) => this.removeDuplicateBlocksWithSameIds(blocks)), map((blocks) => this.sortBlocks(blocks)), switchMap((blocks) => this.combineSupportBlocks(blocks)), map(([blocks, supportedBlocks]) => this.createALookupMapForSupportedBlocks(blocks, supportedBlocks)), map(({ blocks, supportedBlocksMap }) => this.findAndMarshalBlocksComponent(blocks, supportedBlocksMap)), mergeMap((blocks) => this.addBlocksToEditorJs(blocks).pipe(map(() => blocks))));\n    clearBlocksFromEditorJs(blocks) {\n        return forkJoin([of(blocks), this.editorJsService.clearBlocks()]);\n    }\n    determineToloadDefaultBlocks(blocks) {\n        return blocks.length > 0 ? blocks : this.loadDefaultBlocks();\n    }\n    loadDefaultBlocks() {\n        return [\n            {\n                blockId: 'tmdjr',\n                sortIndex: 0,\n                componentInstanceName: 'HeaderBlockComponent',\n                dataClean: \"Let's get started... 🚀\",\n                savedAction: 'h1',\n            },\n        ];\n    }\n    removeDuplicateBlocksWithSameIds(blocks) {\n        return Array.from(new Map(blocks.map((block) => [block.blockId, block])).values());\n    }\n    sortBlocks(blocks) {\n        return blocks.sort((a, b) => a.sortIndex - b.sortIndex);\n    }\n    combineSupportBlocks(blocks) {\n        return combineLatest([of(blocks), this.supportedBlocks$]);\n    }\n    createALookupMapForSupportedBlocks(blocks, supportedBlocks) {\n        return {\n            blocks,\n            supportedBlocksMap: new Map(supportedBlocks.map((sb) => [sb.componentInstanceName, sb.component])),\n        };\n    }\n    findAndMarshalBlocksComponent(blocks, supportedBlocksMap) {\n        return blocks.map((block) => ({\n            ...block,\n            component: supportedBlocksMap.get(block.componentInstanceName) ??\n                HeaderBlockComponent,\n        }));\n    }\n    addBlocksToEditorJs(blocks) {\n        return combineLatest(blocks.map((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Service, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass EditorJsComponent {\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    bootstrapEditorJs = input();\n    blocks = input.required({\n        transform: (value) => this.ngxEditorJs2Service.blocksToLoad.next(value),\n    });\n    ngxEditor = viewChild.required('ngxEditor', { read: ViewContainerRef });\n    constructor() {\n        effect(() => {\n            this.editorJsService.setNgxEditor(this.ngxEditor());\n        });\n    }\n    // * DEBUGGING\n    // ngOnInit() {\n    //   this.editorJsService.formGroup.valueChanges.subscribe((value) => {\n    //     console.log('[formGroup.value] : ', value);\n    //   });\n    //   this.editorJsService.blockComponents$.subscribe((components) => {\n    //     console.log('[components] : ', components);\n    //   });\n    // }\n    drop(event) {\n        lastValueFrom(this.editorJsService.moveBlockComponentPosition(event.previousIndex, event.currentIndex)).then(() => {\n            // DRAG ANIMATION HOT FIX\n            // Wait for Angular to update the DOM, then remove the animation class\n            requestAnimationFrame(() => {\n                document.querySelectorAll('.cdk-drag-animating').forEach((el) => {\n                    const element = el;\n                    element.classList.remove('cdk-drag-animating'); // Ensure old class is removed\n                    void element.offsetWidth; // Force reflow\n                    element.classList.add('cdk-drag-animating'); // Re-add for next drag\n                });\n            });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.2.0\", version: \"20.0.4\", type: EditorJsComponent, isStandalone: true, selector: \"editor-js\", inputs: { bootstrapEditorJs: { classPropertyName: \"bootstrapEditorJs\", publicName: \"bootstrapEditorJs\", isSignal: true, isRequired: false, transformFunction: null }, blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: true, transformFunction: null } }, viewQueries: [{ propertyName: \"ngxEditor\", first: true, predicate: [\"ngxEditor\"], descendants: true, read: ViewContainerRef, isSignal: true }], ngImport: i0, template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, isInline: true, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\", \"cdkDropListElementContainer\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: EditorJsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'editor-js', imports: [CdkDropList], template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nclass ToolbarInlineComponent {\n    // @Input() selection!: Selection;\n    selection = input.required();\n    closeOverlayEmitter = new EventEmitter();\n    renderer = inject(Renderer2);\n    url = '';\n    showURLInputField = signal(false);\n    savedRanges = [];\n    options = [\n        { icon: 'format_bold', action: 'bold' },\n        { icon: 'format_italic', action: 'italic' },\n        { icon: 'format_underlined', action: 'underline' },\n        { icon: 'strikethrough_s', action: 'strikethrough' },\n        { icon: 'format_list_bulleted', action: 'insertUnorderedList' },\n        { icon: 'format_list_numbered', action: 'insertOrderedList' },\n        { icon: 'highlight', action: 'highlightColor' },\n        { icon: 'format_align_left', action: 'justifyLeft' },\n        { icon: 'format_align_center', action: 'justifyCenter' },\n        { icon: 'format_align_right', action: 'justifyRight' },\n        { icon: 'format_align_justify', action: 'justifyFull' },\n    ];\n    addInlineTag(tag) {\n        // https://stackoverflow.com/questions/60581285/execcommand-is-now-obsolete-whats-the-alternative\n        document.execCommand(tag);\n        this.closeOverlayEmitter.emit();\n    }\n    addClassTag(tag, className) {\n        const range = this.selection().getRangeAt(0);\n        const element = this.renderer.createElement(tag);\n        element.className = className ?? '';\n        element.innerHTML = range.toString();\n        range.deleteContents();\n        range.insertNode(element);\n        this.closeOverlayEmitter.emit();\n    }\n    clearTags() {\n        document.execCommand('removeFormat');\n        document.execCommand('unlink');\n        this.closeOverlayEmitter.emit();\n    }\n    openUrlInput() {\n        this.savedRanges.push(this.selection().getRangeAt(0));\n        this.showURLInputField.set(true);\n    }\n    createLink() {\n        this.selection().removeAllRanges();\n        this.selection().addRange(this.savedRanges.pop());\n        document.execCommand('createLink', false, this.url);\n        this.closeOverlayEmitter.emit();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.4\", type: ToolbarInlineComponent, isStandalone: true, selector: \"toolbar-inline\", inputs: { selection: { classPropertyName: \"selection\", publicName: \"selection\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { closeOverlayEmitter: \"closeOverlay\" }, ngImport: i0, template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, isInline: true, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"], dependencies: [{ kind: \"ngmodule\", type: MatListModule }, { kind: \"ngmodule\", type: MatIconModule }, { kind: \"component\", type: i1$2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-inline', imports: [MatListModule, MatIconModule, FormsModule], template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);box-shadow:var(--mat-sys-level5);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"] }]\n        }], propDecorators: { closeOverlayEmitter: [{\n                type: Output,\n                args: ['closeOverlay']\n            }] } });\n\nclass ToolbarInlineService {\n    overlay = inject(Overlay);\n    overlayRef;\n    determineToDisplayInlineToolbarBlock(_event) {\n        return of(window.getSelection()).pipe(filter((selection) => selection !== null), filter((selection) => selection.rangeCount > 0), filter((selection) => selection.toString().length > 0), filter((selection) => selection.toString() !== ''), tap(() => this.overlayRef?.hasAttached() && this.overlayRef.dispose()), // So hacky tired to do this properly\n        map((selection) => ({\n            selection,\n            parant: this.getSelectionParent(selection),\n        })), filter(({ parant }) => this.isSelectionInABlock(parant)), exhaustMap(({ selection }) => this.attachInlineToolbar(selection)));\n    }\n    getSelectionParent(selection) {\n        const range = selection.getRangeAt(0);\n        return range.commonAncestorContainer.nodeType === Node.ELEMENT_NODE\n            ? range.commonAncestorContainer\n            : range.commonAncestorContainer.parentElement;\n    }\n    isSelectionInABlock(target) {\n        // ! TODO: This is a hacky way to determine if the selection is in a block\n        // ! Need to also check if the block wants to display the inline toolbar\n        return (!!target &&\n            (target.closest('.no-toolbar-inline') !== null\n                ? false\n                : target.closest('ngx-editor-js2') !== null\n                    ? true\n                    : false));\n    }\n    attachInlineToolbar(selection) {\n        return of(selection.getRangeAt(0)).pipe(map((range) => range.getBoundingClientRect()), map((selectionRect) => this.createOverlay(selectionRect)), \n        // So hacky tired to do this properly\n        // passing the refs down the pipe adds a bug\n        // user selects text with a drag\n        // (mousedown → mousemove → wait → mousemove → mouseup)\n        tap((overlayRef) => (this.overlayRef = overlayRef)), map((overlayRef) => {\n            const inlineToolbar = overlayRef.attach(new ComponentPortal(ToolbarInlineComponent));\n            inlineToolbar.setInput('selection', selection);\n            lastValueFrom(merge(overlayRef.backdropClick(), inlineToolbar.instance.closeOverlayEmitter).pipe(tap(() => overlayRef.dispose()), tap(() => selection.removeAllRanges())));\n            return true;\n        }));\n    }\n    createOverlay(selectionRect) {\n        return this.overlay.create({\n            hasBackdrop: true,\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            positionStrategy: this.overlay\n                .position()\n                .flexibleConnectedTo(selectionRect)\n                .withPositions([\n                {\n                    offsetY: 8,\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                },\n            ]),\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: ToolbarInlineService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass NgxEditorJs2Component {\n    inlineToolbarSerivce = inject(ToolbarInlineService);\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    blocks = input([]);\n    blocksRequested = output();\n    requestBlocks = input.required({\n        transform: (value) => value && this.blocksRequested.emit(this.editorJsService.getBlocks$()),\n    });\n    bootstrapEditorJs$ = combineLatest([\n        inject(ToolFabService).toolbarComponentRef$,\n        this.ngxEditorJs2Service.loadBlocks$,\n        fromEvent(document, 'selectionchange').pipe(debounceTime(200), switchMap((event) => this.inlineToolbarSerivce.determineToDisplayInlineToolbarBlock(event)))\n    ]);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Component, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.0.4\", type: NgxEditorJs2Component, isStandalone: true, selector: \"ngx-editor-js2\", inputs: { blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: false, transformFunction: null }, requestBlocks: { classPropertyName: \"requestBlocks\", publicName: \"requestBlocks\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { blocksRequested: \"blocksRequested\" }, ngImport: i0, template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `, isInline: true, dependencies: [{ kind: \"component\", type: EditorJsComponent, selector: \"editor-js\", inputs: [\"bootstrapEditorJs\", \"blocks\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.4\", ngImport: i0, type: NgxEditorJs2Component, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-editor-js2',\n                    imports: [EditorJsComponent, AsyncPipe],\n                    template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `,\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-editor-js2\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofocusDirective, CleanPasteDataDirective, ControlAccessorDirective, NGX_EDITORJS_OPTIONS, NgxEditorJs2Component, NgxEditorJs2Service, ToolbarFabDirective };\n","import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nfunction normalizeLineEndings(str) {\n    if (!str) {\n        return str;\n    }\n    return str.replace(/\\r\\n|\\r/g, '\\n');\n}\nclass CodemirrorComponent {\n    _differs;\n    _ngZone;\n    /* class applied to the created textarea */\n    className = '';\n    /* name applied to the created textarea */\n    name = 'codemirror';\n    /* autofocus setting applied to the created textarea */\n    autoFocus = false;\n    /**\n     * set options for codemirror\n     * @link http://codemirror.net/doc/manual.html#config\n     */\n    set options(value) {\n        this._options = value;\n        if (!this._differ && value) {\n            this._differ = this._differs.find(value).create();\n        }\n    }\n    /* preserve previous scroll position after updating value */\n    preserveScrollPosition = false;\n    /* called when the text cursor is moved */\n    cursorActivity = new EventEmitter();\n    /* called when the editor is focused or loses focus */\n    focusChange = new EventEmitter();\n    /* called when the editor is scrolled */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    scroll = new EventEmitter();\n    /* called when file(s) are dropped */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    drop = new EventEmitter();\n    /* called when codeMirror instance is initiated on the component */\n    codeMirrorLoaded = new EventEmitter();\n    ref;\n    value = '';\n    disabled = false;\n    isFocused = false;\n    codeMirror;\n    /**\n     * either global variable or required library\n     */\n    _codeMirror;\n    _differ;\n    _options;\n    constructor(_differs, _ngZone) {\n        this._differs = _differs;\n        this._ngZone = _ngZone;\n    }\n    get codeMirrorGlobal() {\n        if (this._codeMirror) {\n            return this._codeMirror;\n        }\n        // in order to allow for universal rendering, we import Codemirror runtime with `require` to prevent node errors\n        this._codeMirror = typeof CodeMirror !== 'undefined' ? CodeMirror : import('codemirror');\n        return this._codeMirror;\n    }\n    ngAfterViewInit() {\n        this._ngZone.runOutsideAngular(async () => {\n            const codeMirrorObj = await this.codeMirrorGlobal;\n            const codeMirror = codeMirrorObj?.default ? codeMirrorObj.default : codeMirrorObj;\n            this.codeMirror = codeMirror.fromTextArea(this.ref.nativeElement, this._options);\n            this.codeMirror.on('cursorActivity', cm => this._ngZone.run(() => this.cursorActive(cm)));\n            this.codeMirror.on('scroll', this.scrollChanged.bind(this));\n            this.codeMirror.on('blur', () => this._ngZone.run(() => this.focusChanged(false)));\n            this.codeMirror.on('focus', () => this._ngZone.run(() => this.focusChanged(true)));\n            this.codeMirror.on('change', (cm, change) => this._ngZone.run(() => this.codemirrorValueChanged(cm, change)));\n            this.codeMirror.on('drop', (cm, e) => {\n                this._ngZone.run(() => this.dropFiles(cm, e));\n            });\n            this.codeMirror.setValue(this.value);\n            this.codeMirrorLoaded.emit(this);\n        });\n    }\n    ngDoCheck() {\n        if (!this._differ) {\n            return;\n        }\n        // check options have not changed\n        const changes = this._differ.diff(this._options);\n        if (changes) {\n            changes.forEachChangedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n            changes.forEachAddedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n            changes.forEachRemovedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n        }\n    }\n    ngOnDestroy() {\n        // is there a lighter-weight way to remove the cm instance?\n        if (this.codeMirror) {\n            this.codeMirror.toTextArea();\n        }\n    }\n    codemirrorValueChanged(cm, change) {\n        const cmVal = cm.getValue();\n        if (this.value !== cmVal) {\n            this.value = cmVal;\n            this.onChange(this.value);\n        }\n    }\n    setOptionIfChanged(optionName, newValue) {\n        if (!this.codeMirror) {\n            return;\n        }\n        // cast to any to handle strictly typed option names\n        // could possibly import settings strings available in the future\n        this.codeMirror.setOption(optionName, newValue);\n    }\n    focusChanged(focused) {\n        this.onTouched();\n        this.isFocused = focused;\n        this.focusChange.emit(focused);\n    }\n    scrollChanged(cm) {\n        this.scroll.emit(cm.getScrollInfo());\n    }\n    cursorActive(cm) {\n        this.cursorActivity.emit(cm);\n    }\n    dropFiles(cm, e) {\n        this.drop.emit([cm, e]);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        if (value === null || value === undefined) {\n            return;\n        }\n        if (!this.codeMirror) {\n            this.value = value;\n            return;\n        }\n        const cur = this.codeMirror.getValue();\n        if (value !== cur && normalizeLineEndings(cur) !== normalizeLineEndings(value)) {\n            this.value = value;\n            if (this.preserveScrollPosition) {\n                const prevScrollPosition = this.codeMirror.getScrollInfo();\n                this.codeMirror.setValue(this.value);\n                this.codeMirror.scrollTo(prevScrollPosition.left, prevScrollPosition.top);\n            }\n            else {\n                this.codeMirror.setValue(this.value);\n            }\n        }\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.setOptionIfChanged('readOnly', this.disabled);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    onChange = (_) => { };\n    /** Implemented as part of ControlValueAccessor. */\n    onTouched = () => { };\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorComponent, deps: [{ token: i0.KeyValueDiffers }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.1\", type: CodemirrorComponent, selector: \"ngx-codemirror\", inputs: { className: \"className\", name: \"name\", autoFocus: \"autoFocus\", options: \"options\", preserveScrollPosition: \"preserveScrollPosition\" }, outputs: { cursorActivity: \"cursorActivity\", focusChange: \"focusChange\", scroll: \"scroll\", drop: \"drop\", codeMirrorLoaded: \"codeMirrorLoaded\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => CodemirrorComponent),\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"ref\", first: true, predicate: [\"ref\"], descendants: true }], ngImport: i0, template: `\n    <textarea\n      [name]=\"name\"\n      class=\"ngx-codemirror {{ className }}\"\n      [class.ngx-codemirror--focused]=\"isFocused\"\n      autocomplete=\"off\"\n      [autofocus]=\"autoFocus\"\n      #ref\n    >\n    </textarea>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-codemirror',\n                    template: `\n    <textarea\n      [name]=\"name\"\n      class=\"ngx-codemirror {{ className }}\"\n      [class.ngx-codemirror--focused]=\"isFocused\"\n      autocomplete=\"off\"\n      [autofocus]=\"autoFocus\"\n      #ref\n    >\n    </textarea>\n  `,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => CodemirrorComponent),\n                            multi: true,\n                        },\n                    ],\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.KeyValueDiffers }, { type: i0.NgZone }]; }, propDecorators: { className: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], preserveScrollPosition: [{\n                type: Input\n            }], cursorActivity: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], scroll: [{\n                type: Output\n            }], drop: [{\n                type: Output\n            }], codeMirrorLoaded: [{\n                type: Output\n            }], ref: [{\n                type: ViewChild,\n                args: ['ref']\n            }] } });\n\nclass CodemirrorModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, declarations: [CodemirrorComponent], exports: [CodemirrorComponent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: CodemirrorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CodemirrorComponent],\n                    declarations: [CodemirrorComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CodemirrorComponent, CodemirrorModule };\n","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nexport { _asyncToGenerator as default };"],"names":["MermaidjsConfigComponent","updateConfig","output","value","model","ngDevMode","undefined","debugName","codeMirrorOptions","signal","lineNumbers","theme","mode","extraKeys","styleActiveLine","matchBrackets","indentUnit","tabSize","cursorScrollMargin","closeConfig","emit","ɵcmp","selectors","inputs","outputs","decls","vars","consts","template","MermaidjsConfigComponent_Template","rf","ctx","MatButton","MatFormFieldModule","ReactiveFormsModule","i3","NgControlStatus","FormsModule","NgModel","CodemirrorModule","i2","CodemirrorComponent","styles","mermaid","MermaidImport","default","SafeHtmlPipe","sanitized","constructor","transform","bypassSecurityTrustHtml","i1","DomSanitizer","pure","parseError","err","hash","console","warn","NgxEditorJs2MermaidjsComponent","ngZone","inject","NgZone","sortIndex","input","componentInstanceName","autofocus","formGroup","required","formControlName","blockOptionActions","action","icon","savedAction","actionCallbackBind","actionCallback","bind","mermaidDiagramSVG","openOverlay","ngOnInit","runOutsideAngular","initialize","startOnLoad","possibleSavedValue","get","renderMermaidDiagram","mermaidDiagram","render","genUniqueId","then","data","run","svg","error","update","openEditOverlay","set","updateMermaidDiagram","setValue","Date","now","Math","floor","random","hostAttrs","features","i2$1","CdkDrag","NgxEditorJs2MermaidjsComponent_Template","NgControlStatusGroup","FormGroupDirective","FormControlName","ControlAccessorDirective","AutofocusDirective","ToolbarFabDirective","MatFabButton","MatIcon","NgClass","i0","ElementRef","forwardRef","HostListener","Directive","Component","Injectable","ViewContainerRef","effect","InjectionToken","viewChild","EventEmitter","Renderer2","Output","NG_VALUE_ACCESSOR","FormControl","FormBuilder","startWith","combineLatest","map","firstValueFrom","of","from","tap","filter","defaultIfEmpty","Observable","lastValueFrom","forkJoin","iif","switchMap","mergeMap","BehaviorSubject","distinctUntilChanged","delay","exhaustMap","merge","fromEvent","debounceTime","MatRipple","i1$1","CdkDragHandle","CdkDropList","OverlayModule","Overlay","i1$2","MatIconModule","AsyncPipe","NgTemplateOutlet","toObservable","MatFormField","MatLabel","MatInput","MatList","MatListItem","MatListModule","ComponentPortal","ToolbarBlockOptionsComponent_For_11_Conditional_1_Template","ɵɵtext","blockOptionAction_r2","ɵɵnextContext","$implicit","ɵɵtextInterpolate1","text","ToolbarBlockOptionsComponent_For_11_Conditional_2_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ToolbarBlockOptionsComponent_For_11_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","ToolbarBlockOptionsComponent_For_11_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵresetView","handleAction","ɵɵconditionalCreate","ɵɵconditional","ToolbarBlocksComponent_Conditional_5_Conditional_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template_mat_list_item_click_0_listener","block_r2","addBlock","name","ToolbarBlocksComponent_Conditional_5_Conditional_2_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIndex","filteredBlocks_r4","ɵɵrepeater","ToolbarBlocksComponent_Conditional_5_Template","length","ToolbarComponent_ng_template_9_Template","_r2","ToolbarComponent_ng_template_9_Template_toolbar_blocks_addBlock_0_listener","$event","ɵɵproperty","supportedBlocks","ToolbarComponent_ng_template_10_Template","_r4","ToolbarComponent_ng_template_10_Template_toolbar_block_options_handleAction_0_listener","ToolbarComponent_ng_template_10_Template_toolbar_block_options_moveBlockPosition_0_listener","moveBlockPosition","HeaderBlockComponent_Case_0_ng_container_1_Template","ɵɵelementContainer","HeaderBlockComponent_Case_0_Template","ɵɵtemplate","sharedHeaderTemplate_r1","ɵɵreference","HeaderBlockComponent_Case_1_ng_container_1_Template","HeaderBlockComponent_Case_1_Template","HeaderBlockComponent_Case_2_ng_container_1_Template","HeaderBlockComponent_Case_2_Template","HeaderBlockComponent_Case_3_ng_container_1_Template","HeaderBlockComponent_Case_3_Template","HeaderBlockComponent_Case_4_ng_container_1_Template","HeaderBlockComponent_Case_4_Template","HeaderBlockComponent_Case_5_ng_container_1_Template","HeaderBlockComponent_Case_5_Template","HeaderBlockComponent_ng_template_6_Template","ɵɵelement","tmp_2_0","ctx_r1","_c0","ToolbarInlineComponent_For_2_Template","ToolbarInlineComponent_For_2_Template_div_click_0_listener","item_r2","addInlineTag","ToolbarInlineComponent_Conditional_12_Template","ɵɵtwoWayListener","ToolbarInlineComponent_Conditional_12_Template_input_ngModelChange_1_listener","ɵɵtwoWayBindingSet","url","ToolbarInlineComponent_Conditional_12_Template_div_click_2_listener","createLink","ɵɵtwoWayProperty","elementRef","defaultValue","onChange","onTouched","writeValue","nativeElement","innerHTML","registerOnChange","fn","registerOnTouched","onBlur","onInput","ɵfac","ControlAccessorDirective_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","hostBindings","ControlAccessorDirective_HostBindings","ControlAccessorDirective_blur_HostBindingHandler","ControlAccessorDirective_input_HostBindingHandler","ɵɵProvidersFeature","provide","useExisting","multi","ngAfterContentInit","focus","AutofocusDirective_Factory","MovePositionActions","ToolbarBlockOptionsComponent","Position","handleActionEmitter","alias","moveBlockPositionEmitter","movePosition","ToolbarBlockOptionsComponent_Factory","ɵɵdefineComponent","ToolbarBlockOptionsComponent_Template","ToolbarBlockOptionsComponent_Template_div_click_1_listener","UP","ToolbarBlockOptionsComponent_Template_div_click_4_listener","DELETE","ToolbarBlockOptionsComponent_Template_div_click_7_listener","DOWN","dependencies","ToolbarBlocksComponent","addBlockEmitter","supportedBlocks$","blockCtrl","filter$","valueChanges","pipe","filteredBlocks$","blocks","filterString","replace","pattern","split","v","join","regex","RegExp","block","match","component","ToolbarBlocksComponent_Factory","ToolbarBlocksComponent_Template","ɵɵpipe","ɵɵpipeBind1","DefaultValueAccessor","FormControlDirective","ToolbarComponent","componentContextPositionIndex","addBlockCallback","moveBlockPositionCallback","openBlocks","openBlocksOption","openBlocksList","prev","openBlockOptionList","closeLists","ToolbarComponent_Factory","ToolbarComponent_Template","ToolbarComponent_Template_div_click_1_listener","ToolbarComponent_Template_div_click_5_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_9_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_10_listener","blockListTigger_r5","blockOptionListTigger_r6","CdkConnectedOverlay","CdkOverlayOrigin","BlockMovementService","componentRefMap","Map","clearComponentRefs","clear","getNgxEditorJsBlocks","Array","values","newComponentAttached","componentRef","instance","updateComponentIndices","ngxEditor","setInput","indexOf","hostView","moveBlockComponentPosition","index","componentRefs","find","totalComponents","currentIndex","newIndex","max","min","move","removeBlockComponent","delete","successful","remove","BlockMovementService_Factory","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","createUID","toString","substring","EditorJsService","formBuilder","blockMovementService","group","setNgxEditor","getBlocks$","observer","blockId","dataClean","sort","a","b","next","complete","createNgxEditorJsBlockWithComponent","blockComponent","addBlockComponent","ngxEditorJsBlock","createFormGroupControl","attachComponent","control","formControl","addControl","controlName","createComponent","determineMovePositionAction","previousIndex","viewRef","removeControl","clearBlocks","EditorJsService_Factory","ToolFabService","ngxEditorJs2Service","NgxEditorJs2Service","editorJsService","componentContext","toolbarComponentRef$","asObservable","previous","current","viewContainerRef","movePositionAction","ToolFabService_Factory","toolFabService","onMouseEnter","ToolbarFabDirective_Factory","ToolbarFabDirective_HostBindings","ToolbarFabDirective_mouseenter_HostBindingHandler","CleanPasteDataDirective","onPaste","event","preventDefault","clipboardData","getData","document","execCommand","CleanPasteDataDirective_Factory","CleanPasteDataDirective_HostBindings","CleanPasteDataDirective_paste_HostBindingHandler","HeaderBlockComponent","selectedAction","HeaderBlockComponent_Factory","ɵɵHostDirectivesFeature","HeaderBlockComponent_Template","ɵɵtemplateRefExtractor","tmp_1_0","ParagraphBlockComponent","ParagraphBlockComponent_Factory","ParagraphBlockComponent_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","NGX_EDITORJS_OPTIONS","consumerSupportedBlocks","optional","internalSupportedBlocks","internal","consumer","blocksToLoad","loadBlocks$","clearBlocksFromEditorJs","determineToloadDefaultBlocks","removeDuplicateBlocksWithSameIds","sortBlocks","combineSupportBlocks","createALookupMapForSupportedBlocks","supportedBlocksMap","findAndMarshalBlocksComponent","addBlocksToEditorJs","loadDefaultBlocks","sb","NgxEditorJs2Service_Factory","EditorJsComponent","bootstrapEditorJs","read","drop","requestAnimationFrame","querySelectorAll","forEach","el","element","classList","offsetWidth","add","EditorJsComponent_Factory","viewQuery","EditorJsComponent_Query","ɵɵviewQuerySignal","ɵɵqueryAdvance","EditorJsComponent_Template","EditorJsComponent_Template_div_cdkDropListDropped_0_listener","ToolbarInlineComponent","selection","closeOverlayEmitter","renderer","showURLInputField","savedRanges","options","tag","addClassTag","className","range","getRangeAt","createElement","deleteContents","insertNode","clearTags","openUrlInput","push","removeAllRanges","addRange","pop","ToolbarInlineComponent_Factory","ToolbarInlineComponent_Template","ToolbarInlineComponent_Template_div_click_3_listener","ToolbarInlineComponent_Template_div_click_6_listener","ToolbarInlineComponent_Template_div_click_9_listener","ToolbarInlineService","overlay","overlayRef","determineToDisplayInlineToolbarBlock","_event","window","getSelection","rangeCount","hasAttached","dispose","parant","getSelectionParent","isSelectionInABlock","attachInlineToolbar","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","parentElement","target","closest","getBoundingClientRect","selectionRect","createOverlay","inlineToolbar","attach","backdropClick","create","hasBackdrop","backdropClass","positionStrategy","position","flexibleConnectedTo","withPositions","offsetY","originX","originY","overlayX","overlayY","ToolbarInlineService_Factory","NgxEditorJs2Component","inlineToolbarSerivce","blocksRequested","requestBlocks","bootstrapEditorJs$","NgxEditorJs2Component_Factory","NgxEditorJs2Component_Template","encapsulation","ChangeDetectionStrategy","Input","ViewChild","NgModule","normalizeLineEndings","str","_differs","_ngZone","autoFocus","_options","_differ","preserveScrollPosition","cursorActivity","focusChange","scroll","codeMirrorLoaded","ref","disabled","isFocused","codeMirror","_codeMirror","codeMirrorGlobal","CodeMirror","ngAfterViewInit","_this","_asyncToGenerator","codeMirrorObj","fromTextArea","on","cm","cursorActive","scrollChanged","focusChanged","change","codemirrorValueChanged","e","dropFiles","ngDoCheck","changes","diff","forEachChangedItem","option","setOptionIfChanged","key","currentValue","forEachAddedItem","forEachRemovedItem","ngOnDestroy","toTextArea","cmVal","getValue","optionName","newValue","setOption","focused","getScrollInfo","cur","prevScrollPosition","scrollTo","left","top","setDisabledState","isDisabled","_","CodemirrorComponent_Factory","ɵɵdirectiveInject","KeyValueDiffers","CodemirrorComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","standalone","CodemirrorComponent_Template","ɵɵclassMap","ɵɵinterpolate1","ɵɵclassProp","changeDetection","CodemirrorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[4,5,6]}