{"version":3,"file":"3985.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/keycodes-CpHkExLC.mjs","./node_modules/@angular/cdk/fesm2022/list-key-manager-C7tp3RbG.mjs","./node_modules/@angular/cdk/fesm2022/directionality-CChdj3az.mjs","./node_modules/@angular/cdk/fesm2022/focus-key-manager-CPmlyB_c.mjs","./node_modules/@angular/cdk/fesm2022/id-generator-LuoRZSid.mjs","./node_modules/@angular/cdk/fesm2022/bidi.mjs","./node_modules/@angular/cdk/fesm2022/stepper.mjs","./node_modules/@angular/cdk/fesm2022/shadow-dom-B0oHn41l.mjs","./node_modules/@angular/cdk/fesm2022/typeahead-9ZW4Dtsf.mjs","./node_modules/@angular/cdk/fesm2022/keycodes.mjs"],"sourcesContent":["const MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\nexport { FF_EQUALS as $, A, BACKSPACE as B, CONTROL as C, DOWN_ARROW as D, END as E, F1 as F, PRINT_SCREEN as G, HOME as H, INSERT as I, TWO as J, THREE as K, LEFT_ARROW as L, MAC_META as M, NINE as N, ONE as O, PAGE_DOWN as P, FOUR as Q, RIGHT_ARROW as R, SPACE as S, TAB as T, UP_ARROW as U, FIVE as V, SIX as W, SEVEN as X, EIGHT as Y, Z, FF_SEMICOLON as _, PAGE_UP as a, CLOSE_SQUARE_BRACKET as a$, QUESTION_MARK as a0, AT_SIGN as a1, B as a2, C as a3, D as a4, E as a5, F as a6, G as a7, H as a8, I as a9, NUMPAD_SEVEN as aA, NUMPAD_EIGHT as aB, NUMPAD_NINE as aC, NUMPAD_MULTIPLY as aD, NUMPAD_PLUS as aE, NUMPAD_MINUS as aF, NUMPAD_PERIOD as aG, NUMPAD_DIVIDE as aH, NUM_LOCK as aI, SCROLL_LOCK as aJ, FIRST_MEDIA as aK, FF_MINUS as aL, MUTE as aM, VOLUME_DOWN as aN, VOLUME_UP as aO, FF_MUTE as aP, FF_VOLUME_DOWN as aQ, LAST_MEDIA as aR, FF_VOLUME_UP as aS, SEMICOLON as aT, EQUALS as aU, DASH as aV, SLASH as aW, APOSTROPHE as aX, TILDE as aY, OPEN_SQUARE_BRACKET as aZ, BACKSLASH as a_, J as aa, K as ab, L as ac, M as ad, N as ae, O as af, P as ag, Q as ah, R as ai, S as aj, T as ak, U as al, V as am, W as an, X as ao, Y as ap, MAC_WK_CMD_LEFT as aq, MAC_WK_CMD_RIGHT as ar, CONTEXT_MENU as as, NUMPAD_ZERO as at, NUMPAD_ONE as au, NUMPAD_TWO as av, NUMPAD_THREE as aw, NUMPAD_FOUR as ax, NUMPAD_FIVE as ay, NUMPAD_SIX as az, ZERO as b, SINGLE_QUOTE as b0, ENTER as c, ALT as d, META as e, SHIFT as f, ESCAPE as g, PERIOD as h, DELETE as i, F2 as j, F3 as k, F4 as l, F5 as m, F6 as n, F7 as o, F8 as p, F9 as q, F10 as r, F11 as s, F12 as t, COMMA as u, MAC_ENTER as v, NUM_CENTER as w, PAUSE as x, CAPS_LOCK as y, PLUS_SIGN as z };\n","import { signal, QueryList, isSignal, effect } from '@angular/core';\nimport { Subscription, Subject } from 'rxjs';\nimport { T as Typeahead } from './typeahead-9ZW4Dtsf.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { P as PAGE_DOWN, a as PAGE_UP, E as END, H as HOME, L as LEFT_ARROW, R as RIGHT_ARROW, U as UP_ARROW, D as DOWN_ARROW, T as TAB } from './keycodes-CpHkExLC.mjs';\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    _items;\n    _activeItemIndex = signal(-1);\n    _activeItem = signal(null);\n    _wrap = false;\n    _typeaheadSubscription = Subscription.EMPTY;\n    _itemChangesSubscription;\n    _vertical = true;\n    _horizontal;\n    _allowedModifierKeys = [];\n    _homeAndEnd = false;\n    _pageUpAndDown = { enabled: false, delta: 10 };\n    _effectRef;\n    _typeahead;\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     */\n    _skipPredicateFn = (item) => item.disabled;\n    constructor(_items, injector) {\n        this._items = _items;\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => this._itemsChanged(newItems.toArray()));\n        }\n        else if (isSignal(_items)) {\n            if (!injector && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('ListKeyManager constructed with a signal must receive an injector');\n            }\n            this._effectRef = effect(() => this._itemsChanged(_items()), { injector });\n        }\n    }\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     */\n    tabOut = new Subject();\n    /** Stream that emits whenever the active item of the list manager changes. */\n    change = new Subject();\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const items = this._getItemsArray();\n            if (items.length > 0 && items.some(item => typeof item.getLabel !== 'function')) {\n                throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n            }\n        }\n        this._typeaheadSubscription.unsubscribe();\n        const items = this._getItemsArray();\n        this._typeahead = new Typeahead(items, {\n            debounceInterval: typeof debounceInterval === 'number' ? debounceInterval : undefined,\n            skipPredicate: item => this._skipPredicateFn(item),\n        });\n        this._typeaheadSubscription = this._typeahead.selectedItem.subscribe(item => {\n            this.setActiveItem(item);\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._typeahead?.reset();\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem();\n        this.updateActiveItem(item);\n        if (this._activeItem() !== previousActiveItem) {\n            this.change.next(this._activeItemIndex());\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex() - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex() + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    this._typeahead?.handleKey(event);\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._typeahead?.reset();\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex();\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem();\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return !!this._typeahead && this._typeahead.isTyping();\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._getItemsArray().length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex() < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex() < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem.set(activeItem == null ? null : activeItem);\n        this._activeItemIndex.set(index);\n        this._typeahead?.setCurrentSelectedItemIndex(index);\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._effectRef?.destroy();\n        this._typeahead?.destroy();\n        this.tabOut.complete();\n        this.change.complete();\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex() + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex() + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        if (isSignal(this._items)) {\n            return this._items();\n        }\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n    /** Callback for when the items have changed. */\n    _itemsChanged(newItems) {\n        this._typeahead?.setItems(newItems);\n        const activeItem = this._activeItem();\n        if (activeItem) {\n            const newIndex = newItems.indexOf(activeItem);\n            if (newIndex > -1 && newIndex !== this._activeItemIndex()) {\n                this._activeItemIndex.set(newIndex);\n                this._typeahead?.setCurrentSelectedItemIndex(newIndex);\n            }\n        }\n    }\n}\n\nexport { ListKeyManager as L };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, DOCUMENT, signal, EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /** The current 'ltr' or 'rtl' value. */\n    get value() {\n        return this.valueSignal();\n    }\n    /**\n     * The current 'ltr' or 'rtl' value.\n     */\n    valueSignal = signal('ltr');\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n    change = new EventEmitter();\n    constructor() {\n        const _document = inject(DIR_DOCUMENT, { optional: true });\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.valueSignal.set(_resolveDirectionality(bodyDir || htmlDir || 'ltr'));\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { Directionality as D, _resolveDirectionality as _, DIR_DOCUMENT as a };\n","import { L as ListKeyManager } from './list-key-manager-C7tp3RbG.mjs';\n\nclass FocusKeyManager extends ListKeyManager {\n    _origin = 'program';\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\nexport { FocusKeyManager as F };\n","import * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable } from '@angular/core';\n\n/**\n * Keeps track of the ID count per prefix. This helps us make the IDs a bit more deterministic\n * like they were before the service was introduced. Note that ideally we wouldn't have to do\n * this, but there are some internal tests that rely on the IDs.\n */\nconst counters = {};\n/** Service that generates unique IDs for DOM nodes. */\nclass _IdGenerator {\n    _appId = inject(APP_ID);\n    /**\n     * Generates a unique ID with a specific prefix.\n     * @param prefix Prefix to add to the ID.\n     */\n    getId(prefix) {\n        // Omit the app ID if it's the default `ng`. Since the vast majority of pages have one\n        // Angular app on them, we can reduce the amount of breakages by not adding it.\n        if (this._appId !== 'ng') {\n            prefix += this._appId;\n        }\n        if (!counters.hasOwnProperty(prefix)) {\n            counters[prefix] = 0;\n        }\n        return `${prefix}${counters[prefix]++}`;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _IdGenerator, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { _IdGenerator as _ };\n","import { _ as _resolveDirectionality, D as Directionality } from './directionality-CChdj3az.mjs';\nexport { a as DIR_DOCUMENT } from './directionality-CChdj3az.mjs';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, signal, Directive, Output, Input, NgModule } from '@angular/core';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    /** Whether the `value` has been set to its initial value. */\n    _isInitialized = false;\n    /** Direction as passed in by the consumer. */\n    _rawDir;\n    /** Event emitted when the direction changes. */\n    change = new EventEmitter();\n    /** @docs-private */\n    get dir() {\n        return this.valueSignal();\n    }\n    set dir(value) {\n        const previousValue = this.valueSignal();\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this.valueSignal.set(_resolveDirectionality(value));\n        this._rawDir = value;\n        if (previousValue !== this.valueSignal() && this._isInitialized) {\n            this.change.emit(this.valueSignal());\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    valueSignal = signal('ltr');\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: Dir, isStandalone: true, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass BidiModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, imports: [Dir], exports: [Dir] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Dir],\n                    exports: [Dir],\n                }]\n        }] });\n\nexport { BidiModule, Dir, Directionality };\n","import * as i0 from '@angular/core';\nimport { inject, ElementRef, Directive, TemplateRef, InjectionToken, signal, EventEmitter, computed, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChild, ContentChildren, ViewChild, Input, Output, ChangeDetectorRef, QueryList, numberAttribute, NgModule } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { D as Directionality } from './directionality-CChdj3az.mjs';\nimport { _ as _IdGenerator } from './id-generator-LuoRZSid.mjs';\nimport { F as FocusKeyManager } from './focus-key-manager-CPmlyB_c.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { S as SPACE, c as ENTER } from './keycodes-CpHkExLC.mjs';\nimport { c as _getFocusedElementPierceShadowDom } from './shadow-dom-B0oHn41l.mjs';\nimport { BidiModule } from './bidi.mjs';\nimport './list-key-manager-C7tp3RbG.mjs';\nimport './typeahead-9ZW4Dtsf.mjs';\n\nclass CdkStepHeader {\n    _elementRef = inject(ElementRef);\n    constructor() { }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepHeader, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkStepHeader, isStandalone: true, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\nclass CdkStepLabel {\n    template = inject(TemplateRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkStepLabel, isStandalone: true, selector: \"[cdkStepLabel]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                }]\n        }], ctorParameters: () => [] });\n\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n    /** Index of the step now selected. */\n    selectedIndex;\n    /** Index of the step previously selected. */\n    previouslySelectedIndex;\n    /** The step instance now selected. */\n    selectedStep;\n    /** The step instance previously selected. */\n    previouslySelectedStep;\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    _stepperOptions;\n    _stepper = inject(CdkStepper);\n    _displayDefaultIndicatorType;\n    /** Template for step label if it exists. */\n    stepLabel;\n    /** Forms that have been projected into the step. */\n    _childForms;\n    /** Template for step content. */\n    content;\n    /** The top level abstract control of the step. */\n    stepControl;\n    /** Whether user has attempted to move away from the step. */\n    get interacted() {\n        return this._interacted();\n    }\n    set interacted(value) {\n        this._interacted.set(value);\n    }\n    _interacted = signal(false);\n    /** Emits when the user has attempted to move away from the step. */\n    interactedStream = new EventEmitter();\n    /** Plain text label of the step. */\n    label;\n    /** Error message to display when there's an error. */\n    errorMessage;\n    /** Aria label for the tab. */\n    ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    ariaLabelledby;\n    /** State of the step. */\n    get state() {\n        return this._state();\n    }\n    set state(value) {\n        this._state.set(value);\n    }\n    _state = signal(undefined);\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable();\n    }\n    set editable(value) {\n        this._editable.set(value);\n    }\n    _editable = signal(true);\n    /** Whether the completion of step is optional. */\n    optional = false;\n    /** Whether step is marked as completed. */\n    get completed() {\n        const override = this._completedOverride();\n        const interacted = this._interacted();\n        if (override != null) {\n            return override;\n        }\n        return interacted && (!this.stepControl || this.stepControl.valid);\n    }\n    set completed(value) {\n        this._completedOverride.set(value);\n    }\n    _completedOverride = signal(null);\n    /** Current index of the step within the stepper. */\n    index = signal(-1);\n    /** Whether the step is selected. */\n    isSelected = computed(() => this._stepper.selectedIndex === this.index());\n    /** Type of indicator that should be shown for the step. */\n    indicatorType = computed(() => {\n        const selected = this.isSelected();\n        const completed = this.completed;\n        const defaultState = this._state() ?? STEP_STATE.NUMBER;\n        const editable = this._editable();\n        if (this._showError() && this.hasError && !selected) {\n            return STEP_STATE.ERROR;\n        }\n        if (this._displayDefaultIndicatorType) {\n            if (!completed || selected) {\n                return STEP_STATE.NUMBER;\n            }\n            return editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n        else {\n            if (completed && !selected) {\n                return STEP_STATE.DONE;\n            }\n            else if (completed && selected) {\n                return defaultState;\n            }\n            return editable && selected ? STEP_STATE.EDIT : defaultState;\n        }\n    });\n    /** Whether the user can navigate to the step. */\n    isNavigable = computed(() => {\n        const isSelected = this.isSelected();\n        const isCompleted = this.completed;\n        return isCompleted || isSelected || !this._stepper.linear;\n    });\n    /** Whether step has an error. */\n    get hasError() {\n        const customError = this._customError();\n        return customError == null ? this._getDefaultError() : customError;\n    }\n    set hasError(value) {\n        this._customError.set(value);\n    }\n    _customError = signal(null);\n    _getDefaultError() {\n        return this.interacted && !!this.stepControl?.invalid;\n    }\n    constructor() {\n        const stepperOptions = inject(STEPPER_GLOBAL_OPTIONS, { optional: true });\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this._interacted.set(false);\n        if (this._completedOverride() != null) {\n            this._completedOverride.set(false);\n        }\n        if (this._customError() != null) {\n            this._customError.set(false);\n        }\n        if (this.stepControl) {\n            // Reset the forms since the default error state matchers will show errors on submit and we\n            // want the form to be back to its initial state (see #29781). Submitted state is on the\n            // individual directives, rather than the control, so we need to reset them ourselves.\n            this._childForms?.forEach(form => form.resetForm?.());\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this._interacted()) {\n            this._interacted.set(true);\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return this._stepperOptions.showError ?? this._customError() != null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStep, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkStep, isStandalone: true, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: [\"editable\", \"editable\", booleanAttribute], optional: [\"optional\", \"optional\", booleanAttribute], completed: [\"completed\", \"completed\", booleanAttribute], hasError: [\"hasError\", \"hasError\", booleanAttribute] }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }, { propertyName: \"_childForms\", predicate: \n                // Note: we look for `ControlContainer` here, because both `NgForm` and `FormGroupDirective`\n                // provides themselves as such, but we don't want to have a concrete reference to both of\n                // the directives. The type is marked as `Partial` in case we run into a class that provides\n                // itself as `ControlContainer` but doesn't have the same interface as the directives.\n                ControlContainer, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content/></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content/></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: () => [], propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], _childForms: [{\n                type: ContentChildren,\n                args: [\n                    // Note: we look for `ControlContainer` here, because both `NgForm` and `FormGroupDirective`\n                    // provides themselves as such, but we don't want to have a concrete reference to both of\n                    // the directives. The type is marked as `Partial` in case we run into a class that provides\n                    // itself as `ControlContainer` but doesn't have the same interface as the directives.\n                    ControlContainer,\n                    {\n                        descendants: true,\n                    }]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], optional: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], completed: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hasError: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\nclass CdkStepper {\n    _dir = inject(Directionality, { optional: true });\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Used for managing keyboard focus. */\n    _keyManager;\n    /** Full list of steps inside the stepper, including inside nested steppers. */\n    _steps;\n    /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n    steps = new QueryList();\n    /** The list of step headers of the steps in the stepper. */\n    _stepHeader;\n    /** List of step headers sorted based on their DOM order. */\n    _sortedHeaders = new QueryList();\n    /** Whether the validity of previous steps should be checked or not. */\n    linear = false;\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex();\n    }\n    set selectedIndex(index) {\n        if (this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this.selectedIndex !== index) {\n                this.selected?._markAsInteracted();\n                if (!this._anyControlsInvalidOrPending(index) &&\n                    (index >= this.selectedIndex || this.steps.toArray()[index].editable)) {\n                    this._updateSelectedItemIndex(index);\n                }\n            }\n        }\n        else {\n            this._selectedIndex.set(index);\n        }\n    }\n    _selectedIndex = signal(0);\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Event emitted when the selected step has changed. */\n    selectionChange = new EventEmitter();\n    /** Output to support two-way binding on `[(selectedIndex)]` */\n    selectedIndexChange = new EventEmitter();\n    /** Used to track unique ID for each stepper component. */\n    _groupId = inject(_IdGenerator).getId('cdk-stepper-');\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatStepper` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    _orientation = 'horizontal';\n    constructor() { }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.forEach((step, index) => step.index.set(index));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplication. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        // The selected index may have changed between when the component was created and when the\n        // key manager was initialized. Use `updateActiveItem` so it's correct, but it doesn't steal\n        // away focus from the user.\n        this._keyManager.updateActiveItem(this.selectedIndex);\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager?.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this.selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex.set(Math.max(this.selectedIndex - 1, 0));\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this.selectedIndex)) {\n            this._selectedIndex.set(0);\n        }\n        // For linear step and selected index is greater than zero,\n        // set all the previous steps to interacted so that we can navigate to previous steps.\n        if (this.linear && this.selectedIndex > 0) {\n            const visitedSteps = this.steps.toArray().slice(0, this._selectedIndex());\n            for (const step of visitedSteps) {\n                step._markAsInteracted();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex() + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex() - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `${this._groupId}-label-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `${this._groupId}-content-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex();\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex();\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        const selectedIndex = this._selectedIndex();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        if (this._keyManager) {\n            this._containsFocus()\n                ? this._keyManager.setActiveItem(newIndex)\n                : this._keyManager.updateActiveItem(newIndex);\n        }\n        this._selectedIndex.set(newIndex);\n        this.selectedIndexChange.emit(newIndex);\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager?.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager?.setFocusOrigin('keyboard').onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this.linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride();\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepper, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkStepper, isStandalone: true, selector: \"[cdkStepper]\", inputs: { linear: [\"linear\", \"linear\", booleanAttribute], selectedIndex: [\"selectedIndex\", \"selectedIndex\", numberAttribute], selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\", selectedIndexChange: \"selectedIndexChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                }]\n        }], ctorParameters: () => [], propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectedIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], selectedIndexChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    _stepper = inject(CdkStepper);\n    /** Type of the next button. Defaults to \"submit\" if not specified. */\n    type = 'submit';\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperNext, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkStepperNext, isStandalone: true, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    _stepper = inject(CdkStepper);\n    /** Type of the previous button. Defaults to \"button\" if not specified. */\n    type = 'button';\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperPrevious, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkStepperPrevious, isStandalone: true, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { type: [{\n                type: Input\n            }] } });\n\nclass CdkStepperModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule,\n            CdkStep,\n            CdkStepper,\n            CdkStepHeader,\n            CdkStepLabel,\n            CdkStepperNext,\n            CdkStepperPrevious], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                }]\n        }] });\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n","let shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\nexport { _getEventTarget as _, _getShadowRoot as a, _supportsShadowDom as b, _getFocusedElementPierceShadowDom as c };\n","import { Subject } from 'rxjs';\nimport { tap, debounceTime, filter, map } from 'rxjs/operators';\nimport { A, Z, b as ZERO, N as NINE } from './keycodes-CpHkExLC.mjs';\n\nconst DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL_MS = 200;\n/**\n * Selects items based on keyboard inputs. Implements the typeahead functionality of\n * `role=\"listbox\"` or `role=\"tree\"` and other related roles.\n */\nclass Typeahead {\n    _letterKeyStream = new Subject();\n    _items = [];\n    _selectedItemIndex = -1;\n    /** Buffer for the letters that the user has pressed */\n    _pressedLetters = [];\n    _skipPredicateFn;\n    _selectedItem = new Subject();\n    selectedItem = this._selectedItem;\n    constructor(initialItems, config) {\n        const typeAheadInterval = typeof config?.debounceInterval === 'number'\n            ? config.debounceInterval\n            : DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL_MS;\n        if (config?.skipPredicate) {\n            this._skipPredicateFn = config.skipPredicate;\n        }\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            initialItems.length &&\n            initialItems.some(item => typeof item.getLabel !== 'function')) {\n            throw new Error('KeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this.setItems(initialItems);\n        this._setupKeyHandler(typeAheadInterval);\n    }\n    destroy() {\n        this._pressedLetters = [];\n        this._letterKeyStream.complete();\n        this._selectedItem.complete();\n    }\n    setCurrentSelectedItemIndex(index) {\n        this._selectedItemIndex = index;\n    }\n    setItems(items) {\n        this._items = items;\n    }\n    handleKey(event) {\n        const keyCode = event.keyCode;\n        // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n        // otherwise fall back to resolving alphanumeric characters via the keyCode.\n        if (event.key && event.key.length === 1) {\n            this._letterKeyStream.next(event.key.toLocaleUpperCase());\n        }\n        else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n            this._letterKeyStream.next(String.fromCharCode(keyCode));\n        }\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Resets the currently stored sequence of typed letters. */\n    reset() {\n        this._pressedLetters = [];\n    }\n    _setupKeyHandler(typeAheadInterval) {\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(typeAheadInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('').toLocaleUpperCase()))\n            .subscribe(inputString => {\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < this._items.length + 1; i++) {\n                const index = (this._selectedItemIndex + i) % this._items.length;\n                const item = this._items[index];\n                if (!this._skipPredicateFn?.(item) &&\n                    item.getLabel?.().toLocaleUpperCase().trim().indexOf(inputString) === 0) {\n                    this._selectedItem.next(item);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n    }\n}\n\nexport { Typeahead as T };\n","export { A, d as ALT, aX as APOSTROPHE, a1 as AT_SIGN, a2 as B, a_ as BACKSLASH, B as BACKSPACE, a3 as C, y as CAPS_LOCK, a$ as CLOSE_SQUARE_BRACKET, u as COMMA, as as CONTEXT_MENU, C as CONTROL, a4 as D, aV as DASH, i as DELETE, D as DOWN_ARROW, a5 as E, Y as EIGHT, E as END, c as ENTER, aU as EQUALS, g as ESCAPE, a6 as F, F as F1, r as F10, s as F11, t as F12, j as F2, k as F3, l as F4, m as F5, n as F6, o as F7, p as F8, q as F9, $ as FF_EQUALS, aL as FF_MINUS, aP as FF_MUTE, _ as FF_SEMICOLON, aQ as FF_VOLUME_DOWN, aS as FF_VOLUME_UP, aK as FIRST_MEDIA, V as FIVE, Q as FOUR, a7 as G, a8 as H, H as HOME, a9 as I, I as INSERT, aa as J, ab as K, ac as L, aR as LAST_MEDIA, L as LEFT_ARROW, ad as M, v as MAC_ENTER, M as MAC_META, aq as MAC_WK_CMD_LEFT, ar as MAC_WK_CMD_RIGHT, e as META, aM as MUTE, ae as N, N as NINE, aH as NUMPAD_DIVIDE, aB as NUMPAD_EIGHT, ay as NUMPAD_FIVE, ax as NUMPAD_FOUR, aF as NUMPAD_MINUS, aD as NUMPAD_MULTIPLY, aC as NUMPAD_NINE, au as NUMPAD_ONE, aG as NUMPAD_PERIOD, aE as NUMPAD_PLUS, aA as NUMPAD_SEVEN, az as NUMPAD_SIX, aw as NUMPAD_THREE, av as NUMPAD_TWO, at as NUMPAD_ZERO, w as NUM_CENTER, aI as NUM_LOCK, af as O, O as ONE, aZ as OPEN_SQUARE_BRACKET, ag as P, P as PAGE_DOWN, a as PAGE_UP, x as PAUSE, h as PERIOD, z as PLUS_SIGN, G as PRINT_SCREEN, ah as Q, a0 as QUESTION_MARK, ai as R, R as RIGHT_ARROW, aj as S, aJ as SCROLL_LOCK, aT as SEMICOLON, X as SEVEN, f as SHIFT, b0 as SINGLE_QUOTE, W as SIX, aW as SLASH, S as SPACE, ak as T, T as TAB, K as THREE, aY as TILDE, J as TWO, al as U, U as UP_ARROW, am as V, aN as VOLUME_DOWN, aO as VOLUME_UP, an as W, ao as X, ap as Y, Z, b as ZERO } from './keycodes-CpHkExLC.mjs';\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\nexport { hasModifierKey };\n"],"names":["MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","PERIOD","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MAC_META","$","_","a","a$","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aA","aB","aC","aD","aE","aF","aG","aH","aI","aJ","aK","aL","aM","aN","aO","aP","aQ","aR","aS","aT","aU","aV","aW","aX","aY","aZ","a_","aa","ab","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","an","ao","ap","aq","ar","as","at","au","av","aw","ax","ay","az","b","b0","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","signal","QueryList","isSignal","effect","Subscription","Subject","Typeahead","hasModifierKey","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_typeaheadSubscription","EMPTY","_itemChangesSubscription","_vertical","_horizontal","_allowedModifierKeys","_homeAndEnd","_pageUpAndDown","enabled","delta","_effectRef","_typeahead","_skipPredicateFn","item","disabled","constructor","injector","changes","subscribe","newItems","_itemsChanged","toArray","ngDevMode","Error","tabOut","change","skipPredicate","predicate","withWrap","shouldWrap","withVerticalOrientation","withHorizontalOrientation","direction","withAllowedModifierKeys","keys","withTypeAhead","debounceInterval","items","_getItemsArray","length","some","getLabel","unsubscribe","undefined","selectedItem","setActiveItem","cancelTypeahead","reset","withHomeAndEnd","withPageUpDown","previousActiveItem","updateActiveItem","next","onKeydown","event","keyCode","modifiers","isModifierAllowed","every","modifier","indexOf","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","targetIndex","_setActiveItemByIndex","itemsLength","handleKey","preventDefault","activeItemIndex","activeItem","isTyping","_setActiveItemByDelta","itemArray","index","set","setCurrentSelectedItemIndex","destroy","complete","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","setItems","newIndex","i0","InjectionToken","inject","DOCUMENT","EventEmitter","Injectable","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","value","toLowerCase","navigator","language","test","Directionality","valueSignal","_document","optional","bodyDir","body","dir","htmlDir","documentElement","ngOnDestroy","ɵfac","Directionality_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","FocusKeyManager","_origin","setFocusOrigin","origin","focus","APP_ID","counters","_IdGenerator","_appId","getId","prefix","hasOwnProperty","_IdGenerator_Factory","Directive","Output","Input","NgModule","Dir","_isInitialized","_rawDir","previousValue","emit","ngAfterContentInit","Dir_Factory","ɵdir","ɵɵdefineDirective","type","selectors","hostVars","hostBindings","Dir_HostBindings","rf","ctx","ɵɵattribute","inputs","outputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","BidiModule","BidiModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ElementRef","TemplateRef","computed","booleanAttribute","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChild","ContentChildren","ViewChild","ChangeDetectorRef","numberAttribute","ControlContainer","of","startWith","takeUntil","_getFocusedElementPierceShadowDom","_c0","CdkStep_ng_template_0_Template","ɵɵprojection","CdkStepHeader","_elementRef","nativeElement","CdkStepHeader_Factory","hostAttrs","CdkStepLabel","template","CdkStepLabel_Factory","StepperSelectionEvent","selectedIndex","previouslySelectedIndex","selectedStep","previouslySelectedStep","STEP_STATE","NUMBER","EDIT","DONE","ERROR","STEPPER_GLOBAL_OPTIONS","CdkStep","_stepperOptions","_stepper","CdkStepper","_displayDefaultIndicatorType","stepLabel","_childForms","content","stepControl","interacted","_interacted","interactedStream","label","errorMessage","ariaLabel","ariaLabelledby","state","_state","editable","_editable","completed","override","_completedOverride","valid","isSelected","indicatorType","selected","defaultState","_showError","hasError","isNavigable","isCompleted","linear","customError","_customError","_getDefaultError","invalid","stepperOptions","displayDefaultIndicatorType","select","forEach","form","resetForm","ngOnChanges","_stateChanged","_markAsInteracted","showError","CdkStep_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","CdkStep_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","CdkStep_Query","ɵɵviewQuery","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","CdkStep_Template","ɵɵprojectionDef","ɵɵdomTemplate","encapsulation","changeDetection","_dir","_changeDetectorRef","_destroyed","_keyManager","_steps","steps","_stepHeader","_sortedHeaders","_selectedIndex","_isValidIndex","_anyControlsInvalidOrPending","_updateSelectedItemIndex","step","selectionChange","selectedIndexChange","_groupId","orientation","_orientation","pipe","filter","notifyOnChanges","ngAfterViewInit","headers","sort","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","_layoutDirection","Math","max","visitedSteps","slice","min","previous","_getStepLabelId","_getStepContentId","markForCheck","_getAnimationDirection","position","_getFocusIndex","stepsArray","_containsFocus","_onKeydown","hasModifier","manager","control","isIncomplete","pending","stepperElement","focusedElement","contains","CdkStepper_Factory","CdkStepper_ContentQueries","CdkStepperNext","CdkStepperNext_Factory","CdkStepperNext_HostBindings","ɵɵlistener","CdkStepperNext_click_HostBindingHandler","ɵɵdomProperty","CdkStepperPrevious","CdkStepperPrevious_Factory","CdkStepperPrevious_HostBindings","CdkStepperPrevious_click_HostBindingHandler","CdkStepperModule","CdkStepperModule_Factory","imports","shadowDomIsSupported","_supportsShadowDom","head","document","createShadowRoot","attachShadow","_getShadowRoot","element","rootNode","getRootNode","ShadowRoot","activeElement","shadowRoot","newActiveElement","_getEventTarget","composedPath","target","tap","debounceTime","map","DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL_MS","_letterKeyStream","_selectedItemIndex","_pressedLetters","_selectedItem","initialItems","config","typeAheadInterval","_setupKeyHandler","key","toLocaleUpperCase","String","fromCharCode","letter","push","join","inputString","trim","altKey","shiftKey","ctrlKey","metaKey"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}