{"version":3,"file":"7556.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/common-module-cKSwHniA.mjs","./node_modules/@angular/material/fesm2022/option-BzhYL_xC.mjs","./node_modules/@angular/material/fesm2022/pseudo-checkbox-module-4F8Up4PL.mjs","./node_modules/@angular/material/fesm2022/select.mjs","./node_modules/@angular/material/fesm2022/error-options-DCNQlTOA.mjs","./node_modules/@angular/material/fesm2022/ripple-BYgV4oZC.mjs","./node_modules/@angular/material/fesm2022/module-DzZHEh7B.mjs","./node_modules/@angular/material/fesm2022/index-DwiL-HGk.mjs","./node_modules/@angular/material/fesm2022/error-state-Dtb1IHM-.mjs","./node_modules/@angular/material/fesm2022/module-BDiw_nWS.mjs","./node_modules/@angular/material/fesm2022/animation-DfMFjxHu.mjs","./node_modules/@angular/material/fesm2022/structural-styles-CObeNzjn.mjs","./node_modules/@angular/material/fesm2022/form-field-C9DZXojn.mjs","./node_modules/@angular/material/fesm2022/index-BFRo2fUq.mjs","./node_modules/@angular/material/fesm2022/pseudo-checkbox-DDmgx3P4.mjs"],"sourcesContent":["import { HighContrastModeDetector } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgModule } from '@angular/core';\n\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @deprecated No longer used and will be removed.\n * @breaking-change 21.0.0\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: () => true,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n * @deprecated No longer used and will be removed.\n * @breaking-change 21.0.0\n */\nclass MatCommonModule {\n    constructor() {\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        inject(HighContrastModeDetector)._applyBodyHighContrastModeCssClasses();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule, BidiModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: () => [] });\n\nexport { MatCommonModule as M, MATERIAL_SANITY_CHECKS as a };\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ElementRef, ChangeDetectorRef, signal, EventEmitter, isSignal, Output, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { M as MatRipple } from './ripple-BYgV4oZC.mjs';\nimport { M as MatPseudoCheckbox } from './pseudo-checkbox-DDmgx3P4.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup {\n    /** Label for the option group. */\n    label;\n    /** whether the option group is disabled. */\n    disabled = false;\n    /** Unique id for the underlying label. */\n    _labelId = inject(_IdGenerator).getId('mat-optgroup-label-');\n    /** Whether the group is in inert a11y mode. */\n    _inert;\n    constructor() {\n        const parent = inject(MAT_OPTION_PARENT_COMPONENT, { optional: true });\n        this._inert = parent?.inertGroups ?? false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatOptgroup, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatOptgroup, isStandalone: true, selector: \"mat-optgroup\", inputs: { label: \"label\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\" }, classAttribute: \"mat-mdc-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], ngImport: i0, template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-optgroup-label-text-font, var(--mat-sys-title-small-font));line-height:var(--mat-optgroup-label-text-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-optgroup-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-optgroup-label-text-tracking, var(--mat-sys-title-small-tracking));font-weight:var(--mat-optgroup-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal;color:inherit}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-mdc-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-optgroup-label-text-font, var(--mat-sys-title-small-font));line-height:var(--mat-optgroup-label-text-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-optgroup-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-optgroup-label-text-tracking, var(--mat-sys-title-small-tracking));font-weight:var(--mat-optgroup-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal;color:inherit}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { label: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    source;\n    isUserInput;\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    _element = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _parent = inject(MAT_OPTION_PARENT_COMPONENT, { optional: true });\n    group = inject(MAT_OPTGROUP, { optional: true });\n    _signalDisableRipple = false;\n    _selected = false;\n    _active = false;\n    _mostRecentViewValue = '';\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** The form value of the option. */\n    value;\n    /** The unique ID of the option. */\n    id = inject(_IdGenerator).getId('mat-option-');\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled();\n    }\n    set disabled(value) {\n        this._disabled.set(value);\n    }\n    _disabled = signal(false);\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._signalDisableRipple\n            ? this._parent.disableRipple()\n            : !!this._parent?.disableRipple;\n    }\n    /** Whether to display checkmark for single-selection. */\n    get hideSingleSelectionIndicator() {\n        return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n    }\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    onSelectionChange = new EventEmitter();\n    /** Element containing the option's text. */\n    _text;\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    _stateChanges = new Subject();\n    constructor() {\n        const styleLoader = inject(_CdkPrivateStyleLoader);\n        styleLoader.load(_StructuralStylesLoader);\n        styleLoader.load(_VisuallyHiddenLoader);\n        this._signalDisableRipple = !!this._parent && isSignal(this._parent.disableRipple);\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._text?.nativeElement.textContent || '').trim();\n    }\n    /** Selects the option. */\n    select(emitEvent = true) {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            if (emitEvent) {\n                this._emitSelectionChangeEvent();\n            }\n        }\n    }\n    /** Deselects the option. */\n    deselect(emitEvent = true) {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            if (emitEvent) {\n                this._emitSelectionChangeEvent();\n            }\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n    // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n    // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                if (this._mostRecentViewValue) {\n                    this._stateChanges.next();\n                }\n                this._mostRecentViewValue = viewValue;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatOption, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatOption, isStandalone: true, selector: \"mat-option\", inputs: { value: \"value\", id: \"id\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { onSelectionChange: \"onSelectionChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-list-item--selected\": \"selected\", \"class.mat-mdc-option-multiple\": \"multiple\", \"class.mat-mdc-option-active\": \"active\", \"class.mdc-list-item--disabled\": \"disabled\", \"id\": \"id\", \"attr.aria-selected\": \"selected\", \"attr.aria-disabled\": \"disabled.toString()\" }, classAttribute: \"mat-mdc-option mdc-list-item\" }, viewQueries: [{ propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true, static: true }], exportAs: [\"matOption\"], ngImport: i0, template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n@if (multiple) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n        aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n}\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n@if (!multiple && selected && !hideSingleSelectionIndicator) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        state=\\\"checked\\\"\\n        aria-hidden=\\\"true\\\"\\n        appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n}\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n@if (group && group._inert) {\\n    <span class=\\\"cdk-visually-hidden\\\">({{ group.label }})</span>\\n}\\n\\n<div class=\\\"mat-mdc-option-ripple mat-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-option-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-option-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-option-label-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-option-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-option-label-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color, var(--mat-sys-secondary-container))}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option .mat-pseudo-checkbox{--mat-pseudo-checkbox-minimal-selected-checkmark-color: var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}@media(forced-colors: active){.mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{right:auto;left:16px}}.mat-mdc-option-multiple{--mat-list-list-item-selected-container-color: var(--mat-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-focus-indicator::before{content:\\\"\\\"}\\n\"], dependencies: [{ kind: \"component\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\", \"appearance\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[class.mdc-list-item--selected]': 'selected',\n                        '[class.mat-mdc-option-multiple]': 'multiple',\n                        '[class.mat-mdc-option-active]': 'active',\n                        '[class.mdc-list-item--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Set aria-selected to false for non-selected items and true for selected items. Conform to\n                        // [WAI ARIA Listbox authoring practices guide](\n                        //  https://www.w3.org/WAI/ARIA/apg/patterns/listbox/), \"If any options are selected, each\n                        // selected option has either aria-selected or aria-checked  set to true. All options that are\n                        // selectable but not selected have either aria-selected or aria-checked set to false.\" Align\n                        // aria-selected implementation of Chips and List components.\n                        //\n                        // Set `aria-selected=\"false\"` on not-selected listbox options to fix VoiceOver announcing\n                        // every option as \"selected\" (#21491).\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-mdc-option mdc-list-item',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatPseudoCheckbox, MatRipple], template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n@if (multiple) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n        aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n}\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n@if (!multiple && selected && !hideSingleSelectionIndicator) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        state=\\\"checked\\\"\\n        aria-hidden=\\\"true\\\"\\n        appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n}\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n@if (group && group._inert) {\\n    <span class=\\\"cdk-visually-hidden\\\">({{ group.label }})</span>\\n}\\n\\n<div class=\\\"mat-mdc-option-ripple mat-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-option-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-option-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-option-label-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-option-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-option-label-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color, var(--mat-sys-secondary-container))}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option .mat-pseudo-checkbox{--mat-pseudo-checkbox-minimal-selected-checkmark-color: var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}@media(forced-colors: active){.mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{right:auto;left:16px}}.mat-mdc-option-multiple{--mat-list-list-item-selected-container-color: var(--mat-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-focus-indicator::before{content:\\\"\\\"}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], onSelectionChange: [{\n                type: Output\n            }], _text: [{\n                type: ViewChild,\n                args: ['text', { static: true }]\n            }] } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\nexport { MatOption as M, _countGroupLabelsBeforeOption as _, MatOptgroup as a, _getOptionScrollPosition as b, MAT_OPTION_PARENT_COMPONENT as c, MAT_OPTGROUP as d, MatOptionSelectionChange as e };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { M as MatPseudoCheckbox } from './pseudo-checkbox-DDmgx3P4.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\n\nclass MatPseudoCheckboxModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [MatCommonModule, MatPseudoCheckbox], exports: [MatPseudoCheckbox] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatPseudoCheckbox],\n                    exports: [MatPseudoCheckbox],\n                }]\n        }] });\n\nexport { MatPseudoCheckboxModule as M };\n","export { a as MatOptgroup, M as MatOption } from './option-BzhYL_xC.mjs';\nexport { b as MatError, j as MatFormField, c as MatHint, M as MatLabel, e as MatPrefix, g as MatSuffix } from './form-field-C9DZXojn.mjs';\nexport { c as MAT_SELECT_CONFIG, a as MAT_SELECT_SCROLL_STRATEGY, d as MAT_SELECT_SCROLL_STRATEGY_PROVIDER, b as MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, e as MAT_SELECT_TRIGGER, g as MatSelect, f as MatSelectChange, M as MatSelectModule, h as MatSelectTrigger } from './module-BDiw_nWS.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/keycodes';\nimport '@angular/core';\nimport 'rxjs';\nimport './ripple-BYgV4oZC.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/private';\nimport './animation-DfMFjxHu.mjs';\nimport '@angular/cdk/layout';\nimport './pseudo-checkbox-DDmgx3P4.mjs';\nimport './structural-styles-CObeNzjn.mjs';\nimport '@angular/cdk/bidi';\nimport '@angular/common';\nimport 'rxjs/operators';\nimport '@angular/cdk/observers/private';\nimport '@angular/cdk/overlay';\nimport '@angular/cdk/scrolling';\nimport '@angular/cdk/collections';\nimport '@angular/forms';\nimport './error-options-DCNQlTOA.mjs';\nimport './error-state-Dtb1IHM-.mjs';\nimport './index-DwiL-HGk.mjs';\nimport './index-BFRo2fUq.mjs';\nimport './common-module-cKSwHniA.mjs';\nimport './pseudo-checkbox-module-4F8Up4PL.mjs';\nimport './module-DzZHEh7B.mjs';\nimport '@angular/cdk/observers';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matSelectAnimations = {\n    // Represents\n    // trigger('transformPanel', [\n    //   state(\n    //     'void',\n    //     style({\n    //       opacity: 0,\n    //       transform: 'scale(1, 0.8)',\n    //     }),\n    //   ),\n    //   transition(\n    //     'void => showing',\n    //     animate(\n    //       '120ms cubic-bezier(0, 0, 0.2, 1)',\n    //       style({\n    //         opacity: 1,\n    //         transform: 'scale(1, 1)',\n    //       }),\n    //     ),\n    //   ),\n    //   transition('* => void', animate('100ms linear', style({opacity: 0}))),\n    // ])\n    /** This animation transforms the select's overlay panel on and off the page. */\n    transformPanel: {\n        type: 7,\n        name: 'transformPanel',\n        definitions: [\n            {\n                type: 0,\n                name: 'void',\n                styles: {\n                    type: 6,\n                    styles: { opacity: 0, transform: 'scale(1, 0.8)' },\n                    offset: null,\n                },\n            },\n            {\n                type: 1,\n                expr: 'void => showing',\n                animation: {\n                    type: 4,\n                    styles: {\n                        type: 6,\n                        styles: { opacity: 1, transform: 'scale(1, 1)' },\n                        offset: null,\n                    },\n                    timings: '120ms cubic-bezier(0, 0, 0.2, 1)',\n                },\n                options: null,\n            },\n            {\n                type: 1,\n                expr: '* => void',\n                animation: {\n                    type: 4,\n                    styles: { type: 6, styles: { opacity: 0 }, offset: null },\n                    timings: '100ms linear',\n                },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { matSelectAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nexport { ErrorStateMatcher as E, ShowOnDirtyErrorStateMatcher as S };\n","import { normalizePassiveListenerOptions, _getEventTarget, Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, InjectionToken, inject, ElementRef, NgZone, Injector, Directive, Input } from '@angular/core';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\n\n/** Possible states for a ripple element. */\nvar RippleState;\n(function (RippleState) {\n    RippleState[RippleState[\"FADING_IN\"] = 0] = \"FADING_IN\";\n    RippleState[RippleState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n    RippleState[RippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n    RippleState[RippleState[\"HIDDEN\"] = 3] = \"HIDDEN\";\n})(RippleState || (RippleState = {}));\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    _renderer;\n    element;\n    config;\n    _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n    state = RippleState.HIDDEN;\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config, \n    /* Whether animations are forcibly disabled for ripples through CSS. */\n    _animationForciblyDisabledThroughCss = false) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n    _events = new Map();\n    /** Adds an event handler. */\n    addHandler(ngZone, name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (handlersForEvent) {\n            const handlersForElement = handlersForEvent.get(element);\n            if (handlersForElement) {\n                handlersForElement.add(handler);\n            }\n            else {\n                handlersForEvent.set(element, new Set([handler]));\n            }\n        }\n        else {\n            this._events.set(name, new Map([[element, new Set([handler])]]));\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n            });\n        }\n    }\n    /** Removes an event handler. */\n    removeHandler(name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (!handlersForEvent) {\n            return;\n        }\n        const handlersForElement = handlersForEvent.get(element);\n        if (!handlersForElement) {\n            return;\n        }\n        handlersForElement.delete(handler);\n        if (handlersForElement.size === 0) {\n            handlersForEvent.delete(element);\n        }\n        if (handlersForEvent.size === 0) {\n            this._events.delete(name);\n            document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n        }\n    }\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n    _delegateEventHandler = (event) => {\n        const target = _getEventTarget(event);\n        if (target) {\n            this._events.get(event.type)?.forEach((handlers, element) => {\n                if (element === target || element.contains(target)) {\n                    handlers.forEach(handler => handler.handleEvent(event));\n                }\n            });\n        }\n    };\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\nclass _MatRippleStylesLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatRippleStylesLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _MatRippleStylesLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"mat-ripple-style-loader\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0);background-color:var(--mat-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface) 10%, transparent))}@media(forced-colors: active){.mat-ripple-element{display:none}}.cdk-drag-preview .mat-ripple-element,.cdk-drag-placeholder .mat-ripple-element{display:none}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatRippleStylesLoader, decorators: [{\n            type: Component,\n            args: [{ template: '', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { 'mat-ripple-style-loader': '' }, styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0);background-color:var(--mat-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface) 10%, transparent))}@media(forced-colors: active){.mat-ripple-element{display:none}}.cdk-drag-preview .mat-ripple-element,.cdk-drag-placeholder .mat-ripple-element{display:none}\\n\"] }]\n        }] });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    _target;\n    _ngZone;\n    _platform;\n    /** Element where the ripples are being added to. */\n    _containerElement;\n    /** Element which triggers the ripple elements on mouse events. */\n    _triggerElement;\n    /** Whether the pointer is currently down or not. */\n    _isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n    _activeRipples = new Map();\n    /** Latest non-persistent ripple that was triggered. */\n    _mostRecentTransientRipple;\n    /** Time in milliseconds when the last touchstart event happened. */\n    _lastTouchStartEvent;\n    /** Whether pointer-up event listeners have been registered. */\n    _pointerUpEventsRegistered = false;\n    /**\n     * Cached dimensions of the ripple container. Set when the first\n     * ripple is shown and cleared once no more ripples are visible.\n     */\n    _containerRect;\n    static _eventManager = new RippleEventManager();\n    constructor(_target, _ngZone, elementOrElementRef, _platform, injector) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        // Only do anything if we're on the browser.\n        if (_platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n        if (injector) {\n            injector.get(_CdkPrivateStyleLoader).load(_MatRippleStylesLoader);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const enterDuration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${enterDuration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical to ensure that the `scale` animates properly.\n        // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        const computedStyles = window.getComputedStyle(ripple);\n        const userTransitionProperty = computedStyles.transitionProperty;\n        const userTransitionDuration = computedStyles.transitionDuration;\n        // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n        // `transition: none` or `display: none`). This is technically unexpected since animations are\n        // controlled through the animation config, but this exists for backwards compatibility. This\n        // logic does not need to be super accurate since it covers some edge cases which can be easily\n        // avoided by users.\n        const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n            // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n            // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n            userTransitionDuration === '0s' ||\n            userTransitionDuration === '0s, 0s' ||\n            // If the container is 0x0, it's likely `display: none`.\n            (containerRect.width === 0 && containerRect.height === 0);\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n        // Start the enter animation by setting the transform/scale to 100%. The animation will\n        // execute as part of this statement because we forced a style recalculation before.\n        // Note: We use a 3d transform here in order to avoid an issue in Safari where\n        // the ripples aren't clipped when inside the shadow DOM (see #24028).\n        ripple.style.transform = 'scale3d(1, 1, 1)';\n        rippleRef.state = RippleState.FADING_IN;\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        let eventListeners = null;\n        // Do not register the `transition` event listener if fade-in and fade-out duration\n        // are set to zero. The events won't fire anyway and we can save resources here.\n        if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n            this._ngZone.runOutsideAngular(() => {\n                const onTransitionEnd = () => {\n                    // Clear the fallback timer since the transition fired correctly.\n                    if (eventListeners) {\n                        eventListeners.fallbackTimer = null;\n                    }\n                    clearTimeout(fallbackTimer);\n                    this._finishRippleTransition(rippleRef);\n                };\n                const onTransitionCancel = () => this._destroyRipple(rippleRef);\n                // In some cases where there's a higher load on the browser, it can choose not to dispatch\n                // neither `transitionend` nor `transitioncancel` (see b/227356674). This timer serves as a\n                // fallback for such cases so that the ripple doesn't become stuck. We add a 100ms buffer\n                // because timers aren't precise. Note that another approach can be to transition the ripple\n                // to the `VISIBLE` state immediately above and to `FADING_IN` afterwards inside\n                // `transitionstart`. We go with the timer because it's one less event listener and\n                // it's less likely to break existing tests.\n                const fallbackTimer = setTimeout(onTransitionCancel, enterDuration + 100);\n                ripple.addEventListener('transitionend', onTransitionEnd);\n                // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n                // directly as otherwise we would keep it part of the ripple container forever.\n                // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n                ripple.addEventListener('transitioncancel', onTransitionCancel);\n                eventListeners = { onTransitionEnd, onTransitionCancel, fallbackTimer };\n            });\n        }\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.set(rippleRef, eventListeners);\n        // In case there is no fade-in transition duration, we need to manually call the transition\n        // end listener because `transitionend` doesn't fire if there is no transition.\n        if (animationForciblyDisabledThroughCss || !enterDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        // For ripples already fading out or hidden, this should be a noop.\n        if (rippleRef.state === RippleState.FADING_OUT || rippleRef.state === RippleState.HIDDEN) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        // This starts the fade-out transition and will fire the transition end listener that\n        // removes the ripple element from the DOM.\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // In case there is no fade-out transition duration, we need to manually call the\n        // transition end listener because `transitionend` doesn't fire if there is no transition.\n        if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._getActiveRipples().forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        // Use event delegation for the trigger events since they're\n        // set up during creation and are performance-sensitive.\n        pointerDownEvents.forEach(type => {\n            RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n        });\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            // The events for hiding the ripple are bound directly on the trigger, because:\n            // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n            // delegation will be diminished by having to look through all the data structures often.\n            // 2. They aren't as performance-sensitive, because they're bound only after the user\n            // has interacted with an element.\n            this._ngZone.runOutsideAngular(() => {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n                });\n            });\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n    _finishRippleTransition(rippleRef) {\n        if (rippleRef.state === RippleState.FADING_IN) {\n            this._startFadeOutTransition(rippleRef);\n        }\n        else if (rippleRef.state === RippleState.FADING_OUT) {\n            this._destroyRipple(rippleRef);\n        }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n    _startFadeOutTransition(rippleRef) {\n        const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n        const { persistent } = rippleRef.config;\n        rippleRef.state = RippleState.VISIBLE;\n        // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n        if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n            rippleRef.fadeOut();\n        }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n    _destroyRipple(rippleRef) {\n        const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n        this._activeRipples.delete(rippleRef);\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // If the current ref is the most recent transient ripple, unset it\n        // avoid memory leaks.\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        rippleRef.state = RippleState.HIDDEN;\n        if (eventListeners !== null) {\n            rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n            rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n            if (eventListeners.fallbackTimer !== null) {\n                clearTimeout(eventListeners.fallbackTimer);\n            }\n        }\n        rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            // According to the typings the touches should always be defined, but in some cases\n            // the browser appears to not assign them in tests which leads to flakes.\n            if (touches) {\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._getActiveRipples().forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === RippleState.VISIBLE ||\n                (ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    _getActiveRipples() {\n        return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        const trigger = this._triggerElement;\n        if (trigger) {\n            pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n                this._pointerUpEventsRegistered = false;\n            }\n        }\n    }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    _elementRef = inject(ElementRef);\n    _animationsDisabled = _animationsDisabled();\n    /** Custom color for all ripples. */\n    color;\n    /** Whether the ripples should be visible outside the component's bounds. */\n    unbounded;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     */\n    centered;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    radius = 0;\n    /**\n     * Configuration for the ripple animation. Allows modifying the enter and exit animation\n     * duration of the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     */\n    animation;\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    _disabled = false;\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    _trigger;\n    /** Renderer for the ripple DOM manipulations. */\n    _rippleRenderer;\n    /** Options that are set globally for all ripples. */\n    _globalOptions;\n    /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n    _isInitialized = false;\n    constructor() {\n        const ngZone = inject(NgZone);\n        const platform = inject(Platform);\n        const globalOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, { optional: true });\n        const injector = inject(Injector);\n        // Note: cannot use `inject()` here, because this class\n        // gets instantiated manually in the ripple loader.\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, this._elementRef, platform, injector);\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationsDisabled ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRipple, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatRipple, isStandalone: true, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\nexport { MatRipple as M, RippleRenderer as R, MAT_RIPPLE_GLOBAL_OPTIONS as a, RippleState as b, RippleRef as c, defaultRippleAnimationConfig as d };\n","import { ObserversModule } from '@angular/cdk/observers';\nimport * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { j as MatFormField, M as MatLabel, b as MatError, c as MatHint, e as MatPrefix, g as MatSuffix } from './form-field-C9DZXojn.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\n\nclass MatFormFieldModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, imports: [MatCommonModule,\n            ObserversModule,\n            MatFormField,\n            MatLabel,\n            MatError,\n            MatHint,\n            MatPrefix,\n            MatSuffix], exports: [MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, imports: [MatCommonModule,\n            ObserversModule,\n            MatFormField, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        ObserversModule,\n                        MatFormField,\n                        MatLabel,\n                        MatError,\n                        MatHint,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                    exports: [MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix, MatCommonModule],\n                }]\n        }] });\n\nexport { MatFormFieldModule as M };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { M as MatRippleModule } from './index-BFRo2fUq.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatOption, a as MatOptgroup } from './option-BzhYL_xC.mjs';\nimport { M as MatPseudoCheckboxModule } from './pseudo-checkbox-module-4F8Up4PL.mjs';\n\nclass MatOptionModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatOptionModule, imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption, MatOptgroup], exports: [MatOption, MatOptgroup] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatOptionModule, imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption, MatOptgroup],\n                    exports: [MatOption, MatOptgroup],\n                }]\n        }] });\n\nexport { MatOptionModule as M };\n","/**\n * Class that tracks the error state of a component.\n * @docs-private\n */\nclass _ErrorStateTracker {\n    _defaultMatcher;\n    ngControl;\n    _parentFormGroup;\n    _parentForm;\n    _stateChanges;\n    /** Whether the tracker is currently in an error state. */\n    errorState = false;\n    /** User-defined matcher for the error state. */\n    matcher;\n    constructor(_defaultMatcher, ngControl, _parentFormGroup, _parentForm, _stateChanges) {\n        this._defaultMatcher = _defaultMatcher;\n        this.ngControl = ngControl;\n        this._parentFormGroup = _parentFormGroup;\n        this._parentForm = _parentForm;\n        this._stateChanges = _stateChanges;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n        const oldState = this.errorState;\n        const parent = this._parentFormGroup || this._parentForm;\n        const matcher = this.matcher || this._defaultMatcher;\n        const control = this.ngControl ? this.ngControl.control : null;\n        const newState = matcher?.isErrorState(control, parent) ?? false;\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this._stateChanges.next();\n        }\n    }\n}\n\nexport { _ErrorStateTracker as _ };\n","import { createRepositionScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, OverlayModule } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, ChangeDetectorRef, ElementRef, Renderer2, signal, EventEmitter, HostAttributeToken, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, Input, ViewChild, Output, Directive, NgModule } from '@angular/core';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _IdGenerator, LiveAnnouncer, removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, ENTER, SPACE, A, ESCAPE, DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport { NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, filter, map, takeUntil, take } from 'rxjs/operators';\nimport { NgClass } from '@angular/common';\nimport { h as MAT_FORM_FIELD, k as MatFormFieldControl } from './form-field-C9DZXojn.mjs';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { _ as _countGroupLabelsBeforeOption, b as _getOptionScrollPosition, c as MAT_OPTION_PARENT_COMPONENT, M as MatOption, d as MAT_OPTGROUP } from './option-BzhYL_xC.mjs';\nimport { E as ErrorStateMatcher } from './error-options-DCNQlTOA.mjs';\nimport { _ as _ErrorStateTracker } from './error-state-Dtb1IHM-.mjs';\nimport { M as MatOptionModule } from './index-DwiL-HGk.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatFormFieldModule } from './module-DzZHEh7B.mjs';\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(Injector);\n        return () => createRepositionScrollStrategy(injector);\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(_overlay) {\n    const injector = inject(Injector);\n    return () => createRepositionScrollStrategy(injector);\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    source;\n    value;\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nclass MatSelect {\n    _viewportRuler = inject(ViewportRuler);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _dir = inject(Directionality, { optional: true });\n    _idGenerator = inject(_IdGenerator);\n    _renderer = inject(Renderer2);\n    _parentFormField = inject(MAT_FORM_FIELD, { optional: true });\n    ngControl = inject(NgControl, { self: true, optional: true });\n    _liveAnnouncer = inject(LiveAnnouncer);\n    _defaultOptions = inject(MAT_SELECT_CONFIG, { optional: true });\n    _animationsDisabled = _animationsDisabled();\n    _initialized = new Subject();\n    _cleanupDetach;\n    /** All of the defined select options. */\n    options;\n    // TODO(crisbeto): this is only necessary for the non-MDC select, but it's technically a\n    // public API so we have to keep it. It should be deprecated and removed eventually.\n    /** All of the defined groups of options. */\n    optionGroups;\n    /** User-supplied override of the trigger element. */\n    customTrigger;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top',\n        },\n        {\n            originX: 'end',\n            originY: 'bottom',\n            overlayX: 'end',\n            overlayY: 'top',\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom',\n            panelClass: 'mat-mdc-select-panel-above',\n        },\n        {\n            originX: 'end',\n            originY: 'top',\n            overlayX: 'end',\n            overlayY: 'bottom',\n            panelClass: 'mat-mdc-select-panel-above',\n        },\n    ];\n    /** Scrolls a particular option into the view. */\n    _scrollOptionIntoView(index) {\n        const option = this.options.toArray()[index];\n        if (option) {\n            const panel = this.panel.nativeElement;\n            const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n            const element = option._getHostElement();\n            if (index === 0 && labelCount === 1) {\n                // If we've got one group label before the option and we're at the top option,\n                // scroll the list to the top. This is better UX than scrolling the list to the\n                // top of the option, because it allows the user to read the top group's label.\n                panel.scrollTop = 0;\n            }\n            else {\n                panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n            }\n        }\n    }\n    /** Called when the panel has been opened and the overlay has settled on its final position. */\n    _positioningSettled() {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n    }\n    /** Creates a change event object that should be emitted by the select. */\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /** Factory function used to create a scroll strategy for this select. */\n    _scrollStrategyFactory = inject(MAT_SELECT_SCROLL_STRATEGY);\n    /** Whether or not the overlay panel is open. */\n    _panelOpen = false;\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    _compareWith = (o1, o2) => o1 === o2;\n    /** Unique id for this input. */\n    _uid = this._idGenerator.getId('mat-select-');\n    /** Current `aria-labelledby` value for the select trigger. */\n    _triggerAriaLabelledBy = null;\n    /**\n     * Keeps track of the previous form control assigned to the select.\n     * Used to detect if it has changed.\n     */\n    _previousControl;\n    /** Emits whenever the component is destroyed. */\n    _destroy = new Subject();\n    /** Tracks the error state of the select. */\n    _errorStateTracker;\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    stateChanges = new Subject();\n    /**\n     * Disable the automatic labeling to avoid issues like #27241.\n     * @docs-private\n     */\n    disableAutomaticLabeling = true;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    userAriaDescribedBy;\n    /** Deals with the selection logic. */\n    _selectionModel;\n    /** Manages keyboard events for options in the panel. */\n    _keyManager;\n    /** Ideal origin for the overlay panel. */\n    _preferredOverlayOrigin;\n    /** Width of the overlay panel. */\n    _overlayWidth;\n    /** `View -> model callback called when value changes` */\n    _onChange = () => { };\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => { };\n    /** ID for the DOM node containing the select's value. */\n    _valueId = this._idGenerator.getId('mat-select-value-');\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy;\n    _overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    _focused = false;\n    /** A name for this control that can be used by `mat-form-field`. */\n    controlType = 'mat-select';\n    /** Trigger that opens the select. */\n    trigger;\n    /** Panel containing the select options. */\n    panel;\n    /** Overlay pane containing the options. */\n    _overlayDir;\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    panelClass;\n    /** Whether the select is disabled. */\n    disabled = false;\n    /** Whether ripples in the select are disabled. */\n    get disableRipple() {\n        return this._disableRipple();\n    }\n    set disableRipple(value) {\n        this._disableRipple.set(value);\n    }\n    _disableRipple = signal(false);\n    /** Tab index of the select. */\n    tabIndex = 0;\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = value;\n        this._syncParentProperties();\n    }\n    _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    _placeholder;\n    /** Whether the component is required. */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = value;\n        this.stateChanges.next();\n    }\n    _required;\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = value;\n    }\n    _multiple = false;\n    /** Whether to center the active option over the trigger. */\n    disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        const hasAssigned = this._assignValue(newValue);\n        if (hasAssigned) {\n            this._onChange(newValue);\n        }\n    }\n    _value;\n    /** Aria label of the select. */\n    ariaLabel = '';\n    /** Input that can be used to specify the `aria-labelledby` attribute. */\n    ariaLabelledby;\n    /** Object used to control when error messages are shown. */\n    get errorStateMatcher() {\n        return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n        this._errorStateTracker.matcher = value;\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    sortComparator;\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    _id;\n    /** Whether the select is in an error state. */\n    get errorState() {\n        return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n        this._errorStateTracker.errorState = value;\n    }\n    /**\n     * Width of the panel. If set to `auto`, the panel will match the trigger width.\n     * If set to null or an empty string, the panel will grow to match the longest option's text.\n     */\n    panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined'\n        ? this._defaultOptions.panelWidth\n        : 'auto';\n    /**\n     * By default selecting an option with a `null` or `undefined` value will reset the select's\n     * value. Enable this option if the reset behavior doesn't match your requirements and instead\n     * the nullable options should become selected. The value of this input can be controlled app-wide\n     * using the `MAT_SELECT_CONFIG` injection token.\n     */\n    canSelectNullableOptions = this._defaultOptions?.canSelectNullableOptions ?? false;\n    /** Combined stream of all of the child options' change events. */\n    optionSelectionChanges = defer(() => {\n        const options = this.options;\n        if (options) {\n            return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n        }\n        return this._initialized.pipe(switchMap(() => this.optionSelectionChanges));\n    });\n    /** Event emitted when the select panel has been toggled. */\n    openedChange = new EventEmitter();\n    /** Event emitted when the select has been opened. */\n    _openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n    /** Event emitted when the select has been closed. */\n    _closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n    /** Event emitted when the selected value has been changed by the user. */\n    selectionChange = new EventEmitter();\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    valueChange = new EventEmitter();\n    constructor() {\n        const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n        const parentForm = inject(NgForm, { optional: true });\n        const parentFormGroup = inject(FormGroupDirective, { optional: true });\n        const tabIndex = inject(new HostAttributeToken('tabindex'), { optional: true });\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if (this._defaultOptions?.typeaheadDebounceInterval != null) {\n            this.typeaheadDebounceInterval = this._defaultOptions.typeaheadDebounceInterval;\n        }\n        this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n                this._changeDetectorRef.detectChanges();\n            }\n        });\n    }\n    ngAfterContentInit() {\n        this._initialized.next();\n        this._initialized.complete();\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        const ngControl = this.ngControl;\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (ngControl) {\n            // The disabled state might go out of sync if the form group is swapped out. See #17860.\n            if (this._previousControl !== ngControl.control) {\n                if (this._previousControl !== undefined &&\n                    ngControl.disabled !== null &&\n                    ngControl.disabled !== this.disabled) {\n                    this.disabled = ngControl.disabled;\n                }\n                this._previousControl = ngControl.control;\n            }\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by the input, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled'] || changes['userAriaDescribedBy']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._cleanupDetach?.();\n        this._keyManager?.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n        this._clearFromModal();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (!this._canOpen()) {\n            return;\n        }\n        // It's important that we read this as late as possible, because doing so earlier will\n        // return a different element since it's based on queries in the form field which may\n        // not have run yet. Also this needs to be assigned before we measure the overlay width.\n        if (this._parentFormField) {\n            this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n        }\n        this._cleanupDetach?.();\n        this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n        this._applyModalPanelOwnership();\n        this._panelOpen = true;\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n        this._overlayDir.attachOverlay();\n        this._keyManager.withHorizontalOrientation(null);\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Required for the MDC form field to pick up when the overlay has been opened.\n        this.stateChanges.next();\n        // Simulate the animation event before we moved away from `@angular/animations`.\n        Promise.resolve().then(() => this.openedChange.emit(true));\n    }\n    /**\n     * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n     * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n     * panel. Track the modal we have changed so we can undo the changes on destroy.\n     */\n    _trackedModal = null;\n    /**\n     * If the autocomplete trigger is inside of an `aria-modal` element, connect\n     * that modal to the options panel with `aria-owns`.\n     *\n     * For some browser + screen reader combinations, when navigation is inside\n     * of an `aria-modal` element, the screen reader treats everything outside\n     * of that modal as hidden or invisible.\n     *\n     * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n     * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n     * from reaching the panel.\n     *\n     * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n     * the options panel. This effectively communicates to assistive technology that the\n     * options panel is part of the same interaction as the modal.\n     *\n     * At time of this writing, this issue is present in VoiceOver.\n     * See https://github.com/angular/components/issues/20694\n     */\n    _applyModalPanelOwnership() {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `LiveAnnouncer` and any other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        if (!modal) {\n            // Most commonly, the autocomplete trigger is not inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        if (this._trackedModal) {\n            removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        }\n        addAriaReferencedId(modal, 'aria-owns', panelId);\n        this._trackedModal = modal;\n    }\n    /** Clears the reference to the listbox overlay element from the modal it was added to. */\n    _clearFromModal() {\n        if (!this._trackedModal) {\n            // Most commonly, the autocomplete trigger is not used inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        this._trackedModal = null;\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._exitAndDetach();\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n            // Required for the MDC form field to pick up when the overlay has been closed.\n            this.stateChanges.next();\n            // Simulate the animation event before we moved away from `@angular/animations`.\n            Promise.resolve().then(() => this.openedChange.emit(false));\n        }\n    }\n    /** Triggers the exit animation and detaches the overlay at the end. */\n    _exitAndDetach() {\n        if (this._animationsDisabled || !this.panel) {\n            this._detachOverlay();\n            return;\n        }\n        this._cleanupDetach?.();\n        this._cleanupDetach = () => {\n            cleanupEvent();\n            clearTimeout(exitFallbackTimer);\n            this._cleanupDetach = undefined;\n        };\n        const panel = this.panel.nativeElement;\n        const cleanupEvent = this._renderer.listen(panel, 'animationend', (event) => {\n            if (event.animationName === '_mat-select-exit') {\n                this._cleanupDetach?.();\n                this._detachOverlay();\n            }\n        });\n        // Since closing the overlay depends on the animation, we have a fallback in case the panel\n        // doesn't animate. This can happen in some internal tests that do `* {animation: none}`.\n        const exitFallbackTimer = setTimeout(() => {\n            this._cleanupDetach?.();\n            this._detachOverlay();\n        }, 200);\n        panel.classList.add('mat-select-panel-exit');\n    }\n    /** Detaches the current overlay directive. */\n    _detachOverlay() {\n        this._overlayDir.detachOverlay();\n        // Some of the overlay detachment logic depends on change detection.\n        // Mark for check to ensure that things get picked up in a timely manner.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Refreshes the error state of the select. */\n    updateErrorState() {\n        this._errorStateTracker.updateErrorState();\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /** Handles keyboard events coming from the overlay. */\n    _handleOverlayKeydown(event) {\n        // TODO(crisbeto): prior to #30363 this was being handled inside the overlay directive, but we\n        // need control over the animation timing so we do it manually. We should remove the `keydown`\n        // listener from `.mat-mdc-select-panel` and handle all the events here. That may cause\n        // further test breakages so it's left for a follow-up.\n        if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n            event.preventDefault();\n            this.close();\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        this._keyManager?.cancelTypeahead();\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this.options.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectOptionByValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectOptionByValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return ((option.value != null || this.canSelectNullableOptions) &&\n                    this._compareWith(option.value, value));\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n            return true;\n        }\n        return false;\n    }\n    // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n    // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n    // recommendation.\n    //\n    // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n    // makes a few exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    //\n    // The user can focus disabled options using the keyboard, but the user cannot click disabled\n    // options.\n    _skipPredicate = (option) => {\n        if (this.panelOpen) {\n            // Support keyboard focusing disabled options in an ARIA listbox.\n            return false;\n        }\n        // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n        // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n        // closed.\n        return option.disabled;\n    };\n    /** Gets how wide the overlay panel should be. */\n    _getOverlayWidth(preferredOrigin) {\n        if (this.panelWidth === 'auto') {\n            const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin\n                ? preferredOrigin.elementRef\n                : preferredOrigin || this._elementRef;\n            return refToMeasure.nativeElement.getBoundingClientRect().width;\n        }\n        return this.panelWidth === null ? '' : this.panelWidth;\n    }\n    /** Syncs the parent state with the individual options. */\n    _syncParentProperties() {\n        if (this.options) {\n            for (const option of this.options) {\n                option._changeDetectorRef.markForCheck();\n            }\n        }\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this.typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withPageUpDown()\n            .withAllowedModifierKeys(['shiftKey'])\n            .skipPredicate(this._skipPredicate);\n        this._keyManager.tabOut.subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n            // be the result of an expression changing. We have to use `detectChanges` in order\n            // to avoid \"changed after checked\" errors (see #14793).\n            this._changeDetectorRef.detectChanges();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (!this.canSelectNullableOptions && option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first *enabled* option.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n                // because it activates the first option that passes the skip predicate, rather than the\n                // first *enabled* option.\n                let firstEnabledOptionIndex = -1;\n                for (let index = 0; index < this.options.length; index++) {\n                    const option = this.options.get(index);\n                    if (!option.disabled) {\n                        firstEnabledOptionIndex = index;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(firstEnabledOptionIndex);\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        return !this._panelOpen && !this.disabled && this.options?.length > 0 && !!this._overlayDir;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId() || null;\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        let value = this._parentFormField?.getLabelId() || '';\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        // The value should not be used for the trigger's aria-labelledby,\n        // but this currently \"breaks\" accessibility tests since they complain\n        // there is no aria-labelledby. This is because they are not setting an\n        // appropriate label on the form field or select.\n        // TODO: remove this conditional after fixing clients by ensuring their\n        // selects have a label applied.\n        if (!value) {\n            value = this._valueId;\n        }\n        return value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get describedByIds() {\n        const element = this._elementRef.nativeElement;\n        const existingDescribedBy = element.getAttribute('aria-describedby');\n        return existingDescribedBy?.split(' ') || [];\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        // Since the panel doesn't overlap the trigger, we\n        // want the label to only float when there's a value.\n        return this.panelOpen || !this.empty || (this.focused && !!this.placeholder);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSelect, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatSelect, isStandalone: true, selector: \"mat-select\", inputs: { userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], panelClass: \"panelClass\", disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))], hideSingleSelectionIndicator: [\"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute], placeholder: \"placeholder\", required: [\"required\", \"required\", booleanAttribute], multiple: [\"multiple\", \"multiple\", booleanAttribute], disableOptionCentering: [\"disableOptionCentering\", \"disableOptionCentering\", booleanAttribute], compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: [\"typeaheadDebounceInterval\", \"typeaheadDebounceInterval\", numberAttribute], sortComparator: \"sortComparator\", id: \"id\", panelWidth: \"panelWidth\", canSelectNullableOptions: [\"canSelectNullableOptions\", \"canSelectNullableOptions\", booleanAttribute] }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, host: { attributes: { \"role\": \"combobox\", \"aria-haspopup\": \"listbox\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"disabled ? -1 : tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-mdc-select-disabled\": \"disabled\", \"class.mat-mdc-select-invalid\": \"errorState\", \"class.mat-mdc-select-required\": \"required\", \"class.mat-mdc-select-empty\": \"empty\", \"class.mat-mdc-select-multiple\": \"multiple\" }, classAttribute: \"mat-mdc-select\" }, providers: [\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n        ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], exportAs: [\"matSelect\"], usesOnChanges: true, ngImport: i0, template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"open()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n\\n  <div class=\\\"mat-mdc-select-value\\\" [attr.id]=\\\"_valueId\\\">\\n    @if (empty) {\\n      <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\">{{placeholder}}</span>\\n    } @else {\\n      <span class=\\\"mat-mdc-select-value-text\\\">\\n        @if (customTrigger) {\\n          <ng-content select=\\\"mat-select-trigger\\\"></ng-content>\\n        } @else {\\n          <span class=\\\"mat-mdc-select-min-line\\\">{{triggerValue}}</span>\\n        }\\n      </span>\\n    }\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayDisableClose]=\\\"true\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  [cdkConnectedOverlayFlexibleDimensions]=\\\"true\\\"\\n  (detach)=\\\"close()\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (overlayKeydown)=\\\"_handleOverlayKeydown($event)\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [class.mat-select-panel-animations-enabled]=\\\"!_animationsDisabled\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\"@keyframes _mat-select-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}@keyframes _mat-select-exit{from{opacity:1}to{opacity:0}}.mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-sys-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-sys-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-disabled .mat-mdc-select-placeholder{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-sys-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}@media(forced-colors: active){.mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .mat-mdc-select-arrow svg{fill:GrayText}}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:relative;background-color:var(--mat-select-panel-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-select-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-select-panel-animations-enabled{animation:_mat-select-enter 120ms cubic-bezier(0, 0, 0.2, 1)}.mat-select-panel-animations-enabled.mat-select-panel-exit{animation:_mat-select-exit 100ms linear}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field:not(.mat-form-field-animations-enabled) .mat-mdc-select-placeholder,._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform, translateY(-8px))}\\n\"], dependencies: [{ kind: \"directive\", type: CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"directive\", type: CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\", \"cdkConnectedOverlayDisposeOnNavigation\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-haspopup': 'listbox',\n                        'class': 'mat-mdc-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-mdc-select-disabled]': 'disabled',\n                        '[class.mat-mdc-select-invalid]': 'errorState',\n                        '[class.mat-mdc-select-required]': 'required',\n                        '[class.mat-mdc-select-empty]': 'empty',\n                        '[class.mat-mdc-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], imports: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass], template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"open()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n\\n  <div class=\\\"mat-mdc-select-value\\\" [attr.id]=\\\"_valueId\\\">\\n    @if (empty) {\\n      <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\">{{placeholder}}</span>\\n    } @else {\\n      <span class=\\\"mat-mdc-select-value-text\\\">\\n        @if (customTrigger) {\\n          <ng-content select=\\\"mat-select-trigger\\\"></ng-content>\\n        } @else {\\n          <span class=\\\"mat-mdc-select-min-line\\\">{{triggerValue}}</span>\\n        }\\n      </span>\\n    }\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayDisableClose]=\\\"true\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  [cdkConnectedOverlayFlexibleDimensions]=\\\"true\\\"\\n  (detach)=\\\"close()\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (overlayKeydown)=\\\"_handleOverlayKeydown($event)\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [class.mat-select-panel-animations-enabled]=\\\"!_animationsDisabled\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\"@keyframes _mat-select-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}@keyframes _mat-select-exit{from{opacity:1}to{opacity:0}}.mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-sys-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-sys-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-disabled .mat-mdc-select-placeholder{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-sys-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}@media(forced-colors: active){.mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .mat-mdc-select-arrow svg{fill:GrayText}}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:relative;background-color:var(--mat-select-panel-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-select-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-select-panel-animations-enabled{animation:_mat-select-enter 120ms cubic-bezier(0, 0, 0.2, 1)}.mat-select-panel-animations-enabled.mat-select-panel-exit{animation:_mat-select-exit 100ms linear}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field:not(.mat-form-field-animations-enabled) .mat-mdc-select-placeholder,._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform, translateY(-8px))}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }], hideSingleSelectionIndicator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], multiple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableOptionCentering: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], panelWidth: [{\n                type: Input\n            }], canSelectNullableOptions: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatSelectTrigger, isStandalone: true, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                }]\n        }] });\n\nclass MatSelectModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSelectModule, imports: [OverlayModule, MatOptionModule, MatCommonModule, MatSelect, MatSelectTrigger], exports: [CdkScrollableModule,\n            MatFormFieldModule,\n            MatSelect,\n            MatSelectTrigger,\n            MatOptionModule,\n            MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule,\n            MatFormFieldModule,\n            MatOptionModule,\n            MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatOptionModule, MatCommonModule, MatSelect, MatSelectTrigger],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\nexport { MatSelectModule as M, MAT_SELECT_SCROLL_STRATEGY as a, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY as b, MAT_SELECT_CONFIG as c, MAT_SELECT_SCROLL_STRATEGY_PROVIDER as d, MAT_SELECT_TRIGGER as e, MatSelectChange as f, MatSelect as g, MatSelectTrigger as h };\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { InjectionToken, inject, ANIMATION_MODULE_TYPE } from '@angular/core';\n\n/** Injection token used to configure the animations in Angular Material. */\nconst MATERIAL_ANIMATIONS = new InjectionToken('MATERIAL_ANIMATIONS');\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationCurves {\n    static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationDurations {\n    static COMPLEX = '375ms';\n    static ENTERING = '225ms';\n    static EXITING = '195ms';\n}\n/**\n * Returns whether animations have been disabled by DI. Must be called in a DI context.\n * @docs-private\n */\nfunction _animationsDisabled() {\n    if (inject(MATERIAL_ANIMATIONS, { optional: true })?.animationsDisabled ||\n        inject(ANIMATION_MODULE_TYPE, { optional: true }) === 'NoopAnimations') {\n        return true;\n    }\n    const mediaMatcher = inject(MediaMatcher);\n    return mediaMatcher.matchMedia('(prefers-reduced-motion)').matches;\n}\n\nexport { AnimationCurves as A, MATERIAL_ANIMATIONS as M, _animationsDisabled as _, AnimationDurations as a };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Component used to load structural styles for focus indicators.\n * @docs-private\n */\nclass _StructuralStylesLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _StructuralStylesLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _StructuralStylesLoader, isStandalone: true, selector: \"structural-styles\", ngImport: i0, template: '', isInline: true, styles: [\".mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border-width:var(--mat-focus-indicator-border-width, 3px);border-style:var(--mat-focus-indicator-border-style, solid);border-color:var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\\\"\\\"}@media(forced-colors: active){html{--mat-focus-indicator-display: block}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _StructuralStylesLoader, decorators: [{\n            type: Component,\n            args: [{ selector: 'structural-styles', encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border-width:var(--mat-focus-indicator-border-width, 3px);border-style:var(--mat-focus-indicator-border-style, solid);border-color:var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\\\"\\\"}@media(forced-colors: active){html{--mat-focus-indicator-display: block}}\\n\"] }]\n        }] });\n\nexport { _StructuralStylesLoader as _ };\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { NgTemplateOutlet } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Input, ElementRef, NgZone, Renderer2, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ChangeDetectorRef, viewChild, computed, contentChild, signal, afterRenderEffect, ContentChild, ContentChildren } from '@angular/core';\nimport { Subscription, Subject, merge } from 'rxjs';\nimport { startWith, map, pairwise, filter, takeUntil } from 'rxjs/operators';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\n\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatLabel, isStandalone: true, selector: \"mat-label\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-label',\n                }]\n        }] });\n\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form-field. */\nclass MatError {\n    id = inject(_IdGenerator).getId('mat-mdc-error-');\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatError, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatError, isStandalone: true, selector: \"mat-error, [matError]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-mdc-form-field-error mat-mdc-form-field-bottom-align\" }, providers: [{ provide: MAT_ERROR, useExisting: MatError }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatError, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-error, [matError]',\n                    host: {\n                        'class': 'mat-mdc-form-field-error mat-mdc-form-field-bottom-align',\n                        '[id]': 'id',\n                    },\n                    providers: [{ provide: MAT_ERROR, useExisting: MatError }],\n                }]\n        }], ctorParameters: () => [], propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    /** Whether to align the hint label at the start or end of the line. */\n    align = 'start';\n    /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n    id = inject(_IdGenerator).getId('mat-mdc-hint-');\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatHint, isStandalone: true, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-mdc-form-field-hint-end\": \"align === \\\"end\\\"\", \"id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-mdc-form-field-hint mat-mdc-form-field-bottom-align\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatHint, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-mdc-form-field-hint mat-mdc-form-field-bottom-align',\n                        '[class.mat-mdc-form-field-hint-end]': 'align === \"end\"',\n                        '[id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n    set _isTextSelector(value) {\n        this._isText = true;\n    }\n    _isText = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatPrefix, isStandalone: true, selector: \"[matPrefix], [matIconPrefix], [matTextPrefix]\", inputs: { _isTextSelector: [\"matTextPrefix\", \"_isTextSelector\"] }, providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPrefix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matPrefix], [matIconPrefix], [matTextPrefix]',\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }],\n                }]\n        }], propDecorators: { _isTextSelector: [{\n                type: Input,\n                args: ['matTextPrefix']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n    set _isTextSelector(value) {\n        this._isText = true;\n    }\n    _isText = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatSuffix, isStandalone: true, selector: \"[matSuffix], [matIconSuffix], [matTextSuffix]\", inputs: { _isTextSelector: [\"matTextSuffix\", \"_isTextSelector\"] }, providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSuffix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSuffix], [matIconSuffix], [matTextSuffix]',\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }],\n                }]\n        }], propDecorators: { _isTextSelector: [{\n                type: Input,\n                args: ['matTextSuffix']\n            }] } });\n\n/** An injion token for the parent form-field. */\nconst FLOATING_LABEL_PARENT = new InjectionToken('FloatingLabelParent');\n/**\n * Internal directive that maintains a MDC floating label. This directive does not\n * use the `MDCFloatingLabelFoundation` class, as it is not worth the size cost of\n * including it just to measure the label width and toggle some classes.\n *\n * The use of a directive allows us to conditionally render a floating label in the\n * template without having to manually manage instantiation and destruction of the\n * floating label component based on.\n *\n * The component is responsible for setting up the floating label styles, measuring label\n * width for the outline notch, and providing inputs that can be used to toggle the\n * label's floating or required state.\n */\nclass MatFormFieldFloatingLabel {\n    _elementRef = inject(ElementRef);\n    /** Whether the label is floating. */\n    get floating() {\n        return this._floating;\n    }\n    set floating(value) {\n        this._floating = value;\n        if (this.monitorResize) {\n            this._handleResize();\n        }\n    }\n    _floating = false;\n    /** Whether to monitor for resize events on the floating label. */\n    get monitorResize() {\n        return this._monitorResize;\n    }\n    set monitorResize(value) {\n        this._monitorResize = value;\n        if (this._monitorResize) {\n            this._subscribeToResize();\n        }\n        else {\n            this._resizeSubscription.unsubscribe();\n        }\n    }\n    _monitorResize = false;\n    /** The shared ResizeObserver. */\n    _resizeObserver = inject(SharedResizeObserver);\n    /** The Angular zone. */\n    _ngZone = inject(NgZone);\n    /** The parent form-field. */\n    _parent = inject(FLOATING_LABEL_PARENT);\n    /** The current resize event subscription. */\n    _resizeSubscription = new Subscription();\n    constructor() { }\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Gets the width of the label. Used for the outline notch. */\n    getWidth() {\n        return estimateScrollWidth(this._elementRef.nativeElement);\n    }\n    /** Gets the HTML element for the floating label. */\n    get element() {\n        return this._elementRef.nativeElement;\n    }\n    /** Handles resize events from the ResizeObserver. */\n    _handleResize() {\n        // In the case where the label grows in size, the following sequence of events occurs:\n        // 1. The label grows by 1px triggering the ResizeObserver\n        // 2. The notch is expanded to accommodate the entire label\n        // 3. The label expands to its full width, triggering the ResizeObserver again\n        //\n        // This is expected, but If we allow this to all happen within the same macro task it causes an\n        // error: `ResizeObserver loop limit exceeded`. Therefore we push the notch resize out until\n        // the next macro task.\n        setTimeout(() => this._parent._handleLabelResized());\n    }\n    /** Subscribes to resize events. */\n    _subscribeToResize() {\n        this._resizeSubscription.unsubscribe();\n        this._ngZone.runOutsideAngular(() => {\n            this._resizeSubscription = this._resizeObserver\n                .observe(this._elementRef.nativeElement, { box: 'border-box' })\n                .subscribe(() => this._handleResize());\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldFloatingLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldFloatingLabel, isStandalone: true, selector: \"label[matFormFieldFloatingLabel]\", inputs: { floating: \"floating\", monitorResize: \"monitorResize\" }, host: { properties: { \"class.mdc-floating-label--float-above\": \"floating\" }, classAttribute: \"mdc-floating-label mat-mdc-floating-label\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldFloatingLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'label[matFormFieldFloatingLabel]',\n                    host: {\n                        'class': 'mdc-floating-label mat-mdc-floating-label',\n                        '[class.mdc-floating-label--float-above]': 'floating',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { floating: [{\n                type: Input\n            }], monitorResize: [{\n                type: Input\n            }] } });\n/**\n * Estimates the scroll width of an element.\n * via https://github.com/material-components/material-components-web/blob/c0a11ef0d000a098fd0c372be8f12d6a99302855/packages/mdc-dom/ponyfill.ts\n */\nfunction estimateScrollWidth(element) {\n    // Check the offsetParent. If the element inherits display: none from any\n    // parent, the offsetParent property will be null (see\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n    // This check ensures we only clone the node when necessary.\n    const htmlEl = element;\n    if (htmlEl.offsetParent !== null) {\n        return htmlEl.scrollWidth;\n    }\n    const clone = htmlEl.cloneNode(true);\n    clone.style.setProperty('position', 'absolute');\n    clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n    document.documentElement.appendChild(clone);\n    const scrollWidth = clone.scrollWidth;\n    clone.remove();\n    return scrollWidth;\n}\n\n/** Class added when the line ripple is active. */\nconst ACTIVATE_CLASS = 'mdc-line-ripple--active';\n/** Class added when the line ripple is being deactivated. */\nconst DEACTIVATING_CLASS = 'mdc-line-ripple--deactivating';\n/**\n * Internal directive that creates an instance of the MDC line-ripple component. Using a\n * directive allows us to conditionally render a line-ripple in the template without having\n * to manually create and destroy the `MDCLineRipple` component whenever the condition changes.\n *\n * The directive sets up the styles for the line-ripple and provides an API for activating\n * and deactivating the line-ripple.\n */\nclass MatFormFieldLineRipple {\n    _elementRef = inject(ElementRef);\n    _cleanupTransitionEnd;\n    constructor() {\n        const ngZone = inject(NgZone);\n        const renderer = inject(Renderer2);\n        ngZone.runOutsideAngular(() => {\n            this._cleanupTransitionEnd = renderer.listen(this._elementRef.nativeElement, 'transitionend', this._handleTransitionEnd);\n        });\n    }\n    activate() {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(DEACTIVATING_CLASS);\n        classList.add(ACTIVATE_CLASS);\n    }\n    deactivate() {\n        this._elementRef.nativeElement.classList.add(DEACTIVATING_CLASS);\n    }\n    _handleTransitionEnd = (event) => {\n        const classList = this._elementRef.nativeElement.classList;\n        const isDeactivating = classList.contains(DEACTIVATING_CLASS);\n        if (event.propertyName === 'opacity' && isDeactivating) {\n            classList.remove(ACTIVATE_CLASS, DEACTIVATING_CLASS);\n        }\n    };\n    ngOnDestroy() {\n        this._cleanupTransitionEnd();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldLineRipple, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldLineRipple, isStandalone: true, selector: \"div[matFormFieldLineRipple]\", host: { classAttribute: \"mdc-line-ripple\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldLineRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'div[matFormFieldLineRipple]',\n                    host: {\n                        'class': 'mdc-line-ripple',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Internal component that creates an instance of the MDC notched-outline component.\n *\n * The component sets up the HTML structure and styles for the notched-outline. It provides\n * inputs to toggle the notch state and width.\n */\nclass MatFormFieldNotchedOutline {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    /** Whether the notch should be opened. */\n    open = false;\n    _notch;\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        const label = element.querySelector('.mdc-floating-label');\n        if (label) {\n            element.classList.add('mdc-notched-outline--upgraded');\n            if (typeof requestAnimationFrame === 'function') {\n                label.style.transitionDuration = '0s';\n                this._ngZone.runOutsideAngular(() => {\n                    requestAnimationFrame(() => (label.style.transitionDuration = ''));\n                });\n            }\n        }\n        else {\n            element.classList.add('mdc-notched-outline--no-label');\n        }\n    }\n    _setNotchWidth(labelWidth) {\n        const notch = this._notch.nativeElement;\n        if (!this.open || !labelWidth) {\n            notch.style.width = '';\n        }\n        else {\n            const NOTCH_ELEMENT_PADDING = 8;\n            const NOTCH_ELEMENT_BORDER = 1;\n            notch.style.width = `calc(${labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + ${NOTCH_ELEMENT_PADDING + NOTCH_ELEMENT_BORDER}px)`;\n        }\n    }\n    _setMaxWidth(prefixAndSuffixWidth) {\n        // Set this only on the notch to avoid style recalculations in other parts of the form field.\n        this._notch.nativeElement.style.setProperty('--mat-form-field-notch-max-width', `calc(100% - ${prefixAndSuffixWidth}px)`);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldNotchedOutline, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldNotchedOutline, isStandalone: true, selector: \"div[matFormFieldNotchedOutline]\", inputs: { open: [\"matFormFieldNotchedOutlineOpen\", \"open\"] }, host: { properties: { \"class.mdc-notched-outline--notched\": \"open\" }, classAttribute: \"mdc-notched-outline\" }, viewQueries: [{ propertyName: \"_notch\", first: true, predicate: [\"notch\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__leading\\\"></div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__notch\\\" #notch>\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__trailing\\\"></div>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldNotchedOutline, decorators: [{\n            type: Component,\n            args: [{ selector: 'div[matFormFieldNotchedOutline]', host: {\n                        'class': 'mdc-notched-outline',\n                        // Besides updating the notch state through the MDC component, we toggle this class through\n                        // a host binding in order to ensure that the notched-outline renders correctly on the server.\n                        '[class.mdc-notched-outline--notched]': 'open',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__leading\\\"></div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__notch\\\" #notch>\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__trailing\\\"></div>\\n\" }]\n        }], propDecorators: { open: [{\n                type: Input,\n                args: ['matFormFieldNotchedOutlineOpen']\n            }], _notch: [{\n                type: ViewChild,\n                args: ['notch']\n            }] } });\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n    /** The value of the control. */\n    value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     */\n    stateChanges;\n    /** The element ID for this control. */\n    id;\n    /** The placeholder for this control. */\n    placeholder;\n    /** Gets the AbstractControlDirective for this control. */\n    ngControl;\n    /** Whether the control is focused. */\n    focused;\n    /** Whether the control is empty. */\n    empty;\n    /** Whether the `MatFormField` label should try to float. */\n    shouldLabelFloat;\n    /** Whether the control is required. */\n    required;\n    /** Whether the control is disabled. */\n    disabled;\n    /** Whether the control is in an error state. */\n    errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     */\n    controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     */\n    autofilled;\n    /**\n     * Value of `aria-describedby` that should be merged with the described-by ids\n     * which are set by the form-field.\n     */\n    userAriaDescribedBy;\n    /**\n     * Whether to automatically assign the ID of the form field as the `for` attribute\n     * on the `<label>` inside the form field. Set this to true to prevent the form\n     * field from associating the label with non-native elements.\n     */\n    disableAutomaticLabeling;\n    /** Gets the list of element IDs that currently describe this control. */\n    describedByIds;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldControl, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldControl, isStandalone: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldControl, decorators: [{\n            type: Directive\n        }] });\n\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/** Default appearance used by the form field. */\nconst DEFAULT_APPEARANCE = 'fill';\n/**\n * Whether the label for form fields should by default float `always`,\n * `never`, or `auto`.\n */\nconst DEFAULT_FLOAT_LABEL = 'auto';\n/** Default way that the subscript element height is set. */\nconst DEFAULT_SUBSCRIPT_SIZING = 'fixed';\n/**\n * Default transform for docked floating labels in a MDC text-field. This value has been\n * extracted from the MDC text-field styles because we programmatically modify the docked\n * label transform, but do not want to accidentally discard the default label transform.\n */\nconst FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM = `translateY(-50%)`;\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _dir = inject(Directionality);\n    _platform = inject(Platform);\n    _idGenerator = inject(_IdGenerator);\n    _ngZone = inject(NgZone);\n    _defaults = inject(MAT_FORM_FIELD_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    _textField;\n    _iconPrefixContainer;\n    _textPrefixContainer;\n    _iconSuffixContainer;\n    _textSuffixContainer;\n    _floatingLabel;\n    _notchedOutline;\n    _lineRipple;\n    _iconPrefixContainerSignal = viewChild('iconPrefixContainer');\n    _textPrefixContainerSignal = viewChild('textPrefixContainer');\n    _iconSuffixContainerSignal = viewChild('iconSuffixContainer');\n    _textSuffixContainerSignal = viewChild('textSuffixContainer');\n    _prefixSuffixContainers = computed(() => {\n        return [\n            this._iconPrefixContainerSignal(),\n            this._textPrefixContainerSignal(),\n            this._iconSuffixContainerSignal(),\n            this._textSuffixContainerSignal(),\n        ]\n            .map(container => container?.nativeElement)\n            .filter(e => e !== undefined);\n    });\n    _formFieldControl;\n    _prefixChildren;\n    _suffixChildren;\n    _errorChildren;\n    _hintChildren;\n    _labelChild = contentChild(MatLabel);\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n        return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    _hideRequiredMarker = false;\n    /**\n     * Theme color of the form field. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/form-field/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color = 'primary';\n    /** Whether the label should always float or float as the user types. */\n    get floatLabel() {\n        return this._floatLabel || this._defaults?.floatLabel || DEFAULT_FLOAT_LABEL;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value;\n            // For backwards compatibility. Custom form field controls or directives might set\n            // the \"floatLabel\" input and expect the form field view to be updated automatically.\n            // e.g. autocomplete trigger. Ideally we'd get rid of this and the consumers would just\n            // emit the \"stateChanges\" observable. TODO(devversion): consider removing.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _floatLabel;\n    /** The form field appearance style. */\n    get appearance() {\n        return this._appearanceSignal();\n    }\n    set appearance(value) {\n        const newAppearance = value || this._defaults?.appearance || DEFAULT_APPEARANCE;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (newAppearance !== 'fill' && newAppearance !== 'outline') {\n                throw new Error(`MatFormField: Invalid appearance \"${newAppearance}\", valid values are \"fill\" or \"outline\".`);\n            }\n        }\n        this._appearanceSignal.set(newAppearance);\n    }\n    _appearanceSignal = signal(DEFAULT_APPEARANCE);\n    /**\n     * Whether the form field should reserve space for one line of hint/error text (default)\n     * or to have the spacing grow from 0px as needed based on the size of the hint/error content.\n     * Note that when using dynamic sizing, layout shifts will occur when hint/error text changes.\n     */\n    get subscriptSizing() {\n        return this._subscriptSizing || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    set subscriptSizing(value) {\n        this._subscriptSizing = value || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    _subscriptSizing = null;\n    /** Text for the form field hint. */\n    get hintLabel() {\n        return this._hintLabel;\n    }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    _hintLabel = '';\n    _hasIconPrefix = false;\n    _hasTextPrefix = false;\n    _hasIconSuffix = false;\n    _hasTextSuffix = false;\n    // Unique id for the internal form field label.\n    _labelId = this._idGenerator.getId('mat-mdc-form-field-label-');\n    // Unique id for the hint label.\n    _hintLabelId = this._idGenerator.getId('mat-mdc-hint-');\n    // Ids obtained from the error and hint fields\n    _describedByIds;\n    /** Gets the current form field control */\n    get _control() {\n        return this._explicitFormFieldControl || this._formFieldControl;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    _destroyed = new Subject();\n    _isFocused = null;\n    _explicitFormFieldControl;\n    _previousControl = null;\n    _previousControlValidatorFn = null;\n    _stateChanges;\n    _valueChanges;\n    _describedByChanges;\n    _animationsDisabled = _animationsDisabled();\n    constructor() {\n        const defaults = this._defaults;\n        if (defaults) {\n            if (defaults.appearance) {\n                this.appearance = defaults.appearance;\n            }\n            this._hideRequiredMarker = Boolean(defaults?.hideRequiredMarker);\n            if (defaults.color) {\n                this.color = defaults.color;\n            }\n        }\n        this._syncOutlineLabelOffset();\n    }\n    ngAfterViewInit() {\n        // Initial focus state sync. This happens rarely, but we want to account for\n        // it in case the form field control has \"focused\" set to true on init.\n        this._updateFocusState();\n        if (!this._animationsDisabled) {\n            this._ngZone.runOutsideAngular(() => {\n                // Enable animations after a certain amount of time so that they don't run on init.\n                setTimeout(() => {\n                    this._elementRef.nativeElement.classList.add('mat-form-field-animations-enabled');\n                }, 300);\n            });\n        }\n        // Because the above changes a value used in the template after it was checked, we need\n        // to trigger CD or the change might not be reflected if there is no other CD scheduled.\n        this._changeDetectorRef.detectChanges();\n    }\n    ngAfterContentInit() {\n        this._assertFormFieldControl();\n        this._initializeSubscript();\n        this._initializePrefixAndSuffix();\n    }\n    ngAfterContentChecked() {\n        this._assertFormFieldControl();\n        // if form field was being used with an input in first place and then replaced by other\n        // component such as select.\n        if (this._control !== this._previousControl) {\n            this._initializeControl(this._previousControl);\n            // keep a reference for last validator we had.\n            if (this._control.ngControl && this._control.ngControl.control) {\n                this._previousControlValidatorFn = this._control.ngControl.control.validator;\n            }\n            this._previousControl = this._control;\n        }\n        // make sure the the control has been initialized.\n        if (this._control.ngControl && this._control.ngControl.control) {\n            // get the validators for current control.\n            const validatorFn = this._control.ngControl.control.validator;\n            // if our current validatorFn isn't equal to it might be we are CD behind, marking the\n            // component will allow us to catch up.\n            if (validatorFn !== this._previousControlValidatorFn) {\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._outlineLabelOffsetResizeObserver?.disconnect();\n        this._stateChanges?.unsubscribe();\n        this._valueChanges?.unsubscribe();\n        this._describedByChanges?.unsubscribe();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId = computed(() => (this._hasFloatingLabel() ? this._labelId : null));\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form field\n     * should be positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._textField || this._elementRef;\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        // This is for backwards compatibility only. Consumers of the form field might use\n        // this method. e.g. the autocomplete trigger. This method has been added to the non-MDC\n        // form field because setting \"floatLabel\" to \"always\" caused the label to float without\n        // animation. This is different in MDC where the label always animates, so this method\n        // is no longer necessary. There doesn't seem any benefit in adding logic to allow changing\n        // the floating label state without animations. The non-MDC implementation was inconsistent\n        // because it always animates if \"floatLabel\" is set away from \"always\".\n        // TODO(devversion): consider removing this method when releasing the MDC form field.\n        if (this._hasFloatingLabel()) {\n            this.floatLabel = 'always';\n        }\n    }\n    /** Initializes the registered form field control. */\n    _initializeControl(previousControl) {\n        const control = this._control;\n        const classPrefix = 'mat-mdc-form-field-type-';\n        if (previousControl) {\n            this._elementRef.nativeElement.classList.remove(classPrefix + previousControl.controlType);\n        }\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(classPrefix + control.controlType);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._stateChanges?.unsubscribe();\n        this._stateChanges = control.stateChanges.subscribe(() => {\n            this._updateFocusState();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Updating the `aria-describedby` touches the DOM. Only do it if it actually needs to change.\n        this._describedByChanges?.unsubscribe();\n        this._describedByChanges = control.stateChanges\n            .pipe(startWith([undefined, undefined]), map(() => [control.errorState, control.userAriaDescribedBy]), pairwise(), filter(([[prevErrorState, prevDescribedBy], [currentErrorState, currentDescribedBy]]) => {\n            return prevErrorState !== currentErrorState || prevDescribedBy !== currentDescribedBy;\n        }))\n            .subscribe(() => this._syncDescribedByIds());\n        this._valueChanges?.unsubscribe();\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            this._valueChanges = control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n    }\n    _checkPrefixAndSuffixTypes() {\n        this._hasIconPrefix = !!this._prefixChildren.find(p => !p._isText);\n        this._hasTextPrefix = !!this._prefixChildren.find(p => p._isText);\n        this._hasIconSuffix = !!this._suffixChildren.find(s => !s._isText);\n        this._hasTextSuffix = !!this._suffixChildren.find(s => s._isText);\n    }\n    /** Initializes the prefix and suffix containers. */\n    _initializePrefixAndSuffix() {\n        this._checkPrefixAndSuffixTypes();\n        // Mark the form field as dirty whenever the prefix or suffix children change. This\n        // is necessary because we conditionally display the prefix/suffix containers based\n        // on whether there is projected content.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._checkPrefixAndSuffixTypes();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /**\n     * Initializes the subscript by validating hints and synchronizing \"aria-describedby\" ids\n     * with the custom form field control. Also subscribes to hint and error changes in order\n     * to be able to validate and synchronize ids on change.\n     */\n    _initializeSubscript() {\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Initial mat-hint validation and subscript describedByIds sync.\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /** Throws an error if the form field's control is missing. */\n    _assertFormFieldControl() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    _updateFocusState() {\n        // Usually the MDC foundation would call \"activateFocus\" and \"deactivateFocus\" whenever\n        // certain DOM events are emitted. This is not possible in our implementation of the\n        // form field because we support abstract form field controls which are not necessarily\n        // of type input, nor do we have a reference to a native form field control element. Instead\n        // we handle the focus by checking if the abstract form field control focused state changes.\n        if (this._control.focused && !this._isFocused) {\n            this._isFocused = true;\n            this._lineRipple?.activate();\n        }\n        else if (!this._control.focused && (this._isFocused || this._isFocused === null)) {\n            this._isFocused = false;\n            this._lineRipple?.deactivate();\n        }\n        this._textField?.nativeElement.classList.toggle('mdc-text-field--focused', this._control.focused);\n    }\n    _outlineLabelOffsetResizeObserver = null;\n    /**\n     * The floating label in the docked state needs to account for prefixes. The horizontal offset\n     * is calculated whenever the appearance changes to `outline`, the prefixes change, or when the\n     * form field is added to the DOM. This method sets up all subscriptions which are needed to\n     * trigger the label offset update.\n     */\n    _syncOutlineLabelOffset() {\n        afterRenderEffect({\n            earlyRead: () => {\n                if (this._appearanceSignal() !== 'outline') {\n                    this._outlineLabelOffsetResizeObserver?.disconnect();\n                    return null;\n                }\n                // Setup a resize observer to monitor changes to the size of the prefix / suffix and\n                // readjust the label offset.\n                if (globalThis.ResizeObserver) {\n                    this._outlineLabelOffsetResizeObserver ||= new globalThis.ResizeObserver(() => {\n                        this._writeOutlinedLabelStyles(this._getOutlinedLabelOffset());\n                    });\n                    for (const el of this._prefixSuffixContainers()) {\n                        this._outlineLabelOffsetResizeObserver.observe(el, { box: 'border-box' });\n                    }\n                }\n                return this._getOutlinedLabelOffset();\n            },\n            write: labelStyles => this._writeOutlinedLabelStyles(labelStyles()),\n        });\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always';\n    }\n    _hasOutline() {\n        return this.appearance === 'outline';\n    }\n    /**\n     * Whether the label should display in the infix. Labels in the outline appearance are\n     * displayed as part of the notched-outline and are horizontally offset to account for\n     * form field prefix content. This won't work in server side rendering since we cannot\n     * measure the width of the prefix container. To make the docked label appear as if the\n     * right offset has been calculated, we forcibly render the label inside the infix. Since\n     * the label is part of the infix, the label cannot overflow the prefix content.\n     */\n    _forceDisplayInfixLabel() {\n        return !this._platform.isBrowser && this._prefixChildren.length && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel = computed(() => !!this._labelChild());\n    _shouldLabelFloat() {\n        if (!this._hasFloatingLabel()) {\n            return false;\n        }\n        return this._control.shouldLabelFloat || this._shouldAlwaysFloat();\n    }\n    /**\n     * Determines whether a class from the AbstractControlDirective\n     * should be forwarded to the host element.\n     */\n    _shouldForward(prop) {\n        const control = this._control ? this._control.ngControl : null;\n        return control && control[prop];\n    }\n    /** Gets the type of subscript message to render (error or hint). */\n    _getSubscriptMessageType() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\n            ? 'error'\n            : 'hint';\n    }\n    /** Handle label resize events. */\n    _handleLabelResized() {\n        this._refreshOutlineNotchWidth();\n    }\n    /** Refreshes the width of the outline-notch, if present. */\n    _refreshOutlineNotchWidth() {\n        if (!this._hasOutline() || !this._floatingLabel || !this._shouldLabelFloat()) {\n            this._notchedOutline?._setNotchWidth(0);\n        }\n        else {\n            this._notchedOutline?._setNotchWidth(this._floatingLabel.getWidth());\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each \"mat-hint\" alignment specified. The hint\n     * label specified set through the input is being considered as \"start\" aligned.\n     *\n     * This method is a noop if Angular runs in production mode.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getSubscriptMessageType() === 'hint') {\n                const startHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'start')\n                    : null;\n                const endHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'end')\n                    : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            const existingDescribedBy = this._control.describedByIds;\n            let toAssign;\n            // In some cases there might be some `aria-describedby` IDs that were assigned directly,\n            // like by the `AriaDescriber` (see #30011). Attempt to preserve them by taking the previous\n            // attribute value and filtering out the IDs that came from the previous `setDescribedByIds`\n            // call. Note the `|| ids` here allows us to avoid duplicating IDs on the first render.\n            if (existingDescribedBy) {\n                const exclude = this._describedByIds || ids;\n                toAssign = ids.concat(existingDescribedBy.filter(id => id && !exclude.includes(id)));\n            }\n            else {\n                toAssign = ids;\n            }\n            this._control.setDescribedByIds(toAssign);\n            this._describedByIds = ids;\n        }\n    }\n    /**\n     * Calculates the horizontal offset of the label in the outline appearance. In the outline\n     * appearance, the notched-outline and label are not relative to the infix container because\n     * the outline intends to surround prefixes, suffixes and the infix. This means that the\n     * floating label by default overlaps prefixes in the docked state. To avoid this, we need to\n     * horizontally offset the label by the width of the prefix container. The MDC text-field does\n     * not need to do this because they use a fixed width for prefixes. Hence, they can simply\n     * incorporate the horizontal offset into their default text-field styles.\n     */\n    _getOutlinedLabelOffset() {\n        const dir = this._dir.valueSignal();\n        if (!this._hasOutline() || !this._floatingLabel) {\n            return null;\n        }\n        // If no prefix is displayed, reset the outline label offset from potential\n        // previous label offset updates.\n        if (!this._iconPrefixContainer && !this._textPrefixContainer) {\n            return ['', null];\n        }\n        // If the form field is not attached to the DOM yet (e.g. in a tab), we defer\n        // the label offset update until the zone stabilizes.\n        if (!this._isAttachedToDom()) {\n            return null;\n        }\n        const iconPrefixContainer = this._iconPrefixContainer?.nativeElement;\n        const textPrefixContainer = this._textPrefixContainer?.nativeElement;\n        const iconSuffixContainer = this._iconSuffixContainer?.nativeElement;\n        const textSuffixContainer = this._textSuffixContainer?.nativeElement;\n        const iconPrefixContainerWidth = iconPrefixContainer?.getBoundingClientRect().width ?? 0;\n        const textPrefixContainerWidth = textPrefixContainer?.getBoundingClientRect().width ?? 0;\n        const iconSuffixContainerWidth = iconSuffixContainer?.getBoundingClientRect().width ?? 0;\n        const textSuffixContainerWidth = textSuffixContainer?.getBoundingClientRect().width ?? 0;\n        // If the directionality is RTL, the x-axis transform needs to be inverted. This\n        // is because `transformX` does not change based on the page directionality.\n        const negate = dir === 'rtl' ? '-1' : '1';\n        const prefixWidth = `${iconPrefixContainerWidth + textPrefixContainerWidth}px`;\n        const labelOffset = `var(--mat-mdc-form-field-label-offset-x, 0px)`;\n        const labelHorizontalOffset = `calc(${negate} * (${prefixWidth} + ${labelOffset}))`;\n        // Update the translateX of the floating label to account for the prefix container,\n        // but allow the CSS to override this setting via a CSS variable when the label is\n        // floating.\n        const floatingLabelTransform = 'var(--mat-mdc-form-field-label-transform, ' +\n            `${FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM} translateX(${labelHorizontalOffset}))`;\n        // Prevent the label from overlapping the suffix when in resting position.\n        const notchedOutlineWidth = iconPrefixContainerWidth +\n            textPrefixContainerWidth +\n            iconSuffixContainerWidth +\n            textSuffixContainerWidth;\n        return [floatingLabelTransform, notchedOutlineWidth];\n    }\n    /** Writes the styles produced by `_getOutlineLabelOffset` synchronously to the DOM. */\n    _writeOutlinedLabelStyles(styles) {\n        if (styles !== null) {\n            const [floatingLabelTransform, notchedOutlineWidth] = styles;\n            if (this._floatingLabel) {\n                this._floatingLabel.element.style.transform = floatingLabelTransform;\n            }\n            if (notchedOutlineWidth !== null) {\n                this._notchedOutline?._setMaxWidth(notchedOutlineWidth);\n            }\n        }\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDom() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormField, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatFormField, isStandalone: true, selector: \"mat-form-field\", inputs: { hideRequiredMarker: \"hideRequiredMarker\", color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", subscriptSizing: \"subscriptSizing\", hintLabel: \"hintLabel\" }, host: { properties: { \"class.mat-mdc-form-field-label-always-float\": \"_shouldAlwaysFloat()\", \"class.mat-mdc-form-field-has-icon-prefix\": \"_hasIconPrefix\", \"class.mat-mdc-form-field-has-icon-suffix\": \"_hasIconSuffix\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-hide-placeholder\": \"_hasFloatingLabel() && !_shouldLabelFloat()\", \"class.mat-focused\": \"_control.focused\", \"class.mat-primary\": \"color !== \\\"accent\\\" && color !== \\\"warn\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\" }, classAttribute: \"mat-mdc-form-field\" }, providers: [\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n            { provide: FLOATING_LABEL_PARENT, useExisting: MatFormField },\n        ], queries: [{ propertyName: \"_labelChild\", first: true, predicate: MatLabel, descendants: true, isSignal: true }, { propertyName: \"_formFieldControl\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: MatHint, descendants: true }], viewQueries: [{ propertyName: \"_iconPrefixContainerSignal\", first: true, predicate: [\"iconPrefixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textPrefixContainerSignal\", first: true, predicate: [\"textPrefixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_iconSuffixContainerSignal\", first: true, predicate: [\"iconSuffixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textSuffixContainerSignal\", first: true, predicate: [\"textSuffixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textField\", first: true, predicate: [\"textField\"], descendants: true }, { propertyName: \"_iconPrefixContainer\", first: true, predicate: [\"iconPrefixContainer\"], descendants: true }, { propertyName: \"_textPrefixContainer\", first: true, predicate: [\"textPrefixContainer\"], descendants: true }, { propertyName: \"_iconSuffixContainer\", first: true, predicate: [\"iconSuffixContainer\"], descendants: true }, { propertyName: \"_textSuffixContainer\", first: true, predicate: [\"textSuffixContainer\"], descendants: true }, { propertyName: \"_floatingLabel\", first: true, predicate: MatFormFieldFloatingLabel, descendants: true }, { propertyName: \"_notchedOutline\", first: true, predicate: MatFormFieldNotchedOutline, descendants: true }, { propertyName: \"_lineRipple\", first: true, predicate: MatFormFieldLineRipple, descendants: true }], exportAs: [\"matFormField\"], ngImport: i0, template: \"<ng-template #labelTemplate>\\n  <!--\\n    MDC recommends that the text-field is a `<label>` element. This rather complicates the\\n    setup because it would require every form-field control to explicitly set `aria-labelledby`.\\n    This is because the `<label>` itself contains more than the actual label (e.g. prefix, suffix\\n    or other projected content), and screen readers could potentially read out undesired content.\\n    Excluding elements from being printed out requires them to be marked with `aria-hidden`, or\\n    the form control is set to a scoped element for the label (using `aria-labelledby`). Both of\\n    these options seem to complicate the setup because we know exactly what content is rendered\\n    as part of the label, and we don't want to spend resources on walking through projected content\\n    to set `aria-hidden`. Nor do we want to set `aria-labelledby` on every form control if we could\\n    simply link the label to the control using the label `for` attribute.\\n  -->\\n  @if (_hasFloatingLabel()) {\\n    <label\\n      matFormFieldFloatingLabel\\n      [floating]=\\\"_shouldLabelFloat()\\\"\\n      [monitorResize]=\\\"_hasOutline()\\\"\\n      [id]=\\\"_labelId\\\"\\n      [attr.for]=\\\"_control.disableAutomaticLabeling ? null : _control.id\\\"\\n    >\\n      <ng-content select=\\\"mat-label\\\"></ng-content>\\n      <!--\\n        We set the required marker as a separate element, in order to make it easier to target if\\n        apps want to override it and to be able to set `aria-hidden` so that screen readers don't\\n        pick it up.\\n       -->\\n      @if (!hideRequiredMarker && _control.required) {\\n        <span\\n          aria-hidden=\\\"true\\\"\\n          class=\\\"mat-mdc-form-field-required-marker mdc-floating-label--required\\\"\\n        ></span>\\n      }\\n    </label>\\n  }\\n</ng-template>\\n\\n<div\\n  class=\\\"mat-mdc-text-field-wrapper mdc-text-field\\\"\\n  #textField\\n  [class.mdc-text-field--filled]=\\\"!_hasOutline()\\\"\\n  [class.mdc-text-field--outlined]=\\\"_hasOutline()\\\"\\n  [class.mdc-text-field--no-label]=\\\"!_hasFloatingLabel()\\\"\\n  [class.mdc-text-field--disabled]=\\\"_control.disabled\\\"\\n  [class.mdc-text-field--invalid]=\\\"_control.errorState\\\"\\n  (click)=\\\"_control.onContainerClick($event)\\\"\\n>\\n  @if (!_hasOutline() && !_control.disabled) {\\n    <div class=\\\"mat-mdc-form-field-focus-overlay\\\"></div>\\n  }\\n  <div class=\\\"mat-mdc-form-field-flex\\\">\\n    @if (_hasOutline()) {\\n      <div matFormFieldNotchedOutline [matFormFieldNotchedOutlineOpen]=\\\"_shouldLabelFloat()\\\">\\n        @if (!_forceDisplayInfixLabel()) {\\n          <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n        }\\n      </div>\\n    }\\n\\n    @if (_hasIconPrefix) {\\n      <div class=\\\"mat-mdc-form-field-icon-prefix\\\" #iconPrefixContainer>\\n        <ng-content select=\\\"[matPrefix], [matIconPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasTextPrefix) {\\n      <div class=\\\"mat-mdc-form-field-text-prefix\\\" #textPrefixContainer>\\n        <ng-content select=\\\"[matTextPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-form-field-infix\\\">\\n      @if (!_hasOutline() || _forceDisplayInfixLabel()) {\\n        <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n      }\\n\\n      <ng-content></ng-content>\\n    </div>\\n\\n    @if (_hasTextSuffix) {\\n      <div class=\\\"mat-mdc-form-field-text-suffix\\\" #textSuffixContainer>\\n        <ng-content select=\\\"[matTextSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasIconSuffix) {\\n      <div class=\\\"mat-mdc-form-field-icon-suffix\\\" #iconSuffixContainer>\\n        <ng-content select=\\\"[matSuffix], [matIconSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n  </div>\\n\\n  @if (!_hasOutline()) {\\n    <div matFormFieldLineRipple></div>\\n  }\\n</div>\\n\\n<div\\n    class=\\\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\\\"\\n    [class.mat-mdc-form-field-subscript-dynamic-size]=\\\"subscriptSizing === 'dynamic'\\\"\\n>\\n  @let subscriptMessageType = _getSubscriptMessageType();\\n\\n  <!-- \\n    Use a single permanent wrapper for both hints and errors so aria-live works correctly,\\n    as having it appear post render will not consistently work. We also do not want to add\\n    additional divs as it causes styling regressions.\\n    -->\\n  <div aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" \\n      [class.mat-mdc-form-field-error-wrapper]=\\\"subscriptMessageType === 'error'\\\"\\n      [class.mat-mdc-form-field-hint-wrapper]=\\\"subscriptMessageType === 'hint'\\\"\\n    >\\n    @switch (subscriptMessageType) {\\n      @case ('error') {\\n        <ng-content select=\\\"mat-error, [matError]\\\"></ng-content>\\n      }\\n\\n      @case ('hint') {\\n        @if (hintLabel) {\\n          <mat-hint [id]=\\\"_hintLabelId\\\">{{hintLabel}}</mat-hint>\\n        }\\n        <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n        <div class=\\\"mat-mdc-form-field-hint-spacer\\\"></div>\\n        <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n      }\\n    }\\n  </div>\\n</div>\\n\", styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"], dependencies: [{ kind: \"directive\", type: MatFormFieldFloatingLabel, selector: \"label[matFormFieldFloatingLabel]\", inputs: [\"floating\", \"monitorResize\"] }, { kind: \"component\", type: MatFormFieldNotchedOutline, selector: \"div[matFormFieldNotchedOutline]\", inputs: [\"matFormFieldNotchedOutlineOpen\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: MatFormFieldLineRipple, selector: \"div[matFormFieldLineRipple]\" }, { kind: \"directive\", type: MatHint, selector: \"mat-hint\", inputs: [\"align\", \"id\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', host: {\n                        'class': 'mat-mdc-form-field',\n                        '[class.mat-mdc-form-field-label-always-float]': '_shouldAlwaysFloat()',\n                        '[class.mat-mdc-form-field-has-icon-prefix]': '_hasIconPrefix',\n                        '[class.mat-mdc-form-field-has-icon-suffix]': '_hasIconSuffix',\n                        // Note that these classes reuse the same names as the non-MDC version, because they can be\n                        // considered a public API since custom form controls may use them to style themselves.\n                        // See https://github.com/angular/components/pull/20502#discussion_r486124901.\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-hide-placeholder]': '_hasFloatingLabel() && !_shouldLabelFloat()',\n                        '[class.mat-focused]': '_control.focused',\n                        '[class.mat-primary]': 'color !== \"accent\" && color !== \"warn\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                        { provide: FLOATING_LABEL_PARENT, useExisting: MatFormField },\n                    ], imports: [\n                        MatFormFieldFloatingLabel,\n                        MatFormFieldNotchedOutline,\n                        NgTemplateOutlet,\n                        MatFormFieldLineRipple,\n                        MatHint,\n                    ], template: \"<ng-template #labelTemplate>\\n  <!--\\n    MDC recommends that the text-field is a `<label>` element. This rather complicates the\\n    setup because it would require every form-field control to explicitly set `aria-labelledby`.\\n    This is because the `<label>` itself contains more than the actual label (e.g. prefix, suffix\\n    or other projected content), and screen readers could potentially read out undesired content.\\n    Excluding elements from being printed out requires them to be marked with `aria-hidden`, or\\n    the form control is set to a scoped element for the label (using `aria-labelledby`). Both of\\n    these options seem to complicate the setup because we know exactly what content is rendered\\n    as part of the label, and we don't want to spend resources on walking through projected content\\n    to set `aria-hidden`. Nor do we want to set `aria-labelledby` on every form control if we could\\n    simply link the label to the control using the label `for` attribute.\\n  -->\\n  @if (_hasFloatingLabel()) {\\n    <label\\n      matFormFieldFloatingLabel\\n      [floating]=\\\"_shouldLabelFloat()\\\"\\n      [monitorResize]=\\\"_hasOutline()\\\"\\n      [id]=\\\"_labelId\\\"\\n      [attr.for]=\\\"_control.disableAutomaticLabeling ? null : _control.id\\\"\\n    >\\n      <ng-content select=\\\"mat-label\\\"></ng-content>\\n      <!--\\n        We set the required marker as a separate element, in order to make it easier to target if\\n        apps want to override it and to be able to set `aria-hidden` so that screen readers don't\\n        pick it up.\\n       -->\\n      @if (!hideRequiredMarker && _control.required) {\\n        <span\\n          aria-hidden=\\\"true\\\"\\n          class=\\\"mat-mdc-form-field-required-marker mdc-floating-label--required\\\"\\n        ></span>\\n      }\\n    </label>\\n  }\\n</ng-template>\\n\\n<div\\n  class=\\\"mat-mdc-text-field-wrapper mdc-text-field\\\"\\n  #textField\\n  [class.mdc-text-field--filled]=\\\"!_hasOutline()\\\"\\n  [class.mdc-text-field--outlined]=\\\"_hasOutline()\\\"\\n  [class.mdc-text-field--no-label]=\\\"!_hasFloatingLabel()\\\"\\n  [class.mdc-text-field--disabled]=\\\"_control.disabled\\\"\\n  [class.mdc-text-field--invalid]=\\\"_control.errorState\\\"\\n  (click)=\\\"_control.onContainerClick($event)\\\"\\n>\\n  @if (!_hasOutline() && !_control.disabled) {\\n    <div class=\\\"mat-mdc-form-field-focus-overlay\\\"></div>\\n  }\\n  <div class=\\\"mat-mdc-form-field-flex\\\">\\n    @if (_hasOutline()) {\\n      <div matFormFieldNotchedOutline [matFormFieldNotchedOutlineOpen]=\\\"_shouldLabelFloat()\\\">\\n        @if (!_forceDisplayInfixLabel()) {\\n          <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n        }\\n      </div>\\n    }\\n\\n    @if (_hasIconPrefix) {\\n      <div class=\\\"mat-mdc-form-field-icon-prefix\\\" #iconPrefixContainer>\\n        <ng-content select=\\\"[matPrefix], [matIconPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasTextPrefix) {\\n      <div class=\\\"mat-mdc-form-field-text-prefix\\\" #textPrefixContainer>\\n        <ng-content select=\\\"[matTextPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-form-field-infix\\\">\\n      @if (!_hasOutline() || _forceDisplayInfixLabel()) {\\n        <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n      }\\n\\n      <ng-content></ng-content>\\n    </div>\\n\\n    @if (_hasTextSuffix) {\\n      <div class=\\\"mat-mdc-form-field-text-suffix\\\" #textSuffixContainer>\\n        <ng-content select=\\\"[matTextSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasIconSuffix) {\\n      <div class=\\\"mat-mdc-form-field-icon-suffix\\\" #iconSuffixContainer>\\n        <ng-content select=\\\"[matSuffix], [matIconSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n  </div>\\n\\n  @if (!_hasOutline()) {\\n    <div matFormFieldLineRipple></div>\\n  }\\n</div>\\n\\n<div\\n    class=\\\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\\\"\\n    [class.mat-mdc-form-field-subscript-dynamic-size]=\\\"subscriptSizing === 'dynamic'\\\"\\n>\\n  @let subscriptMessageType = _getSubscriptMessageType();\\n\\n  <!-- \\n    Use a single permanent wrapper for both hints and errors so aria-live works correctly,\\n    as having it appear post render will not consistently work. We also do not want to add\\n    additional divs as it causes styling regressions.\\n    -->\\n  <div aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" \\n      [class.mat-mdc-form-field-error-wrapper]=\\\"subscriptMessageType === 'error'\\\"\\n      [class.mat-mdc-form-field-hint-wrapper]=\\\"subscriptMessageType === 'hint'\\\"\\n    >\\n    @switch (subscriptMessageType) {\\n      @case ('error') {\\n        <ng-content select=\\\"mat-error, [matError]\\\"></ng-content>\\n      }\\n\\n      @case ('hint') {\\n        @if (hintLabel) {\\n          <mat-hint [id]=\\\"_hintLabelId\\\">{{hintLabel}}</mat-hint>\\n        }\\n        <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n        <div class=\\\"mat-mdc-form-field-hint-spacer\\\"></div>\\n        <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n      }\\n    }\\n  </div>\\n</div>\\n\", styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _textField: [{\n                type: ViewChild,\n                args: ['textField']\n            }], _iconPrefixContainer: [{\n                type: ViewChild,\n                args: ['iconPrefixContainer']\n            }], _textPrefixContainer: [{\n                type: ViewChild,\n                args: ['textPrefixContainer']\n            }], _iconSuffixContainer: [{\n                type: ViewChild,\n                args: ['iconSuffixContainer']\n            }], _textSuffixContainer: [{\n                type: ViewChild,\n                args: ['textSuffixContainer']\n            }], _floatingLabel: [{\n                type: ViewChild,\n                args: [MatFormFieldFloatingLabel]\n            }], _notchedOutline: [{\n                type: ViewChild,\n                args: [MatFormFieldNotchedOutline]\n            }], _lineRipple: [{\n                type: ViewChild,\n                args: [MatFormFieldLineRipple]\n            }], _formFieldControl: [{\n                type: ContentChild,\n                args: [MatFormFieldControl]\n            }], _prefixChildren: [{\n                type: ContentChildren,\n                args: [MAT_PREFIX, { descendants: true }]\n            }], _suffixChildren: [{\n                type: ContentChildren,\n                args: [MAT_SUFFIX, { descendants: true }]\n            }], _errorChildren: [{\n                type: ContentChildren,\n                args: [MAT_ERROR, { descendants: true }]\n            }], _hintChildren: [{\n                type: ContentChildren,\n                args: [MatHint, { descendants: true }]\n            }], hideRequiredMarker: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], floatLabel: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], subscriptSizing: [{\n                type: Input\n            }], hintLabel: [{\n                type: Input\n            }] } });\n\nexport { MatLabel as M, MAT_ERROR as a, MatError as b, MatHint as c, MAT_PREFIX as d, MatPrefix as e, MAT_SUFFIX as f, MatSuffix as g, MAT_FORM_FIELD as h, MAT_FORM_FIELD_DEFAULT_OPTIONS as i, MatFormField as j, MatFormFieldControl as k, getMatFormFieldPlaceholderConflictError as l, getMatFormFieldDuplicatedHintError as m, getMatFormFieldMissingControlError as n };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatRipple } from './ripple-BYgV4oZC.mjs';\n\nclass MatRippleModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatRipple], exports: [MatRipple, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRipple],\n                    exports: [MatRipple, MatCommonModule],\n                }]\n        }] });\n\nexport { MatRippleModule as M };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    _animationsDisabled = _animationsDisabled();\n    /** Display state of the checkbox. */\n    state = 'unchecked';\n    /** Whether the checkbox is disabled. */\n    disabled = false;\n    /**\n     * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n     * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n     */\n    appearance = 'full';\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPseudoCheckbox, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatPseudoCheckbox, isStandalone: true, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\", appearance: \"appearance\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class.mat-pseudo-checkbox-minimal\": \"appearance === \\\"minimal\\\"\", \"class.mat-pseudo-checkbox-full\": \"appearance === \\\"full\\\"\", \"class._mat-animation-noopable\": \"_animationsDisabled\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-minimal-selected-checkmark-color, var(--mat-sys-primary))}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-minimal-disabled-selected-checkmark-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full{border-color:var(--mat-pseudo-checkbox-full-unselected-icon-color, var(--mat-sys-on-surface-variant));border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-pseudo-checkbox-full-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-pseudo-checkbox-full-selected-icon-color, var(--mat-sys-primary));border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-full-selected-checkmark-color, var(--mat-sys-on-primary))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-pseudo-checkbox-full-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-full-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class.mat-pseudo-checkbox-minimal]': 'appearance === \"minimal\"',\n                        '[class.mat-pseudo-checkbox-full]': 'appearance === \"full\"',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                    }, styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-minimal-selected-checkmark-color, var(--mat-sys-primary))}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-minimal-disabled-selected-checkmark-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full{border-color:var(--mat-pseudo-checkbox-full-unselected-icon-color, var(--mat-sys-on-surface-variant));border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-pseudo-checkbox-full-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-pseudo-checkbox-full-selected-icon-color, var(--mat-sys-primary));border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-full-selected-checkmark-color, var(--mat-sys-on-primary))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-pseudo-checkbox-full-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-full-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }] } });\n\nexport { MatPseudoCheckbox as M };\n"],"names":["HighContrastModeDetector","BidiModule","i0","InjectionToken","inject","NgModule","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","constructor","_applyBodyHighContrastModeCssClasses","ɵfac","MatCommonModule_Factory","__ngFactoryType__","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ngDevMode","M","a","_IdGenerator","ENTER","SPACE","hasModifierKey","booleanAttribute","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","ElementRef","ChangeDetectorRef","signal","EventEmitter","isSignal","Output","ViewChild","Subject","MatRipple","MatPseudoCheckbox","_","_StructuralStylesLoader","_CdkPrivateStyleLoader","_VisuallyHiddenLoader","_c0","_c1","_c2","_c3","_c4","MatOption_Conditional_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","disabled","selected","MatOption_Conditional_5_Template","MatOption_Conditional_6_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","group","label","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","MatOptgroup","_labelId","getId","_inert","parent","optional","inertGroups","MatOptgroup_Factory","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","hostVars","hostBindings","MatOptgroup_HostBindings","ɵɵattribute","toString","inputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","ngContentSelectors","decls","vars","consts","template","MatOptgroup_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵclassProp","styles","encapsulation","changeDetection","MatOptionSelectionChange","source","isUserInput","MatOption","_element","_changeDetectorRef","_parent","_signalDisableRipple","_selected","_active","_mostRecentViewValue","multiple","value","id","_disabled","set","disableRipple","hideSingleSelectionIndicator","onSelectionChange","_text","_stateChanges","styleLoader","load","active","viewValue","nativeElement","textContent","trim","select","emitEvent","markForCheck","_emitSelectionChangeEvent","deselect","focus","_origin","options","element","_getHostElement","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","event","keyCode","_selectViaInteraction","preventDefault","_getTabIndex","ngAfterViewChecked","next","ngOnDestroy","complete","emit","MatOption_Factory","viewQuery","MatOption_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","MatOption_HostBindings","ɵɵlistener","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","$event","ɵɵdomProperty","outputs","MatOption_Template","ɵɵconditionalCreate","ɵɵconditional","dependencies","_countGroupLabelsBeforeOption","optionIndex","optionGroups","length","optionsArray","toArray","groups","groupCounter","i","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","Math","max","b","c","d","e","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatError","j","MatFormField","MatHint","MatLabel","MatPrefix","g","MatSuffix","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_TRIGGER","MatSelect","f","MatSelectChange","MatSelectModule","h","MatSelectTrigger","matSelectAnimations","transformPanel","name","definitions","opacity","transform","offset","expr","animation","timings","Injectable","ShowOnDirtyErrorStateMatcher","isErrorState","control","form","invalid","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ɵprov","ɵɵdefineInjectable","token","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","E","S","normalizePassiveListenerOptions","_getEventTarget","Platform","NgZone","Injector","Directive","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","coerceElement","_animationsDisabled","RippleState","RippleRef","_renderer","config","_animationForciblyDisabledThroughCss","state","HIDDEN","fadeOut","fadeOutRipple","passiveCapturingEventOptions$1","passive","capture","RippleEventManager","_events","Map","addHandler","ngZone","handler","handlersForEvent","get","handlersForElement","add","Set","runOutsideAngular","document","addEventListener","_delegateEventHandler","removeHandler","delete","size","removeEventListener","target","forEach","handlers","contains","handleEvent","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveCapturingEventOptions","pointerDownEvents","pointerUpEvents","_MatRippleStylesLoader","_MatRippleStylesLoader_Factory","_MatRippleStylesLoader_Template","RippleRenderer","_target","_ngZone","_platform","_containerElement","_triggerElement","_isPointerDown","_activeRipples","_mostRecentTransientRipple","_lastTouchStartEvent","_pointerUpEventsRegistered","_containerRect","_eventManager","elementOrElementRef","injector","isBrowser","fadeInRipple","x","y","containerRect","getBoundingClientRect","animationConfig","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","ripple","createElement","classList","style","color","backgroundColor","transitionDuration","appendChild","computedStyles","window","getComputedStyle","userTransitionProperty","transitionProperty","userTransitionDuration","animationForciblyDisabledThroughCss","rippleRef","FADING_IN","persistent","eventListeners","onTransitionEnd","fallbackTimer","clearTimeout","_finishRippleTransition","onTransitionCancel","_destroyRipple","setTimeout","FADING_OUT","rippleEl","fadeOutAll","_getActiveRipples","fadeOutAllNonPersistent","setupTriggerEvents","_removeTriggerEvents","_onMousedown","_onTouchStart","_onPointerUp","_startFadeOutTransition","isMostRecentTransientRipple","VISIBLE","remove","isFakeMousedown","isSyntheticEvent","Date","now","rippleDisabled","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","Array","from","keys","trigger","rect","distX","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","_elementRef","unbounded","_setupTriggerEventsIfEnabled","_trigger","_rippleRenderer","_globalOptions","_isInitialized","platform","globalOptions","ngOnInit","launch","configOrX","MatRipple_Factory","ɵdir","ɵɵdefineDirective","MatRipple_HostBindings","R","ObserversModule","MatFormFieldModule","MatFormFieldModule_Factory","MatRippleModule","MatOptionModule","MatOptionModule_Factory","_ErrorStateTracker","_defaultMatcher","ngControl","_parentFormGroup","_parentForm","errorState","matcher","updateErrorState","oldState","newState","createRepositionScrollStrategy","CdkConnectedOverlay","CdkOverlayOrigin","OverlayModule","Renderer2","HostAttributeToken","numberAttribute","ContentChildren","ContentChild","ViewportRuler","CdkScrollableModule","LiveAnnouncer","removeAriaReferencedId","addAriaReferencedId","ActiveDescendantKeyManager","Directionality","SelectionModel","A","ESCAPE","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","NgControl","Validators","NgForm","FormGroupDirective","defer","merge","startWith","switchMap","filter","map","takeUntil","take","NgClass","MAT_FORM_FIELD","k","MatFormFieldControl","MatSelect_Conditional_4_Template","ctx_r1","ɵɵtextInterpolate","placeholder","MatSelect_Conditional_5_Conditional_1_Template","MatSelect_Conditional_5_Conditional_2_Template","triggerValue","MatSelect_Conditional_5_Template","customTrigger","MatSelect_ng_template_10_Template","_r3","ɵɵgetCurrentView","MatSelect_ng_template_10_Template_div_keydown_0_listener","ɵɵrestoreView","ɵɵresetView","ɵɵclassMap","ɵɵinterpolate1","_getPanelTheme","panelClass","ariaLabel","_getPanelAriaLabelledby","getMatSelectDynamicMultipleError","Error","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","_overlay","deps","useFactory","_viewportRuler","_dir","_idGenerator","_parentFormField","self","_liveAnnouncer","_defaultOptions","_initialized","_cleanupDetach","_positions","originX","originY","overlayX","overlayY","_scrollOptionIntoView","index","option","panel","labelCount","scrollTop","offsetTop","offsetHeight","_positioningSettled","_keyManager","activeItemIndex","_getChangeEvent","_scrollStrategyFactory","_panelOpen","_compareWith","o1","o2","_uid","_triggerAriaLabelledBy","_previousControl","_destroy","_errorStateTracker","stateChanges","disableAutomaticLabeling","userAriaDescribedBy","_selectionModel","_preferredOverlayOrigin","_overlayWidth","_onChange","_onTouched","_valueId","_scrollStrategy","_overlayPanelClass","overlayPanelClass","focused","_focused","controlType","_overlayDir","_disableRipple","tabIndex","_hideSingleSelectionIndicator","_syncParentProperties","_placeholder","required","_required","hasValidator","_multiple","disableOptionCentering","compareWith","fn","_initializeSelection","_value","newValue","hasAssigned","_assignValue","ariaLabelledby","errorStateMatcher","typeaheadDebounceInterval","sortComparator","_id","panelWidth","canSelectNullableOptions","optionSelectionChanges","changes","pipe","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","defaultErrorStateMatcher","parentForm","parentFormGroup","valueAccessor","parseInt","change","subscribe","panelOpen","_getOverlayWidth","detectChanges","ngAfterContentInit","_initKeyManager","changed","added","removed","_resetOptions","ngDoCheck","newAriaLabelledby","_getTriggerAriaLabelledby","setAttribute","removeAttribute","undefined","ngOnChanges","withTypeAhead","destroy","_clearFromModal","toggle","close","open","_canOpen","getConnectedOverlayOrigin","_applyModalPanelOwnership","positionChange","attachOverlay","withHorizontalOrientation","_highlightCorrectOption","Promise","resolve","then","_trackedModal","modal","closest","panelId","_exitAndDetach","_isRtl","_detachOverlay","cleanupEvent","exitFallbackTimer","listen","animationName","detachOverlay","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","empty","selectedOptions","reverse","join","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","altKey","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","ctrlKey","hasDeselectedOptions","some","opt","previouslyFocusedIndex","shiftKey","_handleOverlayKeydown","_onFocus","_onBlur","cancelTypeahead","isEmpty","_setSelectionByValue","clear","isArray","currentValue","_selectOptionByValue","_sortValues","correspondingOption","updateActiveItem","find","isSelected","error","console","warn","_skipPredicate","preferredOrigin","refToMeasure","elementRef","withVerticalOrientation","withHomeAndEnd","withPageUpDown","withAllowedModifierKeys","skipPredicate","tabOut","changedOrDestroyed","_onSelect","wasSelected","_propagateChanges","setActiveItem","sort","indexOf","fallbackValue","valueToEmit","firstEnabledOptionIndex","labelId","getLabelId","labelExpression","_getAriaActiveDescendant","describedByIds","existingDescribedBy","getAttribute","split","setDescribedByIds","ids","onContainerClick","shouldLabelFloat","MatSelect_Factory","contentQueries","MatSelect_ContentQueries","dirIndex","ɵɵcontentQuery","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","ɵɵNgOnChangesFeature","MatSelect_Template","_r1","MatSelect_Template_div_click_0_listener","ɵɵnamespaceSVG","ɵɵtemplate","MatSelect_Template_ng_template_detach_10_listener","MatSelect_Template_ng_template_backdropClick_10_listener","MatSelect_Template_ng_template_overlayKeydown_10_listener","fallbackOverlayOrigin_r4","ɵɵreference","MatSelectTrigger_Factory","MatSelectModule_Factory","providers","MediaMatcher","ANIMATION_MODULE_TYPE","MATERIAL_ANIMATIONS","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","animationsDisabled","mediaMatcher","matchMedia","matches","_StructuralStylesLoader_Factory","_StructuralStylesLoader_Template","coerceBooleanProperty","NgTemplateOutlet","viewChild","computed","contentChild","afterRenderEffect","Subscription","pairwise","SharedResizeObserver","_c5","_c6","_c7","_c8","_c9","MatFormField_ng_template_0_Conditional_0_Conditional_2_Template","MatFormField_ng_template_0_Conditional_0_Template","_shouldLabelFloat","_hasOutline","_control","hideRequiredMarker","MatFormField_ng_template_0_Template","_hasFloatingLabel","MatFormField_Conditional_4_Template","MatFormField_Conditional_6_Conditional_1_ng_template_0_Template","MatFormField_Conditional_6_Conditional_1_Template","labelTemplate_r3","MatFormField_Conditional_6_Template","_forceDisplayInfixLabel","MatFormField_Conditional_7_Template","MatFormField_Conditional_8_Template","MatFormField_Conditional_10_ng_template_0_Template","MatFormField_Conditional_10_Template","MatFormField_Conditional_12_Template","MatFormField_Conditional_13_Template","MatFormField_Conditional_14_Template","MatFormField_Case_17_Template","MatFormField_Case_18_Conditional_0_Template","_hintLabelId","hintLabel","MatFormField_Case_18_Template","MatLabel_Factory","MAT_ERROR","MatError_Factory","MatError_HostBindings","align","MatHint_Factory","MatHint_HostBindings","MAT_PREFIX","_isTextSelector","_isText","MatPrefix_Factory","MAT_SUFFIX","MatSuffix_Factory","FLOATING_LABEL_PARENT","MatFormFieldFloatingLabel","floating","_floating","monitorResize","_handleResize","_monitorResize","_subscribeToResize","_resizeSubscription","unsubscribe","_resizeObserver","getWidth","estimateScrollWidth","_handleLabelResized","observe","box","MatFormFieldFloatingLabel_Factory","MatFormFieldFloatingLabel_HostBindings","htmlEl","offsetParent","scrollWidth","clone","cloneNode","setProperty","documentElement","ACTIVATE_CLASS","DEACTIVATING_CLASS","MatFormFieldLineRipple","_cleanupTransitionEnd","renderer","_handleTransitionEnd","activate","deactivate","isDeactivating","propertyName","MatFormFieldLineRipple_Factory","MatFormFieldNotchedOutline","_notch","ngAfterViewInit","querySelector","requestAnimationFrame","_setNotchWidth","labelWidth","notch","NOTCH_ELEMENT_PADDING","NOTCH_ELEMENT_BORDER","_setMaxWidth","prefixAndSuffixWidth","MatFormFieldNotchedOutline_Factory","MatFormFieldNotchedOutline_Query","MatFormFieldNotchedOutline_HostBindings","attrs","MatFormFieldNotchedOutline_Template","autofilled","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","MAT_FORM_FIELD_DEFAULT_OPTIONS","DEFAULT_APPEARANCE","DEFAULT_FLOAT_LABEL","DEFAULT_SUBSCRIPT_SIZING","FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM","_defaults","_textField","_iconPrefixContainer","_textPrefixContainer","_iconSuffixContainer","_textSuffixContainer","_floatingLabel","_notchedOutline","_lineRipple","_iconPrefixContainerSignal","_textPrefixContainerSignal","_iconSuffixContainerSignal","_textSuffixContainerSignal","_prefixSuffixContainers","container","_formFieldControl","_prefixChildren","_suffixChildren","_errorChildren","_hintChildren","_labelChild","_hideRequiredMarker","floatLabel","_floatLabel","appearance","_appearanceSignal","newAppearance","subscriptSizing","_subscriptSizing","_hintLabel","_processHints","_hasIconPrefix","_hasTextPrefix","_hasIconSuffix","_hasTextSuffix","_describedByIds","_explicitFormFieldControl","_destroyed","_isFocused","_previousControlValidatorFn","_valueChanges","_describedByChanges","defaults","Boolean","_syncOutlineLabelOffset","_updateFocusState","_assertFormFieldControl","_initializeSubscript","_initializePrefixAndSuffix","ngAfterContentChecked","_initializeControl","validator","validatorFn","_outlineLabelOffsetResizeObserver","disconnect","_animateAndLockLabel","previousControl","classPrefix","prevErrorState","prevDescribedBy","currentErrorState","currentDescribedBy","_syncDescribedByIds","valueChanges","_checkPrefixAndSuffixTypes","p","s","_validateHints","earlyRead","globalThis","ResizeObserver","_writeOutlinedLabelStyles","_getOutlinedLabelOffset","el","write","labelStyles","_shouldAlwaysFloat","_shouldForward","prop","_getSubscriptMessageType","_refreshOutlineNotchWidth","startHint","endHint","hint","push","toAssign","exclude","concat","includes","dir","valueSignal","_isAttachedToDom","iconPrefixContainer","textPrefixContainer","iconSuffixContainer","textSuffixContainer","iconPrefixContainerWidth","textPrefixContainerWidth","iconSuffixContainerWidth","textSuffixContainerWidth","negate","prefixWidth","labelOffset","labelHorizontalOffset","floatingLabelTransform","notchedOutlineWidth","getRootNode","rootNode","MatFormField_Factory","MatFormField_ContentQueries","ɵɵcontentQuerySignal","ɵɵqueryAdvance","MatFormField_Query","ɵɵviewQuerySignal","MatFormField_HostBindings","MatFormField_Template","ɵɵtemplateRefExtractor","MatFormField_Template_div_click_2_listener","tmp_19_0","subscriptMessageType_r4","l","m","n","MatRippleModule_Factory","MatPseudoCheckbox_Factory","MatPseudoCheckbox_HostBindings","MatPseudoCheckbox_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}