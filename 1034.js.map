{"version":3,"file":"1034.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/menu.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, ChangeDetectorRef, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, TemplateRef, ApplicationRef, Injector, ViewContainerRef, Directive, QueryList, EventEmitter, ANIMATION_MODULE_TYPE, afterNextRender, ContentChildren, ViewChild, ContentChild, Output, NgZone, NgModule } from '@angular/core';\nimport { FocusMonitor, _IdGenerator, FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { startWith, switchMap, takeUntil, take, filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport { _StructuralStylesLoader, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * Single item inside a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem {\n    _elementRef = inject(ElementRef);\n    _document = inject(DOCUMENT);\n    _focusMonitor = inject(FocusMonitor);\n    _parentMenu = inject(MAT_MENU_PANEL, { optional: true });\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    /** ARIA role for the menu item. */\n    role = 'menuitem';\n    /** Whether the menu item is disabled. */\n    disabled = false;\n    /** Whether ripples are disabled on the menu item. */\n    disableRipple = false;\n    /** Stream that emits when the menu item is hovered. */\n    _hovered = new Subject();\n    /** Stream that emits when the menu item is focused. */\n    _focused = new Subject();\n    /** Whether the menu item is highlighted. */\n    _highlighted = false;\n    /** Whether the menu item acts as a trigger for a sub-menu. */\n    _triggersSubmenu = false;\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        this._parentMenu?.addItem?.(this);\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element, so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons, so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            icons[i].remove();\n        }\n        return clone.textContent?.trim() || '';\n    }\n    _setHighlighted(isHighlighted) {\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        this._highlighted = isHighlighted;\n        this._changeDetectorRef.markForCheck();\n    }\n    _setTriggersSubmenu(triggersSubmenu) {\n        this._triggersSubmenu = triggersSubmenu;\n        this._changeDetectorRef.markForCheck();\n    }\n    _hasFocus() {\n        return this._document && this._document.activeElement === this._getHostElement();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenuItem, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.1.3\", type: MatMenuItem, isStandalone: true, selector: \"[mat-menu-item]\", inputs: { role: \"role\", disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute] }, host: { listeners: { \"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\" }, properties: { \"attr.role\": \"role\", \"class.mat-mdc-menu-item-highlighted\": \"_highlighted\", \"class.mat-mdc-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled\", \"attr.disabled\": \"disabled || null\" }, classAttribute: \"mat-mdc-menu-item mat-focus-indicator\" }, exportAs: [\"matMenuItem\"], ngImport: i0, template: \"<ng-content select=\\\"mat-icon, [matMenuItemIcon]\\\"></ng-content>\\n<span class=\\\"mat-mdc-menu-item-text\\\"><ng-content></ng-content></span>\\n<div class=\\\"mat-mdc-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n@if (_triggersSubmenu) {\\n     <svg\\n       class=\\\"mat-mdc-menu-submenu-icon\\\"\\n       viewBox=\\\"0 0 5 10\\\"\\n       focusable=\\\"false\\\"\\n       aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n}\\n\", dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', host: {\n                        '[attr.role]': 'role',\n                        'class': 'mat-mdc-menu-item mat-focus-indicator',\n                        '[class.mat-mdc-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-mdc-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.disabled]': 'disabled || null',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, imports: [MatRipple], template: \"<ng-content select=\\\"mat-icon, [matMenuItemIcon]\\\"></ng-content>\\n<span class=\\\"mat-mdc-menu-item-text\\\"><ng-content></ng-content></span>\\n<div class=\\\"mat-mdc-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n@if (_triggersSubmenu) {\\n     <svg\\n       class=\\\"mat-mdc-menu-submenu-icon\\\"\\n       viewBox=\\\"0 0 5 10\\\"\\n       focusable=\\\"false\\\"\\n       aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n}\\n\" }]\n        }], ctorParameters: () => [], propDecorators: { role: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/** Menu content that will be rendered lazily once the menu is opened. */\nclass MatMenuContent {\n    _template = inject(TemplateRef);\n    _appRef = inject(ApplicationRef);\n    _injector = inject(Injector);\n    _viewContainerRef = inject(ViewContainerRef);\n    _document = inject(DOCUMENT);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _portal;\n    _outlet;\n    /** Emits when the menu content has been attached. */\n    _attached = new Subject();\n    constructor() { }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), null, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        this._changeDetectorRef.markForCheck();\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal?.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._outlet?.dispose();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenuContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.1.3\", type: MatMenuContent, isStandalone: true, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }],\n                }]\n        }], ctorParameters: () => [] });\n\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/** Name of the enter animation `@keyframes`. */\nconst ENTER_ANIMATION = '_mat-menu-enter';\n/** Name of the exit animation `@keyframes`. */\nconst EXIT_ANIMATION = '_mat-menu-exit';\nclass MatMenu {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _injector = inject(Injector);\n    _keyManager;\n    _xPosition;\n    _yPosition;\n    _firstItemFocusRef;\n    _exitFallbackTimeout;\n    /** Whether animations are currently disabled. */\n    _animationsDisabled;\n    /** All items inside the menu. Includes items nested inside another menu. */\n    _allItems;\n    /** Only the direct descendant menu items. */\n    _directDescendantItems = new QueryList();\n    /** Classes to be applied to the menu panel. */\n    _classList = {};\n    /** Current state of the panel animation. */\n    _panelAnimationState = 'void';\n    /** Emits whenever an animation on the menu completes. */\n    _animationDone = new Subject();\n    /** Whether the menu is animating. */\n    _isAnimating = false;\n    /** Parent menu of the current menu panel. */\n    parentMenu;\n    /** Layout direction of the menu. */\n    direction;\n    /** Class or list of classes to be added to the overlay panel. */\n    overlayPanelClass;\n    /** Class to be added to the backdrop element. */\n    backdropClass;\n    /** aria-label for the menu panel. */\n    ariaLabel;\n    /** aria-labelledby for the menu panel. */\n    ariaLabelledby;\n    /** aria-describedby for the menu panel. */\n    ariaDescribedby;\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n        return this._xPosition;\n    }\n    set xPosition(value) {\n        if (value !== 'before' &&\n            value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n        return this._yPosition;\n    }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** @docs-private */\n    templateRef;\n    /**\n     * List of the items inside of a menu.\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    items;\n    /**\n     * Menu content that will be rendered lazily.\n     * @docs-private\n     */\n    lazyContent;\n    /** Whether the menu should overlap its trigger. */\n    overlapTrigger;\n    /** Whether the menu has a backdrop. */\n    hasBackdrop;\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        const newClassList = { ...this._classList };\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                newClassList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                newClassList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n        this._classList = newClassList;\n    }\n    _previousPanelClass;\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n        return this.panelClass;\n    }\n    set classList(classes) {\n        this.panelClass = classes;\n    }\n    /** Event emitted when the menu is closed. */\n    closed = new EventEmitter();\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * @breaking-change 8.0.0\n     */\n    close = this.closed;\n    panelId = inject(_IdGenerator).getId('mat-menu-panel-');\n    constructor() {\n        const defaultOptions = inject(MAT_MENU_DEFAULT_OPTIONS);\n        this.overlayPanelClass = defaultOptions.overlayPanelClass || '';\n        this._xPosition = defaultOptions.xPosition;\n        this._yPosition = defaultOptions.yPosition;\n        this.backdropClass = defaultOptions.backdropClass;\n        this.overlapTrigger = defaultOptions.overlapTrigger;\n        this.hasBackdrop = defaultOptions.hasBackdrop;\n        this._animationsDisabled = inject(ANIMATION_MODULE_TYPE, { optional: true }) === 'NoopAnimations';\n    }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes\n            .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n            .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n        this._directDescendantItems.changes.subscribe((itemsList) => {\n            // Move focus to another item, if the active item is removed from the list.\n            // We need to debounce the callback, because multiple items might be removed\n            // in quick succession.\n            const manager = this._keyManager;\n            if (this._panelAnimationState === 'enter' && manager.activeItem?._hasFocus()) {\n                const items = itemsList.toArray();\n                const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n                if (items[index] && !items[index].disabled) {\n                    manager.setActiveItem(index);\n                }\n                else {\n                    manager.setNextItemActive();\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._directDescendantItems.destroy();\n        this.closed.complete();\n        this._firstItemFocusRef?.destroy();\n        clearTimeout(this._exitFallbackTimeout);\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n                return;\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // Wait for `afterNextRender` to ensure iOS VoiceOver screen reader focuses the first item (#24735).\n        this._firstItemFocusRef?.destroy();\n        this._firstItemFocusRef = afterNextRender(() => {\n            const menuPanel = this._resolvePanel();\n            // If an item in the menuPanel is already focused, avoid overriding the focus.\n            if (!menuPanel || !menuPanel.contains(document.activeElement)) {\n                const manager = this._keyManager;\n                manager.setFocusOrigin(origin).setFirstItemActive();\n                // If there's no active item at this point, it means that all the items are disabled.\n                // Move focus to the menuPanel panel so keyboard events like Escape still work. Also this will\n                // give _some_ feedback to screen readers.\n                if (!manager.activeItem && menuPanel) {\n                    menuPanel.focus();\n                }\n            }\n        }, { injector: this._injector });\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * @deprecated No longer used and will be removed.\n     * @breaking-change 21.0.0\n     */\n    setElevation(_depth) { }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        this._classList = {\n            ...this._classList,\n            ['mat-menu-before']: posX === 'before',\n            ['mat-menu-after']: posX === 'after',\n            ['mat-menu-above']: posY === 'above',\n            ['mat-menu-below']: posY === 'below',\n        };\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(state) {\n        const isExit = state === EXIT_ANIMATION;\n        if (isExit || state === ENTER_ANIMATION) {\n            if (isExit) {\n                clearTimeout(this._exitFallbackTimeout);\n                this._exitFallbackTimeout = undefined;\n            }\n            this._animationDone.next(isExit ? 'void' : 'enter');\n            this._isAnimating = false;\n        }\n    }\n    _onAnimationStart(state) {\n        if (state === ENTER_ANIMATION || state === EXIT_ANIMATION) {\n            this._isAnimating = true;\n        }\n    }\n    _setIsOpen(isOpen) {\n        this._panelAnimationState = isOpen ? 'enter' : 'void';\n        if (isOpen) {\n            if (this._keyManager.activeItemIndex === 0) {\n                // Scroll the content element to the top as soon as the animation starts. This is necessary,\n                // because we move focus to the first item while it's still being animated, which can throw\n                // the browser off when it determines the scroll position. Alternatively we can move focus\n                // when the animation is done, however moving focus asynchronously will interrupt screen\n                // readers which are in the process of reading out the menu already. We take the `element`\n                // from the `event` since we can't use a `ViewChild` to access the pane.\n                const menuPanel = this._resolvePanel();\n                if (menuPanel) {\n                    menuPanel.scrollTop = 0;\n                }\n            }\n        }\n        else if (!this._animationsDisabled) {\n            // Some apps do `* { animation: none !important; }` in tests which will prevent the\n            // `animationend` event from firing. Since the exit animation is loading-bearing for\n            // removing the content from the DOM, add a fallback timer.\n            this._exitFallbackTimeout = setTimeout(() => this._onAnimationDone(EXIT_ANIMATION), 200);\n        }\n        // Animation events won't fire when animations are disabled so we simulate them.\n        if (this._animationsDisabled) {\n            setTimeout(() => {\n                this._onAnimationDone(isOpen ? ENTER_ANIMATION : EXIT_ANIMATION);\n            });\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n    /** Gets the menu panel DOM node. */\n    _resolvePanel() {\n        let menuPanel = null;\n        if (this._directDescendantItems.length) {\n            // Because the `mat-menuPanel` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menuPanel panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            menuPanel = this._directDescendantItems.first._getHostElement().closest('[role=\"menu\"]');\n        }\n        return menuPanel;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenu, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.1.3\", type: MatMenu, isStandalone: true, selector: \"mat-menu\", inputs: { backdropClass: \"backdropClass\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: [\"overlapTrigger\", \"overlapTrigger\", booleanAttribute], hasBackdrop: [\"hasBackdrop\", \"hasBackdrop\", (value) => (value == null ? null : booleanAttribute(value))], panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, host: { properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], queries: [{ propertyName: \"lazyContent\", first: true, predicate: MAT_MENU_CONTENT, descendants: true }, { propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true }, { propertyName: \"items\", predicate: MatMenuItem }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true }], exportAs: [\"matMenu\"], ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-mdc-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [class]=\\\"_classList\\\"\\n    [class.mat-menu-panel-animations-disabled]=\\\"_animationsDisabled\\\"\\n    [class.mat-menu-panel-exit-animation]=\\\"_panelAnimationState === 'void'\\\"\\n    [class.mat-menu-panel-animating]=\\\"_isAnimating\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    (animationstart)=\\\"_onAnimationStart($event.animationName)\\\"\\n    (animationend)=\\\"_onAnimationDone($event.animationName)\\\"\\n    (animationcancel)=\\\"_onAnimationDone($event.animationName)\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-mdc-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-sys-label-large-weight))}@keyframes _mat-menu-enter{from{opacity:0;transform:scale(0.8)}to{opacity:1;transform:none}}@keyframes _mat-menu-exit{from{opacity:1}to{opacity:0}}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;box-sizing:border-box;outline:0;animation:_mat-menu-enter 120ms cubic-bezier(0, 0, 0.2, 1);border-radius:var(--mat-menu-container-shape, var(--mat-sys-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-sys-surface-container));box-shadow:var(--mat-menu-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12));will-change:transform,opacity}.mat-mdc-menu-panel.mat-menu-panel-exit-animation{animation:_mat-menu-exit 100ms 25ms linear forwards}.mat-mdc-menu-panel.mat-menu-panel-animations-disabled{animation:none}.mat-mdc-menu-panel.mat-menu-panel-animating{pointer-events:none}.mat-mdc-menu-panel.mat-menu-panel-animating:has(.mat-mdc-menu-content:empty){display:none}@media(forced-colors: active){.mat-mdc-menu-panel{outline:solid 1px}}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-sys-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing, 8px);margin-top:var(--mat-menu-divider-top-spacing, 8px)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px;padding-left:var(--mat-menu-item-leading-spacing, 12px);padding-right:var(--mat-menu-item-trailing-spacing, 12px);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-menu-item::-moz-focus-inner{border:0}[dir=rtl] .mat-mdc-menu-item{padding-left:var(--mat-menu-item-trailing-spacing, 12px);padding-right:var(--mat-menu-item-leading-spacing, 12px)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-trailing-spacing, 12px)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-trailing-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-leading-spacing, 12px)}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing, 12px);height:var(--mat-menu-item-icon-size, 24px);width:var(--mat-menu-item-icon-size, 24px)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing, 12px)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}@media(forced-colors: active){.mat-mdc-menu-item{margin-top:1px}}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size, 24px);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing, 12px)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing, 12px);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}@media(forced-colors: active){.mat-mdc-menu-submenu-icon{fill:CanvasText}}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                    }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], template: \"<ng-template>\\n  <div\\n    class=\\\"mat-mdc-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [class]=\\\"_classList\\\"\\n    [class.mat-menu-panel-animations-disabled]=\\\"_animationsDisabled\\\"\\n    [class.mat-menu-panel-exit-animation]=\\\"_panelAnimationState === 'void'\\\"\\n    [class.mat-menu-panel-animating]=\\\"_isAnimating\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    (animationstart)=\\\"_onAnimationStart($event.animationName)\\\"\\n    (animationend)=\\\"_onAnimationDone($event.animationName)\\\"\\n    (animationcancel)=\\\"_onAnimationDone($event.animationName)\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-mdc-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-sys-label-large-weight))}@keyframes _mat-menu-enter{from{opacity:0;transform:scale(0.8)}to{opacity:1;transform:none}}@keyframes _mat-menu-exit{from{opacity:1}to{opacity:0}}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;box-sizing:border-box;outline:0;animation:_mat-menu-enter 120ms cubic-bezier(0, 0, 0.2, 1);border-radius:var(--mat-menu-container-shape, var(--mat-sys-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-sys-surface-container));box-shadow:var(--mat-menu-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12));will-change:transform,opacity}.mat-mdc-menu-panel.mat-menu-panel-exit-animation{animation:_mat-menu-exit 100ms 25ms linear forwards}.mat-mdc-menu-panel.mat-menu-panel-animations-disabled{animation:none}.mat-mdc-menu-panel.mat-menu-panel-animating{pointer-events:none}.mat-mdc-menu-panel.mat-menu-panel-animating:has(.mat-mdc-menu-content:empty){display:none}@media(forced-colors: active){.mat-mdc-menu-panel{outline:solid 1px}}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-sys-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing, 8px);margin-top:var(--mat-menu-divider-top-spacing, 8px)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px;padding-left:var(--mat-menu-item-leading-spacing, 12px);padding-right:var(--mat-menu-item-trailing-spacing, 12px);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-menu-item::-moz-focus-inner{border:0}[dir=rtl] .mat-mdc-menu-item{padding-left:var(--mat-menu-item-trailing-spacing, 12px);padding-right:var(--mat-menu-item-leading-spacing, 12px)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-trailing-spacing, 12px)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-trailing-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-leading-spacing, 12px)}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing, 12px);height:var(--mat-menu-item-icon-size, 24px);width:var(--mat-menu-item-icon-size, 24px)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing, 12px)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}@media(forced-colors: active){.mat-mdc-menu-item{margin-top:1px}}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size, 24px);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing, 12px)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing, 12px);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}@media(forced-colors: active){.mat-mdc-menu-submenu-icon{fill:CanvasText}}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"] }]\n        }], ctorParameters: () => [], propDecorators: { _allItems: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: true }]\n            }], backdropClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }], items: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: false }]\n            }], lazyContent: [{\n                type: ContentChild,\n                args: [MAT_MENU_CONTENT]\n            }], overlapTrigger: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hasBackdrop: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? null : booleanAttribute(value)) }]\n            }], panelClass: [{\n                type: Input,\n                args: ['class']\n            }], classList: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition();\n    },\n});\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Default top padding of the menu panel.\n * @deprecated No longer being used. Will be removed.\n * @breaking-change 15.0.0\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Mapping between menu panels and the last trigger that opened them. */\nconst PANELS_TO_TRIGGERS = new WeakMap();\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n    _overlay = inject(Overlay);\n    _element = inject(ElementRef);\n    _viewContainerRef = inject(ViewContainerRef);\n    _menuItemInstance = inject(MatMenuItem, { optional: true, self: true });\n    _dir = inject(Directionality, { optional: true });\n    _focusMonitor = inject(FocusMonitor);\n    _ngZone = inject(NgZone);\n    _scrollStrategy = inject(MAT_MENU_SCROLL_STRATEGY);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _portal;\n    _overlayRef = null;\n    _menuOpen = false;\n    _closingActionsSubscription = Subscription.EMPTY;\n    _hoverSubscription = Subscription.EMPTY;\n    _menuCloseSubscription = Subscription.EMPTY;\n    _pendingRemoval;\n    /**\n     * We're specifically looking for a `MatMenu` here since the generic `MatMenuPanel`\n     * interface lacks some functionality around nested menus and animations.\n     */\n    _parentMaterialMenu;\n    /**\n     * Cached value of the padding of the parent menu panel.\n     * Used to offset sub-menus to compensate for the padding.\n     */\n    _parentInnerPadding;\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     */\n    _handleTouchStart = (event) => {\n        if (!isFakeTouchstartFromScreenReader(event)) {\n            this._openedBy = 'touch';\n        }\n    };\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the menu is opened via the keyboard\n    _openedBy = undefined;\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n        return this._menu;\n    }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n        this._menuItemInstance?._setTriggersSubmenu(this.triggersSubmenu());\n    }\n    _menu;\n    /** Data to be passed along to any lazily-rendered content. */\n    menuData;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     */\n    restoreFocus = true;\n    /** Event emitted when the associated menu is opened. */\n    menuOpened = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    onMenuOpen = this.menuOpened;\n    /** Event emitted when the associated menu is closed. */\n    menuClosed = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    onMenuClose = this.menuClosed;\n    constructor() {\n        const parentMenu = inject(MAT_MENU_PANEL, { optional: true });\n        this._parentMaterialMenu = parentMenu instanceof MatMenu ? parentMenu : undefined;\n        this._element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n    }\n    ngAfterContentInit() {\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this.menu && this._ownsMenu(this.menu)) {\n            PANELS_TO_TRIGGERS.delete(this.menu);\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._pendingRemoval?.unsubscribe();\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu && this.menu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        const menu = this.menu;\n        if (this._menuOpen || !menu) {\n            return;\n        }\n        this._pendingRemoval?.unsubscribe();\n        const previousTrigger = PANELS_TO_TRIGGERS.get(menu);\n        PANELS_TO_TRIGGERS.set(menu, this);\n        // If the same menu is currently attached to another trigger,\n        // we need to close it so it doesn't end up in a broken state.\n        if (previousTrigger && previousTrigger !== this) {\n            previousTrigger.closeMenu();\n        }\n        const overlayRef = this._createOverlay(menu);\n        const overlayConfig = overlayRef.getConfig();\n        const positionStrategy = overlayConfig.positionStrategy;\n        this._setPosition(menu, positionStrategy);\n        overlayConfig.hasBackdrop =\n            menu.hasBackdrop == null ? !this.triggersSubmenu() : menu.hasBackdrop;\n        // We need the `hasAttached` check for the case where the user kicked off a removal animation,\n        // but re-entered the menu. Re-attaching the same portal will trigger an error otherwise.\n        if (!overlayRef.hasAttached()) {\n            overlayRef.attach(this._getPortal(menu));\n            menu.lazyContent?.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        menu.direction = this.dir;\n        menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n        if (menu instanceof MatMenu) {\n            menu._setIsOpen(true);\n            menu._directDescendantItems.changes.pipe(takeUntil(menu.close)).subscribe(() => {\n                // Re-adjust the position without locking when the amount of items\n                // changes so that the overlay is allowed to pick a new optimal position.\n                positionStrategy.withLockedPosition(false).reapplyLastPosition();\n                positionStrategy.withLockedPosition(true);\n            });\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu?.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        this._overlayRef?.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        const overlayRef = this._overlayRef;\n        const menu = this._menu;\n        if (!overlayRef || !this.menuOpen) {\n            return;\n        }\n        this._closingActionsSubscription.unsubscribe();\n        this._pendingRemoval?.unsubscribe();\n        // Note that we don't wait for the animation to finish if another trigger took\n        // over the menu, because the panel will end up empty which looks glitchy.\n        if (menu instanceof MatMenu && this._ownsMenu(menu)) {\n            this._pendingRemoval = menu._animationDone.pipe(take(1)).subscribe(() => {\n                overlayRef.detach();\n                menu.lazyContent?.detach();\n            });\n            menu._setIsOpen(false);\n        }\n        else {\n            overlayRef.detach();\n            menu?.lazyContent?.detach();\n        }\n        if (menu && this._ownsMenu(menu)) {\n            PANELS_TO_TRIGGERS.delete(menu);\n        }\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        this._setIsMenuOpen(false);\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        if (isOpen !== this._menuOpen) {\n            this._menuOpen = isOpen;\n            this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n            if (this.triggersSubmenu()) {\n                this._menuItemInstance._setHighlighted(isOpen);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay(menu) {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig(menu);\n            this._subscribeToPositions(menu, config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            this._overlayRef.keydownEvents().subscribe(event => {\n                if (this.menu instanceof MatMenu) {\n                    this.menu._handleKeydown(event);\n                }\n            });\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig(menu) {\n        return new OverlayConfig({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir || 'ltr',\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(menu, position) {\n        if (menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                this._ngZone.run(() => {\n                    const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                    const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                    menu.setPositionClasses(posX, posY);\n                });\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(menu, positionStrategy) {\n        let [originX, originFallbackX] = menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            if (this._parentMaterialMenu) {\n                if (this._parentInnerPadding == null) {\n                    const firstItem = this._parentMaterialMenu.items.first;\n                    this._parentInnerPadding = firstItem ? firstItem._getHostElement().offsetTop : 0;\n                }\n                offsetY = overlayY === 'bottom' ? this._parentInnerPadding : -this._parentInnerPadding;\n            }\n        }\n        else if (!menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu\n            ? this._parentMaterialMenu\n                ._hovered()\n                .pipe(filter(active => this._menuOpen && active !== this._menuItemInstance))\n            : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() &&\n            ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (this.triggersSubmenu() && this._parentMaterialMenu) {\n            this._hoverSubscription = this._parentMaterialMenu._hovered().subscribe(active => {\n                if (active === this._menuItemInstance && !active.disabled) {\n                    this._openedBy = 'mouse';\n                    this.openMenu();\n                }\n            });\n        }\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal(menu) {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== menu.templateRef) {\n            this._portal = new TemplatePortal(menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n    /**\n     * Determines whether the trigger owns a specific menu panel, at the current point in time.\n     * This allows us to distinguish the case where the same panel is passed into multiple triggers\n     * and multiple are open at a time.\n     */\n    _ownsMenu(menu) {\n        return PANELS_TO_TRIGGERS.get(menu) === this;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenuTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.1.3\", type: MatMenuTrigger, isStandalone: true, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"], restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"mousedown\": \"_handleMousedown($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-haspopup\": \"menu ? \\\"menu\\\" : null\", \"attr.aria-expanded\": \"menuOpen\", \"attr.aria-controls\": \"menuOpen ? menu.panelId : null\" }, classAttribute: \"mat-mdc-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-mdc-menu-trigger',\n                        '[attr.aria-haspopup]': 'menu ? \"menu\" : null',\n                        '[attr.aria-expanded]': 'menuOpen',\n                        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                        '(click)': '_handleClick($event)',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                    exportAs: 'matMenuTrigger',\n                }]\n        }], ctorParameters: () => [], propDecorators: { _deprecatedMatMenuTriggerFor: [{\n                type: Input,\n                args: ['mat-menu-trigger-for']\n            }], menu: [{\n                type: Input,\n                args: ['matMenuTriggerFor']\n            }], menuData: [{\n                type: Input,\n                args: ['matMenuTriggerData']\n            }], restoreFocus: [{\n                type: Input,\n                args: ['matMenuTriggerRestoreFocus']\n            }], menuOpened: [{\n                type: Output\n            }], onMenuOpen: [{\n                type: Output\n            }], menuClosed: [{\n                type: Output\n            }], onMenuClose: [{\n                type: Output\n            }] } });\n\nclass MatMenuModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenuModule, imports: [MatRippleModule,\n            MatCommonModule,\n            OverlayModule,\n            MatMenu,\n            MatMenuItem,\n            MatMenuContent,\n            MatMenuTrigger], exports: [CdkScrollableModule,\n            MatMenu,\n            MatCommonModule,\n            MatMenuItem,\n            MatMenuContent,\n            MatMenuTrigger] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatRippleModule,\n            MatCommonModule,\n            OverlayModule, CdkScrollableModule,\n            MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.3\", ngImport: i0, type: MatMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatRippleModule,\n                        MatCommonModule,\n                        OverlayModule,\n                        MatMenu,\n                        MatMenuItem,\n                        MatMenuContent,\n                        MatMenuTrigger,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatMenu,\n                        MatCommonModule,\n                        MatMenuItem,\n                        MatMenuContent,\n                        MatMenuTrigger,\n                    ],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)',\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)',\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER, MENU_PANEL_TOP_PADDING, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, fadeInItems, matMenuAnimations, transformMenu };\n"],"names":["i0","InjectionToken","inject","ElementRef","ChangeDetectorRef","booleanAttribute","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","TemplateRef","ApplicationRef","Injector","ViewContainerRef","Directive","QueryList","EventEmitter","ANIMATION_MODULE_TYPE","afterNextRender","ContentChildren","ViewChild","ContentChild","Output","NgZone","NgModule","FocusMonitor","_IdGenerator","FocusKeyManager","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","LEFT_ARROW","ESCAPE","hasModifierKey","ENTER","SPACE","Subject","merge","Subscription","of","startWith","switchMap","takeUntil","take","filter","DOCUMENT","_StructuralStylesLoader","MatRipple","MatRippleModule","MatCommonModule","_CdkPrivateStyleLoader","TemplatePortal","DomPortalOutlet","Directionality","Overlay","OverlayConfig","OverlayModule","normalizePassiveListenerOptions","CdkScrollableModule","trigger","state","style","transition","animate","_c0","_c1","_c2","MatMenuItem_Conditional_4_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","_c3","MatMenu_ng_template_0_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","MatMenu_ng_template_0_Template_div_click_0_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","closed","emit","MatMenu_ng_template_0_Template_div_animationstart_0_listener","$event","_onAnimationStart","animationName","MatMenu_ng_template_0_Template_div_animationend_0_listener","_onAnimationDone","MatMenu_ng_template_0_Template_div_animationcancel_0_listener","ɵɵprojection","ɵɵclassMap","_classList","ɵɵclassProp","_animationsDisabled","_panelAnimationState","_isAnimating","ɵɵproperty","panelId","ɵɵattribute","ariaLabel","ariaLabelledby","ariaDescribedby","MAT_MENU_PANEL","MatMenuItem","_elementRef","_document","_focusMonitor","_parentMenu","optional","_changeDetectorRef","role","disabled","disableRipple","_hovered","_focused","_highlighted","_triggersSubmenu","constructor","load","addItem","focus","origin","options","focusVia","_getHostElement","next","ngAfterViewInit","monitor","ngOnDestroy","stopMonitoring","removeItem","complete","_getTabIndex","nativeElement","_checkDisabled","event","preventDefault","stopPropagation","_handleMouseEnter","getLabel","clone","cloneNode","icons","querySelectorAll","i","length","remove","textContent","trim","_setHighlighted","isHighlighted","markForCheck","_setTriggersSubmenu","triggersSubmenu","_hasFocus","activeElement","ɵfac","MatMenuItem_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","MatMenuItem_mouseenter_HostBindingHandler","inputs","exportAs","features","ɵɵInputTransformsFeature","attrs","ngContentSelectors","decls","vars","consts","template","MatMenuItem_Template","ɵɵprojectionDef","ɵɵtemplate","ɵɵadvance","ɵɵconditional","dependencies","encapsulation","changeDetection","ngDevMode","throwMatMenuInvalidPositionX","Error","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_CONTENT","MatMenuContent","_template","_appRef","_injector","_viewContainerRef","_portal","_outlet","_attached","attach","context","detach","createElement","element","elementRef","parentNode","insertBefore","outletElement","isAttached","dispose","MatMenuContent_Factory","ɵdir","ɵɵdefineDirective","ɵɵProvidersFeature","provide","useExisting","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","ENTER_ANIMATION","EXIT_ANIMATION","MatMenu","_keyManager","_xPosition","_yPosition","_firstItemFocusRef","_exitFallbackTimeout","_allItems","_directDescendantItems","_animationDone","parentMenu","direction","overlayPanelClass","value","setPositionClasses","templateRef","items","lazyContent","hasBackdrop","panelClass","classes","previousPanelClass","_previousPanelClass","newClassList","split","forEach","className","classList","close","getId","defaultOptions","ngOnInit","ngAfterContentInit","_updateDirectDescendants","withWrap","withTypeAhead","withHomeAndEnd","tabOut","subscribe","changes","pipe","map","item","focusedItem","updateActiveItem","itemsList","manager","activeItem","toArray","index","Math","max","min","activeItemIndex","setActiveItem","setNextItemActive","destroy","clearTimeout","itemChanges","_item","_handleKeydown","keyCode","setFocusOrigin","onKeydown","focusFirstItem","menuPanel","_resolvePanel","contains","document","setFirstItemActive","injector","resetActiveItem","setElevation","_depth","posX","posY","isExit","undefined","_setIsOpen","isOpen","scrollTop","setTimeout","reset","notifyOnChanges","first","closest","MatMenu_Factory","contentQueries","MatMenu_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","MatMenu_Query","ɵɵviewQuery","MatMenu_HostBindings","outputs","MatMenu_Template","styles","MAT_MENU_SCROLL_STRATEGY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","passiveEventListenerOptions","passive","MENU_PANEL_TOP_PADDING","PANELS_TO_TRIGGERS","WeakMap","MatMenuTrigger","_overlay","_element","_menuItemInstance","self","_dir","_ngZone","_scrollStrategy","_overlayRef","_menuOpen","_closingActionsSubscription","EMPTY","_hoverSubscription","_menuCloseSubscription","_pendingRemoval","_parentMaterialMenu","_parentInnerPadding","_handleTouchStart","_openedBy","_deprecatedMatMenuTriggerFor","menu","v","_menu","unsubscribe","reason","_destroyMenu","menuData","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","addEventListener","_handleHover","_ownsMenu","delete","removeEventListener","menuOpen","dir","toggleMenu","closeMenu","openMenu","previousTrigger","get","set","overlayRef","_createOverlay","overlayConfig","getConfig","positionStrategy","_setPosition","hasAttached","_getPortal","_menuClosingActions","_setIsMenuOpen","withLockedPosition","reapplyLastPosition","updatePosition","config","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withGrowAfterOpen","withTransformOriginOn","scrollStrategy","positionChanges","change","run","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","firstItem","offsetTop","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","_handleMousedown","button","_handleClick","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_click_HostBindingHandler","MatMenuTrigger_mousedown_HostBindingHandler","MatMenuTrigger_keydown_HostBindingHandler","MatMenuModule","MatMenuModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","imports","matMenuAnimations","transformMenu","opacity","transform","fadeInItems"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}