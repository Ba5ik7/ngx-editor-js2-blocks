{"version":3,"file":"1423.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/common-module-cKSwHniA.mjs","./node_modules/@angular/material/fesm2022/internal-form-field-D5iFxU6d.mjs","./node_modules/@angular/material/fesm2022/ripple-BYgV4oZC.mjs","./node_modules/@angular/material/fesm2022/radio.mjs","./node_modules/@angular/material/fesm2022/animation-DfMFjxHu.mjs","./node_modules/@angular/material/fesm2022/structural-styles-CObeNzjn.mjs","./node_modules/@angular/material/fesm2022/index-BFRo2fUq.mjs"],"sourcesContent":["import { HighContrastModeDetector } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgModule } from '@angular/core';\n\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @deprecated No longer used and will be removed.\n * @breaking-change 21.0.0\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: () => true,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n * @deprecated No longer used and will be removed.\n * @breaking-change 21.0.0\n */\nclass MatCommonModule {\n    constructor() {\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        inject(HighContrastModeDetector)._applyBodyHighContrastModeCssClasses();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule, BidiModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: () => [] });\n\nexport { MatCommonModule as M, MATERIAL_SANITY_CHECKS as a };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nclass _MatInternalFormField {\n    /** Position of the label relative to the content. */\n    labelPosition;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatInternalFormField, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _MatInternalFormField, isStandalone: true, selector: \"div[mat-internal-form-field]\", inputs: { labelPosition: \"labelPosition\" }, host: { properties: { \"class.mdc-form-field--align-end\": \"labelPosition === \\\"before\\\"\" }, classAttribute: \"mdc-form-field mat-internal-form-field\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatInternalFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'div[mat-internal-form-field]', template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mdc-form-field mat-internal-form-field',\n                        '[class.mdc-form-field--align-end]': 'labelPosition === \"before\"',\n                    }, styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"] }]\n        }], propDecorators: { labelPosition: [{\n                type: Input,\n                args: [{ required: true }]\n            }] } });\n\nexport { _MatInternalFormField as _ };\n","import { normalizePassiveListenerOptions, _getEventTarget, Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, InjectionToken, inject, ElementRef, NgZone, Injector, Directive, Input } from '@angular/core';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\n\n/** Possible states for a ripple element. */\nvar RippleState;\n(function (RippleState) {\n    RippleState[RippleState[\"FADING_IN\"] = 0] = \"FADING_IN\";\n    RippleState[RippleState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n    RippleState[RippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n    RippleState[RippleState[\"HIDDEN\"] = 3] = \"HIDDEN\";\n})(RippleState || (RippleState = {}));\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    _renderer;\n    element;\n    config;\n    _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n    state = RippleState.HIDDEN;\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config, \n    /* Whether animations are forcibly disabled for ripples through CSS. */\n    _animationForciblyDisabledThroughCss = false) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n    _events = new Map();\n    /** Adds an event handler. */\n    addHandler(ngZone, name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (handlersForEvent) {\n            const handlersForElement = handlersForEvent.get(element);\n            if (handlersForElement) {\n                handlersForElement.add(handler);\n            }\n            else {\n                handlersForEvent.set(element, new Set([handler]));\n            }\n        }\n        else {\n            this._events.set(name, new Map([[element, new Set([handler])]]));\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n            });\n        }\n    }\n    /** Removes an event handler. */\n    removeHandler(name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (!handlersForEvent) {\n            return;\n        }\n        const handlersForElement = handlersForEvent.get(element);\n        if (!handlersForElement) {\n            return;\n        }\n        handlersForElement.delete(handler);\n        if (handlersForElement.size === 0) {\n            handlersForEvent.delete(element);\n        }\n        if (handlersForEvent.size === 0) {\n            this._events.delete(name);\n            document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n        }\n    }\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n    _delegateEventHandler = (event) => {\n        const target = _getEventTarget(event);\n        if (target) {\n            this._events.get(event.type)?.forEach((handlers, element) => {\n                if (element === target || element.contains(target)) {\n                    handlers.forEach(handler => handler.handleEvent(event));\n                }\n            });\n        }\n    };\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\nclass _MatRippleStylesLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatRippleStylesLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _MatRippleStylesLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"mat-ripple-style-loader\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0);background-color:var(--mat-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface) 10%, transparent))}@media(forced-colors: active){.mat-ripple-element{display:none}}.cdk-drag-preview .mat-ripple-element,.cdk-drag-placeholder .mat-ripple-element{display:none}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatRippleStylesLoader, decorators: [{\n            type: Component,\n            args: [{ template: '', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { 'mat-ripple-style-loader': '' }, styles: [\".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0);background-color:var(--mat-ripple-color, color-mix(in srgb, var(--mat-sys-on-surface) 10%, transparent))}@media(forced-colors: active){.mat-ripple-element{display:none}}.cdk-drag-preview .mat-ripple-element,.cdk-drag-placeholder .mat-ripple-element{display:none}\\n\"] }]\n        }] });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    _target;\n    _ngZone;\n    _platform;\n    /** Element where the ripples are being added to. */\n    _containerElement;\n    /** Element which triggers the ripple elements on mouse events. */\n    _triggerElement;\n    /** Whether the pointer is currently down or not. */\n    _isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n    _activeRipples = new Map();\n    /** Latest non-persistent ripple that was triggered. */\n    _mostRecentTransientRipple;\n    /** Time in milliseconds when the last touchstart event happened. */\n    _lastTouchStartEvent;\n    /** Whether pointer-up event listeners have been registered. */\n    _pointerUpEventsRegistered = false;\n    /**\n     * Cached dimensions of the ripple container. Set when the first\n     * ripple is shown and cleared once no more ripples are visible.\n     */\n    _containerRect;\n    static _eventManager = new RippleEventManager();\n    constructor(_target, _ngZone, elementOrElementRef, _platform, injector) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        // Only do anything if we're on the browser.\n        if (_platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n        if (injector) {\n            injector.get(_CdkPrivateStyleLoader).load(_MatRippleStylesLoader);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const enterDuration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${enterDuration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical to ensure that the `scale` animates properly.\n        // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        const computedStyles = window.getComputedStyle(ripple);\n        const userTransitionProperty = computedStyles.transitionProperty;\n        const userTransitionDuration = computedStyles.transitionDuration;\n        // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n        // `transition: none` or `display: none`). This is technically unexpected since animations are\n        // controlled through the animation config, but this exists for backwards compatibility. This\n        // logic does not need to be super accurate since it covers some edge cases which can be easily\n        // avoided by users.\n        const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n            // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n            // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n            userTransitionDuration === '0s' ||\n            userTransitionDuration === '0s, 0s' ||\n            // If the container is 0x0, it's likely `display: none`.\n            (containerRect.width === 0 && containerRect.height === 0);\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n        // Start the enter animation by setting the transform/scale to 100%. The animation will\n        // execute as part of this statement because we forced a style recalculation before.\n        // Note: We use a 3d transform here in order to avoid an issue in Safari where\n        // the ripples aren't clipped when inside the shadow DOM (see #24028).\n        ripple.style.transform = 'scale3d(1, 1, 1)';\n        rippleRef.state = RippleState.FADING_IN;\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        let eventListeners = null;\n        // Do not register the `transition` event listener if fade-in and fade-out duration\n        // are set to zero. The events won't fire anyway and we can save resources here.\n        if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n            this._ngZone.runOutsideAngular(() => {\n                const onTransitionEnd = () => {\n                    // Clear the fallback timer since the transition fired correctly.\n                    if (eventListeners) {\n                        eventListeners.fallbackTimer = null;\n                    }\n                    clearTimeout(fallbackTimer);\n                    this._finishRippleTransition(rippleRef);\n                };\n                const onTransitionCancel = () => this._destroyRipple(rippleRef);\n                // In some cases where there's a higher load on the browser, it can choose not to dispatch\n                // neither `transitionend` nor `transitioncancel` (see b/227356674). This timer serves as a\n                // fallback for such cases so that the ripple doesn't become stuck. We add a 100ms buffer\n                // because timers aren't precise. Note that another approach can be to transition the ripple\n                // to the `VISIBLE` state immediately above and to `FADING_IN` afterwards inside\n                // `transitionstart`. We go with the timer because it's one less event listener and\n                // it's less likely to break existing tests.\n                const fallbackTimer = setTimeout(onTransitionCancel, enterDuration + 100);\n                ripple.addEventListener('transitionend', onTransitionEnd);\n                // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n                // directly as otherwise we would keep it part of the ripple container forever.\n                // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n                ripple.addEventListener('transitioncancel', onTransitionCancel);\n                eventListeners = { onTransitionEnd, onTransitionCancel, fallbackTimer };\n            });\n        }\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.set(rippleRef, eventListeners);\n        // In case there is no fade-in transition duration, we need to manually call the transition\n        // end listener because `transitionend` doesn't fire if there is no transition.\n        if (animationForciblyDisabledThroughCss || !enterDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        // For ripples already fading out or hidden, this should be a noop.\n        if (rippleRef.state === RippleState.FADING_OUT || rippleRef.state === RippleState.HIDDEN) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        // This starts the fade-out transition and will fire the transition end listener that\n        // removes the ripple element from the DOM.\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // In case there is no fade-out transition duration, we need to manually call the\n        // transition end listener because `transitionend` doesn't fire if there is no transition.\n        if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._getActiveRipples().forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        // Use event delegation for the trigger events since they're\n        // set up during creation and are performance-sensitive.\n        pointerDownEvents.forEach(type => {\n            RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n        });\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            // The events for hiding the ripple are bound directly on the trigger, because:\n            // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n            // delegation will be diminished by having to look through all the data structures often.\n            // 2. They aren't as performance-sensitive, because they're bound only after the user\n            // has interacted with an element.\n            this._ngZone.runOutsideAngular(() => {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n                });\n            });\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n    _finishRippleTransition(rippleRef) {\n        if (rippleRef.state === RippleState.FADING_IN) {\n            this._startFadeOutTransition(rippleRef);\n        }\n        else if (rippleRef.state === RippleState.FADING_OUT) {\n            this._destroyRipple(rippleRef);\n        }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n    _startFadeOutTransition(rippleRef) {\n        const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n        const { persistent } = rippleRef.config;\n        rippleRef.state = RippleState.VISIBLE;\n        // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n        if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n            rippleRef.fadeOut();\n        }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n    _destroyRipple(rippleRef) {\n        const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n        this._activeRipples.delete(rippleRef);\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // If the current ref is the most recent transient ripple, unset it\n        // avoid memory leaks.\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        rippleRef.state = RippleState.HIDDEN;\n        if (eventListeners !== null) {\n            rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n            rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n            if (eventListeners.fallbackTimer !== null) {\n                clearTimeout(eventListeners.fallbackTimer);\n            }\n        }\n        rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            // According to the typings the touches should always be defined, but in some cases\n            // the browser appears to not assign them in tests which leads to flakes.\n            if (touches) {\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._getActiveRipples().forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === RippleState.VISIBLE ||\n                (ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    _getActiveRipples() {\n        return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        const trigger = this._triggerElement;\n        if (trigger) {\n            pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n                this._pointerUpEventsRegistered = false;\n            }\n        }\n    }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    _elementRef = inject(ElementRef);\n    _animationsDisabled = _animationsDisabled();\n    /** Custom color for all ripples. */\n    color;\n    /** Whether the ripples should be visible outside the component's bounds. */\n    unbounded;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     */\n    centered;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    radius = 0;\n    /**\n     * Configuration for the ripple animation. Allows modifying the enter and exit animation\n     * duration of the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     */\n    animation;\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    _disabled = false;\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    _trigger;\n    /** Renderer for the ripple DOM manipulations. */\n    _rippleRenderer;\n    /** Options that are set globally for all ripples. */\n    _globalOptions;\n    /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n    _isInitialized = false;\n    constructor() {\n        const ngZone = inject(NgZone);\n        const platform = inject(Platform);\n        const globalOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, { optional: true });\n        const injector = inject(Injector);\n        // Note: cannot use `inject()` here, because this class\n        // gets instantiated manually in the ripple loader.\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, this._elementRef, platform, injector);\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationsDisabled ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRipple, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatRipple, isStandalone: true, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\nexport { MatRipple as M, RippleRenderer as R, MAT_RIPPLE_GLOBAL_OPTIONS as a, RippleState as b, RippleRef as c, defaultRippleAnimationConfig as d };\n","import { _IdGenerator, FocusMonitor } from '@angular/cdk/a11y';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport * as i0 from '@angular/core';\nimport { forwardRef, InjectionToken, inject, ChangeDetectorRef, EventEmitter, booleanAttribute, Directive, Output, ContentChildren, Input, ElementRef, NgZone, Renderer2, Injector, HostAttributeToken, numberAttribute, afterNextRender, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { M as MatRipple } from './ripple-BYgV4oZC.mjs';\nimport { _ as _MatInternalFormField } from './internal-form-field-D5iFxU6d.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatRippleModule } from './index-BFRo2fUq.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\n\n/** Change event object emitted by radio button and radio group. */\nclass MatRadioChange {\n    source;\n    value;\n    constructor(\n    /** The radio button that emits the change event. */\n    source, \n    /** The value of the radio button. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true,\n};\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        disabledInteractive: false,\n    };\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup {\n    _changeDetector = inject(ChangeDetectorRef);\n    /** Selected value for the radio group. */\n    _value = null;\n    /** The HTML name attribute applied to radio buttons in this group. */\n    _name = inject(_IdGenerator).getId('mat-radio-group-');\n    /** The currently selected radio button. Should match value. */\n    _selected = null;\n    /** Whether the `value` has been set to its initial value. */\n    _isInitialized = false;\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    _labelPosition = 'after';\n    /** Whether the radio group is disabled. */\n    _disabled = false;\n    /** Whether the radio group is required. */\n    _required = false;\n    /** Subscription to changes in amount of radio buttons. */\n    _buttonChanges;\n    /** The method to be called in order to update ngModel */\n    _controlValueAccessorChangeFn = () => { };\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    onTouched = () => { };\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    change = new EventEmitter();\n    /** Child radio buttons. */\n    _radios;\n    /**\n     * Theme color of the radio buttons in the group. This API is supported in M2\n     * themes only, it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/radio/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() {\n        return this._selected;\n    }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = value;\n        this._markRadiosForCheck();\n    }\n    /** Whether buttons in the group should be interactive while they're disabled. */\n    get disabledInteractive() {\n        return this._disabledInteractive;\n    }\n    set disabledInteractive(value) {\n        this._disabledInteractive = value;\n        this._markRadiosForCheck();\n    }\n    _disabledInteractive = false;\n    constructor() { }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n        // Clear the `selected` button when it's destroyed since the tabindex of the rest of the\n        // buttons depends on it. Note that we don't clear the `value`, because the radio button\n        // may be swapped out with a similar one and there are some internal apps that depend on\n        // that behavior.\n        this._buttonChanges = this._radios.changes.subscribe(() => {\n            if (this.selected && !this._radios.find(radio => radio === this.selected)) {\n                this._selected = null;\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._buttonChanges?.unsubscribe();\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRadioGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatRadioGroup, isStandalone: true, selector: \"mat-radio-group\", inputs: { color: \"color\", name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: [\"disabled\", \"disabled\", booleanAttribute], required: [\"required\", \"required\", booleanAttribute], disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute] }, outputs: { change: \"change\" }, host: { attributes: { \"role\": \"radiogroup\" }, classAttribute: \"mat-mdc-radio-group\" }, providers: [\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ], queries: [{ propertyName: \"_radios\", predicate: i0.forwardRef(() => MatRadioButton), descendants: true }], exportAs: [\"matRadioGroup\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRadioGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-radio-group',\n                    exportAs: 'matRadioGroup',\n                    providers: [\n                        MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                        { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                    ],\n                    host: {\n                        'role': 'radiogroup',\n                        'class': 'mat-mdc-radio-group',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { change: [{\n                type: Output\n            }], _radios: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatRadioButton), { descendants: true }]\n            }], color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\nclass MatRadioButton {\n    _elementRef = inject(ElementRef);\n    _changeDetector = inject(ChangeDetectorRef);\n    _focusMonitor = inject(FocusMonitor);\n    _radioDispatcher = inject(UniqueSelectionDispatcher);\n    _defaultOptions = inject(MAT_RADIO_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    _ngZone = inject(NgZone);\n    _renderer = inject(Renderer2);\n    _uniqueId = inject(_IdGenerator).getId('mat-radio-');\n    _cleanupClick;\n    /** The unique ID for the radio button. */\n    id = this._uniqueId;\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    name;\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    ariaLabel;\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    ariaLabelledby;\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    ariaDescribedby;\n    /** Whether ripples are disabled inside the radio button */\n    disableRipple = false;\n    /** Tabindex of the radio button. */\n    tabIndex = 0;\n    /** Whether this radio button is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (this._checked !== value) {\n            this._checked = value;\n            if (value && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!value && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (value) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    _labelPosition;\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(value);\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        if (value !== this._required) {\n            this._changeDetector.markForCheck();\n        }\n        this._required = value;\n    }\n    /**\n     * Theme color of the radio button. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/radio/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n        // As per M2 design specifications the selection control radio should use the accent color\n        // palette by default. https://m2.material.io/components/radio-buttons#specs\n        return (this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            (this._defaultOptions && this._defaultOptions.color) ||\n            'accent');\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    _color;\n    /** Whether the radio button should remain interactive when it is disabled. */\n    get disabledInteractive() {\n        return (this._disabledInteractive || (this.radioGroup !== null && this.radioGroup.disabledInteractive));\n    }\n    set disabledInteractive(value) {\n        this._disabledInteractive = value;\n    }\n    _disabledInteractive;\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    change = new EventEmitter();\n    /** The parent radio group. May or may not be present. */\n    radioGroup;\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    /** Whether this radio is checked. */\n    _checked = false;\n    /** Whether this radio is disabled. */\n    _disabled;\n    /** Whether this radio is required. */\n    _required;\n    /** Value assigned to this radio. */\n    _value = null;\n    /** Unregister function for _radioDispatcher */\n    _removeUniqueSelectionListener = () => { };\n    /** Previous value of the input's tabindex. */\n    _previousTabIndex;\n    /** The native `<input type=radio>` element */\n    _inputElement;\n    /** Trigger elements for the ripple events. */\n    _rippleTrigger;\n    /** Whether animations are disabled. */\n    _noopAnimations = _animationsDisabled();\n    _injector = inject(Injector);\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        const radioGroup = inject(MAT_RADIO_GROUP, { optional: true });\n        const tabIndex = inject(new HostAttributeToken('tabindex'), { optional: true });\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._disabledInteractive = this._defaultOptions?.disabledInteractive ?? false;\n        if (tabIndex) {\n            this.tabIndex = numberAttribute(tabIndex, 0);\n        }\n    }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            if (this.checked) {\n                this.radioGroup.selected = this;\n            }\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n        this._removeUniqueSelectionListener = this._radioDispatcher.listen((id, name) => {\n            if (id !== this.id && name === this.name) {\n                this.checked = false;\n            }\n        });\n    }\n    ngDoCheck() {\n        this._updateTabIndex();\n    }\n    ngAfterViewInit() {\n        this._updateTabIndex();\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n        // We bind this outside of the zone, because:\n        // 1. Its logic is completely DOM-related so we can avoid some change detections.\n        // 2. There appear to be some internal tests that break when this triggers a change detection.\n        this._ngZone.runOutsideAngular(() => {\n            this._cleanupClick = this._renderer.listen(this._inputElement.nativeElement, 'click', this._onInputClick);\n        });\n    }\n    ngOnDestroy() {\n        this._cleanupClick?.();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Triggered when the radio button receives an interaction from the user. */\n    _onInputInteraction(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        if (!this.checked && !this.disabled) {\n            const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n            this.checked = true;\n            this._emitChangeEvent();\n            if (this.radioGroup) {\n                this.radioGroup._controlValueAccessorChangeFn(this.value);\n                if (groupValueChanged) {\n                    this.radioGroup._emitChangeEvent();\n                }\n            }\n        }\n    }\n    /** Triggered when the user clicks on the touch target. */\n    _onTouchTargetClick(event) {\n        this._onInputInteraction(event);\n        if (!this.disabled || this.disabledInteractive) {\n            // Normally the input should be focused already, but if the click\n            // comes from the touch target, then we might have to focus it ourselves.\n            this._inputElement?.nativeElement.focus();\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Called when the input is clicked. */\n    _onInputClick = (event) => {\n        // If the input is disabled while interactive, we need to prevent the\n        // selection from happening in this event handler. Note that even though\n        // this happens on `click` events, the logic applies when the user is\n        // navigating with the keyboard as well. An alternative way of doing\n        // this is by resetting the `checked` state in the `change` callback but\n        // it isn't optimal, because it can allow a pre-checked disabled button\n        // to be un-checked. This approach seems to cover everything.\n        if (this.disabled && this.disabledInteractive) {\n            event.preventDefault();\n        }\n    };\n    /** Gets the tabindex for the underlying input element. */\n    _updateTabIndex() {\n        const group = this.radioGroup;\n        let value;\n        // Implement a roving tabindex if the button is inside a group. For most cases this isn't\n        // necessary, because the browser handles the tab order for inputs inside a group automatically,\n        // but we need an explicitly higher tabindex for the selected button in order for things like\n        // the focus trap to pick it up correctly.\n        if (!group || !group.selected || this.disabled) {\n            value = this.tabIndex;\n        }\n        else {\n            value = group.selected === this ? this.tabIndex : -1;\n        }\n        if (value !== this._previousTabIndex) {\n            // We have to set the tabindex directly on the DOM node, because it depends on\n            // the selected state which is prone to \"changed after checked errors\".\n            const input = this._inputElement?.nativeElement;\n            if (input) {\n                input.setAttribute('tabindex', value + '');\n                this._previousTabIndex = value;\n                // Wait for any pending tabindex changes to be applied\n                afterNextRender(() => {\n                    queueMicrotask(() => {\n                        // The radio group uses a \"selection follows focus\" pattern for tab management, so if this\n                        // radio button is currently focused and another radio button in the group becomes\n                        // selected, we should move focus to the newly selected radio button to maintain\n                        // consistency between the focused and selected states.\n                        if (group &&\n                            group.selected &&\n                            group.selected !== this &&\n                            document.activeElement === input) {\n                            group.selected?._inputElement.nativeElement.focus();\n                            // If this radio button still has focus, the selected one must be disabled. In this\n                            // case the radio group as a whole should lose focus.\n                            if (document.activeElement === input) {\n                                this._inputElement.nativeElement.blur();\n                            }\n                        }\n                    });\n                }, { injector: this._injector });\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRadioButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatRadioButton, isStandalone: true, selector: \"mat-radio-button\", inputs: { id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))], checked: [\"checked\", \"checked\", booleanAttribute], value: \"value\", labelPosition: \"labelPosition\", disabled: [\"disabled\", \"disabled\", booleanAttribute], required: [\"required\", \"required\", booleanAttribute], color: \"color\", disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute] }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"_inputElement.nativeElement.focus()\" }, properties: { \"attr.id\": \"id\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.mat-mdc-radio-checked\": \"checked\", \"class.mat-mdc-radio-disabled\": \"disabled\", \"class.mat-mdc-radio-disabled-interactive\": \"disabledInteractive\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" }, classAttribute: \"mat-mdc-radio-button\" }, viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"_rippleTrigger\", first: true, predicate: [\"formField\"], descendants: true, read: ElementRef, static: true }], exportAs: [\"matRadioButton\"], ngImport: i0, template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" #formField>\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-radio-touch-target\\\" (click)=\\\"_onTouchTargetClick($event)\\\"></div>\\n    <!--\\n      Note that we set `aria-invalid=\\\"false\\\"` on the input, because otherwise some screen readers\\n      will read out \\\"required, invalid data\\\" for each radio button that hasn't been checked.\\n      An alternate approach is to use `aria-required` instead of `required`, however we have an\\n      internal check which enforces that elements marked as `aria-required` also have the `required`\\n      attribute which ends up re-introducing the issue for us.\\n    -->\\n    <input #input class=\\\"mdc-radio__native-control\\\" type=\\\"radio\\\"\\n           [id]=\\\"inputId\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [required]=\\\"required\\\"\\n           aria-invalid=\\\"false\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n           (change)=\\\"_onInputInteraction($event)\\\">\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"_rippleTrigger.nativeElement\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\">\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n  <label class=\\\"mdc-label\\\" [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mat-mdc-radio-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-radio-button .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mat-radio-state-layer-size, 40px) - 20px)/2)}.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:not([disabled])~.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-unselected-hover-icon-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__inner-circle{border-color:var(--mat-radio-selected-hover-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio:active>.mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-unselected-pressed-icon-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button .mdc-radio:active>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:active>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__inner-circle{border-color:var(--mat-radio-selected-pressed-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-radio-button .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mat-radio-state-layer-size, 40px);height:var(--mat-radio-state-layer-size, 40px);top:calc(-1*(var(--mat-radio-state-layer-size, 40px) - 20px)/2);left:calc(-1*(var(--mat-radio-state-layer-size, 40px) - 20px)/2)}.mat-mdc-radio-button .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-radio-button .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-radio-button .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mat-radio-state-layer-size, 40px);height:var(--mat-radio-state-layer-size, 40px)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-unselected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-selected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-unselected-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-radio-button .mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__inner-circle{border-color:var(--mat-radio-selected-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio__native-control:enabled:focus:checked+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:enabled:focus:checked+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-selected-focus-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled{pointer-events:auto}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-unselected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled:hover .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled:hover .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:checked:focus+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:checked:focus+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-selected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element,.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-radio-checked-ripple-color, var(--mat-sys-primary))}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mat-ripple-element,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button .mat-internal-form-field{color:var(--mat-radio-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-radio-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-radio-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-radio-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-radio-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-radio-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-radio-button .mdc-radio--disabled+label{color:var(--mat-radio-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple>.mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button .mdc-radio>.mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button.cdk-focused .mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-radio-disabled{cursor:default;pointer-events:none}.mat-mdc-radio-disabled.mat-mdc-radio-disabled-interactive{pointer-events:auto}.mat-mdc-radio-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-radio-touch-target-display, block)}[dir=rtl] .mat-mdc-radio-touch-target{left:auto;right:50%;transform:translate(50%, -50%)}\\n\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: _MatInternalFormField, selector: \"div[mat-internal-form-field]\", inputs: [\"labelPosition\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRadioButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-radio-button', host: {\n                        'class': 'mat-mdc-radio-button',\n                        '[attr.id]': 'id',\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class.mat-mdc-radio-checked]': 'checked',\n                        '[class.mat-mdc-radio-disabled]': 'disabled',\n                        '[class.mat-mdc-radio-disabled-interactive]': 'disabledInteractive',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                        // Note: under normal conditions focus shouldn't land on this element, however it may be\n                        // programmatically set, for example inside of a focus trap, in this case we want to forward\n                        // the focus to the native element.\n                        '(focus)': '_inputElement.nativeElement.focus()',\n                    }, exportAs: 'matRadioButton', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatRipple, _MatInternalFormField], template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" #formField>\\n  <div class=\\\"mdc-radio\\\" [class.mdc-radio--disabled]=\\\"disabled\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-radio-touch-target\\\" (click)=\\\"_onTouchTargetClick($event)\\\"></div>\\n    <!--\\n      Note that we set `aria-invalid=\\\"false\\\"` on the input, because otherwise some screen readers\\n      will read out \\\"required, invalid data\\\" for each radio button that hasn't been checked.\\n      An alternate approach is to use `aria-required` instead of `required`, however we have an\\n      internal check which enforces that elements marked as `aria-required` also have the `required`\\n      attribute which ends up re-introducing the issue for us.\\n    -->\\n    <input #input class=\\\"mdc-radio__native-control\\\" type=\\\"radio\\\"\\n           [id]=\\\"inputId\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [required]=\\\"required\\\"\\n           aria-invalid=\\\"false\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n           (change)=\\\"_onInputInteraction($event)\\\">\\n    <div class=\\\"mdc-radio__background\\\">\\n      <div class=\\\"mdc-radio__outer-circle\\\"></div>\\n      <div class=\\\"mdc-radio__inner-circle\\\"></div>\\n    </div>\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"_rippleTrigger.nativeElement\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\">\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n  <label class=\\\"mdc-label\\\" [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mat-mdc-radio-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-radio-button .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mat-radio-state-layer-size, 40px) - 20px)/2)}.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:not([disabled])~.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-unselected-hover-icon-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__inner-circle{border-color:var(--mat-radio-selected-hover-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio:active>.mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-unselected-pressed-icon-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button .mdc-radio:active>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:active>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__inner-circle{border-color:var(--mat-radio-selected-pressed-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-radio-button .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mat-radio-state-layer-size, 40px);height:var(--mat-radio-state-layer-size, 40px);top:calc(-1*(var(--mat-radio-state-layer-size, 40px) - 20px)/2);left:calc(-1*(var(--mat-radio-state-layer-size, 40px) - 20px)/2)}.mat-mdc-radio-button .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-radio-button .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-radio-button .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mat-radio-state-layer-size, 40px);height:var(--mat-radio-state-layer-size, 40px)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-unselected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-selected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-unselected-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-radio-button .mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__inner-circle{border-color:var(--mat-radio-selected-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio__native-control:enabled:focus:checked+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:enabled:focus:checked+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-selected-focus-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled{pointer-events:auto}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-unselected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled:hover .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled:hover .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:checked:focus+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:checked:focus+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-disabled-selected-icon-color, var(--mat-sys-on-surface));opacity:var(--mat-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element,.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-radio-checked-ripple-color, var(--mat-sys-primary))}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mat-ripple-element,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button .mat-internal-form-field{color:var(--mat-radio-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-radio-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-radio-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-radio-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-radio-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-radio-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-radio-button .mdc-radio--disabled+label{color:var(--mat-radio-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple>.mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button .mdc-radio>.mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mat-radio-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button.cdk-focused .mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-radio-disabled{cursor:default;pointer-events:none}.mat-mdc-radio-disabled.mat-mdc-radio-disabled-interactive{pointer-events:auto}.mat-mdc-radio-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-radio-touch-target-display, block)}[dir=rtl] .mat-mdc-radio-touch-target{left:auto;right:50%;transform:translate(50%, -50%)}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], color: [{\n                type: Input\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], change: [{\n                type: Output\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], _rippleTrigger: [{\n                type: ViewChild,\n                args: ['formField', { read: ElementRef, static: true }]\n            }] } });\n\nclass MatRadioModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRadioModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRadioModule, imports: [MatCommonModule, MatRippleModule, MatRadioGroup, MatRadioButton], exports: [MatCommonModule, MatRadioGroup, MatRadioButton] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRadioModule, imports: [MatCommonModule, MatRippleModule, MatRadioButton, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRadioModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule, MatRadioGroup, MatRadioButton],\n                    exports: [MatCommonModule, MatRadioGroup, MatRadioButton],\n                }]\n        }] });\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule };\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { InjectionToken, inject, ANIMATION_MODULE_TYPE } from '@angular/core';\n\n/** Injection token used to configure the animations in Angular Material. */\nconst MATERIAL_ANIMATIONS = new InjectionToken('MATERIAL_ANIMATIONS');\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationCurves {\n    static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationDurations {\n    static COMPLEX = '375ms';\n    static ENTERING = '225ms';\n    static EXITING = '195ms';\n}\n/**\n * Returns whether animations have been disabled by DI. Must be called in a DI context.\n * @docs-private\n */\nfunction _animationsDisabled() {\n    if (inject(MATERIAL_ANIMATIONS, { optional: true })?.animationsDisabled ||\n        inject(ANIMATION_MODULE_TYPE, { optional: true }) === 'NoopAnimations') {\n        return true;\n    }\n    const mediaMatcher = inject(MediaMatcher);\n    return mediaMatcher.matchMedia('(prefers-reduced-motion)').matches;\n}\n\nexport { AnimationCurves as A, MATERIAL_ANIMATIONS as M, _animationsDisabled as _, AnimationDurations as a };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Component used to load structural styles for focus indicators.\n * @docs-private\n */\nclass _StructuralStylesLoader {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _StructuralStylesLoader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _StructuralStylesLoader, isStandalone: true, selector: \"structural-styles\", ngImport: i0, template: '', isInline: true, styles: [\".mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border-width:var(--mat-focus-indicator-border-width, 3px);border-style:var(--mat-focus-indicator-border-style, solid);border-color:var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\\\"\\\"}@media(forced-colors: active){html{--mat-focus-indicator-display: block}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _StructuralStylesLoader, decorators: [{\n            type: Component,\n            args: [{ selector: 'structural-styles', encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border-width:var(--mat-focus-indicator-border-width, 3px);border-style:var(--mat-focus-indicator-border-style, solid);border-color:var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\\\"\\\"}@media(forced-colors: active){html{--mat-focus-indicator-display: block}}\\n\"] }]\n        }] });\n\nexport { _StructuralStylesLoader as _ };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatRipple } from './ripple-BYgV4oZC.mjs';\n\nclass MatRippleModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatRipple], exports: [MatRipple, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRipple],\n                    exports: [MatRipple, MatCommonModule],\n                }]\n        }] });\n\nexport { MatRippleModule as M };\n"],"names":["HighContrastModeDetector","BidiModule","i0","InjectionToken","inject","NgModule","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","constructor","_applyBodyHighContrastModeCssClasses","ɵfac","MatCommonModule_Factory","__ngFactoryType__","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ngDevMode","M","a","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","_c0","_c1","_MatInternalFormField","labelPosition","_MatInternalFormField_Factory","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","hostVars","hostBindings","_MatInternalFormField_HostBindings","rf","ctx","ɵɵclassProp","inputs","attrs","ngContentSelectors","decls","vars","template","_MatInternalFormField_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","_","normalizePassiveListenerOptions","_getEventTarget","Platform","ElementRef","NgZone","Injector","Directive","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","coerceElement","_CdkPrivateStyleLoader","_animationsDisabled","RippleState","RippleRef","_renderer","element","config","_animationForciblyDisabledThroughCss","state","HIDDEN","fadeOut","fadeOutRipple","passiveCapturingEventOptions$1","passive","capture","RippleEventManager","_events","Map","addHandler","ngZone","name","handler","handlersForEvent","get","handlersForElement","add","set","Set","runOutsideAngular","document","addEventListener","_delegateEventHandler","removeHandler","delete","size","removeEventListener","event","target","forEach","handlers","contains","handleEvent","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveCapturingEventOptions","pointerDownEvents","pointerUpEvents","_MatRippleStylesLoader","_MatRippleStylesLoader_Factory","_MatRippleStylesLoader_Template","RippleRenderer","_target","_ngZone","_platform","_containerElement","_triggerElement","_isPointerDown","_activeRipples","_mostRecentTransientRipple","_lastTouchStartEvent","_pointerUpEventsRegistered","_containerRect","_eventManager","elementOrElementRef","injector","isBrowser","load","fadeInRipple","x","y","containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","ripple","createElement","classList","style","color","backgroundColor","transitionDuration","appendChild","computedStyles","window","getComputedStyle","userTransitionProperty","transitionProperty","userTransitionDuration","animationForciblyDisabledThroughCss","rippleRef","transform","FADING_IN","persistent","eventListeners","onTransitionEnd","fallbackTimer","clearTimeout","_finishRippleTransition","onTransitionCancel","_destroyRipple","setTimeout","FADING_OUT","rippleEl","opacity","fadeOutAll","_getActiveRipples","fadeOutAllNonPersistent","setupTriggerEvents","_removeTriggerEvents","_onMousedown","_onTouchStart","_onPointerUp","_startFadeOutTransition","isMostRecentTransientRipple","VISIBLE","remove","isFakeMousedown","isSyntheticEvent","Date","now","rippleDisabled","clientX","clientY","rippleConfig","touches","changedTouches","i","length","isVisible","terminateOnPointerUp","Array","from","keys","trigger","rect","distX","Math","max","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","_elementRef","unbounded","disabled","_disabled","value","_setupTriggerEventsIfEnabled","_trigger","nativeElement","_rippleRenderer","_globalOptions","_isInitialized","platform","globalOptions","optional","ngOnInit","ngOnDestroy","launch","configOrX","MatRipple_Factory","ɵdir","ɵɵdefineDirective","MatRipple_HostBindings","exportAs","R","b","c","d","_IdGenerator","FocusMonitor","UniqueSelectionDispatcher","forwardRef","ChangeDetectorRef","EventEmitter","booleanAttribute","Output","ContentChildren","Renderer2","HostAttributeToken","numberAttribute","afterNextRender","ViewChild","NG_VALUE_ACCESSOR","_StructuralStylesLoader","MatRippleModule","_c2","MatRadioChange","source","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatRadioGroup","multi","MAT_RADIO_GROUP","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","disabledInteractive","_changeDetector","_value","_name","getId","_selected","_labelPosition","_required","_buttonChanges","_controlValueAccessorChangeFn","onTouched","change","_radios","_updateRadioButtonNames","v","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","checked","selected","required","_disabledInteractive","ngAfterContentInit","changes","subscribe","find","radio","unsubscribe","_touch","_markForCheck","isAlreadySelected","_emitChangeEvent","emit","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","MatRadioGroup_Factory","contentQueries","MatRadioGroup_ContentQueries","dirIndex","ɵɵcontentQuery","MatRadioButton","_t","ɵɵqueryRefresh","ɵɵloadQuery","outputs","features","ɵɵProvidersFeature","_focusMonitor","_radioDispatcher","_defaultOptions","_uniqueId","_cleanupClick","id","ariaLabel","ariaLabelledby","ariaDescribedby","disableRipple","tabIndex","_checked","radioGroup","notify","_setDisabled","_color","inputId","_removeUniqueSelectionListener","_previousTabIndex","_inputElement","_rippleTrigger","_noopAnimations","_injector","focus","options","origin","focusVia","listen","ngDoCheck","_updateTabIndex","ngAfterViewInit","monitor","focusOrigin","_onInputClick","stopMonitoring","_isRippleDisabled","_onInputInteraction","stopPropagation","groupValueChanged","_onTouchTargetClick","preventDefault","group","input","setAttribute","queueMicrotask","activeElement","blur","MatRadioButton_Factory","viewQuery","MatRadioButton_Query","ɵɵviewQuery","first","MatRadioButton_HostBindings","ɵɵlistener","MatRadioButton_focus_HostBindingHandler","ɵɵattribute","consts","MatRadioButton_Template","_r1","ɵɵgetCurrentView","ɵɵelementStart","MatRadioButton_Template_div_click_3_listener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵelementEnd","MatRadioButton_Template_input_change_4_listener","ɵɵelement","ɵɵproperty","ɵɵadvance","dependencies","MatRadioModule","MatRadioModule_Factory","MediaMatcher","ANIMATION_MODULE_TYPE","MATERIAL_ANIMATIONS","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","animationsDisabled","mediaMatcher","matchMedia","matches","A","_StructuralStylesLoader_Factory","_StructuralStylesLoader_Template","MatRippleModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6]}