{"version":3,"file":"9975.js","mappings":";;;;;;;;;;;;;;AAA6C;AAE7C,MAAMC,UAAU,CAAC;AAEjB;AACA,SAASC,YAAYA,CAACC,KAAK,EAAE;EACzB;EACA;EACA;EACA;EACA,OAAOA,KAAK,IAAI,OAAOA,KAAK,CAACC,OAAO,KAAK,UAAU,IAAI,EAAED,KAAK,YAAYH,uDAAqB,CAAC;AACpG;;;;;;;;;;;;;;;;;ACXoC;AAC4B;AACZ;;AAEpD;AACA;AACA,IAAIY,kBAAkB;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI;EACAA,kBAAkB,GAAG,OAAOC,IAAI,KAAK,WAAW,IAAIA,IAAI,CAACC,eAAe;AAC5E,CAAC,CACD,MAAM;EACFF,kBAAkB,GAAG,KAAK;AAC9B;AACA;AACA;AACA;AACA;AAHA,IAIMG,QAAQ;EAAd,MAAMA,QAAQ,CAAC;IACXC,WAAW,GAAGR,qDAAM,CAACC,sDAAW,CAAC;IACjC;IACA;IACA;IACA;IACAQ,SAAS,GAAG,IAAI,CAACD,WAAW,GACtBL,kEAAiB,CAAC,IAAI,CAACK,WAAW,CAAC,GACnC,OAAOE,QAAQ,KAAK,QAAQ,IAAI,CAAC,CAACA,QAAQ;IAChD;IACAC,IAAI,GAAG,IAAI,CAACF,SAAS,IAAI,SAAS,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;IAC5D;IACAC,OAAO,GAAG,IAAI,CAACN,SAAS,IAAI,iBAAiB,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;IACvE;IACA;IACAE,KAAK,GAAG,IAAI,CAACP,SAAS,IAClB,CAAC,EAAEQ,MAAM,CAACC,MAAM,IAAId,kBAAkB,CAAC,IACvC,OAAOe,GAAG,KAAK,WAAW,IAC1B,CAAC,IAAI,CAACR,IAAI,IACV,CAAC,IAAI,CAACI,OAAO;IACjB;IACA;IACA;IACAK,MAAM,GAAG,IAAI,CAACX,SAAS,IACnB,cAAc,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IACxC,CAAC,IAAI,CAACE,KAAK,IACX,CAAC,IAAI,CAACL,IAAI,IACV,CAAC,IAAI,CAACI,OAAO;IACjB;IACAM,GAAG,GAAG,IAAI,CAACZ,SAAS,IAAI,kBAAkB,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IAAI,EAAE,UAAU,IAAIG,MAAM,CAAC;IAC/F;IACA;IACA;IACA;IACA;IACAK,OAAO,GAAG,IAAI,CAACb,SAAS,IAAI,sBAAsB,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;IAC5E;IACA;IACAS,OAAO,GAAG,IAAI,CAACd,SAAS,IAAI,UAAU,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IAAI,CAAC,IAAI,CAACC,OAAO;IACjF;IACA;IACA;IACA;IACAS,MAAM,GAAG,IAAI,CAACf,SAAS,IAAI,SAAS,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IAAI,IAAI,CAACM,MAAM;IAC7EK,WAAWA,CAAA,EAAG,CAAE;IAChB,OAAOC,IAAI,YAAAC,iBAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAwFrB,QAAQ;IAAA;IAC3G,OAAOsB,KAAK,kBAD6E9B,gEAAE;MAAAgC,KAAA,EACYxB,QAAQ;MAAAyB,OAAA,EAARzB,QAAQ,CAAAmB,IAAA;MAAAO,UAAA,EAAc;IAAM;EACvI;EAAC,OA/CK1B,QAAQ;AAAA;AAgDd;EAAA,QAAA2B,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;;ACtEoC;AAC+D;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMM,YAAY,gBAAG,IAAIJ,yDAAc,CAAC,aAAa,EAAE;EACnDH,UAAU,EAAE,MAAM;EAClBD,OAAO,EAAES;AACb,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoBA,CAAA,EAAG;EAC5B,OAAOzC,qDAAM,CAACqC,mDAAQ,CAAC;AAC3B;;AAEA;AACA,MAAMK,kBAAkB,GAAG,oHAAoH;AAC/I;AACA,SAASC,sBAAsBA,CAACC,QAAQ,EAAE;EACtC,MAAMjD,KAAK,GAAGiD,QAAQ,EAAEC,WAAW,CAAC,CAAC,IAAI,EAAE;EAC3C,IAAIlD,KAAK,KAAK,MAAM,IAAI,OAAOkB,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAEiC,QAAQ,EAAE;IAC7E,OAAOJ,kBAAkB,CAAC9B,IAAI,CAACC,SAAS,CAACiC,QAAQ,CAAC,GAAG,KAAK,GAAG,KAAK;EACtE;EACA,OAAOnD,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK;AAC1C;AACA;AACA;AACA;AACA;AAHA,IAIMoD,cAAc;EAApB,MAAMA,cAAc,CAAC;IACjB;IACA,IAAIpD,KAAKA,CAAA,EAAG;MACR,OAAO,IAAI,CAACqD,WAAW,CAAC,CAAC;IAC7B;IACA;AACJ;AACA;IACIA,WAAW,GAAGV,qDAAM,CAAC,KAAK,CAAC;IAC3B;IACAW,MAAM,GAAG,IAAIV,uDAAY,CAAC,CAAC;IAC3Bd,WAAWA,CAAA,EAAG;MACV,MAAMyB,SAAS,GAAGlD,qDAAM,CAACwC,YAAY,EAAE;QAAEW,QAAQ,EAAE;MAAK,CAAC,CAAC;MAC1D,IAAID,SAAS,EAAE;QACX,MAAME,OAAO,GAAGF,SAAS,CAACG,IAAI,GAAGH,SAAS,CAACG,IAAI,CAACC,GAAG,GAAG,IAAI;QAC1D,MAAMC,OAAO,GAAGL,SAAS,CAACM,eAAe,GAAGN,SAAS,CAACM,eAAe,CAACF,GAAG,GAAG,IAAI;QAChF,IAAI,CAACN,WAAW,CAACS,GAAG,CAACd,sBAAsB,CAACS,OAAO,IAAIG,OAAO,IAAI,KAAK,CAAC,CAAC;MAC7E;IACJ;IACAG,WAAWA,CAAA,EAAG;MACV,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC;IAC1B;IACA,OAAOjC,IAAI,YAAAkC,uBAAAhC,iBAAA;MAAA,YAAAA,iBAAA,IAAwFmB,cAAc;IAAA;IACjH,OAAOlB,KAAK,kBAD6E9B,gEAAE;MAAAgC,KAAA,EACYgB,cAAc;MAAAf,OAAA,EAAde,cAAc,CAAArB,IAAA;MAAAO,UAAA,EAAc;IAAM;EAC7I;EAAC,OAxBKc,cAAc;AAAA;AAyBpB;EAAA,QAAAb,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;ACtEA;AACA,IAAI6B,iBAAiB,gBACpB,UAAUA,iBAAiB,EAAE;EAC1B;AACJ;AACA;AACA;EACIA,iBAAiB,CAACA,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EAC7D;AACJ;AACA;AACA;EACIA,iBAAiB,CAACA,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EAC/D;AACJ;AACA;AACA;EACIA,iBAAiB,CAACA,iBAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EAAC,OAf3DA,iBAAiB;AAgB5B,CAAC,CAAEA,iBAAiB,IAAyB,CAAC,CAAE,CAjB3B;AAkBrB;AACA,IAAIC,iBAAiB;AACrB;AACA,IAAIC,uBAAuB;AAC3B;AACA,SAASC,sBAAsBA,CAAA,EAAG;EAC9B,IAAID,uBAAuB,IAAI,IAAI,EAAE;IACjC;IACA;IACA,IAAI,OAAOvD,QAAQ,KAAK,QAAQ,IAAI,CAACA,QAAQ,IAAI,OAAOyD,OAAO,KAAK,UAAU,IAAI,CAACA,OAAO,EAAE;MACxFF,uBAAuB,GAAG,KAAK;MAC/B,OAAOA,uBAAuB;IAClC;IACA;IACA,IAAI,gBAAgB,IAAIvD,QAAQ,CAAC8C,eAAe,CAACY,KAAK,EAAE;MACpDH,uBAAuB,GAAG,IAAI;IAClC,CAAC,MACI;MACD;MACA;MACA,MAAMI,gBAAgB,GAAGF,OAAO,CAACG,SAAS,CAACC,QAAQ;MACnD,IAAIF,gBAAgB,EAAE;QAClB;QACA;QACA;QACA;QACAJ,uBAAuB,GAAG,CAAC,2BAA2B,CAACrD,IAAI,CAACyD,gBAAgB,CAACG,QAAQ,CAAC,CAAC,CAAC;MAC5F,CAAC,MACI;QACDP,uBAAuB,GAAG,KAAK;MACnC;IACJ;EACJ;EACA,OAAOA,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA,SAASQ,oBAAoBA,CAAA,EAAG;EAC5B;EACA,IAAI,OAAO/D,QAAQ,KAAK,QAAQ,IAAI,CAACA,QAAQ,EAAE;IAC3C,OAAOqD,iBAAiB,CAACW,MAAM;EACnC;EACA,IAAIV,iBAAiB,IAAI,IAAI,EAAE;IAC3B;IACA,MAAMW,eAAe,GAAGjE,QAAQ,CAACkE,aAAa,CAAC,KAAK,CAAC;IACrD,MAAMC,cAAc,GAAGF,eAAe,CAACP,KAAK;IAC5CO,eAAe,CAACrB,GAAG,GAAG,KAAK;IAC3BuB,cAAc,CAACC,KAAK,GAAG,KAAK;IAC5BD,cAAc,CAACE,QAAQ,GAAG,MAAM;IAChCF,cAAc,CAACG,UAAU,GAAG,QAAQ;IACpCH,cAAc,CAACI,aAAa,GAAG,MAAM;IACrCJ,cAAc,CAACK,QAAQ,GAAG,UAAU;IACpC,MAAMC,OAAO,GAAGzE,QAAQ,CAACkE,aAAa,CAAC,KAAK,CAAC;IAC7C,MAAMQ,YAAY,GAAGD,OAAO,CAACf,KAAK;IAClCgB,YAAY,CAACN,KAAK,GAAG,KAAK;IAC1BM,YAAY,CAACC,MAAM,GAAG,KAAK;IAC3BV,eAAe,CAACW,WAAW,CAACH,OAAO,CAAC;IACpCzE,QAAQ,CAAC2C,IAAI,CAACiC,WAAW,CAACX,eAAe,CAAC;IAC1CX,iBAAiB,GAAGD,iBAAiB,CAACW,MAAM;IAC5C;IACA;IACA;IACA,IAAIC,eAAe,CAACY,UAAU,KAAK,CAAC,EAAE;MAClC;MACA;MACA;MACA;MACAZ,eAAe,CAACY,UAAU,GAAG,CAAC;MAC9BvB,iBAAiB,GACbW,eAAe,CAACY,UAAU,KAAK,CAAC,GAAGxB,iBAAiB,CAACyB,OAAO,GAAGzB,iBAAiB,CAAC0B,QAAQ;IACjG;IACAd,eAAe,CAACe,MAAM,CAAC,CAAC;EAC5B;EACA,OAAO1B,iBAAiB;AAC5B;;;;;;;;;;;;;;;;;;;;AC/FiG;AAC/B;AAC9B;AACqD;;AAEzF;AACA;AACA;AACA;AACA;AACA;AALA,IAMMkC,GAAG;EAAT,MAAMA,GAAG,CAAC;IACN;IACAC,cAAc,GAAG,KAAK;IACtB;IACAC,OAAO;IACP;IACAnD,MAAM,GAAG,IAAIV,uDAAY,CAAC,CAAC;IAC3B;IACA,IAAIe,GAAGA,CAAA,EAAG;MACN,OAAO,IAAI,CAACN,WAAW,CAAC,CAAC;IAC7B;IACA,IAAIM,GAAGA,CAAC3D,KAAK,EAAE;MACX,MAAM0G,aAAa,GAAG,IAAI,CAACrD,WAAW,CAAC,CAAC;MACxC;MACA;MACA;MACA,IAAI,CAACA,WAAW,CAACS,GAAG,CAACd,+DAAsB,CAAChD,KAAK,CAAC,CAAC;MACnD,IAAI,CAACyG,OAAO,GAAGzG,KAAK;MACpB,IAAI0G,aAAa,KAAK,IAAI,CAACrD,WAAW,CAAC,CAAC,IAAI,IAAI,CAACmD,cAAc,EAAE;QAC7D,IAAI,CAAClD,MAAM,CAACqD,IAAI,CAAC,IAAI,CAACtD,WAAW,CAAC,CAAC,CAAC;MACxC;IACJ;IACA;IACA,IAAIrD,KAAKA,CAAA,EAAG;MACR,OAAO,IAAI,CAAC2D,GAAG;IACnB;IACAN,WAAW,GAAGV,qDAAM,CAAC,KAAK,CAAC;IAC3B;IACAiE,kBAAkBA,CAAA,EAAG;MACjB,IAAI,CAACJ,cAAc,GAAG,IAAI;IAC9B;IACAzC,WAAWA,CAAA,EAAG;MACV,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC;IAC1B;IACA,OAAOjC,IAAI,YAAA8E,YAAA5E,iBAAA;MAAA,YAAAA,iBAAA,IAAwFsE,GAAG;IAAA;IACtG,OAAOO,IAAI,kBAD8E1G,+DAAE;MAAA4G,IAAA,EACJT,GAAG;MAAAU,SAAA;MAAAC,QAAA;MAAAC,YAAA,WAAAC,iBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UADDjH,yDAAE,QAAAkH,GAAA,CAAAb,OAAA;QAAA;MAAA;MAAAe,MAAA;QAAA7D,GAAA;MAAA;MAAA8D,OAAA;QAAAnE,MAAA;MAAA;MAAAoE,QAAA;MAAAC,QAAA,GAAFvH,gEAAE,CAC8J,CAAC;QAAEyH,OAAO,EAAEzE,2DAAc;QAAE0E,WAAW,EAAEvB;MAAI,CAAC,CAAC;IAAA;EAC5S;EAAC,OApCKA,GAAG;AAAA;AAqCT;EAAA,QAAAhE,SAAA,oBAAAA,SAAA;AAAA;AAaoB,IAEdwF,UAAU;EAAhB,MAAMA,UAAU,CAAC;IACb,OAAOhG,IAAI,YAAAiG,mBAAA/F,iBAAA;MAAA,YAAAA,iBAAA,IAAwF8F,UAAU;IAAA;IAC7G,OAAOE,IAAI,kBApB8E7H,8DAAE;MAAA4G,IAAA,EAoBSe;IAAU;IAC9G,OAAOI,IAAI,kBArB8E/H,8DAAE;EAsB/F;EAAC,OAJK2H,UAAU;AAAA;AAKhB;EAAA,QAAAxF,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACpEwC;AACqB;AACd;;AAE/C;AACA,MAAMgG,eAAe,SAASzI,wDAAU,CAAC;EACrC0I,KAAK;EACL1G,WAAWA,CAAC0G,KAAK,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EACAvI,OAAOA,CAAA,EAAG;IACN,OAAOoI,kDAAY,CAAC,IAAI,CAACG,KAAK,CAAC,GAAG,IAAI,CAACA,KAAK,GAAGF,wCAAE,CAAC,IAAI,CAACE,KAAK,CAAC;EACjE;EACAC,UAAUA,CAAA,EAAG,CAAE;AACnB;;AAEA;AACA,IAAIC,sBAAsB,gBACzB,UAAUA,sBAAsB,EAAE;EAC/B;EACAA,sBAAsB,CAACA,sBAAsB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EAC3E;EACAA,sBAAsB,CAACA,sBAAsB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EAC3E;EACAA,sBAAsB,CAACA,sBAAsB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACrE;EACAA,sBAAsB,CAACA,sBAAsB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EAAC,OARnEA,sBAAsB;AASjC,CAAC,CAAEA,sBAAsB,IAA8B,CAAC,CAAE,CAVhC;AAW1B;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,gBAAG,IAAIlG,yDAAc,CAAC,eAAe,CAAC;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMmG,4BAA4B,CAAC;EAC/B;AACJ;AACA;AACA;EACIC,aAAa,GAAG,EAAE;EAClB;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,GAAG,EAAE;EACf;EACAC,YAAYA,CAACC,OAAO,EAAEC,gBAAgB,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,eAAe,EAAE;IAC5F;IACAJ,OAAO,CAACK,gBAAgB,CAAC,CAACC,MAAM,EAAEC,qBAAqB,EAAEC,YAAY,KAAK;MACtE,IAAIC,IAAI;MACR,IAAIC,SAAS;MACb,IAAIJ,MAAM,CAACK,aAAa,IAAI,IAAI,EAAE;QAC9B;QACA,MAAMC,eAAe,GAAGA,CAAA,KAAMV,kBAAkB,CAACI,MAAM,EAAEC,qBAAqB,EAAEC,YAAY,CAAC;QAC7FC,IAAI,GAAG,IAAI,CAACI,WAAW,CAACD,eAAe,EAAEJ,YAAY,EAAEP,gBAAgB,EAAEE,iBAAiB,CAACG,MAAM,CAAC,CAAC;QACnGI,SAAS,GAAGD,IAAI,GAAGf,sBAAsB,CAACoB,QAAQ,GAAGpB,sBAAsB,CAACqB,QAAQ;MACxF,CAAC,MACI,IAAIP,YAAY,IAAI,IAAI,EAAE;QAC3B;QACA,IAAI,CAACQ,mBAAmB,CAACT,qBAAqB,EAAEN,gBAAgB,CAAC;QACjES,SAAS,GAAGhB,sBAAsB,CAACuB,OAAO;MAC9C,CAAC,MACI;QACD;QACAR,IAAI,GAAG,IAAI,CAACS,SAAS,CAACX,qBAAqB,EAAEC,YAAY,EAAEP,gBAAgB,EAAEE,iBAAiB,CAACG,MAAM,CAAC,CAAC;QACvGI,SAAS,GAAGhB,sBAAsB,CAACyB,KAAK;MAC5C;MACA,IAAIf,eAAe,EAAE;QACjBA,eAAe,CAAC;UACZgB,OAAO,EAAEX,IAAI,EAAEW,OAAO;UACtBV,SAAS;UACTJ;QACJ,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;EACAe,MAAMA,CAAA,EAAG;IACL,KAAK,MAAMZ,IAAI,IAAI,IAAI,CAACX,UAAU,EAAE;MAChCW,IAAI,CAACa,OAAO,CAAC,CAAC;IAClB;IACA,IAAI,CAACxB,UAAU,GAAG,EAAE;EACxB;EACA;AACJ;AACA;AACA;EACIe,WAAWA,CAACD,eAAe,EAAEJ,YAAY,EAAEP,gBAAgB,EAAEjJ,KAAK,EAAE;IAChE,MAAMuK,UAAU,GAAG,IAAI,CAACC,oBAAoB,CAAChB,YAAY,EAAEP,gBAAgB,CAAC;IAC5E,IAAIsB,UAAU,EAAE;MACZA,UAAU,CAACH,OAAO,CAACK,SAAS,GAAGzK,KAAK;MACpC,OAAO0K,SAAS;IACpB;IACA,MAAMC,QAAQ,GAAGf,eAAe,CAAC,CAAC;IAClC,OAAOX,gBAAgB,CAAC2B,kBAAkB,CAACD,QAAQ,CAACE,WAAW,EAAEF,QAAQ,CAACP,OAAO,EAAEO,QAAQ,CAACG,KAAK,CAAC;EACtG;EACA;EACAd,mBAAmBA,CAACc,KAAK,EAAE7B,gBAAgB,EAAE;IACzC,MAAM8B,YAAY,GAAG9B,gBAAgB,CAACoB,MAAM,CAACS,KAAK,CAAC;IACnD,IAAI,CAACE,eAAe,CAACD,YAAY,EAAE9B,gBAAgB,CAAC;EACxD;EACA;EACAiB,SAASA,CAACX,qBAAqB,EAAEC,YAAY,EAAEP,gBAAgB,EAAEjJ,KAAK,EAAE;IACpE,MAAMyJ,IAAI,GAAGR,gBAAgB,CAACgC,GAAG,CAAC1B,qBAAqB,CAAC;IACxDN,gBAAgB,CAACiC,IAAI,CAACzB,IAAI,EAAED,YAAY,CAAC;IACzCC,IAAI,CAACW,OAAO,CAACK,SAAS,GAAGzK,KAAK;IAC9B,OAAOyJ,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIuB,eAAeA,CAACvB,IAAI,EAAER,gBAAgB,EAAE;IACpC,IAAI,IAAI,CAACH,UAAU,CAACqC,MAAM,GAAG,IAAI,CAACtC,aAAa,EAAE;MAC7C,IAAI,CAACC,UAAU,CAACsC,IAAI,CAAC3B,IAAI,CAAC;IAC9B,CAAC,MACI;MACD,MAAMqB,KAAK,GAAG7B,gBAAgB,CAACoC,OAAO,CAAC5B,IAAI,CAAC;MAC5C;MACA;MACA;MACA;MACA,IAAIqB,KAAK,KAAK,CAAC,CAAC,EAAE;QACdrB,IAAI,CAACa,OAAO,CAAC,CAAC;MAClB,CAAC,MACI;QACDrB,gBAAgB,CAAClD,MAAM,CAAC+E,KAAK,CAAC;MAClC;IACJ;EACJ;EACA;EACAN,oBAAoBA,CAACM,KAAK,EAAE7B,gBAAgB,EAAE;IAC1C,MAAMsB,UAAU,GAAG,IAAI,CAACzB,UAAU,CAACwC,GAAG,CAAC,CAAC;IACxC,IAAIf,UAAU,EAAE;MACZtB,gBAAgB,CAACsC,MAAM,CAAChB,UAAU,EAAEO,KAAK,CAAC;IAC9C;IACA,OAAOP,UAAU,IAAI,IAAI;EAC7B;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxJoC;AACsV;AACvQ;AACc;AAC1C;AAC/B;AACY;AACsD;AAClF;AAAA,MAAAqD,GAAA;AAAA,MAAAC,GAAA;AACE;AAC4G;AACvF;AACtC;;AAEzB;AACA,MAAME,uBAAuB,gBAAG,IAAItL,yDAAc,CAAC,yBAAyB,CAAC;;AAE7E;AACA,MAAMuL,8BAA8B,CAAC;EACjCC,oBAAoB,gBAAG,IAAIrB,yCAAO,CAAC,CAAC;EACpC;EACAsB,mBAAmB,gBAAG,IAAI,CAACD,oBAAoB,CAACE,IAAI,cAAClB,oEAAoB,CAAC,CAAC,CAAC;EAC5E;EACAmB,SAAS,GAAG,IAAI;EAChB;EACAC,SAAS;EACT;EACAC,YAAY;EACZ;EACAC,YAAY;EACZ;AACJ;AACA;AACA;AACA;EACIzM,WAAWA,CAAC0M,QAAQ,EAAEC,WAAW,EAAEC,WAAW,EAAE;IAC5C,IAAI,CAACL,SAAS,GAAGG,QAAQ;IACzB,IAAI,CAACF,YAAY,GAAGG,WAAW;IAC/B,IAAI,CAACF,YAAY,GAAGG,WAAW;EACnC;EACA;AACJ;AACA;AACA;EACIC,MAAMA,CAACC,QAAQ,EAAE;IACb,IAAI,CAACR,SAAS,GAAGQ,QAAQ;IACzB,IAAI,CAACC,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC/B;EACA;EACAzE,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC4D,oBAAoB,CAACjK,QAAQ,CAAC,CAAC;IACpC,IAAI,CAACoK,SAAS,GAAG,IAAI;EACzB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIW,uBAAuBA,CAACP,QAAQ,EAAEC,WAAW,EAAEC,WAAW,EAAE;IACxD,IAAIA,WAAW,GAAGD,WAAW,KAAK,OAAOlM,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MAC9E,MAAMyM,KAAK,CAAC,8EAA8E,CAAC;IAC/F;IACA,IAAI,CAACX,SAAS,GAAGG,QAAQ;IACzB,IAAI,CAACF,YAAY,GAAGG,WAAW;IAC/B,IAAI,CAACF,YAAY,GAAGG,WAAW;IAC/B,IAAI,CAACG,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC/B;EACA;EACAG,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACH,oBAAoB,CAAC,CAAC;EAC/B;EACA;EACAI,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACL,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC/B;EACA;EACAK,iBAAiBA,CAAA,EAAG;IAChB;EAAA;EAEJ;EACAC,uBAAuBA,CAAA,EAAG;IACtB;EAAA;EAEJ;AACJ;AACA;AACA;AACA;EACIC,aAAaA,CAACvE,KAAK,EAAEwE,QAAQ,EAAE;IAC3B,IAAI,IAAI,CAAClB,SAAS,EAAE;MAChB,IAAI,CAACA,SAAS,CAACmB,cAAc,CAACzE,KAAK,GAAG,IAAI,CAACuD,SAAS,EAAEiB,QAAQ,CAAC;IACnE;EACJ;EACA;EACAT,uBAAuBA,CAAA,EAAG;IACtB,IAAI,CAAC,IAAI,CAACT,SAAS,EAAE;MACjB;IACJ;IACA,IAAI,CAACA,SAAS,CAACoB,mBAAmB,CAAC,IAAI,CAACpB,SAAS,CAACqB,aAAa,CAAC,CAAC,GAAG,IAAI,CAACpB,SAAS,CAAC;EACvF;EACA;EACAS,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAAC,IAAI,CAACV,SAAS,EAAE;MACjB;IACJ;IACA,MAAMsB,aAAa,GAAG,IAAI,CAACtB,SAAS,CAACuB,gBAAgB,CAAC,CAAC;IACvD,MAAMC,QAAQ,GAAG;MAAEC,KAAK,EAAEH,aAAa,CAACG,KAAK;MAAEC,GAAG,EAAEJ,aAAa,CAACI;IAAI,CAAC;IACvE,MAAMC,YAAY,GAAG,IAAI,CAAC3B,SAAS,CAAC4B,eAAe,CAAC,CAAC;IACrD,MAAMC,UAAU,GAAG,IAAI,CAAC7B,SAAS,CAACqB,aAAa,CAAC,CAAC;IACjD,IAAIS,YAAY,GAAG,IAAI,CAAC9B,SAAS,CAAC+B,mBAAmB,CAAC,CAAC;IACvD;IACA,IAAIC,iBAAiB,GAAG,IAAI,CAAC/B,SAAS,GAAG,CAAC,GAAG6B,YAAY,GAAG,IAAI,CAAC7B,SAAS,GAAG,CAAC;IAC9E;IACA,IAAIuB,QAAQ,CAACE,GAAG,GAAGG,UAAU,EAAE;MAC3B;MACA,MAAMI,eAAe,GAAGC,IAAI,CAACC,IAAI,CAACR,YAAY,GAAG,IAAI,CAAC1B,SAAS,CAAC;MAChE,MAAMmC,eAAe,GAAGF,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACI,GAAG,CAACN,iBAAiB,EAAEH,UAAU,GAAGI,eAAe,CAAC,CAAC;MAC9F;MACA;MACA,IAAID,iBAAiB,IAAII,eAAe,EAAE;QACtCJ,iBAAiB,GAAGI,eAAe;QACnCN,YAAY,GAAGM,eAAe,GAAG,IAAI,CAACnC,SAAS;QAC/CuB,QAAQ,CAACC,KAAK,GAAGS,IAAI,CAACK,KAAK,CAACP,iBAAiB,CAAC;MAClD;MACAR,QAAQ,CAACE,GAAG,GAAGQ,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACI,GAAG,CAACT,UAAU,EAAEL,QAAQ,CAACC,KAAK,GAAGQ,eAAe,CAAC,CAAC;IACtF;IACA,MAAMO,WAAW,GAAGV,YAAY,GAAGN,QAAQ,CAACC,KAAK,GAAG,IAAI,CAACxB,SAAS;IAClE,IAAIuC,WAAW,GAAG,IAAI,CAACtC,YAAY,IAAIsB,QAAQ,CAACC,KAAK,IAAI,CAAC,EAAE;MACxD,MAAMgB,WAAW,GAAGP,IAAI,CAACC,IAAI,CAAC,CAAC,IAAI,CAAChC,YAAY,GAAGqC,WAAW,IAAI,IAAI,CAACvC,SAAS,CAAC;MACjFuB,QAAQ,CAACC,KAAK,GAAGS,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEb,QAAQ,CAACC,KAAK,GAAGgB,WAAW,CAAC;MAC1DjB,QAAQ,CAACE,GAAG,GAAGQ,IAAI,CAACI,GAAG,CAACT,UAAU,EAAEK,IAAI,CAACC,IAAI,CAACH,iBAAiB,GAAG,CAACL,YAAY,GAAG,IAAI,CAACzB,YAAY,IAAI,IAAI,CAACD,SAAS,CAAC,CAAC;IAC3H,CAAC,MACI;MACD,MAAMyC,SAAS,GAAGlB,QAAQ,CAACE,GAAG,GAAG,IAAI,CAACzB,SAAS,IAAI6B,YAAY,GAAGH,YAAY,CAAC;MAC/E,IAAIe,SAAS,GAAG,IAAI,CAACxC,YAAY,IAAIsB,QAAQ,CAACE,GAAG,IAAIG,UAAU,EAAE;QAC7D,MAAMc,SAAS,GAAGT,IAAI,CAACC,IAAI,CAAC,CAAC,IAAI,CAAChC,YAAY,GAAGuC,SAAS,IAAI,IAAI,CAACzC,SAAS,CAAC;QAC7E,IAAI0C,SAAS,GAAG,CAAC,EAAE;UACfnB,QAAQ,CAACE,GAAG,GAAGQ,IAAI,CAACI,GAAG,CAACT,UAAU,EAAEL,QAAQ,CAACE,GAAG,GAAGiB,SAAS,CAAC;UAC7DnB,QAAQ,CAACC,KAAK,GAAGS,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACK,KAAK,CAACP,iBAAiB,GAAG,IAAI,CAAC9B,YAAY,GAAG,IAAI,CAACD,SAAS,CAAC,CAAC;QACpG;MACJ;IACJ;IACA,IAAI,CAACD,SAAS,CAAC4C,gBAAgB,CAACpB,QAAQ,CAAC;IACzC,IAAI,CAACxB,SAAS,CAAC6C,wBAAwB,CAAC,IAAI,CAAC5C,SAAS,GAAGuB,QAAQ,CAACC,KAAK,CAAC;IACxE,IAAI,CAAC5B,oBAAoB,CAACiD,IAAI,CAACZ,IAAI,CAACK,KAAK,CAACP,iBAAiB,CAAC,CAAC;EACjE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASe,sCAAsCA,CAACC,YAAY,EAAE;EAC1D,OAAOA,YAAY,CAACC,eAAe;AACvC;AACA;AAAA,IACMC,yBAAyB;EAA/B,MAAMA,yBAAyB,CAAC;IAC5B;IACA,IAAI9C,QAAQA,CAAA,EAAG;MACX,OAAO,IAAI,CAACH,SAAS;IACzB;IACA,IAAIG,QAAQA,CAACxO,KAAK,EAAE;MAChB,IAAI,CAACqO,SAAS,GAAGX,wDAAoB,CAAC1N,KAAK,CAAC;IAChD;IACAqO,SAAS,GAAG,EAAE;IACd;AACJ;AACA;AACA;IACI,IAAII,WAAWA,CAAA,EAAG;MACd,OAAO,IAAI,CAACH,YAAY;IAC5B;IACA,IAAIG,WAAWA,CAACzO,KAAK,EAAE;MACnB,IAAI,CAACsO,YAAY,GAAGZ,wDAAoB,CAAC1N,KAAK,CAAC;IACnD;IACAsO,YAAY,GAAG,GAAG;IAClB;AACJ;AACA;IACI,IAAII,WAAWA,CAAA,EAAG;MACd,OAAO,IAAI,CAACH,YAAY;IAC5B;IACA,IAAIG,WAAWA,CAAC1O,KAAK,EAAE;MACnB,IAAI,CAACuO,YAAY,GAAGb,wDAAoB,CAAC1N,KAAK,CAAC;IACnD;IACAuO,YAAY,GAAG,GAAG;IAClB;IACA8C,eAAe,GAAG,IAAIrD,8BAA8B,CAAC,IAAI,CAACQ,QAAQ,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,WAAW,CAAC;IACvG6C,WAAWA,CAAA,EAAG;MACV,IAAI,CAACF,eAAe,CAACtC,uBAAuB,CAAC,IAAI,CAACP,QAAQ,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,WAAW,CAAC;IACnG;IACA,OAAO3M,IAAI,YAAAyP,kCAAAvP,iBAAA;MAAA,YAAAA,iBAAA,IAAwFqP,yBAAyB;IAAA;IAC5H,OAAOxK,IAAI,kBAD8E1G,+DAAE;MAAA4G,IAAA,EACJsK,yBAAyB;MAAArK,SAAA;MAAAO,MAAA;QAAAgH,QAAA;QAAAC,WAAA;QAAAC,WAAA;MAAA;MAAA/G,QAAA,GADvBvH,gEAAE,CACmM,CACtR;QACIyH,OAAO,EAAEkG,uBAAuB;QAChC0D,UAAU,EAAEN,sCAAsC;QAClDO,IAAI,EAAE,CAAChG,yDAAU,CAAC,MAAM4F,yBAAyB,CAAC;MACtD,CAAC,CACJ,GAPoFlR,kEAAE;IAAA;EAQ/F;EAAC,OA3CKkR,yBAAyB;AAAA;AA4C/B;EAAA,QAAA/O,SAAA,oBAAAA,SAAA;AAAA;;AAoBA;AACA,MAAMqP,mBAAmB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AAHA,IAIMC,gBAAgB;EAAtB,MAAMA,gBAAgB,CAAC;IACnBC,OAAO,GAAGzR,qDAAM,CAACsL,iDAAM,CAAC;IACxBoG,SAAS,GAAG1R,qDAAM,CAACO,qDAAQ,CAAC;IAC5BoR,SAAS,GAAG3R,qDAAM,CAACuL,2DAAgB,CAAC,CAACqG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;IAC/DC,sBAAsB;IACtBpQ,WAAWA,CAAA,EAAG,CAAE;IAChB;IACAqQ,SAAS,GAAG,IAAIvF,yCAAO,CAAC,CAAC;IACzB;IACAwF,cAAc,GAAG,CAAC;IAClB;AACJ;AACA;AACA;IACIC,gBAAgB,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC5B;AACJ;AACA;AACA;AACA;IACIC,QAAQA,CAACC,UAAU,EAAE;MACjB,IAAI,CAAC,IAAI,CAACH,gBAAgB,CAACI,GAAG,CAACD,UAAU,CAAC,EAAE;QACxC,IAAI,CAACH,gBAAgB,CAACvO,GAAG,CAAC0O,UAAU,EAAEA,UAAU,CAACE,eAAe,CAAC,CAAC,CAACC,SAAS,CAAC,MAAM,IAAI,CAACR,SAAS,CAACjB,IAAI,CAACsB,UAAU,CAAC,CAAC,CAAC;MACxH;IACJ;IACA;AACJ;AACA;AACA;IACII,UAAUA,CAACJ,UAAU,EAAE;MACnB,MAAMK,mBAAmB,GAAG,IAAI,CAACR,gBAAgB,CAACpH,GAAG,CAACuH,UAAU,CAAC;MACjE,IAAIK,mBAAmB,EAAE;QACrBA,mBAAmB,CAACC,WAAW,CAAC,CAAC;QACjC,IAAI,CAACT,gBAAgB,CAACU,MAAM,CAACP,UAAU,CAAC;MAC5C;IACJ;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIQ,QAAQA,CAACC,aAAa,GAAGrB,mBAAmB,EAAE;MAC1C,IAAI,CAAC,IAAI,CAACG,SAAS,CAACjR,SAAS,EAAE;QAC3B,OAAOwH,wCAAE,CAAC,CAAC;MACf;MACA,OAAO,IAAIuE,4CAAU,CAAEqG,QAAQ,IAAK;QAChC,IAAI,CAAC,IAAI,CAAChB,sBAAsB,EAAE;UAC9B,IAAI,CAACA,sBAAsB,GAAG,IAAI,CAACJ,OAAO,CAACqB,iBAAiB,CAAC,MAAM,IAAI,CAACnB,SAAS,CAACoB,MAAM,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,IAAI,CAACjB,SAAS,CAACjB,IAAI,CAAC,CAAC,CAAC,CAAC;QAChJ;QACA;QACA;QACA,MAAMmC,YAAY,GAAGJ,aAAa,GAAG,CAAC,GAChC,IAAI,CAACd,SAAS,CAAChE,IAAI,CAACjB,yDAAS,CAAC+F,aAAa,CAAC,CAAC,CAACN,SAAS,CAACO,QAAQ,CAAC,GACjE,IAAI,CAACf,SAAS,CAACQ,SAAS,CAACO,QAAQ,CAAC;QACxC,IAAI,CAACd,cAAc,EAAE;QACrB,OAAO,MAAM;UACTiB,YAAY,CAACP,WAAW,CAAC,CAAC;UAC1B,IAAI,CAACV,cAAc,EAAE;UACrB,IAAI,CAAC,IAAI,CAACA,cAAc,EAAE;YACtB,IAAI,CAACF,sBAAsB,GAAG,CAAC;YAC/B,IAAI,CAACA,sBAAsB,GAAGxH,SAAS;UAC3C;QACJ,CAAC;MACL,CAAC,CAAC;IACN;IACA3G,WAAWA,CAAA,EAAG;MACV,IAAI,CAACmO,sBAAsB,GAAG,CAAC;MAC/B,IAAI,CAACA,sBAAsB,GAAGxH,SAAS;MACvC,IAAI,CAAC2H,gBAAgB,CAACiB,OAAO,CAAC,CAACpP,CAAC,EAAEqP,SAAS,KAAK,IAAI,CAACX,UAAU,CAACW,SAAS,CAAC,CAAC;MAC3E,IAAI,CAACpB,SAAS,CAACnO,QAAQ,CAAC,CAAC;IAC7B;IACA;AACJ;AACA;AACA;AACA;AACA;IACIwP,gBAAgBA,CAACC,mBAAmB,EAAER,aAAa,EAAE;MACjD,MAAMS,SAAS,GAAG,IAAI,CAACC,2BAA2B,CAACF,mBAAmB,CAAC;MACvE,OAAO,IAAI,CAACT,QAAQ,CAACC,aAAa,CAAC,CAAC9E,IAAI,CAAChB,sDAAM,CAACyG,MAAM,IAAI,CAACA,MAAM,IAAIF,SAAS,CAACrI,OAAO,CAACuI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzG;IACA;IACAD,2BAA2BA,CAACF,mBAAmB,EAAE;MAC7C,MAAMI,mBAAmB,GAAG,EAAE;MAC9B,IAAI,CAACxB,gBAAgB,CAACiB,OAAO,CAAC,CAACQ,aAAa,EAAEtB,UAAU,KAAK;QACzD,IAAI,IAAI,CAACuB,0BAA0B,CAACvB,UAAU,EAAEiB,mBAAmB,CAAC,EAAE;UAClEI,mBAAmB,CAACzI,IAAI,CAACoH,UAAU,CAAC;QACxC;MACJ,CAAC,CAAC;MACF,OAAOqB,mBAAmB;IAC9B;IACA;IACAE,0BAA0BA,CAACvB,UAAU,EAAEiB,mBAAmB,EAAE;MACxD,IAAIO,OAAO,GAAGrG,wDAAa,CAAC8F,mBAAmB,CAAC;MAChD,IAAIQ,iBAAiB,GAAGzB,UAAU,CAAC0B,aAAa,CAAC,CAAC,CAACC,aAAa;MAChE;MACA;MACA,GAAG;QACC,IAAIH,OAAO,IAAIC,iBAAiB,EAAE;UAC9B,OAAO,IAAI;QACf;MACJ,CAAC,QAASD,OAAO,GAAGA,OAAO,CAACI,aAAa;MACzC,OAAO,KAAK;IAChB;IACA,OAAOrS,IAAI,YAAAsS,yBAAApS,iBAAA;MAAA,YAAAA,iBAAA,IAAwF4P,gBAAgB;IAAA;IACnH,OAAO3P,KAAK,kBAjJ6E9B,gEAAE;MAAAgC,KAAA,EAiJYyP,gBAAgB;MAAAxP,OAAA,EAAhBwP,gBAAgB,CAAA9P,IAAA;MAAAO,UAAA,EAAc;IAAM;EAC/I;EAAC,OA/GKuP,gBAAgB;AAAA;AAgHtB;EAAA,QAAAtP,SAAA,oBAAAA,SAAA;AAAA;;AAKA;AACA;AACA;AACA;AACA;AAJA,IAKM+R,aAAa;EAAnB,MAAMA,aAAa,CAAC;IAChBC,UAAU,GAAGlU,qDAAM,CAACwL,qDAAU,CAAC;IAC/B2I,gBAAgB,GAAGnU,qDAAM,CAACwR,gBAAgB,CAAC;IAC3C4C,MAAM,GAAGpU,qDAAM,CAACsL,iDAAM,CAAC;IACvBhI,GAAG,GAAGtD,qDAAM,CAAC+C,2DAAc,EAAE;MAAEI,QAAQ,EAAE;IAAK,CAAC,CAAC;IAChDkR,cAAc,GAAG,IAAI,CAACH,UAAU,CAACJ,aAAa;IAC9CQ,UAAU,GAAG,IAAI/H,yCAAO,CAAC,CAAC;IAC1BoF,SAAS,GAAG3R,qDAAM,CAACyL,oDAAS,CAAC;IAC7B8I,cAAc;IACdC,gBAAgB,GAAG,IAAIjI,yCAAO,CAAC,CAAC;IAChC9K,WAAWA,CAAA,EAAG,CAAE;IAChBgT,QAAQA,CAAA,EAAG;MACP,IAAI,CAACF,cAAc,GAAG,IAAI,CAACH,MAAM,CAACtB,iBAAiB,CAAC,MAAM,IAAI,CAACnB,SAAS,CAACoB,MAAM,CAAC,IAAI,CAACsB,cAAc,EAAE,QAAQ,EAAEK,KAAK,IAAI,IAAI,CAACF,gBAAgB,CAAC3D,IAAI,CAAC6D,KAAK,CAAC,CAAC,CAAC;MAC3J,IAAI,CAACP,gBAAgB,CAACjC,QAAQ,CAAC,IAAI,CAAC;IACxC;IACAxO,WAAWA,CAAA,EAAG;MACV,IAAI,CAAC6Q,cAAc,GAAG,CAAC;MACvB,IAAI,CAACC,gBAAgB,CAAC7Q,QAAQ,CAAC,CAAC;MAChC,IAAI,CAACwQ,gBAAgB,CAAC5B,UAAU,CAAC,IAAI,CAAC;MACtC,IAAI,CAAC+B,UAAU,CAACzD,IAAI,CAAC,CAAC;MACtB,IAAI,CAACyD,UAAU,CAAC3Q,QAAQ,CAAC,CAAC;IAC9B;IACA;IACA0O,eAAeA,CAAA,EAAG;MACd,OAAO,IAAI,CAACmC,gBAAgB;IAChC;IACA;IACAX,aAAaA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACK,UAAU;IAC1B;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI3P,QAAQA,CAACoQ,OAAO,EAAE;MACd,MAAMC,EAAE,GAAG,IAAI,CAACV,UAAU,CAACJ,aAAa;MACxC,MAAMe,KAAK,GAAG,IAAI,CAACvR,GAAG,IAAI,IAAI,CAACA,GAAG,CAAC3D,KAAK,IAAI,KAAK;MACjD;MACA,IAAIgV,OAAO,CAACG,IAAI,IAAI,IAAI,EAAE;QACtBH,OAAO,CAACG,IAAI,GAAGD,KAAK,GAAGF,OAAO,CAAClF,GAAG,GAAGkF,OAAO,CAACnF,KAAK;MACtD;MACA,IAAImF,OAAO,CAACI,KAAK,IAAI,IAAI,EAAE;QACvBJ,OAAO,CAACI,KAAK,GAAGF,KAAK,GAAGF,OAAO,CAACnF,KAAK,GAAGmF,OAAO,CAAClF,GAAG;MACvD;MACA;MACA,IAAIkF,OAAO,CAACK,MAAM,IAAI,IAAI,EAAE;QACxBL,OAAO,CAACM,GAAG,GACPL,EAAE,CAACM,YAAY,GAAGN,EAAE,CAACO,YAAY,GAAGR,OAAO,CAACK,MAAM;MAC1D;MACA;MACA,IAAIH,KAAK,IAAIpQ,0DAAoB,CAAC,CAAC,IAAIV,sDAAiB,CAACW,MAAM,EAAE;QAC7D,IAAIiQ,OAAO,CAACG,IAAI,IAAI,IAAI,EAAE;UACtBH,OAAO,CAACI,KAAK,GACTH,EAAE,CAACQ,WAAW,GAAGR,EAAE,CAACS,WAAW,GAAGV,OAAO,CAACG,IAAI;QACtD;QACA,IAAIrQ,0DAAoB,CAAC,CAAC,IAAIV,sDAAiB,CAAC0B,QAAQ,EAAE;UACtDkP,OAAO,CAACG,IAAI,GAAGH,OAAO,CAACI,KAAK;QAChC,CAAC,MACI,IAAItQ,0DAAoB,CAAC,CAAC,IAAIV,sDAAiB,CAACyB,OAAO,EAAE;UAC1DmP,OAAO,CAACG,IAAI,GAAGH,OAAO,CAACI,KAAK,GAAG,CAACJ,OAAO,CAACI,KAAK,GAAGJ,OAAO,CAACI,KAAK;QACjE;MACJ,CAAC,MACI;QACD,IAAIJ,OAAO,CAACI,KAAK,IAAI,IAAI,EAAE;UACvBJ,OAAO,CAACG,IAAI,GACRF,EAAE,CAACQ,WAAW,GAAGR,EAAE,CAACS,WAAW,GAAGV,OAAO,CAACI,KAAK;QACvD;MACJ;MACA,IAAI,CAACO,qBAAqB,CAACX,OAAO,CAAC;IACvC;IACAW,qBAAqBA,CAACX,OAAO,EAAE;MAC3B,MAAMC,EAAE,GAAG,IAAI,CAACV,UAAU,CAACJ,aAAa;MACxC,IAAI5P,0DAAsB,CAAC,CAAC,EAAE;QAC1B0Q,EAAE,CAACrQ,QAAQ,CAACoQ,OAAO,CAAC;MACxB,CAAC,MACI;QACD,IAAIA,OAAO,CAACM,GAAG,IAAI,IAAI,EAAE;UACrBL,EAAE,CAACW,SAAS,GAAGZ,OAAO,CAACM,GAAG;QAC9B;QACA,IAAIN,OAAO,CAACG,IAAI,IAAI,IAAI,EAAE;UACtBF,EAAE,CAACrP,UAAU,GAAGoP,OAAO,CAACG,IAAI;QAChC;MACJ;IACJ;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIhF,mBAAmBA,CAAC0F,IAAI,EAAE;MACtB,MAAMC,IAAI,GAAG,MAAM;MACnB,MAAMC,KAAK,GAAG,OAAO;MACrB,MAAMd,EAAE,GAAG,IAAI,CAACV,UAAU,CAACJ,aAAa;MACxC,IAAI0B,IAAI,IAAI,KAAK,EAAE;QACf,OAAOZ,EAAE,CAACW,SAAS;MACvB;MACA,IAAIC,IAAI,IAAI,QAAQ,EAAE;QAClB,OAAOZ,EAAE,CAACM,YAAY,GAAGN,EAAE,CAACO,YAAY,GAAGP,EAAE,CAACW,SAAS;MAC3D;MACA;MACA,MAAMV,KAAK,GAAG,IAAI,CAACvR,GAAG,IAAI,IAAI,CAACA,GAAG,CAAC3D,KAAK,IAAI,KAAK;MACjD,IAAI6V,IAAI,IAAI,OAAO,EAAE;QACjBA,IAAI,GAAGX,KAAK,GAAGa,KAAK,GAAGD,IAAI;MAC/B,CAAC,MACI,IAAID,IAAI,IAAI,KAAK,EAAE;QACpBA,IAAI,GAAGX,KAAK,GAAGY,IAAI,GAAGC,KAAK;MAC/B;MACA,IAAIb,KAAK,IAAIpQ,0DAAoB,CAAC,CAAC,IAAIV,sDAAiB,CAAC0B,QAAQ,EAAE;QAC/D;QACA;QACA,IAAI+P,IAAI,IAAIC,IAAI,EAAE;UACd,OAAOb,EAAE,CAACQ,WAAW,GAAGR,EAAE,CAACS,WAAW,GAAGT,EAAE,CAACrP,UAAU;QAC1D,CAAC,MACI;UACD,OAAOqP,EAAE,CAACrP,UAAU;QACxB;MACJ,CAAC,MACI,IAAIsP,KAAK,IAAIpQ,0DAAoB,CAAC,CAAC,IAAIV,sDAAiB,CAACyB,OAAO,EAAE;QACnE;QACA;QACA,IAAIgQ,IAAI,IAAIC,IAAI,EAAE;UACd,OAAOb,EAAE,CAACrP,UAAU,GAAGqP,EAAE,CAACQ,WAAW,GAAGR,EAAE,CAACS,WAAW;QAC1D,CAAC,MACI;UACD,OAAO,CAACT,EAAE,CAACrP,UAAU;QACzB;MACJ,CAAC,MACI;QACD;QACA;QACA,IAAIiQ,IAAI,IAAIC,IAAI,EAAE;UACd,OAAOb,EAAE,CAACrP,UAAU;QACxB,CAAC,MACI;UACD,OAAOqP,EAAE,CAACQ,WAAW,GAAGR,EAAE,CAACS,WAAW,GAAGT,EAAE,CAACrP,UAAU;QAC1D;MACJ;IACJ;IACA,OAAO7D,IAAI,YAAAiU,sBAAA/T,iBAAA;MAAA,YAAAA,iBAAA,IAAwFqS,aAAa;IAAA;IAChH,OAAOxN,IAAI,kBAhT8E1G,+DAAE;MAAA4G,IAAA,EAgTJsN,aAAa;MAAArN,SAAA;IAAA;EACxG;EAAC,OApJKqN,aAAa;AAAA;AAqJnB;EAAA,QAAA/R,SAAA,oBAAAA,SAAA;AAAA;;AAOA;AACA,MAAM0T,mBAAmB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AAHA,IAIMC,aAAa;EAAnB,MAAMA,aAAa,CAAC;IAChBnE,SAAS,GAAG1R,qDAAM,CAACO,qDAAQ,CAAC;IAC5BuV,UAAU;IACV;IACAC,aAAa;IACb;IACAC,OAAO,GAAG,IAAIzJ,yCAAO,CAAC,CAAC;IACvB;IACArJ,SAAS,GAAGlD,qDAAM,CAACqC,mDAAQ,EAAE;MAAEc,QAAQ,EAAE;IAAK,CAAC,CAAC;IAChD1B,WAAWA,CAAA,EAAG;MACV,MAAM2S,MAAM,GAAGpU,qDAAM,CAACsL,iDAAM,CAAC;MAC7B,MAAM2K,QAAQ,GAAGjW,qDAAM,CAACuL,2DAAgB,CAAC,CAACqG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;MACpEwC,MAAM,CAACtB,iBAAiB,CAAC,MAAM;QAC3B,IAAI,IAAI,CAACpB,SAAS,CAACjR,SAAS,EAAE;UAC1B,MAAMyV,cAAc,GAAIxB,KAAK,IAAK,IAAI,CAACsB,OAAO,CAACnF,IAAI,CAAC6D,KAAK,CAAC;UAC1D,IAAI,CAACoB,UAAU,GAAG,CACdG,QAAQ,CAAClD,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAEmD,cAAc,CAAC,EACnDD,QAAQ,CAAClD,MAAM,CAAC,QAAQ,EAAE,mBAAmB,EAAEmD,cAAc,CAAC,CACjE;QACL;QACA;QACA;QACA,IAAI,CAACjT,MAAM,CAAC,CAAC,CAACqP,SAAS,CAAC,MAAO,IAAI,CAACyD,aAAa,GAAG,IAAK,CAAC;MAC9D,CAAC,CAAC;IACN;IACArS,WAAWA,CAAA,EAAG;MACV,IAAI,CAACoS,UAAU,EAAE7C,OAAO,CAACkD,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC;MAC9C,IAAI,CAACH,OAAO,CAACrS,QAAQ,CAAC,CAAC;IAC3B;IACA;IACAgM,eAAeA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACoG,aAAa,EAAE;QACrB,IAAI,CAACK,mBAAmB,CAAC,CAAC;MAC9B;MACA,MAAMC,MAAM,GAAG;QAAEvR,KAAK,EAAE,IAAI,CAACiR,aAAa,CAACjR,KAAK;QAAEO,MAAM,EAAE,IAAI,CAAC0Q,aAAa,CAAC1Q;MAAO,CAAC;MACrF;MACA,IAAI,CAAC,IAAI,CAACqM,SAAS,CAACjR,SAAS,EAAE;QAC3B,IAAI,CAACsV,aAAa,GAAG,IAAI;MAC7B;MACA,OAAOM,MAAM;IACjB;IACA;IACAC,eAAeA,CAAA,EAAG;MACd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAMC,cAAc,GAAG,IAAI,CAACC,yBAAyB,CAAC,CAAC;MACvD,MAAM;QAAE1R,KAAK;QAAEO;MAAO,CAAC,GAAG,IAAI,CAACsK,eAAe,CAAC,CAAC;MAChD,OAAO;QACHsF,GAAG,EAAEsB,cAAc,CAACtB,GAAG;QACvBH,IAAI,EAAEyB,cAAc,CAACzB,IAAI;QACzBE,MAAM,EAAEuB,cAAc,CAACtB,GAAG,GAAG5P,MAAM;QACnC0P,KAAK,EAAEwB,cAAc,CAACzB,IAAI,GAAGhQ,KAAK;QAClCO,MAAM;QACNP;MACJ,CAAC;IACL;IACA;IACA0R,yBAAyBA,CAAA,EAAG;MACxB;MACA;MACA,IAAI,CAAC,IAAI,CAAC9E,SAAS,CAACjR,SAAS,EAAE;QAC3B,OAAO;UAAEwU,GAAG,EAAE,CAAC;UAAEH,IAAI,EAAE;QAAE,CAAC;MAC9B;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAMpU,QAAQ,GAAG,IAAI,CAACwC,SAAS;MAC/B,MAAMjC,MAAM,GAAG,IAAI,CAACwV,UAAU,CAAC,CAAC;MAChC,MAAMjT,eAAe,GAAG9C,QAAQ,CAAC8C,eAAe;MAChD,MAAMkT,YAAY,GAAGlT,eAAe,CAACmT,qBAAqB,CAAC,CAAC;MAC5D,MAAM1B,GAAG,GAAG,CAACyB,YAAY,CAACzB,GAAG,IACzBvU,QAAQ,CAAC2C,IAAI,CAACkS,SAAS,IACvBtU,MAAM,CAAC2V,OAAO,IACdpT,eAAe,CAAC+R,SAAS,IACzB,CAAC;MACL,MAAMT,IAAI,GAAG,CAAC4B,YAAY,CAAC5B,IAAI,IAC3BpU,QAAQ,CAAC2C,IAAI,CAACkC,UAAU,IACxBtE,MAAM,CAAC4V,OAAO,IACdrT,eAAe,CAAC+B,UAAU,IAC1B,CAAC;MACL,OAAO;QAAE0P,GAAG;QAAEH;MAAK,CAAC;IACxB;IACA;AACJ;AACA;AACA;AACA;IACI7R,MAAMA,CAAC6T,YAAY,GAAGlB,mBAAmB,EAAE;MACvC,OAAOkB,YAAY,GAAG,CAAC,GAAG,IAAI,CAACd,OAAO,CAAClI,IAAI,CAACjB,yDAAS,CAACiK,YAAY,CAAC,CAAC,GAAG,IAAI,CAACd,OAAO;IACvF;IACA;IACAS,UAAUA,CAAA,EAAG;MACT,OAAO,IAAI,CAACvT,SAAS,CAAC6T,WAAW,IAAI9V,MAAM;IAC/C;IACA;IACAmV,mBAAmBA,CAAA,EAAG;MAClB,MAAMnV,MAAM,GAAG,IAAI,CAACwV,UAAU,CAAC,CAAC;MAChC,IAAI,CAACV,aAAa,GAAG,IAAI,CAACrE,SAAS,CAACjR,SAAS,GACvC;QAAEqE,KAAK,EAAE7D,MAAM,CAAC+V,UAAU;QAAE3R,MAAM,EAAEpE,MAAM,CAACgW;MAAY,CAAC,GACxD;QAAEnS,KAAK,EAAE,CAAC;QAAEO,MAAM,EAAE;MAAE,CAAC;IACjC;IACA,OAAO3D,IAAI,YAAAwV,sBAAAtV,iBAAA;MAAA,YAAAA,iBAAA,IAAwFiU,aAAa;IAAA;IAChH,OAAOhU,KAAK,kBA/a6E9B,gEAAE;MAAAgC,KAAA,EA+aY8T,aAAa;MAAA7T,OAAA,EAAb6T,aAAa,CAAAnU,IAAA;MAAAO,UAAA,EAAc;IAAM;EAC5I;EAAC,OAjHK4T,aAAa;AAAA;AAkHnB;EAAA,QAAA3T,SAAA,oBAAAA,SAAA;AAAA;AAKA,MAAMiV,kBAAkB,gBAAG,IAAI/U,yDAAc,CAAC,oBAAoB,CAAC;AACnE;AACA;AACA;AAFA,IAGMgV,oBAAoB;EAA1B,MAAMA,oBAAoB,SAASnD,aAAa,CAAC;IAC7CxS,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;IACX;IACA;AACJ;AACA;AACA;AACA;IACI4V,mBAAmBA,CAACC,WAAW,EAAE;MAC7B,MAAMC,UAAU,GAAG,IAAI,CAACrD,UAAU,CAACJ,aAAa;MAChD,OAAOwD,WAAW,KAAK,YAAY,GAAGC,UAAU,CAAClC,WAAW,GAAGkC,UAAU,CAACpC,YAAY;IAC1F;IACA,OAAOzT,IAAI,YAAA8V,6BAAA5V,iBAAA;MAAA,YAAAA,iBAAA,IAAwFwV,oBAAoB;IAAA;IACvH,OAAO3Q,IAAI,kBAxc8E1G,+DAAE;MAAA4G,IAAA,EAwcJyQ,oBAAoB;MAAA9P,QAAA,GAxclBvH,wEAAE;IAAA;EAyc/F;EAAC,OAfKqX,oBAAoB;AAAA;AAgB1B;EAAA,QAAAlV,SAAA,oBAAAA,SAAA;AAAA;;AAIA;AACA,SAASwV,WAAWA,CAACC,EAAE,EAAEC,EAAE,EAAE;EACzB,OAAOD,EAAE,CAACnI,KAAK,IAAIoI,EAAE,CAACpI,KAAK,IAAImI,EAAE,CAAClI,GAAG,IAAImI,EAAE,CAACnI,GAAG;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMoI,gBAAgB,GAAG,OAAOC,qBAAqB,KAAK,WAAW,GAAGpL,yDAAuB,GAAGC,+CAAa;AAC/G;AAAA,IACMoL,wBAAwB;EAA9B,MAAMA,wBAAwB,SAASX,oBAAoB,CAAC;IACxDlD,UAAU,GAAGlU,qDAAM,CAACwL,qDAAU,CAAC;IAC/BwM,kBAAkB,GAAGhY,qDAAM,CAAC0L,4DAAiB,CAAC;IAC9CsF,eAAe,GAAGhR,qDAAM,CAAC0N,uBAAuB,EAAE;MAC9CvK,QAAQ,EAAE;IACd,CAAC,CAAC;IACFgP,UAAU,GAAGnS,qDAAM,CAACmX,kBAAkB,EAAE;MAAEhU,QAAQ,EAAE;IAAK,CAAC,CAAC;IAC3DuO,SAAS,GAAG1R,qDAAM,CAACO,qDAAQ,CAAC;IAC5B;IACA0X,gBAAgB,GAAG,IAAI1L,yCAAO,CAAC,CAAC;IAChC;IACA2L,qBAAqB,GAAG,IAAI3L,yCAAO,CAAC,CAAC;IACrC;IACA,IAAI+K,WAAWA,CAAA,EAAG;MACd,OAAO,IAAI,CAACa,YAAY;IAC5B;IACA,IAAIb,WAAWA,CAACA,WAAW,EAAE;MACzB,IAAI,IAAI,CAACa,YAAY,KAAKb,WAAW,EAAE;QACnC,IAAI,CAACa,YAAY,GAAGb,WAAW;QAC/B,IAAI,CAACc,oBAAoB,CAAC,CAAC;MAC/B;IACJ;IACAD,YAAY,GAAG,UAAU;IACzB;AACJ;AACA;AACA;IACIE,UAAU,GAAG,KAAK;IAClB;IACA;IACA;IACA;IACA;IACAxK,mBAAmB,GAAG,IAAIrB,4CAAU,CAAEqG,QAAQ,IAAK,IAAI,CAAC7B,eAAe,CAACnD,mBAAmB,CAACyE,SAAS,CAAC7H,KAAK,IAAI6N,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM,IAAI,CAACpE,MAAM,CAACqE,GAAG,CAAC,MAAM5F,QAAQ,CAAChC,IAAI,CAACpG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1L;IACAiO,eAAe;IACf;IACAC,mBAAmB,GAAG,IAAI,CAACT,qBAAqB;IAChD;AACJ;AACA;IACIU,iBAAiB,GAAG,CAAC;IACrB;IACAC,kBAAkB,GAAGvW,qDAAM,CAAC,EAAE,CAAC;IAC/B;IACAwW,mBAAmB,GAAGxW,qDAAM,CAAC,EAAE,CAAC;IAChC;AACJ;AACA;AACA;IACIyW,yBAAyB;IACzB;IACAC,cAAc,GAAG;MAAExJ,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAC;IACrC;IACAwJ,WAAW,GAAG,CAAC;IACf;IACAlD,aAAa,GAAG,CAAC;IACjB;IACAmD,MAAM;IACN;IACAC,sBAAsB,GAAG,CAAC;IAC1B;AACJ;AACA;AACA;IACIC,kCAAkC,GAAG,KAAK;IAC1C;IACAC,yBAAyB,GAAG,KAAK;IACjC;IACAC,wBAAwB,GAAG,EAAE;IAC7B;IACAC,gBAAgB,GAAG9M,8CAAY,CAAC+M,KAAK;IACrCC,SAAS,GAAGzZ,qDAAM,CAAC2L,mDAAQ,CAAC;IAC5B+N,YAAY,GAAG,KAAK;IACpBjY,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;MACP,MAAMkY,aAAa,GAAG3Z,qDAAM,CAAC6V,aAAa,CAAC;MAC3C,IAAI,CAAC,IAAI,CAAC7E,eAAe,KAAK,OAAO9O,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;QAC1E,MAAMyM,KAAK,CAAC,gFAAgF,CAAC;MACjG;MACA,IAAI,CAAC4K,gBAAgB,GAAGI,aAAa,CAAC1W,MAAM,CAAC,CAAC,CAACqP,SAAS,CAAC,MAAM;QAC3D,IAAI,CAACsH,iBAAiB,CAAC,CAAC;MAC5B,CAAC,CAAC;MACF,IAAI,CAAC,IAAI,CAACzH,UAAU,EAAE;QAClB;QACA,IAAI,CAAC+B,UAAU,CAACJ,aAAa,CAAC+F,SAAS,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrE,IAAI,CAAC3H,UAAU,GAAG,IAAI;MAC1B;IACJ;IACAsC,QAAQA,CAAA,EAAG;MACP;MACA,IAAI,CAAC,IAAI,CAAC/C,SAAS,CAACjR,SAAS,EAAE;QAC3B;MACJ;MACA,IAAI,IAAI,CAAC0R,UAAU,KAAK,IAAI,EAAE;QAC1B,KAAK,CAACsC,QAAQ,CAAC,CAAC;MACpB;MACA;MACA;MACA;MACA;MACA,IAAI,CAACL,MAAM,CAACtB,iBAAiB,CAAC,MAAMwF,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QAC7D,IAAI,CAACuB,oBAAoB,CAAC,CAAC;QAC3B,IAAI,CAAC/I,eAAe,CAAC1C,MAAM,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC6D,UAAU,CACVE,eAAe,CAAC,CAAC,CACjBvE,IAAI;QACT;QACAf,yDAAS,CAAC,IAAI,CAAC;QACf;QACA;QACA;QACAF,yDAAS,CAAC,CAAC,EAAEgL,gBAAgB,CAAC;QAC9B;QACA;QACA;QACA7K,yDAAS,CAAC,IAAI,CAACsH,UAAU,CAAC,CAAC,CACtBhC,SAAS,CAAC,MAAM,IAAI,CAACtB,eAAe,CAACpC,iBAAiB,CAAC,CAAC,CAAC;QAC9D,IAAI,CAACoL,0BAA0B,CAAC,CAAC;MACrC,CAAC,CAAC,CAAC;IACP;IACAtW,WAAWA,CAAA,EAAG;MACV,IAAI,CAACsG,MAAM,CAAC,CAAC;MACb,IAAI,CAACgH,eAAe,CAAChH,MAAM,CAAC,CAAC;MAC7B;MACA,IAAI,CAACkO,qBAAqB,CAACvU,QAAQ,CAAC,CAAC;MACrC,IAAI,CAACsU,gBAAgB,CAACtU,QAAQ,CAAC,CAAC;MAChC,IAAI,CAAC4V,gBAAgB,CAAC9G,WAAW,CAAC,CAAC;MACnC,IAAI,CAACiH,YAAY,GAAG,IAAI;MACxB,KAAK,CAAChW,WAAW,CAAC,CAAC;IACvB;IACA;IACA4K,MAAMA,CAAC2L,KAAK,EAAE;MACV,IAAI,IAAI,CAACf,MAAM,KAAK,OAAOhX,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;QAChE,MAAMyM,KAAK,CAAC,+CAA+C,CAAC;MAChE;MACA;MACA;MACA;MACA,IAAI,CAACyF,MAAM,CAACtB,iBAAiB,CAAC,MAAM;QAChC,IAAI,CAACoG,MAAM,GAAGe,KAAK;QACnB,IAAI,CAACf,MAAM,CAACgB,UAAU,CAACpM,IAAI,CAACd,yDAAS,CAAC,IAAI,CAACiL,gBAAgB,CAAC,CAAC,CAAC3F,SAAS,CAAC6H,IAAI,IAAI;UAC5E,MAAMC,SAAS,GAAGD,IAAI,CAACrP,MAAM;UAC7B,IAAIsP,SAAS,KAAK,IAAI,CAACnB,WAAW,EAAE;YAChC,IAAI,CAACA,WAAW,GAAGmB,SAAS;YAC5B,IAAI,CAACpJ,eAAe,CAACnC,mBAAmB,CAAC,CAAC;UAC9C;UACA,IAAI,CAACwL,kBAAkB,CAAC,CAAC;QAC7B,CAAC,CAAC;MACN,CAAC,CAAC;IACN;IACA;IACArQ,MAAMA,CAAA,EAAG;MACL,IAAI,CAACkP,MAAM,GAAG,IAAI;MAClB,IAAI,CAACjB,gBAAgB,CAACpH,IAAI,CAAC,CAAC;IAChC;IACA;IACAzB,aAAaA,CAAA,EAAG;MACZ,OAAO,IAAI,CAAC6J,WAAW;IAC3B;IACA;IACAtJ,eAAeA,CAAA,EAAG;MACd,OAAO,IAAI,CAACoG,aAAa;IAC7B;IACA;IACA;IACA;IACA;IACA;IACAzG,gBAAgBA,CAAA,EAAG;MACf,OAAO,IAAI,CAAC0J,cAAc;IAC9B;IACAsB,yCAAyCA,CAAC9E,IAAI,EAAE;MAC5C,OAAO,IAAI,CAAC3B,aAAa,CAAC,CAAC,CAACC,aAAa,CAAC6C,qBAAqB,CAAC,CAAC,CAACnB,IAAI,CAAC;IAC3E;IACA;AACJ;AACA;AACA;IACIrG,mBAAmBA,CAACoL,IAAI,EAAE;MACtB,IAAI,IAAI,CAAC3B,iBAAiB,KAAK2B,IAAI,EAAE;QACjC,IAAI,CAAC3B,iBAAiB,GAAG2B,IAAI;QAC7B,IAAI,CAACnC,oBAAoB,CAAC,CAAC;QAC3B,IAAI,CAAC4B,0BAA0B,CAAC,CAAC;MACrC;IACJ;IACA;IACArJ,gBAAgBA,CAAC6J,KAAK,EAAE;MACpB,IAAI,CAAC9C,WAAW,CAAC,IAAI,CAACsB,cAAc,EAAEwB,KAAK,CAAC,EAAE;QAC1C,IAAI,IAAI,CAACnC,UAAU,EAAE;UACjBmC,KAAK,GAAG;YAAEhL,KAAK,EAAE,CAAC;YAAEC,GAAG,EAAEQ,IAAI,CAACG,GAAG,CAAC,IAAI,CAAC4I,cAAc,CAACvJ,GAAG,EAAE+K,KAAK,CAAC/K,GAAG;UAAE,CAAC;QAC3E;QACA,IAAI,CAACyI,qBAAqB,CAACrH,IAAI,CAAE,IAAI,CAACmI,cAAc,GAAGwB,KAAM,CAAC;QAC9D,IAAI,CAACR,0BAA0B,CAAC,MAAM,IAAI,CAAChJ,eAAe,CAAClC,iBAAiB,CAAC,CAAC,CAAC;MACnF;IACJ;IACA;AACJ;AACA;IACI2L,+BAA+BA,CAAA,EAAG;MAC9B,OAAO,IAAI,CAACrB,kCAAkC,GAAG,IAAI,GAAG,IAAI,CAACD,sBAAsB;IACvF;IACA;AACJ;AACA;AACA;IACIvI,wBAAwBA,CAAC8J,MAAM,EAAEC,EAAE,GAAG,UAAU,EAAE;MAC9C;MACAD,MAAM,GAAG,IAAI,CAACrC,UAAU,IAAIsC,EAAE,KAAK,UAAU,GAAG,CAAC,GAAGD,MAAM;MAC1D;MACA;MACA,MAAM7F,KAAK,GAAG,IAAI,CAACvR,GAAG,IAAI,IAAI,CAACA,GAAG,CAAC3D,KAAK,IAAI,KAAK;MACjD,MAAMib,YAAY,GAAG,IAAI,CAACtD,WAAW,IAAI,YAAY;MACrD,MAAMuD,IAAI,GAAGD,YAAY,GAAG,GAAG,GAAG,GAAG;MACrC,MAAME,aAAa,GAAGF,YAAY,IAAI/F,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;MACpD,IAAIkG,SAAS,GAAG,YAAYF,IAAI,IAAIG,MAAM,CAACF,aAAa,GAAGJ,MAAM,CAAC,KAAK;MACvE,IAAI,CAACvB,sBAAsB,GAAGuB,MAAM;MACpC,IAAIC,EAAE,KAAK,QAAQ,EAAE;QACjBI,SAAS,IAAI,aAAaF,IAAI,SAAS;QACvC;QACA;QACA;QACA,IAAI,CAACzB,kCAAkC,GAAG,IAAI;MAClD;MACA,IAAI,IAAI,CAACL,yBAAyB,IAAIgC,SAAS,EAAE;QAC7C;QACA;QACA,IAAI,CAAChC,yBAAyB,GAAGgC,SAAS;QAC1C,IAAI,CAACf,0BAA0B,CAAC,MAAM;UAClC,IAAI,IAAI,CAACZ,kCAAkC,EAAE;YACzC,IAAI,CAACD,sBAAsB,IAAI,IAAI,CAAC8B,0BAA0B,CAAC,CAAC;YAChE,IAAI,CAAC7B,kCAAkC,GAAG,KAAK;YAC/C,IAAI,CAACxI,wBAAwB,CAAC,IAAI,CAACuI,sBAAsB,CAAC;UAC9D,CAAC,MACI;YACD,IAAI,CAACnI,eAAe,CAACjC,uBAAuB,CAAC,CAAC;UAClD;QACJ,CAAC,CAAC;MACN;IACJ;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;IACIG,cAAcA,CAACwL,MAAM,EAAEzL,QAAQ,GAAG,MAAM,EAAE;MACtC,MAAM0F,OAAO,GAAG;QAAE1F;MAAS,CAAC;MAC5B,IAAI,IAAI,CAACqI,WAAW,KAAK,YAAY,EAAE;QACnC3C,OAAO,CAACnF,KAAK,GAAGkL,MAAM;MAC1B,CAAC,MACI;QACD/F,OAAO,CAACM,GAAG,GAAGyF,MAAM;MACxB;MACA,IAAI,CAACvI,UAAU,CAAC5N,QAAQ,CAACoQ,OAAO,CAAC;IACrC;IACA;AACJ;AACA;AACA;AACA;IACI3F,aAAaA,CAACvE,KAAK,EAAEwE,QAAQ,GAAG,MAAM,EAAE;MACpC,IAAI,CAAC+B,eAAe,CAAChC,aAAa,CAACvE,KAAK,EAAEwE,QAAQ,CAAC;IACvD;IACA;AACJ;AACA;AACA;AACA;IACIa,mBAAmBA,CAAC0F,IAAI,EAAE;MACtB;MACA,IAAI1F,mBAAmB;MACvB,IAAI,IAAI,CAACqC,UAAU,IAAI,IAAI,EAAE;QACzBrC,mBAAmB,GAAIoL,KAAK,IAAK,KAAK,CAACpL,mBAAmB,CAACoL,KAAK,CAAC;MACrE,CAAC,MACI;QACDpL,mBAAmB,GAAIoL,KAAK,IAAK,IAAI,CAAC/I,UAAU,CAACrC,mBAAmB,CAACoL,KAAK,CAAC;MAC/E;MACA,OAAOjL,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEN,mBAAmB,CAAC0F,IAAI,KAAK,IAAI,CAAC8B,WAAW,KAAK,YAAY,GAAG,OAAO,GAAG,KAAK,CAAC,CAAC,GACjG,IAAI,CAAC6D,qBAAqB,CAAC,CAAC,CAAC;IACrC;IACA;AACJ;AACA;AACA;IACIA,qBAAqBA,CAAC3F,IAAI,EAAE;MACxB,IAAI4F,QAAQ;MACZ,MAAM3F,IAAI,GAAG,MAAM;MACnB,MAAMC,KAAK,GAAG,OAAO;MACrB,MAAMb,KAAK,GAAG,IAAI,CAACvR,GAAG,EAAE3D,KAAK,IAAI,KAAK;MACtC,IAAI6V,IAAI,IAAI,OAAO,EAAE;QACjB4F,QAAQ,GAAGvG,KAAK,GAAGa,KAAK,GAAGD,IAAI;MACnC,CAAC,MACI,IAAID,IAAI,IAAI,KAAK,EAAE;QACpB4F,QAAQ,GAAGvG,KAAK,GAAGY,IAAI,GAAGC,KAAK;MACnC,CAAC,MACI,IAAIF,IAAI,EAAE;QACX4F,QAAQ,GAAG5F,IAAI;MACnB,CAAC,MACI;QACD4F,QAAQ,GAAG,IAAI,CAAC9D,WAAW,KAAK,YAAY,GAAG,MAAM,GAAG,KAAK;MACjE;MACA,MAAM+D,kBAAkB,GAAG,IAAI,CAAClJ,UAAU,CAACmI,yCAAyC,CAACc,QAAQ,CAAC;MAC9F,MAAME,kBAAkB,GAAG,IAAI,CAACpH,UAAU,CAACJ,aAAa,CAAC6C,qBAAqB,CAAC,CAAC,CAACyE,QAAQ,CAAC;MAC1F,OAAOE,kBAAkB,GAAGD,kBAAkB;IAClD;IACA;IACAJ,0BAA0BA,CAAA,EAAG;MACzB,MAAMM,SAAS,GAAG,IAAI,CAAC7C,eAAe,CAAC5E,aAAa;MACpD,OAAO,IAAI,CAACwD,WAAW,KAAK,YAAY,GAAGiE,SAAS,CAACC,WAAW,GAAGD,SAAS,CAACE,YAAY;IAC7F;IACA;AACJ;AACA;AACA;IACIC,gBAAgBA,CAAClB,KAAK,EAAE;MACpB,IAAI,CAAC,IAAI,CAACtB,MAAM,EAAE;QACd,OAAO,CAAC;MACZ;MACA,OAAO,IAAI,CAACA,MAAM,CAACwC,gBAAgB,CAAClB,KAAK,EAAE,IAAI,CAAClD,WAAW,CAAC;IAChE;IACA;IACAsC,iBAAiBA,CAAA,EAAG;MAChB;MACA,IAAI,CAACG,oBAAoB,CAAC,CAAC;MAC3B,IAAI,CAAC/I,eAAe,CAACnC,mBAAmB,CAAC,CAAC;IAC9C;IACA;IACAkL,oBAAoBA,CAAA,EAAG;MACnB,IAAI,CAAChE,aAAa,GAAG,IAAI,CAAC5D,UAAU,CAACkF,mBAAmB,CAAC,IAAI,CAACC,WAAW,CAAC;IAC9E;IACA;IACA0C,0BAA0BA,CAAC2B,QAAQ,EAAE;MACjC,IAAIA,QAAQ,EAAE;QACV,IAAI,CAACrC,wBAAwB,CAACvO,IAAI,CAAC4Q,QAAQ,CAAC;MAChD;MACA;MACA;MACA,IAAI,CAAC,IAAI,CAACtC,yBAAyB,EAAE;QACjC,IAAI,CAACA,yBAAyB,GAAG,IAAI;QACrC,IAAI,CAACjF,MAAM,CAACtB,iBAAiB,CAAC,MAAMwF,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;UAC7D,IAAI,CAAC6B,kBAAkB,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;MACP;IACJ;IACA;IACAA,kBAAkBA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACX,YAAY,EAAE;QACnB;MACJ;MACA,IAAI,CAACtF,MAAM,CAACqE,GAAG,CAAC,MAAM;QAClB;QACA;QACA;QACA,IAAI,CAACT,kBAAkB,CAAC4D,YAAY,CAAC,CAAC;QACtC;QACA;QACA;QACA;QACA,IAAI,CAAClD,eAAe,CAAC5E,aAAa,CAAC1P,KAAK,CAAC2W,SAAS,GAAG,IAAI,CAAChC,yBAAyB;QACnFnN,8DAAe,CAAC,MAAM;UAClB,IAAI,CAACyN,yBAAyB,GAAG,KAAK;UACtC,MAAMwC,uBAAuB,GAAG,IAAI,CAACvC,wBAAwB;UAC7D,IAAI,CAACA,wBAAwB,GAAG,EAAE;UAClC,KAAK,MAAMwC,EAAE,IAAID,uBAAuB,EAAE;YACtCC,EAAE,CAAC,CAAC;UACR;QACJ,CAAC,EAAE;UAAEC,QAAQ,EAAE,IAAI,CAACtC;QAAU,CAAC,CAAC;MACpC,CAAC,CAAC;IACN;IACA;IACArB,oBAAoBA,CAAA,EAAG;MACnB,IAAI,CAACU,mBAAmB,CAACrV,GAAG,CAAC,IAAI,CAAC6T,WAAW,KAAK,YAAY,GAAG,EAAE,GAAG,GAAG,IAAI,CAACsB,iBAAiB,IAAI,CAAC;MACpG,IAAI,CAACC,kBAAkB,CAACpV,GAAG,CAAC,IAAI,CAAC6T,WAAW,KAAK,YAAY,GAAG,GAAG,IAAI,CAACsB,iBAAiB,IAAI,GAAG,EAAE,CAAC;IACvG;IACA,OAAOlX,IAAI,YAAAsa,iCAAApa,iBAAA;MAAA,YAAAA,iBAAA,IAAwFmW,wBAAwB;IAAA;IAC3H,OAAOkE,IAAI,kBAl1B8Elc,+DAAE;MAAA4G,IAAA,EAk1BJoR,wBAAwB;MAAAnR,SAAA;MAAAuV,SAAA,WAAAC,+BAAApV,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAl1BtBjH,yDAAE,CAAAwN,GAAA;QAAA;QAAA,IAAAvG,EAAA;UAAA,IAAAsV,EAAA;UAAFvc,4DAAE,CAAAuc,EAAA,GAAFvc,yDAAE,QAAAkH,GAAA,CAAAyR,eAAA,GAAA4D,EAAA,CAAAG,KAAA;QAAA;MAAA;MAAAC,SAAA;MAAA7V,QAAA;MAAAC,YAAA,WAAA6V,sCAAA3V,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAFjH,yDAAE,8CAAAkH,GAAA,CAAAqQ,WAAA,KAk1BY,YAAO,CAAC,4CAAArQ,GAAA,CAAAqQ,WAAA,KAAR,YAAO,CAAC;QAAA;MAAA;MAAAnQ,MAAA;QAAAmQ,WAAA;QAAAe,UAAA,kCAA8IxM,2DAAgB;MAAA;MAAAzE,OAAA;QAAAyG,mBAAA;MAAA;MAAAvG,QAAA,GAl1BpLvH,gEAAE,CAk1B4e,CAC/jB;QACIyH,OAAO,EAAEyM,aAAa;QACtB7C,UAAU,EAAEA,CAACyL,iBAAiB,EAAEtO,QAAQ,KAAKsO,iBAAiB,IAAItO,QAAQ;QAC1E8C,IAAI,EAAE,CAAC,CAAC,IAAIvF,mDAAQ,CAAC,CAAC,EAAE,IAAIC,iDAAM,CAACoL,kBAAkB,CAAC,CAAC,EAAEY,wBAAwB;MACrF,CAAC,CACJ,GAx1BoFhY,wEAAE;MAAA+c,kBAAA,EAAAtP,GAAA;MAAAuP,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,kCAAAnW,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAFjH,6DAAE;UAAFA,4DAAE,eAw1BoR,CAAC;UAx1BvRA,0DAAE,EAw1BiT,CAAC;UAx1BpTA,0DAAE,CAw1ByT,CAAC;UAx1B5TA,uDAAE,YAw1BknB,CAAC;QAAA;QAAA,IAAAiH,EAAA;UAx1BrnBjH,uDAAE,EAw1BkkB,CAAC;UAx1BrkBA,yDAAE,UAAAkH,GAAA,CAAA4R,kBAAA,EAw1BkkB,CAAC,WAAA5R,GAAA,CAAA6R,mBAAA,EAAwC,CAAC;QAAA;MAAA;MAAA6E,MAAA;MAAAC,aAAA;MAAAC,eAAA;IAAA;EAC3sB;EAAC,OAhYK9F,wBAAwB;AAAA;AAiY9B;EAAA,QAAA7V,SAAA,oBAAAA,SAAA;AAAA;;AAyBA;AACA,SAAS4b,SAASA,CAACxG,WAAW,EAAEyG,SAAS,EAAEC,IAAI,EAAE;EAC7C,MAAMpJ,EAAE,GAAGoJ,IAAI;EACf,IAAI,CAACpJ,EAAE,CAAC+B,qBAAqB,EAAE;IAC3B,OAAO,CAAC;EACZ;EACA,MAAMsH,IAAI,GAAGrJ,EAAE,CAAC+B,qBAAqB,CAAC,CAAC;EACvC,IAAIW,WAAW,KAAK,YAAY,EAAE;IAC9B,OAAOyG,SAAS,KAAK,OAAO,GAAGE,IAAI,CAACnJ,IAAI,GAAGmJ,IAAI,CAAClJ,KAAK;EACzD;EACA,OAAOgJ,SAAS,KAAK,OAAO,GAAGE,IAAI,CAAChJ,GAAG,GAAGgJ,IAAI,CAACjJ,MAAM;AACzD;AACA;AACA;AACA;AACA;AAHA,IAIMkJ,eAAe;EAArB,MAAMA,eAAe,CAAC;IAClBC,iBAAiB,GAAGne,qDAAM,CAACoM,2DAAgB,CAAC;IAC5CgS,SAAS,GAAGpe,qDAAM,CAACqM,sDAAW,CAAC;IAC/BgS,QAAQ,GAAGre,qDAAM,CAACsM,0DAAe,CAAC;IAClCgS,aAAa,GAAGte,qDAAM,CAACsI,2EAAuB,CAAC;IAC/CyF,SAAS,GAAG/N,qDAAM,CAAC+X,wBAAwB,EAAE;MAAEwG,QAAQ,EAAE;IAAK,CAAC,CAAC;IAChE;IACAC,UAAU,GAAG,IAAIjS,yCAAO,CAAC,CAAC;IAC1B;IACAkS,kBAAkB,GAAG,IAAIlS,yCAAO,CAAC,CAAC;IAClC;IACA,IAAImS,eAAeA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACC,gBAAgB;IAChC;IACA,IAAID,eAAeA,CAAC/e,KAAK,EAAE;MACvB,IAAI,CAACgf,gBAAgB,GAAGhf,KAAK;MAC7B,IAAID,6DAAY,CAACC,KAAK,CAAC,EAAE;QACrB,IAAI,CAAC8e,kBAAkB,CAAC5N,IAAI,CAAClR,KAAK,CAAC;MACvC,CAAC,MACI;QACD;QACA,IAAI,CAAC8e,kBAAkB,CAAC5N,IAAI,CAAC,IAAI3I,2EAAe,CAACF,kDAAY,CAACrI,KAAK,CAAC,GAAGA,KAAK,GAAGif,KAAK,CAACpJ,IAAI,CAAC7V,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;MAC5G;IACJ;IACAgf,gBAAgB;IAChB;AACJ;AACA;AACA;IACI,IAAIE,oBAAoBA,CAAA,EAAG;MACvB,OAAO,IAAI,CAACC,qBAAqB;IACrC;IACA,IAAID,oBAAoBA,CAAC/C,EAAE,EAAE;MACzB,IAAI,CAACiD,YAAY,GAAG,IAAI;MACxB,IAAI,CAACD,qBAAqB,GAAGhD,EAAE,GACzB,CAACrR,KAAK,EAAEuU,IAAI,KAAKlD,EAAE,CAACrR,KAAK,IAAI,IAAI,CAACuO,cAAc,GAAG,IAAI,CAACA,cAAc,CAACxJ,KAAK,GAAG,CAAC,CAAC,EAAEwP,IAAI,CAAC,GACxF3U,SAAS;IACnB;IACAyU,qBAAqB;IACrB;IACA,IAAIG,qBAAqBA,CAACtf,KAAK,EAAE;MAC7B,IAAIA,KAAK,EAAE;QACP,IAAI,CAACof,YAAY,GAAG,IAAI;QACxB,IAAI,CAACX,SAAS,GAAGze,KAAK;MAC1B;IACJ;IACA;AACJ;AACA;AACA;IACI,IAAIuf,8BAA8BA,CAAA,EAAG;MACjC,OAAO,IAAI,CAACZ,aAAa,CAAC9V,aAAa;IAC3C;IACA,IAAI0W,8BAA8BA,CAAC3E,IAAI,EAAE;MACrC,IAAI,CAAC+D,aAAa,CAAC9V,aAAa,GAAG6E,wDAAoB,CAACkN,IAAI,CAAC;IACjE;IACA;IACAL,UAAU,GAAG,IAAI,CAACuE,kBAAkB,CAAC3Q,IAAI;IACzC;IACAf,yDAAS,CAAC,IAAI,CAAC;IACf;IACAE,wDAAQ,CAAC,CAAC;IACV;IACA;IACA;IACAC,yDAAS,CAAC,CAAC,CAACiS,IAAI,EAAEC,GAAG,CAAC,KAAK,IAAI,CAACC,iBAAiB,CAACF,IAAI,EAAEC,GAAG,CAAC,CAAC;IAC7D;IACAjS,2DAAW,CAAC,CAAC,CAAC,CAAC;IACf;IACAmS,OAAO,GAAG,IAAI;IACd;IACAnX,KAAK;IACL;IACAoX,cAAc;IACd;IACAvG,cAAc;IACd;IACA+F,YAAY,GAAG,KAAK;IACpBzK,UAAU,GAAG,IAAI/H,yCAAO,CAAC,CAAC;IAC1B9K,WAAWA,CAAA,EAAG;MACV,MAAM2S,MAAM,GAAGpU,qDAAM,CAACsL,iDAAM,CAAC;MAC7B,IAAI,CAAC4O,UAAU,CAAC5H,SAAS,CAAC6H,IAAI,IAAI;QAC9B,IAAI,CAAChS,KAAK,GAAGgS,IAAI;QACjB,IAAI,CAACqF,qBAAqB,CAAC,CAAC;MAChC,CAAC,CAAC;MACF,IAAI,CAACzR,SAAS,CAAC4K,mBAAmB,CAAC7K,IAAI,CAACd,yDAAS,CAAC,IAAI,CAACsH,UAAU,CAAC,CAAC,CAAChC,SAAS,CAACkI,KAAK,IAAI;QACnF,IAAI,CAACxB,cAAc,GAAGwB,KAAK;QAC3B,IAAI,IAAI,CAACgE,UAAU,CAACiB,SAAS,CAAC3U,MAAM,EAAE;UAClCsJ,MAAM,CAACqE,GAAG,CAAC,MAAM,IAAI,CAAC+F,UAAU,CAAC3N,IAAI,CAAC,IAAI,CAACmI,cAAc,CAAC,CAAC;QAC/D;QACA,IAAI,CAACwG,qBAAqB,CAAC,CAAC;MAChC,CAAC,CAAC;MACF,IAAI,CAACzR,SAAS,CAACO,MAAM,CAAC,IAAI,CAAC;IAC/B;IACA;AACJ;AACA;AACA;AACA;IACIoN,gBAAgBA,CAAClB,KAAK,EAAElD,WAAW,EAAE;MACjC,IAAIkD,KAAK,CAAChL,KAAK,IAAIgL,KAAK,CAAC/K,GAAG,EAAE;QAC1B,OAAO,CAAC;MACZ;MACA,IAAI,CAAC+K,KAAK,CAAChL,KAAK,GAAG,IAAI,CAACwJ,cAAc,CAACxJ,KAAK,IAAIgL,KAAK,CAAC/K,GAAG,GAAG,IAAI,CAACuJ,cAAc,CAACvJ,GAAG,MAC9E,OAAOvN,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;QACjD,MAAMyM,KAAK,CAAC,0DAA0D,CAAC;MAC3E;MACA;MACA,MAAM+Q,kBAAkB,GAAGlF,KAAK,CAAChL,KAAK,GAAG,IAAI,CAACwJ,cAAc,CAACxJ,KAAK;MAClE;MACA,MAAMmQ,QAAQ,GAAGnF,KAAK,CAAC/K,GAAG,GAAG+K,KAAK,CAAChL,KAAK;MACxC;MACA;MACA,IAAIoQ,SAAS;MACb,IAAIC,QAAQ;MACZ;MACA,KAAK,IAAI/f,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6f,QAAQ,EAAE7f,CAAC,EAAE,EAAE;QAC/B,MAAMsJ,IAAI,GAAG,IAAI,CAAC+U,iBAAiB,CAACvT,GAAG,CAAC9K,CAAC,GAAG4f,kBAAkB,CAAC;QAC/D,IAAItW,IAAI,IAAIA,IAAI,CAAC0W,SAAS,CAAChV,MAAM,EAAE;UAC/B8U,SAAS,GAAGC,QAAQ,GAAGzW,IAAI,CAAC0W,SAAS,CAAC,CAAC,CAAC;UACxC;QACJ;MACJ;MACA;MACA,KAAK,IAAIhgB,CAAC,GAAG6f,QAAQ,GAAG,CAAC,EAAE7f,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,EAAE,EAAE;QACpC,MAAMsJ,IAAI,GAAG,IAAI,CAAC+U,iBAAiB,CAACvT,GAAG,CAAC9K,CAAC,GAAG4f,kBAAkB,CAAC;QAC/D,IAAItW,IAAI,IAAIA,IAAI,CAAC0W,SAAS,CAAChV,MAAM,EAAE;UAC/B+U,QAAQ,GAAGzW,IAAI,CAAC0W,SAAS,CAAC1W,IAAI,CAAC0W,SAAS,CAAChV,MAAM,GAAG,CAAC,CAAC;UACpD;QACJ;MACJ;MACA,OAAO8U,SAAS,IAAIC,QAAQ,GACtB/B,SAAS,CAACxG,WAAW,EAAE,KAAK,EAAEuI,QAAQ,CAAC,GAAG/B,SAAS,CAACxG,WAAW,EAAE,OAAO,EAAEsI,SAAS,CAAC,GACpF,CAAC;IACX;IACAG,SAASA,CAAA,EAAG;MACR,IAAI,IAAI,CAACT,OAAO,IAAI,IAAI,CAACP,YAAY,EAAE;QACnC;QACA;QACA;QACA,MAAMpW,OAAO,GAAG,IAAI,CAAC2W,OAAO,CAACU,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;QACtD,IAAI,CAAC5W,OAAO,EAAE;UACV,IAAI,CAACsX,cAAc,CAAC,CAAC;QACzB,CAAC,MACI;UACD,IAAI,CAACC,aAAa,CAACvX,OAAO,CAAC;QAC/B;QACA,IAAI,CAACoW,YAAY,GAAG,KAAK;MAC7B;IACJ;IACArb,WAAWA,CAAA,EAAG;MACV,IAAI,CAACqK,SAAS,CAAC/D,MAAM,CAAC,CAAC;MACvB,IAAI,CAACyU,kBAAkB,CAAC5N,IAAI,CAACxG,SAAS,CAAC;MACvC,IAAI,CAACoU,kBAAkB,CAAC9a,QAAQ,CAAC,CAAC;MAClC,IAAI,CAAC6a,UAAU,CAAC7a,QAAQ,CAAC,CAAC;MAC1B,IAAI,CAAC2Q,UAAU,CAACzD,IAAI,CAAC,CAAC;MACtB,IAAI,CAACyD,UAAU,CAAC3Q,QAAQ,CAAC,CAAC;MAC1B,IAAI,CAAC2a,aAAa,CAACtU,MAAM,CAAC,CAAC;IAC/B;IACA;IACAwV,qBAAqBA,CAAA,EAAG;MACpB,IAAI,CAAC,IAAI,CAACxG,cAAc,EAAE;QACtB;MACJ;MACA,IAAI,CAACuG,cAAc,GAAG,IAAI,CAACpX,KAAK,CAACgY,KAAK,CAAC,IAAI,CAACnH,cAAc,CAACxJ,KAAK,EAAE,IAAI,CAACwJ,cAAc,CAACvJ,GAAG,CAAC;MAC1F,IAAI,CAAC,IAAI,CAAC6P,OAAO,EAAE;QACf;QACA;QACA,IAAI,CAACA,OAAO,GAAG,IAAI,CAACjB,QAAQ,CAAC+B,IAAI,CAAC,IAAI,CAACb,cAAc,CAAC,CAACc,MAAM,CAAC,CAAC5V,KAAK,EAAEuU,IAAI,KAAK;UAC3E,OAAO,IAAI,CAACH,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACpU,KAAK,EAAEuU,IAAI,CAAC,GAAGA,IAAI;QACpF,CAAC,CAAC;MACN;MACA,IAAI,CAACD,YAAY,GAAG,IAAI;IAC5B;IACA;IACAM,iBAAiBA,CAACiB,KAAK,EAAEC,KAAK,EAAE;MAC5B,IAAID,KAAK,EAAE;QACPA,KAAK,CAAClY,UAAU,CAAC,IAAI,CAAC;MAC1B;MACA,IAAI,CAAC2W,YAAY,GAAG,IAAI;MACxB,OAAOwB,KAAK,GAAGA,KAAK,CAAC3gB,OAAO,CAAC,IAAI,CAAC,GAAGqI,wCAAE,CAAC,CAAC;IAC7C;IACA;IACAgY,cAAcA,CAAA,EAAG;MACb,MAAMO,KAAK,GAAG,IAAI,CAACrY,KAAK,CAAC2C,MAAM;MAC/B,IAAIhL,CAAC,GAAG,IAAI,CAACqe,iBAAiB,CAACrT,MAAM;MACrC,OAAOhL,CAAC,EAAE,EAAE;QACR,MAAMsJ,IAAI,GAAG,IAAI,CAAC+U,iBAAiB,CAACvT,GAAG,CAAC9K,CAAC,CAAC;QAC1CsJ,IAAI,CAACW,OAAO,CAACU,KAAK,GAAG,IAAI,CAACuO,cAAc,CAACxJ,KAAK,GAAG1P,CAAC;QAClDsJ,IAAI,CAACW,OAAO,CAACyW,KAAK,GAAGA,KAAK;QAC1B,IAAI,CAACC,gCAAgC,CAACrX,IAAI,CAACW,OAAO,CAAC;QACnDX,IAAI,CAACsX,aAAa,CAAC,CAAC;MACxB;IACJ;IACA;IACAR,aAAaA,CAACvX,OAAO,EAAE;MACnB,IAAI,CAAC2V,aAAa,CAAC5V,YAAY,CAACC,OAAO,EAAE,IAAI,CAACwV,iBAAiB,EAAE,CAAClV,MAAM,EAAE0X,sBAAsB,EAAExX,YAAY,KAAK,IAAI,CAACyX,oBAAoB,CAAC3X,MAAM,EAAEE,YAAY,CAAC,EAAEF,MAAM,IAAIA,MAAM,CAAC+V,IAAI,CAAC;MAC1L;MACArW,OAAO,CAACkY,qBAAqB,CAAE5X,MAAM,IAAK;QACtC,MAAMG,IAAI,GAAG,IAAI,CAAC+U,iBAAiB,CAACvT,GAAG,CAAC3B,MAAM,CAACE,YAAY,CAAC;QAC5DC,IAAI,CAACW,OAAO,CAACK,SAAS,GAAGnB,MAAM,CAAC+V,IAAI;MACxC,CAAC,CAAC;MACF;MACA,MAAMwB,KAAK,GAAG,IAAI,CAACrY,KAAK,CAAC2C,MAAM;MAC/B,IAAIhL,CAAC,GAAG,IAAI,CAACqe,iBAAiB,CAACrT,MAAM;MACrC,OAAOhL,CAAC,EAAE,EAAE;QACR,MAAMsJ,IAAI,GAAG,IAAI,CAAC+U,iBAAiB,CAACvT,GAAG,CAAC9K,CAAC,CAAC;QAC1CsJ,IAAI,CAACW,OAAO,CAACU,KAAK,GAAG,IAAI,CAACuO,cAAc,CAACxJ,KAAK,GAAG1P,CAAC;QAClDsJ,IAAI,CAACW,OAAO,CAACyW,KAAK,GAAGA,KAAK;QAC1B,IAAI,CAACC,gCAAgC,CAACrX,IAAI,CAACW,OAAO,CAAC;MACvD;IACJ;IACA;IACA0W,gCAAgCA,CAAC1W,OAAO,EAAE;MACtCA,OAAO,CAAC0S,KAAK,GAAG1S,OAAO,CAACU,KAAK,KAAK,CAAC;MACnCV,OAAO,CAAC+W,IAAI,GAAG/W,OAAO,CAACU,KAAK,KAAKV,OAAO,CAACyW,KAAK,GAAG,CAAC;MAClDzW,OAAO,CAACgX,IAAI,GAAGhX,OAAO,CAACU,KAAK,GAAG,CAAC,KAAK,CAAC;MACtCV,OAAO,CAACiX,GAAG,GAAG,CAACjX,OAAO,CAACgX,IAAI;IAC/B;IACAH,oBAAoBA,CAAC3X,MAAM,EAAEwB,KAAK,EAAE;MAChC;MACA;MACA;MACA;MACA,OAAO;QACHD,WAAW,EAAE,IAAI,CAAC4T,SAAS;QAC3BrU,OAAO,EAAE;UACLK,SAAS,EAAEnB,MAAM,CAAC+V,IAAI;UACtB;UACA;UACAN,eAAe,EAAE,IAAI,CAACC,gBAAgB;UACtClU,KAAK,EAAE,CAAC,CAAC;UACT+V,KAAK,EAAE,CAAC,CAAC;UACT/D,KAAK,EAAE,KAAK;UACZqE,IAAI,EAAE,KAAK;UACXE,GAAG,EAAE,KAAK;UACVD,IAAI,EAAE;QACV,CAAC;QACDtW;MACJ,CAAC;IACL;IACA,OAAOwW,sBAAsBA,CAACC,SAAS,EAAEnX,OAAO,EAAE;MAC9C,OAAO,IAAI;IACf;IACA,OAAOrI,IAAI,YAAAyf,wBAAAvf,iBAAA;MAAA,YAAAA,iBAAA,IAAwFsc,eAAe;IAAA;IAClH,OAAOzX,IAAI,kBAxnC8E1G,+DAAE;MAAA4G,IAAA,EAwnCJuX,eAAe;MAAAtX,SAAA;MAAAO,MAAA;QAAAuX,eAAA;QAAAG,oBAAA;QAAAI,qBAAA;QAAAC,8BAAA;MAAA;MAAA5X,QAAA,GAxnCbvH,gEAAE,CAwnC0S,CAAC;QAAEyH,OAAO,EAAEc,2EAAuB;QAAE8Y,QAAQ,EAAE7Y,2EAA4BA;MAAC,CAAC,CAAC;IAAA;EACvd;EAAC,OAtPK2V,eAAe;AAAA;AAuPrB;EAAA,QAAAhc,SAAA,oBAAAA,SAAA;AAAA;;AAgBA;AACA;AACA;AAFA,IAGMmf,2BAA2B;EAAjC,MAAMA,2BAA2B,SAASjK,oBAAoB,CAAC;IAC3D3V,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;IACX;IACA6Y,yCAAyCA,CAAC9E,IAAI,EAAE;MAC5C,OAAQ,IAAI,CAAC3B,aAAa,CAAC,CAAC,CAACC,aAAa,CAAC6C,qBAAqB,CAAC,CAAC,CAACnB,IAAI,CAAC,GACpE,IAAI,CAAC1F,mBAAmB,CAAC0F,IAAI,CAAC;IACtC;IACA,OAAO9T,IAAI,YAAA4f,oCAAA1f,iBAAA;MAAA,YAAAA,iBAAA,IAAwFyf,2BAA2B;IAAA;IAC9H,OAAO5a,IAAI,kBAtpC8E1G,+DAAE;MAAA4G,IAAA,EAspCJ0a,2BAA2B;MAAAza,SAAA;MAAA8V,SAAA;MAAApV,QAAA,GAtpCzBvH,gEAAE,CAspCsJ,CAAC;QAAEyH,OAAO,EAAE2P,kBAAkB;QAAE1P,WAAW,EAAE4Z;MAA4B,CAAC,CAAC,GAtpCnOthB,wEAAE;IAAA;EAupC/F;EAAC,OAVKshB,2BAA2B;AAAA;AAWjC;EAAA,QAAAnf,SAAA,oBAAAA,SAAA;AAAA;;AAWA;AACA;AACA;AAFA,IAGMqf,0BAA0B;EAAhC,MAAMA,0BAA0B,SAASnK,oBAAoB,CAAC;IAC1D3V,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;MACP,MAAMf,QAAQ,GAAGV,qDAAM,CAACqC,mDAAQ,CAAC;MACjC,IAAI,CAAC6R,UAAU,GAAG,IAAI1I,qDAAU,CAAC9K,QAAQ,CAAC8C,eAAe,CAAC;MAC1D,IAAI,CAAC6Q,cAAc,GAAG3T,QAAQ;IAClC;IACA4Z,yCAAyCA,CAAC9E,IAAI,EAAE;MAC5C,OAAO,IAAI,CAAC3B,aAAa,CAAC,CAAC,CAACC,aAAa,CAAC6C,qBAAqB,CAAC,CAAC,CAACnB,IAAI,CAAC;IAC3E;IACA,OAAO9T,IAAI,YAAA8f,mCAAA5f,iBAAA;MAAA,YAAAA,iBAAA,IAAwF2f,0BAA0B;IAAA;IAC7H,OAAO9a,IAAI,kBAjrC8E1G,+DAAE;MAAA4G,IAAA,EAirCJ4a,0BAA0B;MAAA3a,SAAA;MAAAU,QAAA,GAjrCxBvH,gEAAE,CAirC8G,CAAC;QAAEyH,OAAO,EAAE2P,kBAAkB;QAAE1P,WAAW,EAAE8Z;MAA2B,CAAC,CAAC,GAjrC1LxhB,wEAAE;IAAA;EAkrC/F;EAAC,OAZKwhB,0BAA0B;AAAA;AAahC;EAAA,QAAArf,SAAA,oBAAAA,SAAA;AAAA;AAMwC,IAElCuf,mBAAmB;EAAzB,MAAMA,mBAAmB,CAAC;IACtB,OAAO/f,IAAI,YAAAggB,4BAAA9f,iBAAA;MAAA,YAAAA,iBAAA,IAAwF6f,mBAAmB;IAAA;IACtH,OAAO7Z,IAAI,kBA7rC8E7H,8DAAE;MAAA4G,IAAA,EA6rCS8a;IAAmB;IACvH,OAAO3Z,IAAI,kBA9rC8E/H,8DAAE;EA+rC/F;EAAC,OAJK0hB,mBAAmB;AAAA;AAKzB;EAAA,QAAAvf,SAAA,oBAAAA,SAAA;AAAA;AAOA;AACA;AACA;AAFA,IAGMyf,eAAe;EAArB,MAAMA,eAAe,CAAC;IAClB,OAAOjgB,IAAI,YAAAkgB,wBAAAhgB,iBAAA;MAAA,YAAAA,iBAAA,IAAwF+f,eAAe;IAAA;IAClH,OAAO/Z,IAAI,kBA5sC8E7H,8DAAE;MAAA4G,IAAA,EA4sCSgb;IAAe;IASnH,OAAO7Z,IAAI,kBArtC8E/H,8DAAE;MAAA8hB,OAAA,GAqtCoCna,iDAAU,EACjI+Z,mBAAmB,EAAE/Z,iDAAU,EAAE+Z,mBAAmB;IAAA;EAChE;EAAC,OAbKE,eAAe;AAAA;AAcrB;EAAA,QAAAzf,SAAA,oBAAAA,SAAA;AAAA;;;;;;;;;;;;;;;;;;AC55C2C;AAE3C,SAASmL,oBAAoBA,CAAC1N,KAAK,EAAEmiB,aAAa,GAAG,CAAC,EAAE;EACpD,IAAIC,cAAc,CAACpiB,KAAK,CAAC,EAAE;IACvB,OAAOqb,MAAM,CAACrb,KAAK,CAAC;EACxB;EACA,OAAOqiB,SAAS,CAAClX,MAAM,KAAK,CAAC,GAAGgX,aAAa,GAAG,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACpiB,KAAK,EAAE;EAC3B;EACA;EACA;EACA,OAAO,CAACsiB,KAAK,CAACC,UAAU,CAACviB,KAAK,CAAC,CAAC,IAAI,CAACsiB,KAAK,CAACjH,MAAM,CAACrb,KAAK,CAAC,CAAC;AAC7D;;AAEA;AACA;AACA;AACA;AACA,SAAS2N,aAAaA,CAAC6U,YAAY,EAAE;EACjC,OAAOA,YAAY,YAAY3W,qDAAU,GAAG2W,YAAY,CAACrO,aAAa,GAAGqO,YAAY;AACzF","sources":["./node_modules/@angular/cdk/fesm2022/data-source-D34wiQZj.mjs","./node_modules/@angular/cdk/fesm2022/platform-DNDzkVcI.mjs","./node_modules/@angular/cdk/fesm2022/directionality-CChdj3az.mjs","./node_modules/@angular/cdk/fesm2022/scrolling-BkvA05C8.mjs","./node_modules/@angular/cdk/fesm2022/bidi.mjs","./node_modules/@angular/cdk/fesm2022/recycle-view-repeater-strategy-SfuyU210.mjs","./node_modules/@angular/cdk/fesm2022/scrolling.mjs","./node_modules/@angular/cdk/fesm2022/element-x4z00URv.mjs"],"sourcesContent":["import { ConnectableObservable } from 'rxjs';\n\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n    // here, because of some internal apps.\n    return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\nexport { DataSource as D, isDataSource as i };\n","import * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    _platformId = inject(PLATFORM_ID);\n    // We want to use the Angular platform check because if the Document is shimmed\n    // without the navigator, the following checks will fail. This is preferred because\n    // sometimes the Document may be shimmed without the user's knowledge or intention\n    /** Whether the Angular application is being rendered in the browser. */\n    isBrowser = this._platformId\n        ? isPlatformBrowser(this._platformId)\n        : typeof document === 'object' && !!document;\n    /** Whether the current browser is Microsoft Edge. */\n    EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n    /** Whether the current rendering engine is Microsoft Trident. */\n    TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n    // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n    /** Whether the current rendering engine is Blink. */\n    BLINK = this.isBrowser &&\n        !!(window.chrome || hasV8BreakIterator) &&\n        typeof CSS !== 'undefined' &&\n        !this.EDGE &&\n        !this.TRIDENT;\n    // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n    // ensure that Webkit runs standalone and is not used as another engine's base.\n    /** Whether the current rendering engine is WebKit. */\n    WEBKIT = this.isBrowser &&\n        /AppleWebKit/i.test(navigator.userAgent) &&\n        !this.BLINK &&\n        !this.EDGE &&\n        !this.TRIDENT;\n    /** Whether the current platform is Apple iOS. */\n    IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n    // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n    // them self as Gecko-like browsers and modify the userAgent's according to that.\n    // Since we only cover one explicit Firefox case, we can simply check for Firefox\n    // instead of having an unstable check for Gecko.\n    /** Whether the current browser is Firefox. */\n    FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n    /** Whether the current platform is Android. */\n    // Trident on mobile adds the android platform to the userAgent to trick detections.\n    ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n    // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n    // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n    // Safari browser should also use Webkit as its layout engine.\n    /** Whether the current browser is Safari. */\n    SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { Platform as P };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, DOCUMENT, signal, EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /** The current 'ltr' or 'rtl' value. */\n    get value() {\n        return this.valueSignal();\n    }\n    /**\n     * The current 'ltr' or 'rtl' value.\n     */\n    valueSignal = signal('ltr');\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n    change = new EventEmitter();\n    constructor() {\n        const _document = inject(DIR_DOCUMENT, { optional: true });\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.valueSignal.set(_resolveDirectionality(bodyDir || htmlDir || 'ltr'));\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { Directionality as D, _resolveDirectionality as _, DIR_DOCUMENT as a };\n","/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nvar RtlScrollAxisType;\n(function (RtlScrollAxisType) {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NORMAL\"] = 0] = \"NORMAL\";\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NEGATED\"] = 1] = \"NEGATED\";\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"INVERTED\"] = 2] = \"INVERTED\";\n})(RtlScrollAxisType || (RtlScrollAxisType = {}));\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\nexport { RtlScrollAxisType as R, getRtlScrollAxisType as g, supportsScrollBehavior as s };\n","import { _ as _resolveDirectionality, D as Directionality } from './directionality-CChdj3az.mjs';\nexport { a as DIR_DOCUMENT } from './directionality-CChdj3az.mjs';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, signal, Directive, Output, Input, NgModule } from '@angular/core';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    /** Whether the `value` has been set to its initial value. */\n    _isInitialized = false;\n    /** Direction as passed in by the consumer. */\n    _rawDir;\n    /** Event emitted when the direction changes. */\n    change = new EventEmitter();\n    /** @docs-private */\n    get dir() {\n        return this.valueSignal();\n    }\n    set dir(value) {\n        const previousValue = this.valueSignal();\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this.valueSignal.set(_resolveDirectionality(value));\n        this._rawDir = value;\n        if (previousValue !== this.valueSignal() && this._isInitialized) {\n            this.change.emit(this.valueSignal());\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    valueSignal = signal('ltr');\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: Dir, isStandalone: true, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass BidiModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, imports: [Dir], exports: [Dir] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Dir],\n                    exports: [Dir],\n                }]\n        }] });\n\nexport { BidiModule, Dir, Directionality };\n","import { isObservable, of } from 'rxjs';\nimport { D as DataSource } from './data-source-D34wiQZj.mjs';\nimport { InjectionToken } from '@angular/core';\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    _data;\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/** Indicates how a view was changed by a `_ViewRepeater`. */\nvar _ViewRepeaterOperation;\n(function (_ViewRepeaterOperation) {\n    /** The content of an existing view was replaced with another item. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REPLACED\"] = 0] = \"REPLACED\";\n    /** A new view was created with `createEmbeddedView`. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"INSERTED\"] = 1] = \"INSERTED\";\n    /** The position of a view changed, but the content remains the same. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"MOVED\"] = 2] = \"MOVED\";\n    /** A view was detached from the view container. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REMOVED\"] = 3] = \"REMOVED\";\n})(_ViewRepeaterOperation || (_ViewRepeaterOperation = {}));\n/**\n * Injection token for `_ViewRepeater`. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * A repeater that caches views when they are removed from a\n * `ViewContainerRef`. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    /**\n     * The size of the cache used to store unused views.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n     */\n    viewCacheSize = 20;\n    /**\n     * View cache that stores embedded view instances that have been previously stamped out,\n     * but don't are not currently rendered. The view repeater will reuse these views rather than\n     * creating brand new ones.\n     *\n     * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n     */\n    _viewCache = [];\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\nexport { ArrayDataSource as A, _RecycleViewRepeaterStrategy as _, _ViewRepeaterOperation as a, _VIEW_REPEATER_STRATEGY as b };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, inject, NgZone, RendererFactory2, Injectable, ElementRef, Renderer2, DOCUMENT, ChangeDetectorRef, signal, Injector, afterNextRender, booleanAttribute, Optional, Inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, NgModule } from '@angular/core';\nimport { Subject, of, Observable, Subscription, animationFrameScheduler, asapScheduler, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, startWith, takeUntil, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { c as coerceNumberProperty, a as coerceElement } from './element-x4z00URv.mjs';\nimport { P as Platform } from './platform-DNDzkVcI.mjs';\nimport { D as Directionality } from './directionality-CChdj3az.mjs';\nimport { g as getRtlScrollAxisType, R as RtlScrollAxisType, s as supportsScrollBehavior } from './scrolling-BkvA05C8.mjs';\nimport { BidiModule } from './bidi.mjs';\nexport { Dir as ɵɵDir } from './bidi.mjs';\nimport { b as _VIEW_REPEATER_STRATEGY, A as ArrayDataSource, _ as _RecycleViewRepeaterStrategy } from './recycle-view-repeater-strategy-SfuyU210.mjs';\nimport { i as isDataSource } from './data-source-D34wiQZj.mjs';\nimport '@angular/common';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    _scrolledIndexChange = new Subject();\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n    /** The attached viewport. */\n    _viewport = null;\n    /** The size of the items in the virtually scrolling list. */\n    _itemSize;\n    /** The minimum amount of buffer rendered beyond the viewport (in pixels). */\n    _minBufferPx;\n    /** The number of buffer items to render beyond the edge of the viewport (in pixels). */\n    _maxBufferPx;\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    _itemSize = 20;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    _minBufferPx = 100;\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    _maxBufferPx = 200;\n    /** The scroll strategy used by this directive. */\n    _scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkFixedSizeVirtualScroll, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n            {\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n            },\n        ], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _cleanupGlobalListener;\n    constructor() { }\n    /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n    _scrolled = new Subject();\n    /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n    _scrolledCount = 0;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     */\n    scrollContainers = new Map();\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._cleanupGlobalListener) {\n                this._cleanupGlobalListener = this._ngZone.runOutsideAngular(() => this._renderer.listen('document', 'scroll', () => this._scrolled.next()));\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._cleanupGlobalListener?.();\n                    this._cleanupGlobalListener = undefined;\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._cleanupGlobalListener?.();\n        this._cleanupGlobalListener = undefined;\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => !target || ancestors.indexOf(target) > -1));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    elementRef = inject(ElementRef);\n    scrollDispatcher = inject(ScrollDispatcher);\n    ngZone = inject(NgZone);\n    dir = inject(Directionality, { optional: true });\n    _scrollElement = this.elementRef.nativeElement;\n    _destroyed = new Subject();\n    _renderer = inject(Renderer2);\n    _cleanupScroll;\n    _elementScrolled = new Subject();\n    constructor() { }\n    ngOnInit() {\n        this._cleanupScroll = this.ngZone.runOutsideAngular(() => this._renderer.listen(this._scrollElement, 'scroll', event => this._elementScrolled.next(event)));\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this._cleanupScroll?.();\n        this._elementScrolled.complete();\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollable, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkScrollable, isStandalone: true, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                }]\n        }], ctorParameters: () => [] });\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    _platform = inject(Platform);\n    _listeners;\n    /** Cached viewport dimensions. */\n    _viewportSize;\n    /** Stream of viewport change events. */\n    _change = new Subject();\n    /** Used to reference correct document/window */\n    _document = inject(DOCUMENT, { optional: true });\n    constructor() {\n        const ngZone = inject(NgZone);\n        const renderer = inject(RendererFactory2).createRenderer(null, null);\n        ngZone.runOutsideAngular(() => {\n            if (this._platform.isBrowser) {\n                const changeListener = (event) => this._change.next(event);\n                this._listeners = [\n                    renderer.listen('window', 'resize', changeListener),\n                    renderer.listen('window', 'orientationchange', changeListener),\n                ];\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        this._listeners?.forEach(cleanup => cleanup());\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a DOMRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ViewportRuler, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ViewportRuler, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the `CdkScrollable` to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n    constructor() {\n        super();\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n        const viewportEl = this.elementRef.nativeElement;\n        return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollable, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualScrollable, isStandalone: true, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollable, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [] });\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _scrollStrategy = inject(VIRTUAL_SCROLL_STRATEGY, {\n        optional: true,\n    });\n    scrollable = inject(VIRTUAL_SCROLLABLE, { optional: true });\n    _platform = inject(Platform);\n    /** Emits when the viewport is detached from a CdkVirtualForOf. */\n    _detachedSubject = new Subject();\n    /** Emits when the rendered range changes. */\n    _renderedRangeSubject = new Subject();\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    _orientation = 'vertical';\n    /**\n     * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n     * will be removed.\n     */\n    appendOnly = false;\n    // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n    // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n    // depending on how the strategy calculates the scrolled index, it may come at a cost to\n    // performance.\n    /** Emits when the index of the first element visible in the viewport changes. */\n    scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n    /** The element that wraps the rendered content. */\n    _contentWrapper;\n    /** A stream that emits whenever the rendered range changes. */\n    renderedRangeStream = this._renderedRangeSubject;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     */\n    _totalContentSize = 0;\n    /** A string representing the `style.width` property value to be used for the spacer element. */\n    _totalContentWidth = signal('');\n    /** A string representing the `style.height` property value to be used for the spacer element. */\n    _totalContentHeight = signal('');\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     */\n    _renderedContentTransform;\n    /** The currently rendered range of indices. */\n    _renderedRange = { start: 0, end: 0 };\n    /** The length of the data bound to this viewport (in number of items). */\n    _dataLength = 0;\n    /** The size of the viewport (in pixels). */\n    _viewportSize = 0;\n    /** the currently attached CdkVirtualScrollRepeater. */\n    _forOf;\n    /** The last rendered content offset that was set. */\n    _renderedContentOffset = 0;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     */\n    _renderedContentOffsetNeedsRewrite = false;\n    /** Whether there is a pending change detection cycle. */\n    _isChangeDetectionPending = false;\n    /** A list of functions to run after the next change detection cycle. */\n    _runAfterChangeDetection = [];\n    /** Subscription to changes in the viewport size. */\n    _viewportChanges = Subscription.EMPTY;\n    _injector = inject(Injector);\n    _isDestroyed = false;\n    constructor() {\n        super();\n        const viewportRuler = inject(ViewportRuler);\n        if (!this._scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n        if (!this.scrollable) {\n            // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n            this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n            this.scrollable = this;\n        }\n    }\n    ngOnInit() {\n        // Scrolling depends on the element dimensions which we can't get during SSR.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        if (this.scrollable === this) {\n            super.ngOnInit();\n        }\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.scrollable\n                .elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER), \n            // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n            // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n            // to unsubscribe here just in case.\n            takeUntil(this._destroyed))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        this._isDestroyed = true;\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // In appendOnly, we always start from the top\n        offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        // This is to break the call cycle\n        let measureScrollOffset;\n        if (this.scrollable == this) {\n            measureScrollOffset = (_from) => super.measureScrollOffset(_from);\n        }\n        else {\n            measureScrollOffset = (_from) => this.scrollable.measureScrollOffset(_from);\n        }\n        return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) -\n            this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n        let fromRect;\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const isRtl = this.dir?.value == 'rtl';\n        if (from == 'start') {\n            fromRect = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            fromRect = isRtl ? LEFT : RIGHT;\n        }\n        else if (from) {\n            fromRect = from;\n        }\n        else {\n            fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n        }\n        const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n        const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n        return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        if (this._isDestroyed) {\n            return;\n        }\n        this.ngZone.run(() => {\n            // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n            // from the root, since the repeated items are content projected in. Calling `detectChanges`\n            // instead does not properly check the projected content.\n            this._changeDetectorRef.markForCheck();\n            // Apply the content transform. The transform can't be set via an Angular binding because\n            // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n            // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n            // the `Number` function first to coerce it to a numeric value.\n            this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n            afterNextRender(() => {\n                this._isChangeDetectionPending = false;\n                const runAfterChangeDetection = this._runAfterChangeDetection;\n                this._runAfterChangeDetection = [];\n                for (const fn of runAfterChangeDetection) {\n                    fn();\n                }\n            }, { injector: this._injector });\n        });\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight.set(this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`);\n        this._totalContentWidth.set(this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkVirtualScrollViewport, isStandalone: true, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: [\"appendOnly\", \"appendOnly\", booleanAttribute] }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n            },\n        ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth()\\\" [style.height]=\\\"_totalContentHeight()\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth()\\\" [style.height]=\\\"_totalContentHeight()\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    _viewContainerRef = inject(ViewContainerRef);\n    _template = inject(TemplateRef);\n    _differs = inject(IterableDiffers);\n    _viewRepeater = inject(_VIEW_REPEATER_STRATEGY);\n    _viewport = inject(CdkVirtualScrollViewport, { skipSelf: true });\n    /** Emits when the rendered view of the data changes. */\n    viewChange = new Subject();\n    /** Subject that emits when a new DataSource instance is given. */\n    _dataSourceChanges = new Subject();\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    _cdkVirtualForOf;\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    _cdkVirtualForTrackBy;\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /** Emits whenever the data in the current DataSource changes. */\n    dataStream = this._dataSourceChanges.pipe(\n    // Start off with null `DataSource`.\n    startWith(null), \n    // Bundle up the previous and current data sources so we can work with both.\n    pairwise(), \n    // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n    // new one, passing back a stream of data changes which we run through `switchMap` to give\n    // us a data stream that emits the latest data from whatever the current `DataSource` is.\n    switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n    // Replay the last emitted data when someone subscribes.\n    shareReplay(1));\n    /** The differ used to calculate changes to the data. */\n    _differ = null;\n    /** The most recent data emitted from the DataSource. */\n    _data;\n    /** The currently rendered items. */\n    _renderedItems;\n    /** The currently rendered range of indices. */\n    _renderedRange;\n    /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n    _needsUpdate = false;\n    _destroyed = new Subject();\n    constructor() {\n        const ngZone = inject(NgZone);\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            if (this.viewChange.observers.length) {\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n            }\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n    static ngTemplateContextGuard(directive, context) {\n        return true;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualForOf, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualForOf, isStandalone: true, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }], ctorParameters: () => [], propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor() {\n        super();\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return (this.getElementRef().nativeElement.getBoundingClientRect()[from] -\n            this.measureScrollOffset(from));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableElement, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualScrollableElement, isStandalone: true, selector: \"[cdkVirtualScrollingElement]\", host: { classAttribute: \"cdk-virtual-scrollable\" }, providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableElement, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualScrollingElement]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }],\n                    host: {\n                        'class': 'cdk-virtual-scrollable',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor() {\n        super();\n        const document = inject(DOCUMENT);\n        this.elementRef = new ElementRef(document.documentElement);\n        this._scrollElement = document;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableWindow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkVirtualScrollableWindow, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[scrollWindow]\", providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkVirtualScrollableWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }],\n                }]\n        }], ctorParameters: () => [] });\n\nclass CdkScrollableModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule, imports: [CdkScrollable], exports: [CdkScrollable] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    imports: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport,\n            CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollViewport,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, imports: [BidiModule,\n            CdkScrollableModule, BidiModule, CdkScrollableModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkVirtualScrollViewport,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                }]\n        }] });\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import { ElementRef } from '@angular/core';\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    if (_isNumberValue(value)) {\n        return Number(value);\n    }\n    return arguments.length === 2 ? fallbackValue : 0;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\nexport { _isNumberValue as _, coerceElement as a, coerceNumberProperty as c };\n"],"names":["ConnectableObservable","DataSource","isDataSource","value","connect","D","i","i0","inject","PLATFORM_ID","Injectable","isPlatformBrowser","hasV8BreakIterator","Intl","v8BreakIterator","Platform","_platformId","isBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","constructor","ɵfac","Platform_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","P","InjectionToken","DOCUMENT","signal","EventEmitter","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","toLowerCase","language","Directionality","valueSignal","change","_document","optional","bodyDir","body","dir","htmlDir","documentElement","set","ngOnDestroy","complete","Directionality_Factory","_","a","RtlScrollAxisType","rtlScrollAxisType","scrollBehaviorSupported","supportsScrollBehavior","Element","style","scrollToFunction","prototype","scrollTo","toString","getRtlScrollAxisType","NORMAL","scrollContainer","createElement","containerStyle","width","overflow","visibility","pointerEvents","position","content","contentStyle","height","appendChild","scrollLeft","NEGATED","INVERTED","remove","R","g","s","Directive","Output","Input","NgModule","Dir","_isInitialized","_rawDir","previousValue","emit","ngAfterContentInit","Dir_Factory","ɵdir","ɵɵdefineDirective","type","selectors","hostVars","hostBindings","Dir_HostBindings","rf","ctx","ɵɵattribute","inputs","outputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","BidiModule","BidiModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","isObservable","of","ArrayDataSource","_data","disconnect","_ViewRepeaterOperation","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","applyChanges","changes","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","viewArgsFactory","_insertView","INSERTED","REPLACED","_detachAndCacheView","REMOVED","_moveView","MOVED","context","detach","destroy","cachedView","_insertViewFromCache","$implicit","undefined","viewArgs","createEmbeddedView","templateRef","index","detachedView","_maybeCacheView","get","move","length","push","indexOf","pop","insert","A","b","forwardRef","NgZone","RendererFactory2","ElementRef","Renderer2","ChangeDetectorRef","Injector","afterNextRender","booleanAttribute","Optional","Inject","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","ViewContainerRef","TemplateRef","IterableDiffers","Subject","Observable","Subscription","animationFrameScheduler","asapScheduler","distinctUntilChanged","auditTime","filter","startWith","takeUntil","pairwise","switchMap","shareReplay","c","coerceNumberProperty","coerceElement","_c0","_c1","ɵɵDir","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","_scrolledIndexChange","scrolledIndexChange","pipe","_viewport","_itemSize","_minBufferPx","_maxBufferPx","itemSize","minBufferPx","maxBufferPx","attach","viewport","_updateTotalContentSize","_updateRenderedRange","updateItemAndBufferSize","Error","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","start","end","viewportSize","getViewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","Math","ceil","newVisibleIndex","max","min","floor","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","next","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","_scrollStrategy","CdkFixedSizeVirtualScroll","ngOnChanges","CdkFixedSizeVirtualScroll_Factory","useFactory","deps","ɵɵNgOnChangesFeature","DEFAULT_SCROLL_TIME","ScrollDispatcher","_ngZone","_platform","_renderer","createRenderer","_cleanupGlobalListener","_scrolled","_scrolledCount","scrollContainers","Map","register","scrollable","has","elementScrolled","subscribe","deregister","scrollableReference","unsubscribe","delete","scrolled","auditTimeInMs","observer","runOutsideAngular","listen","subscription","forEach","container","ancestorScrolled","elementOrElementRef","ancestors","getAncestorScrollContainers","target","scrollingContainers","_subscription","_scrollableContainsElement","element","scrollableElement","getElementRef","nativeElement","parentElement","ScrollDispatcher_Factory","CdkScrollable","elementRef","scrollDispatcher","ngZone","_scrollElement","_destroyed","_cleanupScroll","_elementScrolled","ngOnInit","event","options","el","isRtl","left","right","bottom","top","scrollHeight","clientHeight","scrollWidth","clientWidth","_applyScrollToOptions","scrollTop","from","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportRuler","_listeners","_viewportSize","_change","renderer","changeListener","cleanup","_updateViewportSize","output","getViewportRect","scrollPosition","getViewportScrollPosition","_getWindow","documentRect","getBoundingClientRect","scrollY","scrollX","throttleTime","defaultView","innerWidth","innerHeight","ViewportRuler_Factory","VIRTUAL_SCROLLABLE","CdkVirtualScrollable","measureViewportSize","orientation","viewportEl","CdkVirtualScrollable_Factory","ɵɵInheritDefinitionFeature","rangesEqual","r1","r2","SCROLL_SCHEDULER","requestAnimationFrame","CdkVirtualScrollViewport","_changeDetectorRef","_detachedSubject","_renderedRangeSubject","_orientation","_calculateSpacerSize","appendOnly","Promise","resolve","then","run","_contentWrapper","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedContentTransform","_renderedRange","_dataLength","_forOf","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","EMPTY","_injector","_isDestroyed","viewportRuler","checkViewportSize","classList","add","_measureViewportSize","_markChangeDetectionNeeded","forOf","dataStream","data","newLength","_doChangeDetection","measureBoundingClientRectWithScrollOffset","size","range","getOffsetToRenderedContentStart","offset","to","isHorizontal","axis","axisDirection","transform","Number","measureRenderedContentSize","_from","measureViewportOffset","fromRect","scrollerClientRect","viewportClientRect","contentEl","offsetWidth","offsetHeight","measureRangeSize","runAfter","markForCheck","runAfterChangeDetection","fn","injector","CdkVirtualScrollViewport_Factory","ɵcmp","ɵɵdefineComponent","viewQuery","CdkVirtualScrollViewport_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","CdkVirtualScrollViewport_HostBindings","ɵɵclassProp","virtualScrollable","ngContentSelectors","decls","vars","consts","template","CdkVirtualScrollViewport_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵstyleProp","styles","encapsulation","changeDetection","getOffset","direction","node","rect","CdkVirtualForOf","_viewContainerRef","_template","_differs","_viewRepeater","skipSelf","viewChange","_dataSourceChanges","cdkVirtualForOf","_cdkVirtualForOf","Array","cdkVirtualForTrackBy","_cdkVirtualForTrackBy","_needsUpdate","item","cdkVirtualForTemplate","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_renderedItems","_onRenderedDataChange","observers","renderedStartIndex","rangeLen","firstNode","lastNode","rootNodes","ngDoCheck","diff","_updateContext","_applyChanges","slice","find","create","oldDs","newDs","count","_updateComputedContextProperties","detectChanges","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","last","even","odd","ngTemplateContextGuard","directive","CdkVirtualForOf_Factory","useClass","CdkVirtualScrollableElement","CdkVirtualScrollableElement_Factory","CdkVirtualScrollableWindow","CdkVirtualScrollableWindow_Factory","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule","ScrollingModule_Factory","imports","fallbackValue","_isNumberValue","arguments","isNaN","parseFloat","elementOrRef"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7]}