{"version":3,"file":"2239.js","mappings":"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","sources":["./projects/ngx-editor-js2-blockquotes/src/lib/ngx-editor-js2-blockquotes.component.ts","./projects/ngx-editor-js2-blockquotes/src/public-api.ts","./projects/ngx-editor-js2-blockquotes/src/tmdjr-ngx-editor-js2-blockquotes.ts","./node_modules/@tmdjr/ngx-editor-js2/fesm2022/tmdjr-ngx-editor-js2.mjs"],"sourcesContent":["import { Component, input, signal } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgClass } from '@angular/common';\nimport { CdkDrag } from '@angular/cdk/drag-drop';\n\nimport {\n  AutofocusDirective,\n  BlockComponent,\n  BlockOptionAction,\n  ControlAccessorDirective,\n  ToolbarFabDirective,\n} from '@tmdjr/ngx-editor-js2';\n\n@Component({\n  selector: 'ngx-editor-js2-blockquotes',\n  host: { class: 'cdk-drag-animating' },\n  hostDirectives: [CdkDrag],\n  imports: [\n    ReactiveFormsModule,\n    ControlAccessorDirective,\n    AutofocusDirective,\n    ToolbarFabDirective,\n    NgClass,\n  ],\n  template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <blockquote\n        controlAccessor\n        contentEditable\n        toolbarFab\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></blockquote>\n    </ng-container>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        position: relative;\n        .medium {\n          font: var(--mat-sys-body-medium);\n          font-weight: 100;\n        }\n        .display-small {\n          font: var(--mat-sys-display-small);\n          font-weight: 100;\n        }\n        .display-large {\n          font: var(--mat-sys-display-large);\n          font-weight: 100;\n        }\n\n        blockquote {\n          margin: 20px 0px;\n          padding: 5px 0px 5px 20px;\n          border-left: 5px solid var(--mat-sys-primary);\n        }\n      }\n    `,\n  ],\n})\nexport class NgxEditorJs2BlockquotesComponent implements BlockComponent {\n  sortIndex = input<number>(0);\n  componentInstanceName = 'NgxEditorJs2BlockquotesComponent';\n  autofocus = input<boolean>(true);\n  formGroup = input.required<FormGroup>();\n  formControlName = input.required<string>();\n  blockOptionActions = input<BlockOptionAction[]>([\n    { action: 'medium', icon: 'density_small' },\n    { action: 'display-small', icon: 'density_medium' },\n    { action: 'display-large', icon: 'density_large' },\n  ]);\n\n  savedAction = signal<string>('display-large');\n  actionCallbackBind = this.actionCallback.bind(this);\n\n  actionCallback(action: string) {\n    this.savedAction.update(() => action);\n  }\n}\n","/*\n * Public API Surface of ngx-editor-js2-blockquotes\n */\n\nexport * from './lib/ngx-editor-js2-blockquotes.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import * as i0 from '@angular/core';\nimport { inject, ElementRef, input, forwardRef, Directive, HostListener, output, Component, signal, Injectable, ViewContainerRef, effect, InjectionToken, viewChild, EventEmitter, Renderer2, Output } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormControl, ReactiveFormsModule, FormBuilder, FormsModule } from '@angular/forms';\nimport { startWith, combineLatest, map, firstValueFrom, of, from, tap, filter, defaultIfEmpty, Observable, lastValueFrom, forkJoin, iif, switchMap, mergeMap, BehaviorSubject, distinctUntilChanged, delay, exhaustMap, merge, fromEvent, debounceTime } from 'rxjs';\nimport { MatRipple } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/drag-drop';\nimport { CdkDragHandle, CdkDrag, CdkDropList } from '@angular/cdk/drag-drop';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule, Overlay } from '@angular/cdk/overlay';\nimport * as i1$2 from '@angular/material/icon';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport { AsyncPipe, NgSwitch, NgSwitchCase, NgTemplateOutlet, NgClass } from '@angular/common';\nimport { toObservable } from '@angular/core/rxjs-interop';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { MatList, MatListItem, MatListModule } from '@angular/material/list';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\nclass ControlAccessorDirective {\n    elementRef = inject(ElementRef);\n    defaultValue = input();\n    onChange = () => { };\n    onTouched = () => { };\n    writeValue() {\n        this.elementRef.nativeElement.innerHTML = this.defaultValue() || '';\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onBlur() {\n        this.onTouched();\n    }\n    onInput() {\n        this.onChange(this.elementRef.nativeElement.innerHTML);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ControlAccessorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ControlAccessorDirective, isStandalone: true, selector: \"[controlAccessor]\", inputs: { defaultValue: { classPropertyName: \"defaultValue\", publicName: \"defaultValue\", isSignal: true, isRequired: false, transformFunction: null } }, host: { listeners: { \"blur\": \"onBlur()\", \"input\": \"onInput()\" } }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => ControlAccessorDirective),\n                multi: true,\n            },\n        ], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ControlAccessorDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[controlAccessor]',\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => ControlAccessorDirective),\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], propDecorators: { onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onInput: [{\n                type: HostListener,\n                args: ['input']\n            }] } });\n\nclass AutofocusDirective {\n    elementRef = inject(ElementRef);\n    autofocus = input(false);\n    ngAfterContentInit() {\n        this.autofocus() && this.elementRef.nativeElement.focus?.();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: AutofocusDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"19.1.5\", type: AutofocusDirective, isStandalone: true, selector: \"[autofocus]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: AutofocusDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[autofocus]',\n                }]\n        }] });\n\nvar MovePositionActions;\n(function (MovePositionActions) {\n    MovePositionActions[\"UP\"] = \"UP\";\n    MovePositionActions[\"DOWN\"] = \"DOWN\";\n    MovePositionActions[\"DELETE\"] = \"DELETE\";\n})(MovePositionActions || (MovePositionActions = {}));\n\nclass ToolbarBlockOptionsComponent {\n    Position = MovePositionActions;\n    blockOptionActions = input();\n    handleActionEmitter = output({ alias: 'handleAction' });\n    moveBlockPositionEmitter = output({\n        alias: 'moveBlockPosition',\n    });\n    movePosition(action) {\n        this.moveBlockPositionEmitter.emit(action);\n    }\n    handleAction(action) {\n        this.handleActionEmitter.emit(action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlockOptionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.1.5\", type: ToolbarBlockOptionsComponent, isStandalone: true, selector: \"toolbar-block-options\", inputs: { blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { handleActionEmitter: \"handleAction\", moveBlockPositionEmitter: \"moveBlockPosition\" }, ngImport: i0, template: `\n    <div class=\"actions-panel mat-elevation-z24\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:is(:hover,:focus){color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"], dependencies: [{ kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlockOptionsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-block-options', imports: [MatIcon, MatRipple], template: `\n    <div class=\"actions-panel mat-elevation-z24\">\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.UP)\">\n        <mat-icon>arrow_upward</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DELETE)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n      <div class=\"action-btn\" matRipple (click)=\"movePosition(Position.DOWN)\">\n        <mat-icon>arrow_downward</mat-icon>\n      </div>\n      @for(blockOptionAction of blockOptionActions(); track $index) {\n      <div\n        class=\"action-btn\"\n        (click)=\"handleAction(blockOptionAction.action)\"\n        matRipple\n      >\n        @if (blockOptionAction.text) {\n        {{ blockOptionAction.text }}\n        } @else {\n        <mat-icon>{{ blockOptionAction.icon }}</mat-icon>\n        }\n      </div>\n      }\n    </div>\n  `, styles: [\":host .actions-panel{display:flex;flex-direction:row;flex-wrap:wrap;gap:1px;width:128px;max-height:128px;border-radius:4px;overflow:auto;background:var(--mat-sys-secondary)}:host .actions-panel .action-btn{cursor:pointer;width:42px;height:42px;display:flex;align-items:center;justify-content:center;border-radius:4px;color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary)}:host .actions-panel .action-btn:is(:hover,:focus){color:var(--mat-sys-secondary);background:var(--mat-sys-on-secondary)}\\n\"] }]\n        }] });\n\nclass ToolbarBlocksComponent {\n    addBlockEmitter = output({ alias: 'addBlock' });\n    supportedBlocks = input([]);\n    supportedBlocks$ = toObservable(this.supportedBlocks);\n    blockCtrl = new FormControl([]);\n    filter$ = this.blockCtrl.valueChanges.pipe(startWith(''));\n    filteredBlocks$ = combineLatest([this.supportedBlocks$, this.filter$]).pipe(map(([blocks, filterString]) => {\n        if (typeof filterString !== 'string')\n            filterString = '';\n        filterString = filterString.replace(/\\\\/g, '');\n        const pattern = filterString\n            ?.split('')\n            .map((v) => `(?=.*${v})`)\n            .join('');\n        const regex = new RegExp(`${pattern}`, 'gi');\n        // return blocks.filter(block => regex.exec(block));\n        return blocks.filter((block) => block.name.match(regex));\n    }));\n    addBlock(block) {\n        this.addBlockEmitter.emit(block?.component);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlocksComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.1.5\", type: ToolbarBlocksComponent, isStandalone: true, selector: \"toolbar-blocks\", inputs: { supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { addBlockEmitter: \"addBlock\" }, ngImport: i0, template: `\n    <div class=\"block-list-container mat-elevation-z24\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, isInline: true, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{background:var(--mat-sys-secondary-container);border-radius:4px}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:is(:hover,:focus){background:var(--mat-sys-surface-bright)}\\n\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"directive\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\", \"disabledInteractive\"], exportAs: [\"matInput\"] }, { kind: \"component\", type: MatList, selector: \"mat-list\", exportAs: [\"matList\"] }, { kind: \"component\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: [\"activated\"], exportAs: [\"matListItem\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: MatLabel, selector: \"mat-label\" }, { kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarBlocksComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-blocks', imports: [\n                        MatFormField,\n                        MatInput,\n                        MatList,\n                        MatListItem,\n                        MatRipple,\n                        MatLabel,\n                        ReactiveFormsModule,\n                        AsyncPipe,\n                    ], template: `\n    <div class=\"block-list-container mat-elevation-z24\">\n      <mat-form-field appearance=\"fill\" color=\"accent\">\n        <mat-label>Filter</mat-label>\n        <input\n          class=\"filter-text\"\n          matInput\n          [formControl]=\"blockCtrl\"\n          [autofocus]=\"true\"\n        />\n      </mat-form-field>\n      @if(filteredBlocks$ | async; as filteredBlocks) {\n      <mat-list class=\"block-list-panel\">\n        @if (filteredBlocks.length <= 0) {\n        <mat-list-item matRipple mat-list-item> No Results </mat-list-item>\n        } @else { @for(block of filteredBlocks; track $index) {\n        <mat-list-item matRipple mat-list-item (click)=\"addBlock(block)\">\n          {{ block.name }}\n        </mat-list-item>\n        } }\n      </mat-list>\n      }\n    </div>\n  `, styles: [\":host .mat-mdc-list-base{padding-top:0;margin-top:-14px}:host .block-list-container{background:var(--mat-sys-secondary-container);border-radius:4px}:host .block-list-panel{max-width:280px;max-height:240px;border-bottom-left-radius:4px;border-bottom-right-radius:4px;overflow:auto;color:var(--mat-sys-on-secondary-container)}:host mat-list-item{cursor:pointer;-webkit-user-select:none;user-select:none}:host mat-list-item:is(:hover,:focus){background:var(--mat-sys-surface-bright)}\\n\"] }]\n        }] });\n\nclass ToolbarComponent {\n    componentContextPositionIndex = input.required();\n    supportedBlocks = input.required();\n    blockOptionActions = input();\n    actionCallback = input(() => () => { });\n    formControlName = input();\n    addBlockCallback = input.required();\n    moveBlockPositionCallback = input.required();\n    openBlocks = signal(false);\n    openBlocksOption = signal(false);\n    openBlocksList() {\n        this.openBlocks.update((prev) => !prev);\n    }\n    openBlockOptionList() {\n        this.openBlocksOption.update((prev) => !prev);\n    }\n    moveBlockPosition(action) {\n        this.closeLists();\n        this.moveBlockPositionCallback()(action, this.componentContextPositionIndex());\n    }\n    handleAction(action) {\n        this.closeLists();\n        this.actionCallback()(action);\n    }\n    addBlock(block) {\n        this.closeLists();\n        firstValueFrom(this.addBlockCallback()(block, this.componentContextPositionIndex()));\n    }\n    closeLists() {\n        this.openBlocks.set(false);\n        this.openBlocksOption.set(false);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ToolbarComponent, isStandalone: true, selector: \"toolbar\", inputs: { componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, supportedBlocks: { classPropertyName: \"supportedBlocks\", publicName: \"supportedBlocks\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: false, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: false, transformFunction: null }, addBlockCallback: { classPropertyName: \"addBlockCallback\", publicName: \"addBlockCallback\", isSignal: true, isRequired: true, transformFunction: null }, moveBlockPositionCallback: { classPropertyName: \"moveBlockPositionCallback\", publicName: \"moveBlockPositionCallback\", isSignal: true, isRequired: true, transformFunction: null } }, ngImport: i0, template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, isInline: true, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container)}:host .toolbar-buttons:is(:hover,:focus){background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"ngmodule\", type: OverlayModule }, { kind: \"directive\", type: i1.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\", \"cdkConnectedOverlayDisposeOnNavigation\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i1.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"component\", type: ToolbarBlockOptionsComponent, selector: \"toolbar-block-options\", inputs: [\"blockOptionActions\"], outputs: [\"handleAction\", \"moveBlockPosition\"] }, { kind: \"component\", type: ToolbarBlocksComponent, selector: \"toolbar-blocks\", inputs: [\"supportedBlocks\"], outputs: [\"addBlock\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar', imports: [\n                        CdkDragHandle,\n                        MatRipple,\n                        OverlayModule,\n                        ToolbarBlockOptionsComponent,\n                        ToolbarBlocksComponent,\n                    ], template: `\n    <div class=\"toolbar-buttons-container\">\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockListTigger=\"cdkOverlayOrigin\"\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlocksList()\"\n      >\n        <span class=\"material-icons\">add</span>\n      </div>\n      <div\n        class=\"toolbar-buttons mat-elevation-z4\"\n        #blockOptionListTigger=\"cdkOverlayOrigin\"\n        cdkDragHandle\n        cdkOverlayOrigin\n        matRipple\n        (click)=\"openBlockOptionList()\"\n      >\n        <span class=\"material-icons\">drag_indicator</span>\n      </div>\n    </div>\n\n    <!-- Block type search list -->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocks.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocks()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-blocks\n        [supportedBlocks]=\"supportedBlocks()\"\n        (addBlock)=\"addBlock($event)\"\n      ></toolbar-blocks>\n    </ng-template>\n\n    <!-- Options List-->\n    <ng-template\n      cdkConnectedOverlay\n      (overlayOutsideClick)=\"openBlocksOption.set(false)\"\n      [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n      [cdkConnectedOverlayOpen]=\"openBlocksOption()\"\n      [cdkConnectedOverlayHasBackdrop]=\"true\"\n      [cdkConnectedOverlayOffsetX]=\"-49\"\n      [cdkConnectedOverlayOffsetY]=\"15\"\n      [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\"\n    >\n      <toolbar-block-options\n        [blockOptionActions]=\"blockOptionActions()\"\n        (handleAction)=\"handleAction($event)\"\n        (moveBlockPosition)=\"moveBlockPosition($event)\"\n      ></toolbar-block-options>\n    </ng-template>\n  `, styles: [\":host .toolbar-buttons-container{position:relative;display:flex;gap:10px}:host .toolbar-buttons{cursor:pointer;width:30px;height:30px;display:flex;justify-content:center;align-items:center;border-radius:4px;margin-bottom:14px;-webkit-user-select:none;user-select:none;color:var(--mat-sys-on-tertiary-container);background:var(--mat-sys-tertiary-container)}:host .toolbar-buttons:is(:hover,:focus){background:var(--mat-sys-surface-bright)}@media (min-width: 768px){:host{position:absolute;margin-left:-80px;top:0}}\\n\"] }]\n        }] });\n\nclass BlockMovementService {\n    componentRefMap = new Map();\n    clearComponentRefs() {\n        this.componentRefMap.clear();\n    }\n    getNgxEditorJsBlocks() {\n        return of(Array.from(this.componentRefMap.values()));\n    }\n    newComponentAttached(componentRef) {\n        this.componentRefMap.set(componentRef.instance, componentRef);\n    }\n    updateComponentIndices(ngxEditor) {\n        return from(this.componentRefMap.values()).pipe(tap((componentRef) => componentRef.setInput('sortIndex', ngxEditor.indexOf(componentRef.hostView))));\n    }\n    moveBlockComponentPosition(ngxEditor, action, index) {\n        return of(Array.from(this.componentRefMap.values())).pipe(map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), filter((componentRef) => !!componentRef), map((componentRef) => ({\n            componentRef,\n            totalComponents: ngxEditor.length - 1,\n            currentIndex: ngxEditor.indexOf(componentRef.hostView),\n            newIndex: (index) => action === MovePositionActions.UP ? index - 1 : index + 1,\n        })), map(({ componentRef, totalComponents, currentIndex, newIndex }) => ({\n            componentRef,\n            currentIndex,\n            newIndex: Math.max(0, Math.min(newIndex(currentIndex), totalComponents)),\n        })), filter(({ currentIndex, newIndex }) => currentIndex !== newIndex), tap(({ componentRef, newIndex }) => {\n            ngxEditor.move(componentRef.hostView, newIndex);\n            componentRef.setInput('sortIndex', newIndex);\n            componentRef.setInput('autofocus', true);\n        }), defaultIfEmpty(false));\n    }\n    removeBlockComponent(ngxEditor, index, clear = false) {\n        return of(Array.from(this.componentRefMap.values())).pipe(filter((componentRefs) => clear || componentRefs.length !== 1), map((componentRefs) => componentRefs.find((componentRef) => ngxEditor.indexOf(componentRef.hostView) === index - 1)), map((componentRef) => this.componentRefMap.delete(componentRef?.instance ?? {})), tap((successful) => successful && ngxEditor.remove(index - 1)), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: BlockMovementService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: BlockMovementService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: BlockMovementService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nconst createUID = () => Math.random().toString(36).substring(7);\nclass EditorJsService {\n    formBuilder = inject(FormBuilder);\n    blockMovementService = inject(BlockMovementService);\n    componentRefMap = new Map();\n    ngxEditor;\n    formGroup = this.formBuilder.group({});\n    // TODO - Handle this idiomatically\n    setNgxEditor(ngxEditor) {\n        this.ngxEditor = ngxEditor;\n    }\n    getBlocks$() {\n        return new Observable((observer) => {\n            lastValueFrom(this.blockMovementService.getNgxEditorJsBlocks().pipe(map((componentRefs) => componentRefs.map(({ instance }) => ({\n                blockId: instance.formControlName(),\n                sortIndex: instance.sortIndex(),\n                componentInstanceName: instance.componentInstanceName,\n                savedAction: instance.savedAction(),\n                dataClean: instance.formGroup().get(instance.formControlName())\n                    ?.value,\n            }))), map((blocks) => blocks.sort((a, b) => a.sortIndex - b.sortIndex)))).then((blocks) => {\n                observer.next(blocks);\n                observer.complete();\n            });\n        });\n    }\n    createNgxEditorJsBlockWithComponent(blockComponent, componentContextPositionIndex) {\n        return of({\n            blockId: createUID(),\n            sortIndex: componentContextPositionIndex,\n            componentInstanceName: blockComponent.name,\n            component: blockComponent,\n            // TODO - Force content-type for dataClean? JSON, HTML, etc.\n            // TODO - And maybe rename dataClean to just data?\n            dataClean: '',\n            autofocus: true,\n        });\n    }\n    addBlockComponent(ngxEditorJsBlock) {\n        return forkJoin([\n            this.createFormGroupControl(ngxEditorJsBlock),\n            this.attachComponent(ngxEditorJsBlock),\n            this.blockMovementService.updateComponentIndices(this.ngxEditor),\n        ]).pipe(map(() => void 0));\n    }\n    createFormGroupControl({ blockId, dataClean, }) {\n        return of(this.formBuilder.control(dataClean, [])).pipe(tap((formControl) => this.formGroup.addControl(blockId, formControl)));\n    }\n    attachComponent({ component, blockId, autofocus, savedAction, sortIndex: index, }) {\n        return of(blockId).pipe(map((controlName) => {\n            const componentRef = this.ngxEditor.createComponent(component, {\n                index,\n            });\n            componentRef.setInput('sortIndex', index);\n            componentRef.setInput('formGroup', this.formGroup);\n            componentRef.setInput('formControlName', controlName);\n            componentRef.setInput('autofocus', autofocus);\n            savedAction && componentRef.instance.actionCallback?.(savedAction);\n            this.blockMovementService.newComponentAttached(componentRef);\n            return componentRef;\n        }));\n    }\n    determineMovePositionAction(action, index, formControlName) {\n        return iif(() => action === MovePositionActions.DELETE, this.removeBlockComponent(index, formControlName), this.blockMovementService.moveBlockComponentPosition(this.ngxEditor, action, index)).pipe(switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)));\n    }\n    moveBlockComponentPosition(previousIndex, currentIndex) {\n        return of(this.ngxEditor.get(previousIndex)).pipe(filter((viewRef) => !!viewRef), tap((viewRef) => {\n            this.ngxEditor.move(viewRef, currentIndex);\n        }), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), defaultIfEmpty(false));\n    }\n    removeBlockComponent(index, formControlName, clear = false) {\n        return combineLatest([\n            this.blockMovementService.removeBlockComponent(this.ngxEditor, index, clear),\n            of(this.formGroup.removeControl(formControlName)),\n        ]);\n    }\n    clearBlocks() {\n        return this.blockMovementService.getNgxEditorJsBlocks().pipe(filter((componentRefs) => componentRefs.length > 0), map((componentRefs) => componentRefs.sort((a, b) => a.instance.sortIndex() - b.instance.sortIndex())), mergeMap((componentRefs) => forkJoin(Array.from(componentRefs.values()).map((componentRef) => this.removeBlockComponent(componentRef.instance.sortIndex() + 1, componentRef.instance.formControlName(), true)))), switchMap(() => this.blockMovementService.updateComponentIndices(this.ngxEditor)), tap(() => {\n            this.blockMovementService.clearComponentRefs();\n            this.ngxEditor.clear();\n        }), defaultIfEmpty(false));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolFabService {\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    editorJsService = inject(EditorJsService);\n    // I need to explain this in detail so the future me can understand this.\n    componentContext = new BehaviorSubject(null);\n    toolbarComponentRef$ = combineLatest({\n        componentContext: this.componentContext.asObservable(),\n        supportedBlocks: this.ngxEditorJs2Service.supportedBlocks$,\n    }).pipe(filter(({ componentContext }) => componentContext !== null), distinctUntilChanged(({ componentContext: previous }, { componentContext: current }) => previous.index !== current.index ||\n        previous.viewContainerRef !== current.viewContainerRef\n        ? (previous.viewContainerRef.clear(), false)\n        : true), map(({ componentContext, supportedBlocks }) => {\n        const { index, viewContainerRef, blockOptionActions, actionCallback, formControlName, } = componentContext;\n        // TODO We will need to create a ToolbarBottomRailComponent to handle the mobile view\n        const componentRef = viewContainerRef.createComponent(ToolbarComponent);\n        componentRef.setInput('componentContextPositionIndex', index + 1);\n        componentRef.setInput('supportedBlocks', supportedBlocks);\n        componentRef.setInput('blockOptionActions', blockOptionActions);\n        componentRef.setInput('actionCallback', actionCallback);\n        componentRef.setInput('formControlName', formControlName);\n        componentRef.setInput('addBlockCallback', this.addBlock.bind(this));\n        componentRef.setInput('moveBlockPositionCallback', this.movePositionAction.bind(this));\n        return componentRef;\n    }));\n    addBlock(block, index) {\n        return this.editorJsService\n            .createNgxEditorJsBlockWithComponent(block, index)\n            .pipe(switchMap((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    movePositionAction(action, index, formControlName) {\n        return lastValueFrom(this.editorJsService.determineMovePositionAction(action, index, formControlName));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolFabService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolFabService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolFabService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass ToolbarFabDirective {\n    toolFabService = inject(ToolFabService);\n    viewContainerRef = inject(ViewContainerRef);\n    autofocus = input();\n    blockOptionActions = input();\n    actionCallback = input.required();\n    componentContextPositionIndex = input.required();\n    formControlName = input.required();\n    onMouseEnter() {\n        this.toolFabService.componentContext.next({\n            viewContainerRef: this.viewContainerRef,\n            blockOptionActions: this.blockOptionActions() ?? [],\n            actionCallback: this.actionCallback(),\n            index: this.componentContextPositionIndex(),\n            formControlName: this.formControlName(),\n        });\n    }\n    constructor() {\n        effect(() => {\n            this.autofocus() && this.onMouseEnter();\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarFabDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ToolbarFabDirective, isStandalone: true, selector: \"[toolbarFab]\", inputs: { autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null }, actionCallback: { classPropertyName: \"actionCallback\", publicName: \"actionCallback\", isSignal: true, isRequired: true, transformFunction: null }, componentContextPositionIndex: { classPropertyName: \"componentContextPositionIndex\", publicName: \"componentContextPositionIndex\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null } }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarFabDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[toolbarFab]',\n                }]\n        }], ctorParameters: () => [], propDecorators: { onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }] } });\n\nclass CleanPasteDataDirective {\n    onPaste(event) {\n        event.preventDefault();\n        const text = event.clipboardData?.getData('text/plain');\n        document.execCommand('insertText', false, text);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: CleanPasteDataDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.1.5\", type: CleanPasteDataDirective, isStandalone: true, selector: \"[cleanPasteData]\", host: { listeners: { \"paste\": \"onPaste($event)\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: CleanPasteDataDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cleanPasteData]',\n                }]\n        }], propDecorators: { onPaste: [{\n                type: HostListener,\n                args: ['paste', ['$event']]\n            }] } });\n\nclass HeaderBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'HeaderBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'h1', text: 'H1' },\n        { action: 'h2', text: 'H2' },\n        { action: 'h3', text: 'H3' },\n        { action: 'h4', text: 'H4' },\n        { action: 'h5', text: 'H5' },\n        { action: 'h6', text: 'H6' },\n    ]);\n    savedAction = signal('h1');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(selectedAction) {\n        this.savedAction.set(selectedAction);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: HeaderBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: HeaderBlockComponent, isStandalone: true, selector: \"header-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n    <ng-container [ngSwitch]=\"savedAction()\">\n      <h1 *ngSwitchCase=\"'h1'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h1>\n      <h2 *ngSwitchCase=\"'h2'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h2>\n      <h3 *ngSwitchCase=\"'h3'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h3>\n      <h4 *ngSwitchCase=\"'h4'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h4>\n      <h5 *ngSwitchCase=\"'h5'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h5>\n      <h6 *ngSwitchCase=\"'h6'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h6>\n    </ng-container>\n\n    <ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n      <span\n        controlAccessor\n        cleanPasteData\n        contentEditable\n        toolbarFab\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [autofocus]=\"autofocus()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></span>\n    </ng-template>\n  `, isInline: true, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: HeaderBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'header-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgSwitch,\n                        NgSwitchCase,\n                        NgTemplateOutlet,\n                    ], template: `\n    <ng-container [ngSwitch]=\"savedAction()\">\n      <h1 *ngSwitchCase=\"'h1'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h1>\n      <h2 *ngSwitchCase=\"'h2'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h2>\n      <h3 *ngSwitchCase=\"'h3'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h3>\n      <h4 *ngSwitchCase=\"'h4'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h4>\n      <h5 *ngSwitchCase=\"'h5'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h5>\n      <h6 *ngSwitchCase=\"'h6'\">\n        <ng-container *ngTemplateOutlet=\"sharedHeaderTemplate\"></ng-container>\n      </h6>\n    </ng-container>\n\n    <ng-template [formGroup]=\"formGroup()\" #sharedHeaderTemplate>\n      <span\n        controlAccessor\n        cleanPasteData\n        contentEditable\n        toolbarFab\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [autofocus]=\"autofocus()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></span>\n    </ng-template>\n  `, styles: [\":host{display:block;position:relative}:host :is(h1,h2,h3,h4,h5,h6){margin:0}:host :is(h1,h2,h3,h4,h5,h6) span{display:block;line-height:inherit}:host h1>*{font:var(--mat-sys-display-large)}:host h2>*{font:var(--mat-sys-display-medium)}:host h3>*{font:var(--mat-sys-display-small)}:host h4>*{font:var(--mat-sys-headline-large)}:host h5>*{font:var(--mat-sys-headline-medium)}:host h6>*{font:var(--mat-sys-headline-small)}\\n\"] }]\n        }] });\n\nclass ParagraphBlockComponent {\n    sortIndex = input(0);\n    componentInstanceName = 'ParagraphBlockComponent';\n    autofocus = input(true);\n    formGroup = input.required();\n    formControlName = input.required();\n    blockOptionActions = input([\n        { action: 'small', icon: 'density_small' },\n        { action: 'medium', icon: 'density_medium' },\n        { action: 'large', icon: 'density_large' },\n        { action: 'title-small', text: 'TS' },\n        { action: 'title-medium', text: 'TM' },\n        { action: 'title-large', text: 'TL' },\n    ]);\n    savedAction = signal('medium');\n    actionCallbackBind = this.actionCallback.bind(this);\n    actionCallback(action) {\n        this.savedAction.update(() => action);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ParagraphBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: ParagraphBlockComponent, isStandalone: true, selector: \"paragraph-block\", inputs: { sortIndex: { classPropertyName: \"sortIndex\", publicName: \"sortIndex\", isSignal: true, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: true, isRequired: false, transformFunction: null }, formGroup: { classPropertyName: \"formGroup\", publicName: \"formGroup\", isSignal: true, isRequired: true, transformFunction: null }, formControlName: { classPropertyName: \"formControlName\", publicName: \"formControlName\", isSignal: true, isRequired: true, transformFunction: null }, blockOptionActions: { classPropertyName: \"blockOptionActions\", publicName: \"blockOptionActions\", isSignal: true, isRequired: false, transformFunction: null } }, host: { classAttribute: \"cdk-drag-animating\" }, hostDirectives: [{ directive: i1$1.CdkDrag }], ngImport: i0, template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, isInline: true, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"], dependencies: [{ kind: \"ngmodule\", type: ReactiveFormsModule }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: ControlAccessorDirective, selector: \"[controlAccessor]\", inputs: [\"defaultValue\"] }, { kind: \"directive\", type: AutofocusDirective, selector: \"[autofocus]\", inputs: [\"autofocus\"] }, { kind: \"directive\", type: ToolbarFabDirective, selector: \"[toolbarFab]\", inputs: [\"autofocus\", \"blockOptionActions\", \"actionCallback\", \"componentContextPositionIndex\", \"formControlName\"] }, { kind: \"directive\", type: CleanPasteDataDirective, selector: \"[cleanPasteData]\" }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ParagraphBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'paragraph-block', host: { class: 'cdk-drag-animating' }, hostDirectives: [CdkDrag], imports: [\n                        ReactiveFormsModule,\n                        ControlAccessorDirective,\n                        AutofocusDirective,\n                        ToolbarFabDirective,\n                        CleanPasteDataDirective,\n                        NgClass,\n                    ], template: `\n    <ng-container [formGroup]=\"formGroup()\">\n      <p\n        controlAccessor\n        contentEditable\n        toolbarFab\n        cleanPasteData\n        [ngClass]=\"savedAction()\"\n        [defaultValue]=\"formGroup().get(formControlName())?.value\"\n        [actionCallback]=\"actionCallbackBind\"\n        [autofocus]=\"autofocus()\"\n        [blockOptionActions]=\"blockOptionActions()\"\n        [formControlName]=\"formControlName()\"\n        [componentContextPositionIndex]=\"sortIndex()\"\n      ></p>\n    </ng-container>\n  `, styles: [\":host{display:block;position:relative}:host .small{font:var(--mat-sys-body-small)}:host .medium{font:var(--mat-sys-body-medium)}:host .large{font:var(--mat-sys-body-large)}:host .title-small{font:var(--mat-sys-title-small)}:host .title-medium{font:var(--mat-sys-title-medium)}:host .title-large{font:var(--mat-sys-title-large)}\\n\"] }]\n        }] });\n\nconst NGX_EDITORJS_OPTIONS = new InjectionToken('NGX_EDITORJS_OPTIONS');\nclass NgxEditorJs2Service {\n    editorJsService = inject(EditorJsService);\n    consumerSupportedBlocks = new BehaviorSubject(inject(NGX_EDITORJS_OPTIONS, { optional: true })?.consumerSupportedBlocks ??\n        []);\n    internalSupportedBlocks = new BehaviorSubject([\n        {\n            name: 'Paragraph',\n            component: ParagraphBlockComponent,\n            componentInstanceName: 'ParagraphBlockComponent',\n        },\n        {\n            name: 'Header',\n            component: HeaderBlockComponent,\n            componentInstanceName: 'HeaderBlockComponent',\n        },\n    ]);\n    supportedBlocks$ = combineLatest([\n        this.internalSupportedBlocks.asObservable(),\n        this.consumerSupportedBlocks.asObservable(),\n    ]).pipe(map(([internal, consumer]) => [...internal, ...consumer]));\n    blocksToLoad = new BehaviorSubject([]);\n    loadBlocks$ = this.blocksToLoad.asObservable().pipe(delay(0), exhaustMap((blocks) => this.clearBlocksFromEditorJs(blocks)), map(([blocks]) => this.determineToloadDefaultBlocks(blocks)), map((blocks) => this.removeDuplicateBlocksWithSameIds(blocks)), map((blocks) => this.sortBlocks(blocks)), switchMap((blocks) => this.combineSupportBlocks(blocks)), map(([blocks, supportedBlocks]) => this.createALookupMapForSupportedBlocks(blocks, supportedBlocks)), map(({ blocks, supportedBlocksMap }) => this.findAndMarshalBlocksComponent(blocks, supportedBlocksMap)), mergeMap((blocks) => this.addBlocksToEditorJs(blocks).pipe(map(() => blocks))));\n    clearBlocksFromEditorJs(blocks) {\n        return forkJoin([of(blocks), this.editorJsService.clearBlocks()]);\n    }\n    determineToloadDefaultBlocks(blocks) {\n        return blocks.length > 0 ? blocks : this.loadDefaultBlocks();\n    }\n    loadDefaultBlocks() {\n        return [\n            {\n                blockId: 'tmdjr',\n                sortIndex: 0,\n                componentInstanceName: 'HeaderBlockComponent',\n                dataClean: \"Let's get started... 🚀\",\n                savedAction: 'h1',\n            },\n        ];\n    }\n    removeDuplicateBlocksWithSameIds(blocks) {\n        return Array.from(new Map(blocks.map((block) => [block.blockId, block])).values());\n    }\n    sortBlocks(blocks) {\n        return blocks.sort((a, b) => a.sortIndex - b.sortIndex);\n    }\n    combineSupportBlocks(blocks) {\n        return combineLatest([of(blocks), this.supportedBlocks$]);\n    }\n    createALookupMapForSupportedBlocks(blocks, supportedBlocks) {\n        return {\n            blocks,\n            supportedBlocksMap: new Map(supportedBlocks.map((sb) => [sb.componentInstanceName, sb.component])),\n        };\n    }\n    findAndMarshalBlocksComponent(blocks, supportedBlocksMap) {\n        return blocks.map((block) => ({\n            ...block,\n            component: supportedBlocksMap.get(block.componentInstanceName) ??\n                HeaderBlockComponent,\n        }));\n    }\n    addBlocksToEditorJs(blocks) {\n        return combineLatest(blocks.map((block) => this.editorJsService.addBlockComponent(block)));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Service, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Service, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Service, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass EditorJsComponent {\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    bootstrapEditorJs = input();\n    blocks = input.required({\n        transform: (value) => this.ngxEditorJs2Service.blocksToLoad.next(value),\n    });\n    ngxEditor = viewChild.required('ngxEditor', { read: ViewContainerRef });\n    constructor() {\n        effect(() => {\n            this.editorJsService.setNgxEditor(this.ngxEditor());\n        });\n    }\n    // * DEBUGGING\n    // ngOnInit() {\n    //   this.editorJsService.formGroup.valueChanges.subscribe((value) => {\n    //     console.log('[formGroup.value] : ', value);\n    //   });\n    //   this.editorJsService.blockComponents$.subscribe((components) => {\n    //     console.log('[components] : ', components);\n    //   });\n    // }\n    drop(event) {\n        lastValueFrom(this.editorJsService.moveBlockComponentPosition(event.previousIndex, event.currentIndex)).then(() => {\n            // DRAG ANIMATION HOT FIX\n            // Wait for Angular to update the DOM, then remove the animation class\n            requestAnimationFrame(() => {\n                document.querySelectorAll('.cdk-drag-animating').forEach((el) => {\n                    const element = el;\n                    element.classList.remove('cdk-drag-animating'); // Ensure old class is removed\n                    void element.offsetWidth; // Force reflow\n                    element.classList.add('cdk-drag-animating'); // Re-add for next drag\n                });\n            });\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.2.0\", version: \"19.1.5\", type: EditorJsComponent, isStandalone: true, selector: \"editor-js\", inputs: { bootstrapEditorJs: { classPropertyName: \"bootstrapEditorJs\", publicName: \"bootstrapEditorJs\", isSignal: true, isRequired: false, transformFunction: null }, blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: true, transformFunction: null } }, viewQueries: [{ propertyName: \"ngxEditor\", first: true, predicate: [\"ngxEditor\"], descendants: true, read: ViewContainerRef, isSignal: true }], ngImport: i0, template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, isInline: true, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"], dependencies: [{ kind: \"directive\", type: CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\", \"cdkDropListElementContainer\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: EditorJsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'editor-js', imports: [CdkDropList], template: `\n    <div cdkDropList class=\"block-list\" (cdkDropListDropped)=\"drop($event)\">\n      <ng-container #ngxEditor></ng-container>\n    </div>\n  `, styles: [\":host{display:block}:host .block-list{min-height:60px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nclass ToolbarInlineComponent {\n    // @Input() selection!: Selection;\n    selection = input.required();\n    closeOverlayEmitter = new EventEmitter();\n    renderer = inject(Renderer2);\n    url = '';\n    showURLInputField = signal(false);\n    savedRanges = [];\n    options = [\n        { icon: 'format_bold', action: 'bold' },\n        { icon: 'format_italic', action: 'italic' },\n        { icon: 'format_underlined', action: 'underline' },\n        { icon: 'strikethrough_s', action: 'strikethrough' },\n        { icon: 'format_list_bulleted', action: 'insertUnorderedList' },\n        { icon: 'format_list_numbered', action: 'insertOrderedList' },\n        { icon: 'highlight', action: 'highlightColor' },\n        { icon: 'format_align_left', action: 'justifyLeft' },\n        { icon: 'format_align_center', action: 'justifyCenter' },\n        { icon: 'format_align_right', action: 'justifyRight' },\n        { icon: 'format_align_justify', action: 'justifyFull' },\n    ];\n    addInlineTag(tag) {\n        // https://stackoverflow.com/questions/60581285/execcommand-is-now-obsolete-whats-the-alternative\n        document.execCommand(tag);\n        this.closeOverlayEmitter.emit();\n    }\n    addClassTag(tag, className) {\n        const range = this.selection().getRangeAt(0);\n        const element = this.renderer.createElement(tag);\n        element.className = className ?? '';\n        element.innerHTML = range.toString();\n        range.deleteContents();\n        range.insertNode(element);\n        this.closeOverlayEmitter.emit();\n    }\n    clearTags() {\n        document.execCommand('removeFormat');\n        document.execCommand('unlink');\n        this.closeOverlayEmitter.emit();\n    }\n    openUrlInput() {\n        this.savedRanges.push(this.selection().getRangeAt(0));\n        this.showURLInputField.set(true);\n    }\n    createLink() {\n        this.selection().removeAllRanges();\n        this.selection().addRange(this.savedRanges.pop());\n        document.execCommand('createLink', false, this.url);\n        this.closeOverlayEmitter.emit();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.1.5\", type: ToolbarInlineComponent, isStandalone: true, selector: \"toolbar-inline\", inputs: { selection: { classPropertyName: \"selection\", publicName: \"selection\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { closeOverlayEmitter: \"closeOverlay\" }, host: { classAttribute: \"mat-elevation-z24\" }, ngImport: i0, template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, isInline: true, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"], dependencies: [{ kind: \"ngmodule\", type: MatListModule }, { kind: \"ngmodule\", type: MatIconModule }, { kind: \"component\", type: i1$2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'toolbar-inline', imports: [MatListModule, MatIconModule, FormsModule], host: { class: 'mat-elevation-z24' }, template: `\n    <div class=\"panel\">\n      @for (item of options; track $index) {\n      <div class=\"inline-option\" (click)=\"addInlineTag(item.action)\">\n        <mat-icon>{{ item.icon }}</mat-icon>\n      </div>\n      }\n      <div class=\"inline-option\" (click)=\"addClassTag('code', 'inline-code')\">\n        <mat-icon>code</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"openUrlInput()\">\n        <mat-icon>insert_link</mat-icon>\n      </div>\n      <div class=\"inline-option\" (click)=\"clearTags()\">\n        <mat-icon>format_clear</mat-icon>\n      </div>\n    </div>\n\n    @if(showURLInputField()) {\n    <div class=\"panel\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter URL\"\n        class=\"block-option-input\"\n        [(ngModel)]=\"url\"\n      />\n      <div class=\"inline-option\" (click)=\"createLink()\">\n        <mat-icon>add</mat-icon>\n      </div>\n    </div>\n    }\n  `, styles: [\":host{color:var(--mat-sys-on-secondary);background:var(--mat-sys-secondary);border-radius:8px}:host .panel{display:flex;width:230px;flex-wrap:wrap;gap:1px}:host .inline-option{cursor:pointer;width:32px;height:32px;display:flex;align-items:center;justify-content:center}:host .block-option-input{width:197px;height:32px;border:none;outline:none;color:var(--mat-sys-on-secondary);background-color:transparent;box-sizing:border-box}\\n\"] }]\n        }], propDecorators: { closeOverlayEmitter: [{\n                type: Output,\n                args: ['closeOverlay']\n            }] } });\n\nclass ToolbarInlineService {\n    overlay = inject(Overlay);\n    overlayRef;\n    determineToDisplayInlineToolbarBlock(_event) {\n        return of(window.getSelection()).pipe(filter((selection) => selection !== null), filter((selection) => selection.rangeCount > 0), filter((selection) => selection.toString().length > 0), filter((selection) => selection.toString() !== ''), tap(() => this.overlayRef?.hasAttached() && this.overlayRef.dispose()), // So hacky tired to do this properly\n        map((selection) => ({\n            selection,\n            parant: this.getSelectionParent(selection),\n        })), filter(({ parant }) => this.isSelectionInABlock(parant)), exhaustMap(({ selection }) => this.attachInlineToolbar(selection)));\n    }\n    getSelectionParent(selection) {\n        const range = selection.getRangeAt(0);\n        return range.commonAncestorContainer.nodeType === Node.ELEMENT_NODE\n            ? range.commonAncestorContainer\n            : range.commonAncestorContainer.parentElement;\n    }\n    isSelectionInABlock(target) {\n        // ! TODO: This is a hacky way to determine if the selection is in a block\n        // ! Need to also check if the block wants to display the inline toolbar\n        return (!!target &&\n            (target.closest('.no-toolbar-inline') !== null\n                ? false\n                : target.closest('ngx-editor-js2') !== null\n                    ? true\n                    : false));\n    }\n    attachInlineToolbar(selection) {\n        return of(selection.getRangeAt(0)).pipe(map((range) => range.getBoundingClientRect()), map((selectionRect) => this.createOverlay(selectionRect)), \n        // So hacky tired to do this properly\n        // passing the refs down the pipe adds a bug\n        // user selects text with a drag\n        // (mousedown → mousemove → wait → mousemove → mouseup)\n        tap((overlayRef) => (this.overlayRef = overlayRef)), map((overlayRef) => {\n            const inlineToolbar = overlayRef.attach(new ComponentPortal(ToolbarInlineComponent));\n            inlineToolbar.setInput('selection', selection);\n            lastValueFrom(merge(overlayRef.backdropClick(), inlineToolbar.instance.closeOverlayEmitter).pipe(tap(() => overlayRef.dispose()), tap(() => selection.removeAllRanges())));\n            return true;\n        }));\n    }\n    createOverlay(selectionRect) {\n        return this.overlay.create({\n            hasBackdrop: true,\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            positionStrategy: this.overlay\n                .position()\n                .flexibleConnectedTo(selectionRect)\n                .withPositions([\n                {\n                    offsetY: 8,\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                },\n            ]),\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: ToolbarInlineService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass NgxEditorJs2Component {\n    inlineToolbarSerivce = inject(ToolbarInlineService);\n    editorJsService = inject(EditorJsService);\n    ngxEditorJs2Service = inject(NgxEditorJs2Service);\n    blocks = input([]);\n    blocksRequested = output();\n    requestBlocks = input.required({\n        transform: (_v) => this.blocksRequested.emit(this.editorJsService.getBlocks$()),\n    });\n    bootstrapEditorJs$ = combineLatest([\n        inject(ToolFabService).toolbarComponentRef$,\n        this.ngxEditorJs2Service.loadBlocks$,\n        fromEvent(document, 'selectionchange').pipe(debounceTime(200), switchMap((event) => this.inlineToolbarSerivce.determineToDisplayInlineToolbarBlock(event)))\n    ]);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Component, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.1.5\", type: NgxEditorJs2Component, isStandalone: true, selector: \"ngx-editor-js2\", inputs: { blocks: { classPropertyName: \"blocks\", publicName: \"blocks\", isSignal: true, isRequired: false, transformFunction: null }, requestBlocks: { classPropertyName: \"requestBlocks\", publicName: \"requestBlocks\", isSignal: true, isRequired: true, transformFunction: null } }, outputs: { blocksRequested: \"blocksRequested\" }, ngImport: i0, template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `, isInline: true, dependencies: [{ kind: \"component\", type: EditorJsComponent, selector: \"editor-js\", inputs: [\"bootstrapEditorJs\", \"blocks\"] }, { kind: \"pipe\", type: AsyncPipe, name: \"async\" }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.1.5\", ngImport: i0, type: NgxEditorJs2Component, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-editor-js2',\n                    imports: [EditorJsComponent, AsyncPipe],\n                    template: `\n    <editor-js\n      [blocks]=\"blocks()\"\n      [bootstrapEditorJs]=\"bootstrapEditorJs$ | async\"\n    ></editor-js>\n  `,\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-editor-js2\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofocusDirective, CleanPasteDataDirective, ControlAccessorDirective, NGX_EDITORJS_OPTIONS, NgxEditorJs2Component, NgxEditorJs2Service, ToolbarFabDirective };\n"],"names":["NgxEditorJs2BlockquotesComponent","sortIndex","input","componentInstanceName","autofocus","formGroup","required","formControlName","blockOptionActions","action","icon","savedAction","signal","actionCallbackBind","actionCallback","bind","update","ɵcmp","selectors","hostAttrs","inputs","features","i1","CdkDrag","decls","vars","consts","template","NgxEditorJs2BlockquotesComponent_Template","rf","ctx","ReactiveFormsModule","i2","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","ControlAccessorDirective","AutofocusDirective","ToolbarFabDirective","NgClass","styles","i0","inject","ElementRef","forwardRef","Directive","HostListener","output","Component","Injectable","ViewContainerRef","effect","InjectionToken","viewChild","EventEmitter","Renderer2","Output","NG_VALUE_ACCESSOR","FormControl","FormBuilder","FormsModule","startWith","combineLatest","map","firstValueFrom","of","from","tap","filter","defaultIfEmpty","Observable","lastValueFrom","forkJoin","iif","switchMap","mergeMap","BehaviorSubject","distinctUntilChanged","delay","exhaustMap","merge","fromEvent","debounceTime","MatRipple","i1$1","CdkDragHandle","CdkDropList","OverlayModule","Overlay","i1$2","MatIcon","MatIconModule","AsyncPipe","NgSwitch","NgSwitchCase","NgTemplateOutlet","toObservable","MatFormField","MatLabel","MatInput","MatList","MatListItem","MatListModule","ComponentPortal","ToolbarBlockOptionsComponent_For_11_Conditional_1_Template","ɵɵtext","blockOptionAction_r2","ɵɵnextContext","$implicit","ɵɵtextInterpolate1","text","ToolbarBlockOptionsComponent_For_11_Conditional_2_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ToolbarBlockOptionsComponent_For_11_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","ToolbarBlockOptionsComponent_For_11_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵresetView","handleAction","ɵɵtemplate","ɵɵconditional","ToolbarBlocksComponent_Conditional_5_Conditional_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template","ToolbarBlocksComponent_Conditional_5_Conditional_2_For_1_Template_mat_list_item_click_0_listener","block_r2","addBlock","name","ToolbarBlocksComponent_Conditional_5_Conditional_2_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIndex","filteredBlocks_r4","ɵɵrepeater","ToolbarBlocksComponent_Conditional_5_Template","length","ToolbarComponent_ng_template_9_Template","_r2","ToolbarComponent_ng_template_9_Template_toolbar_blocks_addBlock_0_listener","$event","ɵɵproperty","supportedBlocks","ToolbarComponent_ng_template_10_Template","_r4","ToolbarComponent_ng_template_10_Template_toolbar_block_options_handleAction_0_listener","ToolbarComponent_ng_template_10_Template_toolbar_block_options_moveBlockPosition_0_listener","moveBlockPosition","HeaderBlockComponent_h1_1_ng_container_1_Template","ɵɵelementContainer","HeaderBlockComponent_h1_1_Template","sharedHeaderTemplate_r1","ɵɵreference","HeaderBlockComponent_h2_2_ng_container_1_Template","HeaderBlockComponent_h2_2_Template","HeaderBlockComponent_h3_3_ng_container_1_Template","HeaderBlockComponent_h3_3_Template","HeaderBlockComponent_h4_4_ng_container_1_Template","HeaderBlockComponent_h4_4_Template","HeaderBlockComponent_h5_5_ng_container_1_Template","HeaderBlockComponent_h5_5_Template","HeaderBlockComponent_h6_6_ng_container_1_Template","HeaderBlockComponent_h6_6_Template","HeaderBlockComponent_ng_template_7_Template","ɵɵelement","tmp_2_0","ctx_r1","get","value","_c0","ToolbarInlineComponent_For_2_Template","ToolbarInlineComponent_For_2_Template_div_click_0_listener","item_r2","addInlineTag","ToolbarInlineComponent_Conditional_12_Template","ɵɵtwoWayListener","ToolbarInlineComponent_Conditional_12_Template_input_ngModelChange_1_listener","ɵɵtwoWayBindingSet","url","ToolbarInlineComponent_Conditional_12_Template_div_click_2_listener","createLink","ɵɵtwoWayProperty","elementRef","defaultValue","onChange","onTouched","writeValue","nativeElement","innerHTML","registerOnChange","fn","registerOnTouched","onBlur","onInput","ɵfac","ControlAccessorDirective_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","hostBindings","ControlAccessorDirective_HostBindings","ControlAccessorDirective_blur_HostBindingHandler","ControlAccessorDirective_input_HostBindingHandler","ɵɵProvidersFeature","provide","useExisting","multi","ngDevMode","ngAfterContentInit","focus","AutofocusDirective_Factory","MovePositionActions","ToolbarBlockOptionsComponent","Position","handleActionEmitter","alias","moveBlockPositionEmitter","movePosition","emit","ToolbarBlockOptionsComponent_Factory","ɵɵdefineComponent","outputs","ToolbarBlockOptionsComponent_Template","ToolbarBlockOptionsComponent_Template_div_click_1_listener","UP","ToolbarBlockOptionsComponent_Template_div_click_4_listener","DELETE","ToolbarBlockOptionsComponent_Template_div_click_7_listener","DOWN","dependencies","ToolbarBlocksComponent","addBlockEmitter","supportedBlocks$","blockCtrl","filter$","valueChanges","pipe","filteredBlocks$","blocks","filterString","replace","pattern","split","v","join","regex","RegExp","block","match","component","ToolbarBlocksComponent_Factory","ToolbarBlocksComponent_Template","ɵɵpipe","ɵɵpipeBind1","DefaultValueAccessor","FormControlDirective","ToolbarComponent","componentContextPositionIndex","addBlockCallback","moveBlockPositionCallback","openBlocks","openBlocksOption","openBlocksList","prev","openBlockOptionList","closeLists","set","ToolbarComponent_Factory","ToolbarComponent_Template","ToolbarComponent_Template_div_click_1_listener","ToolbarComponent_Template_div_click_5_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_9_listener","ToolbarComponent_Template_ng_template_overlayOutsideClick_10_listener","blockListTigger_r5","blockOptionListTigger_r6","CdkConnectedOverlay","CdkOverlayOrigin","BlockMovementService","componentRefMap","Map","clearComponentRefs","clear","getNgxEditorJsBlocks","Array","values","newComponentAttached","componentRef","instance","updateComponentIndices","ngxEditor","setInput","indexOf","hostView","moveBlockComponentPosition","index","componentRefs","find","totalComponents","currentIndex","newIndex","Math","max","min","move","removeBlockComponent","delete","successful","remove","BlockMovementService_Factory","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","createUID","random","toString","substring","EditorJsService","formBuilder","blockMovementService","group","setNgxEditor","getBlocks$","observer","blockId","dataClean","sort","a","b","then","next","complete","createNgxEditorJsBlockWithComponent","blockComponent","addBlockComponent","ngxEditorJsBlock","createFormGroupControl","attachComponent","control","formControl","addControl","controlName","createComponent","determineMovePositionAction","previousIndex","viewRef","removeControl","clearBlocks","EditorJsService_Factory","ToolFabService","ngxEditorJs2Service","NgxEditorJs2Service","editorJsService","componentContext","toolbarComponentRef$","asObservable","previous","current","viewContainerRef","movePositionAction","ToolFabService_Factory","toolFabService","onMouseEnter","constructor","ToolbarFabDirective_Factory","ToolbarFabDirective_HostBindings","ToolbarFabDirective_mouseenter_HostBindingHandler","CleanPasteDataDirective","onPaste","event","preventDefault","clipboardData","getData","document","execCommand","CleanPasteDataDirective_Factory","CleanPasteDataDirective_HostBindings","CleanPasteDataDirective_paste_HostBindingHandler","HeaderBlockComponent","selectedAction","HeaderBlockComponent_Factory","ɵɵHostDirectivesFeature","HeaderBlockComponent_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵtemplateRefExtractor","ParagraphBlockComponent","ParagraphBlockComponent_Factory","ParagraphBlockComponent_Template","NGX_EDITORJS_OPTIONS","consumerSupportedBlocks","optional","internalSupportedBlocks","internal","consumer","blocksToLoad","loadBlocks$","clearBlocksFromEditorJs","determineToloadDefaultBlocks","removeDuplicateBlocksWithSameIds","sortBlocks","combineSupportBlocks","createALookupMapForSupportedBlocks","supportedBlocksMap","findAndMarshalBlocksComponent","addBlocksToEditorJs","loadDefaultBlocks","sb","NgxEditorJs2Service_Factory","EditorJsComponent","bootstrapEditorJs","transform","read","drop","requestAnimationFrame","querySelectorAll","forEach","el","element","classList","offsetWidth","add","EditorJsComponent_Factory","viewQuery","EditorJsComponent_Query","ɵɵviewQuerySignal","ɵɵqueryAdvance","EditorJsComponent_Template","EditorJsComponent_Template_div_cdkDropListDropped_0_listener","ToolbarInlineComponent","selection","closeOverlayEmitter","renderer","showURLInputField","savedRanges","options","tag","addClassTag","className","range","getRangeAt","createElement","deleteContents","insertNode","clearTags","openUrlInput","push","removeAllRanges","addRange","pop","ToolbarInlineComponent_Factory","ToolbarInlineComponent_Template","ToolbarInlineComponent_Template_div_click_3_listener","ToolbarInlineComponent_Template_div_click_6_listener","ToolbarInlineComponent_Template_div_click_9_listener","NgModel","ToolbarInlineService","overlay","overlayRef","determineToDisplayInlineToolbarBlock","_event","window","getSelection","rangeCount","hasAttached","dispose","parant","getSelectionParent","isSelectionInABlock","attachInlineToolbar","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","parentElement","target","closest","getBoundingClientRect","selectionRect","createOverlay","inlineToolbar","attach","backdropClick","create","hasBackdrop","backdropClass","positionStrategy","position","flexibleConnectedTo","withPositions","offsetY","originX","originY","overlayX","overlayY","ToolbarInlineService_Factory","NgxEditorJs2Component","inlineToolbarSerivce","blocksRequested","requestBlocks","_v","bootstrapEditorJs$","NgxEditorJs2Component_Factory","NgxEditorJs2Component_Template","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[3]}